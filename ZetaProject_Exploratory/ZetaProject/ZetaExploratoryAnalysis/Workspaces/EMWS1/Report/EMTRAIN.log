MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09:07:46" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                March 04, 2024
Time:                09:07:46
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1BQ8FVQ "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1BQ8FVQ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09:07:47" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080107";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M7P080520";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09:07:47" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22710      proc freq data=EMWS1.Report_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Report_VariableSet noprint;
22711      table ROLE*LEVEL/out=WORK.ReportMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ReportMETA;
22712      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 25 observations read from the data set EMWS1.REPORT_VARIABLESET.
NOTE: The data set WORK.REPORTMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
      

22713      proc print data=WORK.ReportMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ReportMETA label noobs;
22714      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22715      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22716      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22717      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22718      run;

NOTE: There were 6 observations read from the data set WORK.REPORTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

22719      title10;
MPRINT(EM_DIAGRAM):   title10;
22720      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'ZetaExploratoryAnalysis';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'ExploratoryAnalysis';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;
MPRINT(HPDM_ISGRID):  ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23069      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23070      * Report: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Report: Generation of macros and macro variables;
23071      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
23072      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

23073      %let EMEXCEPTIONSTRING=;
23074      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23075      * TRAIN: Report;
MPRINT(EM_DIAGRAM):   * TRAIN: Report;
23076      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23077      %let EM_ACTION = TRAIN;
23078      %let syscc = 0;
23079      %macro main;
23080      
23081        filename temp catalog 'sashelp.emutil.reporter_macros.source';
23082        %include temp;
23083        filename temp;
23084      
23085        %setProperties;
23086      
23087        %if %upcase(&EM_ACTION) = CREATE %then %do;
23088          filename temp catalog 'sashelp.emutil.reporter_create.source';
23089          %include temp;
23090          filename temp;
23091      
23092          %create;
23093        %end;
23094      
23095         %else
23096         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23097      
23098             filename temp catalog 'sashelp.emutil.reporter_train.source';
23099             %include temp;
23100             filename temp;
23101             %train;
23102         %end;
23103      
23104         %doendm:
23105      %mend main;
23106      
23107      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_MACROS.SOURCE.
23110     +%macro SetProperties;
23112     +     /* reporting options */
23113     +     %em_checkmacro(name=EM_PROPERTY_FORMAT,         value=PDF , global=Y);
23114     +     %em_checkmacro(name=EM_PROPERTY_NODES ,         value=PATH, global=Y);
23115     +     %em_checkmacro(name=EM_PROPERTY_STYLE ,         value=DEFAULT, global=Y);
23116     +     %em_checkmacro(name=EM_PROPERTY_SHOWALL,        value=N, global=Y);
23118     +     %em_checkmacro(name=EM_PROPERTY_SUMMARIZATION,  value=Y, global=Y);
23119     +     %em_checkmacro(name=EM_PROPERTY_VARRANKING,     value=Y, global=Y);
23120     +     %em_checkmacro(name=EM_PROPERTY_CLASSIFICATION, value=Y, global=Y);
23121     +     %em_checkmacro(name=EM_PROPERTY_CROSSTABS,      value=Y, global=Y);
23122     +     %em_checkmacro(name=EM_PROPERTY_LIFTCHART,      value=Y, global=Y);
23123     +     %em_checkmacro(name=EM_PROPERTY_FITSTAT,        value=Y, global=Y);
23124     +     %em_checkmacro(name=EM_PROPERTY_COMPAREMDL,     value=Y, global=Y);
23126     +     %em_checkmacro(name=EM_PROPERTY_BASICOUTPUT,    value=N, global=Y);
23128     +    %em_checkmacro(name=EM_PROPERTY_textfont,   value=Arial, global=Y);
23129     +    %em_checkmacro(name=EM_PROPERTY_headersize, value=8, global=Y);
23130     +    %em_checkmacro(name=EM_PROPERTY_textsize,   value=6, global=Y);
23131     +    %em_checkmacro(name=EM_PROPERTY_titlesize,  value=10, global=Y);
23133     +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TRAIN.SOURCE.
23134     +
23135     +%macro train();
23136     +
23137     +    filename temp catalog 'sashelp.emutil.reporter_trainmacros.source'; %include temp; filename temp;
23138     +    filename temp catalog 'sashelp.emrpm.em_modelprops.source';         %include temp; filename temp;
23139     +
23140     +    /* Initialize property macro variables */
23141     +    %SetProperties;
23142     +
23143     +    /* if pdf or rtf files exist, delete these prior to recreating report */
23144     +    %EM_GETNAME(key=REPORT, type=FILE, extension=pdf);
23145     +    filename pdffile "&EM_USER_REPORT";
23146     +    %if %sysfunc(fexist(pdffile)) %then %do;
23147     +        %let rc = %sysfunc(fdelete(pdffile));
23148     +    %end;
23149     +    filename pdffile;
23150     +
23151     +    %EM_GETNAME(key=REPORT, type=FILE, extension=rtf);
23152     +    filename rtffile "&EM_USER_REPORT";
23153     +    %if %sysfunc(fexist(rtffile)) %then %do;
23154     +        %let rc = %sysfunc(fdelete(rtffile));
23155     +    %end;
23156     +    filename rtffile;
23157     +
23158     +    /* create report */
23159     +
23160     +    %EM_REPORT_CREATE(
23161     +        path        = &EM_NODEDIR,
23162     +        lib         = &EM_LIB,
23163     +        startnodeid = &EM_NODEID,
23164     +        showall     = &EM_PROPERTY_SHOWALL,
23165     +        nodes       = &EM_PROPERTY_NODES,
23166     +        format      = &EM_PROPERTY_FORMAT,
23167     +        style       = &EM_PROPERTY_STYLE
23168     +    );
23169     +
23170     +    %if &EMEXCEPTIONSTRING ne %then %do; %goto doendm; %end;
23171     +
23172     +    %EM_REPORT_RESULTS(
23173     +        path        = &EM_NODEDIR,
23174     +        lib         = &EM_LIB,
23175     +        startnodeid = &EM_NODEID,
23176     +        showall     = &EM_PROPERTY_SHOWALL,
23177     +        nodes       = &EM_PROPERTY_NODES,
23178     +        format      = &EM_PROPERTY_FORMAT,
23179     +        style       = &EM_PROPERTY_STYLE
23180     +    );
23181     +
23182     +    %doendm:
23183     +
23184     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emutil.reporter_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TRAINMACROS.SOURCE.
23185     +/*---------------------------------------------------------*/
23186     + *  EM_REPORT_CREATE;
MPRINT(TRAIN):   * EM_REPORT_CREATE;
23187     + *   all work needed to start the documents;
MPRINT(TRAIN):   * all work needed to start the documents;
23188     + *  - identify directory location;
MPRINT(TRAIN):   * - identify directory location;
23189     + *  - clear directory of em report files;
MPRINT(TRAIN):   * - clear directory of em report files;
23190     + *  - initialize document options;
MPRINT(TRAIN):   * - initialize document options;
23191     + *  - setup ODS system;
MPRINT(TRAIN):   * - setup ODS system;
23192     +/*---------------------------------------------------------*/
23193     +%macro EM_REPORT_CREATE(
23194     +    path=,             /*-- output location             ---*/
23195     +    lib=,              /*-- em workspace library        ---*/
23196     +    startnodeid=,      /*-- starting nodeid             ---*/
23197     +    showall=,          /*-- show all content Y or N     ---*/
23198     +    nodes=,            /*-- nodes to generate report on ---*/
23199     +    format=,           /*-- format for generated report ---*/
23200     +    style=             /*--- style for ODS statement    ---*/
23201     +) ;
23203     +    filename temp catalog 'sashelp.emutil.reporter_plotmacros.source';      %include temp; filename temp;
23204     +    filename temp catalog 'sashelp.emutil.reporter_printmacros.source';     %include temp; filename temp;
23205     +    filename temp catalog 'sashelp.emutil.reporter_rpmmacros.source';       %include temp; filename temp;
23206     +    filename temp catalog 'sashelp.emutil.em_gettrainpath.source' ;         %include temp; filename temp;
23207     +    filename temp catalog 'sashelp.emutil.reporter_tagset_template.source'; %include temp; filename temp;
23209     +    /*--- 1. set global parameters ---*/
23211     +    %GLOBAL EM_REPORT_PATH    ; %let EM_REPORT_PATH    = &PATH ;
23212     +    %GLOBAL EM_REPORT_SHOWALL ; %let EM_REPORT_SHOWALL = %upcase(&showall) ;
23213     +    %GLOBAL EM_REPORT_LIB     ; %let EM_REPORT_LIB     = &lib;
23214     +    %GLOBAL EM_REPORT_NODES   ; %let EM_REPORT_NODES   = &nodes;
23215     +    %GLOBAL EM_REPORT_FORMAT  ; %let EM_REPORT_FORMAT  = &format;
23216     +    %GLOBAL EM_REPORT_SYTLE   ; %let EM_REPORT_STYLE   = &style;
23218     +    /*--- 2. set global constants ---*/
23220     +    %GLOBAL EM_REPORT_GDEVICE;
23221     +    %GLOBAL EM_REPORT_PRINT_MAXVARS;
23222     +    %GLOBAL EM_REPORT_TEXT_FONT;
23223     +    %GLOBAL EM_REPORT_TEXT_SIZE;
23224     +    %GLOBAL EM_REPORT_TITLE_SIZE;
23225     +    %GLOBAL EM_REPORT_HEADER_SIZE;
23226     +    %GLOBAL EM_REPORT_NODE_FONT;
23227     +    %GLOBAL EM_REPORT_TITLE;
23228     +    %GLOBAL EM_REPORT_FOOTNOTE1;
23229     +    %GLOBAL EM_REPORT_FOOTNOTE2;
23231     +    %global EM_REPORT_SUPPRESS_DATE; %let EM_REPORT_SUPPRESS_DATE =;
23233     +    %global RPM_REPORT_MODELNODE RPM_REPORT_SCORENODE RPM_REPORT_MDLCOMP RPM_REPORT_VALIDSUMMARY;
23235     +    %if "&EM_REPORT_GDEVICE"       eq ""  %then %let EM_REPORT_GDEVICE = GIF;
23236     +    %if "&EM_REPORT_PRINT_MAXVARS" eq ""  %then %let EM_REPORT_PRINT_MAXVARS= 40;
23237     +    %if "&EM_REPORT_TEXT_FONT"     eq ""  %then %do;
23238     +        %let EM_REPORT_TEXT_FONT= %sysfunc(getlocale(FTITLE, &EM_PROPERTY_TEXTFONT));
23239     +        %let EM_REPORT_TEXT_FONT= %sysfunc(tranwrd(&EM_REPORT_TEXT_FONT,%str(<ttf>),%str()));
23240     +    %end;
23241     +    %if "&EM_REPORT_NODE_FONT"     eq ""  %then %do;
23242     +        %let EM_REPORT_NODE_FONT = %sysfunc(getlocale(FTITLE, SIMPLEX)) ;
23243     +        %let EM_REPORT_NODE_FONT = %sysfunc(tranwrd(&EM_REPORT_NODE_FONT,%str(<ttf>),%str()));
23244     +    %end;
23245     +    %if "&EM_REPORT_HEADER_SIZE"   eq ""  %then %let EM_REPORT_HEADER_SIZE = &EM_PROPERTY_HEADERSIZE;
23246     +    %if "&EM_REPORT_TEXT_SIZE"     eq ""  %then %let EM_REPORT_TEXT_SIZE   = &EM_PROPERTY_TEXTSIZE;
23247     +    %if "&EM_REPORT_TITLE_SIZE"    eq ""  %then %let EM_REPORT_TITLE_SIZE  = &EM_PROPERTY_TITLESIZE;
23249     +    /*--- 3. text for title statements ---*/
23251     +    %global EM_REPORT_PROJECT_TEXT ; %let EM_REPORT_PROJECT_TEXT= %superq(EM_PROJECTNAME);
23252     +    %global EM_REPORT_DIAGRAM_TEXT ; %let EM_REPORT_DIAGRAM_TEXT= %superq(EM_WSNAME);
23254     +    %EM_REPORT_NODE_TEXT(&startnodeid) ;
23256     +    /*--- 4. create output filename ---*/
23258     +    %EM_REGISTER(key=REPORT, type=FILE, extension=&EM_REPORT_FORMAT);
23260     +    /*--- 5. Allways get the path for showing the score code --*/
23262     +    %let FLOW= ;            /*--- ignore for now ---*/
23263     +    %let PUBLISH=;          /*--- ignore for now ---*/
23264     +    %let EM_LIB=&lib ;      /*--- used by the macro */
23266     +    %if &EM_REPORT_NODES ne SUMMARY %then %do;
23267     +        %EM_PATH(nodeid=&startnodeid, outds=emreportpath, nodes=&EM_REPORT_NODES);
23268     +    %end;
23269     +    %else %do;
23270     +        %EM_PATH(nodeid=&startnodeid, outds=emreportpath, nodes=PATH);
23271     +    %end;
23273     +    data emreportpath;
23274     +        set emreportpath;
23275     +        rename nodelabel=nodeid;
23276     +        nodeIndex = _n_;
23277     +    run;
23279     +    /*--- 6. create new tagset templates needed for tree, icicle and pie charts */
23281     +    *** create new style template to address fonts in ods text;
23283     +    ods path(prepend) work.templat(update);
23284     +    proc template ;
23285     +        define style styles.em_style / store=work.templat;
23286     +        parent= styles.&EM_REPORT_STYLE;
23288     +            style usertext from usertext /
23289     +                foreground=black font_size=&EM_REPORT_TITLE_SIZE pt font_face="&EM_REPORT_TEXT_FONT" font_weight=bold
23290     +            ;
23291     +            style systemtitle from systemtitle /
23292     +              color=colors("systitlefg") backgroundcolor=colors("systitlebg")
23293     +              fontsize=&EM_REPORT_TITLE_SIZE pt font_face="&EM_REPORT_TEXT_FONT" font_weight=bold
23294     +            ;
23295     +            style systemfooter from systemfooter /
23296     +              color=colors("systitlefg") backgroundcolor=colors("systitlebg")
23297     +              font_face="&EM_REPORT_TEXT_FONT"
23298     +            ;
23299     +            style GraphFonts from GraphFonts /
23300     +                'GraphTitleFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23301     +                'GraphTitle1Font'   = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23302     +                'GraphLabelFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_HEADER_SIZE pt)
23303     +                'GraphFootnoteFont' = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23304     +                'GraphValueFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23305     +                'GraphDataFont'     = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23306     +            ;
23307     +            style Fonts from Fonts/
23308     +                'TitleFont'           = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23309     +                'TitleFont2'          = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23310     +                'StrongFont'          = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23311     +                'EmphasisFont'        = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23312     +                'headingFont'         = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23313     +                'headingEmphasisFont' = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23314     +                'FixedEmphasisFont'   = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23315     +                'FixedStrongFont'     = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23316     +                'FixedHeadingFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23317     +                'FixedFont'           = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23318     +                'BatchFixedFont'      = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23319     +                'docFont'             = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23320     +            ;
23321     +            style GraphTitleText from GraphTitleText / font_face="&EM_REPORT_TEXT_FONT";
23322     +            style data           from data           / font_size=&EM_REPORT_TEXT_SIZE pt;
23323     +            style header         from header         / font_size=&EM_REPORT_HEADER_SIZE pt;
23324     +            style rowheader      from header;
23325     +        end;
23326     +    run; quit;
23328     +    /*--- 7. start report / destination configurations ---*/
23330     +    *** options for page layout;
23331     +    options nodate nocenter number ls=97 ;
23333     +    *** get file name;
23334     +    %EM_GETNAME(key=REPORT, type=FILE, extension=&EM_REPORT_FORMAT);
23335     +    %let file = &EM_USER_REPORT;
23337     +    *** turn off LISTING and turn on the specified destination;
23338     +    ods listing close;
23339     +    ods graphics / height=4.5in;
23340     +    ods &EM_REPORT_FORMAT file="&file" style=styles.em_style
23341     +        %if &EM_REPORT_FORMAT eq PDF %then %do; startpage=NO uniform NOTOC %end;
23342     +        %if &EM_REPORT_FORMAT eq RTF %then %do; startpage=NEVER BODYTITLE  %end;
23343     +    ;
23345     +    *** titles and footnotes;
23346     +    ods &EM_REPORT_FORMAT text=" ";
23347     +    %if "&EM_REPORT_TITLE" ne "" %then %do;
23348     +        ods &EM_REPORT_FORMAT text="&EM_REPORT_TITLE";
23349     +    %end;
23350     +    %else %do;
23351     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))";
23352     +    %end;
23354     +    %if "&EM_REPORT_FOOTNOTE1" ne "" %then %do; footnote1 "&EM_REPORT_FOOTNOTE1"; %end;
23355     +    %if "&EM_REPORT_FOOTNOTE2" ne "" %then %do; footnote2 "&EM_REPORT_FOOTNOTE2"; %end;
23357     +    /*--- 8. verify that valid flow exists for SUMMARY (RPM) report ---*/
23358     +    /*--- if not, SUMMARY style report can not be generated and PATH report will be done instead ---*/
23360     +    %EM_REPORT_validSummaryPath(startNodeID = &startNodeID);
23362     +    %if ((&EM_REPORT_NODES eq SUMMARY ) AND(&RPM_REPORT_VALIDSUMMARY eq 1))%then %do;
23363     +        %local hprpm_hpassess;
23364     +        %let   hprpm_hpassess = &em_lib..&RPM_REPORT_MODELNODE._hpassess;
23365     +        %if %sysfunc(exist(&hprpm_hpassess)) %then %do;
23366     +            filename temp catalog 'sashelp.hpdm.hpdm_scorecard.source'; %include temp; filename temp;
23367     +            %EM_REPORT_SUMMARY(runHP=1);
23368     +        %end;
23369     +        %else %do;
23370     +            %EM_REPORT_SUMMARY(runHP=0);
23371     +        %end;
23372     +        %goto create_endline;
23373     +    %end;
23374     +    %else %do;
23375     +        %if &EM_REPORT_NODES eq SUMMARY %then %let EM_REPORT_NODES= PATH;
23376     +    %end;
23378     +    /*--- 9. output report information (header of the report)---*/
23380     +    ods proclabel "%sysfunc(sasmsg(sashelp.dmine, rpt_reportinfo_title, NOQUOTE))";
23381     +    data _null_;
23382     +        call symput('report_date', %nrbquote(strip(put(date(),     NLDATE.))));
23383     +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
23384     +    run;
23386     +    data _null_;
23387     +        file print ;
23388     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
23389     +        %if ((&EM_REPORT_SUPPRESS_DATE eq ) OR (%index(&EM_REPORT_SUPPRESS_DATE, Y) < 1)) %then %do;
23390     +            put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
23391     +        %end;
23392     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
23393     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
23394     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
23395     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
23396     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
23397     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &EM_REPORT_showall))" /;
23398     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
23399     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &EM_REPORT_STYLE))" /;
23400     +    run ;
23402     +    /*--- 10. generate the workspace plot ---*/
23404     +    %em_report_workspace_xml;
23405     +    %em_getname(key=PFD, type=FILE, extension=XML);
23406     +    %em_report_makeds(&EM_USER_PFD, xmldata);
23407     +    %em_report_workspace_render;
23409     +    /*--- 11. identify the nodes to report                                  ---*/
23410     +    /*--- merged and modified from three previous macros:                   ---*/
23411     +    /*--- EM_REPORT_PATH, EM_REPORT_PREDECESORS EM_REPORT_PREDECESORS_COUNT ---*/
23413     +    %global EM_REPORT_NODENUM EM_REPORT_NODELIST;
23414     +    %let EM_REPORT_NODENUM = 0;
23416     +    %if &EM_REPORT_NODES eq PATH or &EM_REPORT_NODES eq ALL
23417     +    %then %do;
23418     +        %if %sysfunc(exist(emreportpath)) %then %do;
23419     +            proc sql noprint;
23420     +                select count(*) into :EM_REPORT_NODENUM
23421     +                    from emreportpath where nodeID ne " ";
23422     +                %if &EM_REPORT_NODENUM gt 0 %then %do;
23423     +                    select strip(nodeID) into :EM_REPORT_NODELIST separated by ' '
23424     +                        from emreportpath where nodeID ne " " order by nodeIndex;
23425     +                %end;
23426     +            quit;
23427     +        %end;
23428     +    %end;
23429     +    %else %if &EM_REPORT_NODES eq PREDECESSOR
23430     +    %then %do ;
23431     +        proc sql noprint;
23432     +            select count(*) into :EM_REPORT_NODENUM
23433     +                from &EM_REPORT_LIB..em_dgraph where upcase(strip(to)) eq upcase(strip("&startnodeid"));
23434     +            %if &EM_REPORT_NODENUM gt 0 %then %do;
23435     +                select strip(from) into :EM_REPORT_NODELIST separated by ' '
23436     +                    from &EM_REPORT_LIB..em_dgraph where upcase(strip(to)) eq upcase(strip("&startnodeid"));
23437     +            %end;
23438     +        quit;
23439     +    %end;
23440     +    %else %if &EM_REPORT_NODES eq 0 %then %do;
23441     +        %let EM_REPORT_NODENUM = 1;
23442     +        %let EM_REPORT_NODELIST = &startnodeid;
23443     +    %end;
23445     +    %if &EM_REPORT_NODENUM gt 0 %then %do;
23446     +        %do n = 1 %to &EM_REPORT_NODENUM;
23447     +            %EM_REPORT_NODE(nodeid=%scan(&EM_REPORT_NODELIST,&n,' '));
23448     +        %end;
23449     +    %end;
23451     +    /*--- 12. close report and ODS destinations---*/
23453     +    %create_endline:;
23455     +    data _NULL_ ;
23456     +        file print;
23457     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_endreport_note, NOQUOTE))" ;
23458     +    run;
23460     +    title1; title2; title3 ;
23461     +    %if "&EM_REPORT_FOOTNOTE1" ne "" %then %do; footnote1; %end;
23462     +    %if "&EM_REPORT_FOOTNOTE2" ne "" %then %do; footnote2; %end;
23463     +    ods graphics / reset=height;
23464     +    ods listing;
23465     +    ods &EM_REPORT_FORMAT close;
23467     +%mend EM_REPORT_CREATE ;
23469     +/*---------------------------------------------------------*/
23470     + * EM_REPORT_NODE ;
MPRINT(TRAIN):   * EM_REPORT_NODE ;
23471     + *     create a report for a node on an EM diagram ;
MPRINT(TRAIN):   * create a report for a node on an EM diagram ;
23472     +/*---------------------------------------------------------*/
23473     +%macro EM_REPORT_NODE(nodeid=) ;
23475     +    %if not %sysfunc(exist(&em_report_lib..&nodeid._emreport))
23476     +    %then %do ;
23477     +        %put NOTE: Node report data set (&em_report_lib..&nodeid._emreport) is not defined.;
23478     +        %goto node_skip;
23479     +    %end ;
23481     +    /*--- 1. set global parameters ---*/
23483     +    %global EM_REPORT_NODEID EM_REPORT_KEY_WHERECLAUSE
23484     +            EM_REPORT_TTL1 EM_REPORT_TTL2 EM_REPORT_TTL3
23485     +    ;
23486     +    %let EM_REPORT_NODEID= &nodeid ;
23488     +    /*--- 2. preparations: Node Text; Path; Notes; Num of Prev. Nodes ---*/
23490     +    /* 2.1 get node text;*/
23491     +    %EM_REPORT_NODE_TEXT(&nodeid) ;
23493     +    /* 2.2 get the em path to this node;*/
23494     +    %EM_gettrainpath(nodeid=&nodeid,outpath=_tmp_emrnp);
23496     +    %if %sysfunc(exist(_tmp_emrnp))
23497     +    %then %do;
23498     +        data _null_;
23499     +            set _tmp_emrnp end=eof ;
23500     +            length path $1000 ;
23501     +            retain path ' ';
23502     +            if _n_ eq 1
23503     +                then path = strip(nodelabel) ;
23504     +                else path = strip(path) !! " => " !! strip(nodelabel);
23505     +            if eof then call symput('print_path', strip(path));
23506     +        run;
23507     +    %end ;
23508     +    %else %do;
23509     +        %let print_path= Unknown;
23510     +    %end ;
23512     +    /* 2.3 retrieve location of notes file;*/
23513     +    %let temp = %nrbquote(%sysfunc(pathname(&EM_REPORT_LIB)));
23514     +    %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
23515     +    %let file = EMNOTES.txt;
23516     +    %let notesfile = %nrbquote(&path&em_dsep&nodeid&em_dsep&file);
23518     +    /* 2.4 predecessor node counts */
23519     +    proc sql noprint;
23520     +        select count(*) into :EM_REPORT_PREDECESSORS_COUNT
23521     +            from &EM_REPORT_LIB..EM_DGRAPH where upcase(strip(to)) eq upcase(strip("&nodeid"));
23522     +    quit;
23524     +    %if ((&EM_REPORT_PREDECESSORS_COUNT eq 0) or (&EM_REPORT_NODES eq 0) or (&EM_REPORT_NODES eq PREDECESSOR))
23525     +        %then %let varlist=1;
23526     +        %else %let varlist=0;
23528     +    %if %substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq MDLCOMP
23529     +        %then %let varlist = 0;
23531     +    /*--- 3. beginning section of a node report ---*/
23533     +    /* 3.1 force page break at the beginning of each node */
23535     +    /* sample output of a beginning section
23536     +        -----------------------------------
23537     +        -  SAS Enterprise Miner Report    -
23538     +        -                                 -
23539     +        -  Node=Regression                -
23540     +        -  Summary                        -
23541     +        -                                 -
23542     +        -  Node id = Reg                  -
23543     +        -  Node label = Regression        -
23544     +        -  Meta Path = Ids => Part => Reg -
23545     +        -  Notes =                        -
23546     +        -----------------------------------*/
23548     +    ods &EM_REPORT_FORMAT startpage=now;
23550     +    ods &EM_REPORT_FORMAT text=" ";
23551     +    %if "&EM_REPORT_TITLE" ne ""
23552     +        %then %do; ods &EM_REPORT_FORMAT text= "&EM_REPORT_TITLE"; %end;
23553     +        %else %do; ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
23555     +    ods &EM_REPORT_FORMAT text=" ";
23556     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
23557     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_summary_title, NOQUOTE))";
23559     +    data _null_ ;
23560     +        file print;
23561     +        put " ";
23562     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnodeid_vlabel,   NOQUOTE, &nodeid));                         put "&note";
23563     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnodelbl_vlabel,  NOQUOTE, %nrbquote(&em_report_node_text))); put "&note";
23564     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptmetapath_vlabel, NOQUOTE, &print_path));                     put "&note";
23565     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnotes_vlabel,    NOQUOTE));                                  put "&note";
23566     +        put " ";
23567     +    run;
23569     +    %if "&notesfile" ne "" %then %do;
23570     +        filename x "&notesfile" encoding='utf-8' NOBOM;
23571     +        data _null_;
23572     +            length string $1000;
23573     +            file PRINT;
23574     +            fid = fopen('x');
23575     +            do while (^fread(fid));
23576     +                rc= fget(fid, string, frlen(fid));
23577     +                string = tranwrd(string, "'", "''");
23578     +                if string eq '' then string = ' ';
23579     +                put string;
23580     +            end;
23581     +            fid = fclose(fid);
23582     +            put " ";
23583     +        run;
23584     +        filename x;
23585     +    %end;
23587     +    /*--- 4. property table of a node report ---*/
23588     +    %EM_REPORT_PROPERTIES(catalog=&em_report_lib..&nodeid, dsname=properties);
23590     +    /*--- 5. datasource table of a node report ---*/
23591     +    %if &varlist eq 1 and %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTMETADEFAULT)) %then %do;
23592     +        %EM_REPORT_DATASOURCE;
23593     +    %end;
23595     +    /*--- 6. varlist table of a node report ---*/
23596     +    %EM_REPORT_VARS(varlist=&varlist) ;
23598     +    /* --- 7. the itemized output of EMREPORT TLFs ---*/
23600     +    /* 7.1 get number of items */
23601     +    proc sql noprint;
23602     +        select max(ID) into: numitems from &em_report_lib..&nodeid._emreport;
23603     +    quit;
23605     +    /* 7.2 define and initialize global KEYs */
23606     +    proc sql noprint;
23607     +        select count(distinct key) into :allnumkeys
23608     +            from &em_report_lib..&nodeid._emreport;
23609     +        select distinct key into :allnamekey1-:allnamekey%left(&allnumkeys)
23610     +            from &em_report_lib..&nodeid._emreport;
23611     +    quit;
23613     +    %do i = 1 %to &allnumkeys;
23614     +        %global EM_REPORT_KEY_&&&allnamekey&i;
23615     +        %let EM_REPORT_KEY_&&&allnamekey&i = ;
23616     +    %end;
23617     +    %global EM_REPORT_KEY_YREF EM_REPORT_KEY_XREF EM_REPORT_KEY_Y EM_REPORT_KEY_Y2 EM_REPORT_KEY_X
23618     +            EM_REPORT_KEY_LATTICEY EM_REPORT_KEY_LATTICEX EM_REPORT_KEY_WHERE EM_REPORT_KEY_SUBGROUP
23619     +            EM_REPORT_KEY_FREQUENCY EM_REPORT_KEY_GROUP EM_REPORT_KEY_Y2REF EM_REPORT_KEY_LATTICETYPE
23620     +            EM_REPORT_KEY_ORIENTATION
23621     +    ;
23622     +    %let EM_REPORT_KEY_AUTODISPLAY = N;
23623     +    %let EM_REPORT_KEY_XREF        = ;
23624     +    %let EM_REPORT_KEY_YREF        = ;
23625     +    %let EM_REPORT_KEY_Y2REF       = ;
23626     +    %let EM_REPORT_KEY_X           = ;
23627     +    %let EM_REPORT_KEY_Y           = ;
23628     +    %let EM_REPORT_KEY_Y2          = ;
23629     +    %let EM_REPORT_KEY_LATTICEX    = ;
23630     +    %let EM_REPORT_KEY_LATTICEY    = ;
23631     +    %let EM_REPORT_KEY_WHERE       = ;
23632     +    %let EM_REPORT_KEY_SUBGROUP    = ;
23633     +    %let EM_REPORT_KEY_FREQUENCY   = ;
23634     +    %let EM_REPORT_KEY_GROUP       = ;
23635     +    %let EM_REPORT_KEY_LATTICETYPE = ;
23636     +    %let EM_REPORT_KEY_ORIENTATION = ;
23638     +    /* 7.3 loop over items in the EM_REPORT dataset */
23640     +    %do index = 1 %to &numitems ;
23642     +        /* 7.3.1 initialize all key macro variables for each item */
23644     +        %do i = 1 %to &allnumkeys;
23645     +            %let EM_REPORT_KEY_&&&allnamekey&i = ;
23646     +        %end;
23647     +        %let EM_REPORT_KEY_AUTODISPLAY = N;
23648     +        %let EM_REPORT_KEY_WHERE       = ;
23649     +        %let EM_REPORT_KEY_WHERECLAUSE = ;
23650     +        %let EM_REPORT_TTL1            = ;
23651     +        %let EM_REPORT_TTL2            = ;
23652     +        %let EM_REPORT_TTL3            = ;
23653     +        %let EM_REPORT_KEY_XREF        = ;
23654     +        %let EM_REPORT_KEY_YREF        = ;
23655     +        %let EM_REPORT_KEY_Y2REF       = ;
23656     +        %let EM_REPORT_KEY_X           = ;
23657     +        %let EM_REPORT_KEY_Y           = ;
23658     +        %let EM_REPORT_KEY_Y2          = ;
23659     +        %let EM_REPORT_KEY_LATTICEX    = ;
23660     +        %let EM_REPORT_KEY_LATTICEY    = ;
23661     +        %let EM_REPORT_KEY_SUBGROUP    = ;
23662     +        %let EM_REPORT_KEY_FREQUENCY   = ;
23663     +        %let EM_REPORT_KEY_GROUP       = ;
23664     +        %let EM_REPORT_KEY_LATTICETYPE = ;
23665     +        %let EM_REPORT_KEY_ORIENTATION = ;
23667     +        %let item_skip_code = 1;
23669     +        data _null_;
23670     +            set &em_report_lib..&nodeid._emreport(where=(id eq &index));
23671     +            call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
23672     +        run;
23674     +        %if "&EM_REPORT_KEY_VIEWTYPE" eq "MULTIPLESCATTER"
23675     +            %then %let EM_REPORT_KEY_VIEWTYPE = SCATTER;
23677     +        /* special treatment for EM_REPORT_KEY_Y in overlaid line plot */
23678     +        %if "&EM_REPORT_KEY_VIEWTYPE" eq "PLOT" or "&EM_REPORT_KEY_VIEWTYPE" eq "SCATTER"
23679     +            or "&EM_REPORT_KEY_VIEWTYPE" eq "LINEPLOT"
23680     +            or "&EM_REPORT_KEY_LATTICETYPE" eq "LINEPLOT" or "&EM_REPORT_KEY_LATTICETYPE" eq "PLOT"
23681     +        %then %do;
23682     +            proc sql noprint;
23683     +                select distinct value into :EM_REPORT_KEY_Y separated by ' '
23684     +                    from &em_report_lib..&nodeid._emreport(where=(id eq &index))
23685     +                    where upcase(key) eq "Y";
23686     +            quit;
23687     +        %end;
23689     +        %put ==&INDEX : Viewtype = &EM_REPORT_KEY_VIEWTYPE &EM_REPORT_KEY_DESCRIPTION ;
23691     +        /* 7.3.2 set EM_REPORT_KEY_WHERE as EM_REPORT_KEY_WHERECLAUSE */
23693     +        %if "&EM_REPORT_KEY_WHERECLAUSE" ne "" and "&EM_REPORT_KEY_WHERE" eq ""
23694     +        %then %do;
23695     +            %let EM_REPORT_KEY_WHERE = %str(&EM_REPORT_KEY_WHERECLAUSE);
23696     +        %end;
23697     +        %else %if "&EM_REPORT_KEY_WHERECLAUSE" eq "" and "&EM_REPORT_KEY_WHERE" ne ""
23698     +        %then %do;
23699     +            %let EM_REPORT_KEY_WHERE = %str(&EM_REPORT_KEY_WHERE);
23700     +        %end;
23701     +        %else %do;
23702     +            %let EM_REPORT_KEY_WHERE = ;
23703     +        %end;
23705     +        %if "&EM_REPORT_KEY_WHERE" ne "" %then %do;
23706     +            %let EM_REPORT_KEY_WHERECLAUSE = %str((where=(&EM_REPORT_KEY_WHERE)));
23707     +        %end;
23709     +        /* 7.3.3 skip this TLF item if the source data set does not exist */
23710     +        %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_KEY_FILE)) %then %do;
23711     +            %let item_skip_code = 0;
23712     +        %end;
23714     +        /* 7.3.4 skip the TLF item as documented in the previous version of the macro */
23715     +        /*       or just print the TLF item as documented, or use special macros      */
23717     +        data _null_;
23718     +            format type $100. desc $200.;
23719     +            type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
23720     +            desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
23722     +            if  (type in ('SCATTER')   and desc in ('STATPLOT' 'RULEPATHITEM' 'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN'))
23723     +             or (type in ('PLOT')      and desc in ('SEASON' 'TREND' 'CORRSTAT' 'DECOMP'))
23724     +             or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP'))
23725     +             or (type in ('BAR')       and desc in ('VIP' 'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT'))
23726     +             or (type in ('LATTICE')   and desc in ('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT'))
23727     +                then call symput('item_skip_code','2');
23729     +            /* ASSESSRANKGRID : content handled in %EM_REPORT_PLOT - from old macro comments*/
23730     +            /* CORRPLOT: empty macro report_corrplot in old macro */
23732     +            if  (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR'))
23733     +             or (type in ('BAR')       and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT'))
23734     +             or (type in ('LATTICE')   and desc in ('CHIPLOT' 'WORTH'))
23735     +                then call symput('item_skip_code','3');
23737     +            if (type in ('PLOT')    and desc in ('ASSESSRANKOVERLAY'))
23738     +                then call symput('item_skip_code','4');
23739     +            if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY'))
23740     +                then call symput('item_skip_code','5');
23742     +            if (type in ('PLOT') and desc in ('EVENTPLOT'))
23743     +                then call symput('item_skip_code','6');
23745     +            if (type in ('LATTICE') and desc in ('CLASSSTAT'))
23746     +                then call symput('EM_REPORT_KEY_VIEWTYPE','DATA');
23748     +            if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST'))
23749     +                then call symput('item_skip_code','7');
23750     +            if (type in ('LATTICE') and desc in ('SCOREDIST'))
23751     +                then call symput('item_skip_code','8');
23752     +            if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY'))
23753     +                then call symput('item_skip_code','9');
23755     +            if (type in ('PLOT') and desc in ('HPDMASSESS'))
23756     +                then call symput('item_skip_code','10');
23758     +            if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 'TSDISTANCEMAP'))
23759     +                then call symput('item_skip_code','11');
23761     +        run;
23763     +        /* 7.3.5 */
23765     +        %EM_REPORT_GTT;
23767     +        /********** actions by item_skip_code ***********************************/
23769     +        %if &item_skip_code eq 2 %then %do;
23770     +            /* TLF is skipped for these types of reports */
23771     +        %end;
23772     +        %else
23773     +        %if &item_skip_code eq 3 %then %do;
23774     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
23775     +                /* just a print */
23776     +                title1 "&EM_REPORT_TTL1";
23777     +                title2 "&EM_REPORT_TTL2";
23778     +                title3 "&EM_REPORT_TTL3";
23779     +                ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE))";
23780     +                proc print data=&EM_REPORT_LIB..&EM_REPORT_KEY_FILE noobs label contents='';
23781     +                run;
23782     +            %end;
23783     +        %end;
23784     +        %else
23785     +        %if &item_skip_code eq 4 %then %do;
23786     +            %EM_REPORT_EMRANK(pdat=&em_report_lib..&EM_REPORT_KEY_FILE,lattice=no);
23787     +        %end;
23788     +        %else
23789     +        %if &item_skip_code eq 5 %then %do;
23790     +            %EM_REPORT_EMRANK(pdat=&em_report_lib..&EM_REPORT_KEY_FILE,lattice=yes);
23791     +        %end;
23792     +        %else
23793     +        %if &item_skip_code eq 6 %then %do;
23794     +            %EM_REPORT_EVENTPLOT;
23795     +        %end;
23796     +        %else
23797     +        %if &item_skip_code eq 7 %then %do;
23798     +            %if %substr(%upcase(%sysfunc(strip(&nodeid))),1,7) ne MDLCOMP or &EM_REPORT_NODES eq PREDECESSOR %then %do;
23799     +                %EM_REPORT_SCOREDIST;
23800     +            %end;
23801     +        %end;
23802     +        %else
23803     +        %if &item_skip_code eq 8 %then %do;
23804     +            %EM_REPORT_SCOREDIST2;
23805     +        %end;
23806     +        %else
23807     +        %if &item_skip_code eq 9 %then %do;
23808     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
23809     +                %EM_REPORT_CLASSIFYTAB;
23810     +            %end;
23811     +        %end;
23812     +        %else
23813     +        %if &item_skip_code eq 10 %then %do;
23814     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
23815     +                %EM_REPORT_HPDMASSESS;
23816     +            %end;
23817     +        %end;
23818     +        %else
23819     +        %if &item_skip_code eq 11 %then %do;
23820     +                %EM_REPORT_HEATMAPTEMPLATE;
23821     +        %end;
23824     +        %else
23826     +        %if &item_skip_code eq 1 %then %do;
23828     +            /*--- process the viewtypes ---*/
23829     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "PLOT"           %then %do; %EM_REPORT_SGPLOT(type=PLOT);     %end;
23830     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "LINEPLOT"       %then %do; %EM_REPORT_SGPLOT(type=LINEPLOT); %end;
23831     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "SCATTER"        %then %do; %EM_REPORT_SGPLOT(type=SCATTER);  %end;
23832     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "BAR"            %then %do; %EM_REPORT_SGPLOT(type=BARPLOT);  %end;
23833     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "HISTOGRAM"      %then %do; %EM_REPORT_SGPLOT(type=HISTOGRAM);%end;
23834     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "PIE"            %then %do; %EM_REPORT_SGSILK(type=PIE);      %end;
23835     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DTREE"          %then %do; %EM_REPORT_SGSILK(type=DTREE);    %end;
23836     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "ICICLE"         %then %do; %EM_REPORT_SGSILK(type=ICICLE);   %end;
23837     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DENDROGRAM"     %then %do; %EM_REPORT_DENDROGRAM;            %end;
23838     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "ITERATIONPLOT"  %then %do; %EM_REPORT_ITERATIONPLOT;         %end;
23839     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DATA"           %then %do; %EM_REPORT_DATA(maxobs=100);      %end;
23840     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "MULTIPLEY2PLOT" %then %do; %EM_REPORT_MULTIPLY2PLOT;         %end;
23842     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "LATTICE" %then %do;
23843     +                ods graphics / height=9in;
23844     +                %EM_REPORT_LATTICE;
23845     +                ods graphics / height=4.5in;
23846     +            %end;
23847     +        %end;
23849     +        title1; title2; title3; title4; title5;
23850     +    %end;
23852     +%node_skip:
23854     +%mend EM_REPORT_NODE;
23856     +/*---------------------------------------------------------*/
23857     +/*---- create xml file containing pfd information      ----*/
23858     +/*---------------------------------------------------------*/
23859     +%macro em_report_workspace_xml();
23861     +    %global EM_REPORT_LIB;
23863     +    %EM_REGISTER(key=PFD, type=FILE, extension=XML);
23864     +    %EM_GETNAME(key=PFD,  type=FILE, extension=XML);
23866     +    filename x "&EM_USER_PFD" encoding="utf-8" NOBOM;
23868     +    /* Node information */
23869     +    data _null_;
23870     +        file x;
23871     +        set &EM_REPORT_LIB..EM_NODEID;
23872     +        length string $400;
23874     +        /* check for invalid characters in the node label */
23875     +        label = tranwrd(label, %nrstr("&"), %nrstr("&amp;"));
23876     +        label = tranwrd(label, %nrstr("<"), %nrstr("&lt;"));
23877     +        label = tranwrd(label, %nrstr(">"), %nrstr("&gt;"));
23878     +        label = tranwrd(label, %nrstr("'"), %nrstr("&#39;"));
23879     +        label = tranwrd(label, %nrstr('"'), %nrstr('&quot;'));
23881     +        string = cats('<PFDNode x="',X,'" y="',Y,'" id="',NODEID,'" title="',LABEL,'"></PFDNode>');
23882     +        put string;
23883     +    run;
23885     +    /* Link information */
23886     +    data _null_;
23887     +        file x mod;
23888     +        set &EM_REPORT_LIB..EM_DGRAPH(where=(TO ne ""));
23889     +        length string $400;
23891     +        string = cats("<PFDLink id='",_N_,"' fromId='",FROM,"' toId='",TO,"'></PFDLink>");
23892     +        put string;
23893     +    run;
23895     +    filename x;
23897     +%mend em_report_workspace_xml;
23899     +/*---------------------------------------------------------*/
23900     +/* "chop" xml definitions, wrapping if over 256 bytes      */
23901     +/*---------------------------------------------------------*/
23902     +%macro em_report_makeds(XMLfile,outds);
23904     +    %local rc fileref fid max reclen;
23905     +    %let fileref=xmlref;
23906     +    %if %sysfunc(fexist(xmlref)) %then %put ERROR: Fileref XMLREF in use.;
23907     +    %else %do;
23908     +      %let rc=%sysfunc(filename(fileref,&XMLfile,,encoding='utf-8')));
23909     +      %if %sysfunc(fileref(xmlref)) ne 0 %then %put %sysfunc(sysmsg());
23910     +      %else %do;
23911     +        %let fid=%sysfunc(fopen(xmlref,i,5000,v));
23912     +        %let max=0;
23913     +         %if %sysfunc(fread(&fid)) = 0 %then %do;
23914     +            %let reclen=%sysfunc(frlen(&fid));
23915     +            %let max=&reclen;
23916     +            %do %while(%sysfunc(fread(&fid)) = 0);
23917     +               %let reclen=%sysfunc(frlen(&fid));
23918     +               %if &reclen > &max %then %let max=&reclen;
23919     +            %end;
23920     +        %end;
23921     +        %let rc=%sysfunc(fclose(&fid));
23923     +        data &outds(keep=PFDItemList);
23924     +          infile xmlref recfm=v  lrecl=&max  length=len;
23925     +          length PFDItemList $256;
23926     +          input record $varying5000. len;
23927     +          recordNum+1;
23928     +          do start=1 to len by 256 ;
23929     +             end=start+256;
23930     +             *put recordNum= start= end=;
23931     +             PFDItemList=substr(record,start,end);
23932     +             output;
23933     +          end;
23934     +        run;
23935     +        %let rc=%sysfunc(filename(fileref));
23936     +      %end;
23937     +    %end;
23938     +%mend em_report_makeds;
23940     +/*---------------------------------------------------------*/
23941     +/* render a workspace plot in the ODS destination          */
23942     +/*---------------------------------------------------------*/
23943     +%macro em_report_workspace_render;
23945     +     /*--- determine if flow was run in batch (ie all x/y coordinates are -1) ---*/
23946     +     %let runBatch = 0;
23947     +     data temp;
23948     +        set &EM_REPORT_LIB..EM_NODEID;
23949     +        if X = -1 AND Y= - 1 then delete;
23950     +     run;
23951     +     %let dsid = %sysfunc(open(work.temp));
23952     +     %let nobs = %sysfunc(ATTRN(&dsid, NOBS));
23953     +     %if &dsid %then %let dsid = %sysfunc(close(&dsid));
23955     +     %if &nobs le 1 %then %let runBatch = 1;
23957     +      title1; title2; title3;
23959     +      %let temp = %nrbquote(%sysfunc(PATHNAME(&em_report_lib)));
23960     +      %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
23961     +      %let view = view.xml;
23962     +      %let viewfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&view);
23963     +      %let datax = data.xml;
23964     +      %let dataxfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&datax);
23966     +      /* make sgDataModel*/
23967     +      ods &EM_REPORT_FORMAT exclude SGRENDER; /* disable sgrender output to PDF */
23968     +      ods tagsets.gtl file="&viewfile" data="&dataxfile" encoding="utf-8" style=styles.em_style;
23969     +      proc sgrender data=work.xmldata template=dataonly;
23970     +          dynamic var1="PFDItemList";
23971     +      run;
23973     +      /* pfd event code */
23974     +      %if "&EM_REPORT_TITLE" ne "" %then %do;
23975     +          ods tagsets.gtl event=LayoutRegion(start)
23976     +              options(title ="&EM_REPORT_TITLE"
23977     +                      title2="%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))");
23978     +      %end;
23979     +      %else %do;
23980     +          ods tagsets.gtl event=LayoutRegion(start)
23981     +              options(title ="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"
23982     +                      title2="%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))");
23983     +      %end;
23985     +      %if &runBatch ne 1 %then %do;
23986     +          ods tagsets.gtl event=PFD options(pfditems="PFDItemList" id="pfdView1");
23987     +          ods tagsets.gtl event=LayoutRegion(finish);
23988     +          ods tagsets.gtl close;
23989     +          ods &EM_REPORT_FORMAT select ALL ; /* re-enable sgrender output */
23990     +          ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))";
23991     +          proc sgsilk viewxml="&viewfile" dataxml="&dataxfile"; run;
23992     +      %end;
23993     +      title1; title2; title3;
23995     +%mend em_report_workspace_render;
23998     +%macro EM_REPORT_RESULTS(
23999     +    path=,              /*-- output location             ---*/
24000     +    lib=,               /*-- em workspace library        ---*/
24001     +    startnodeid=,       /*-- starting nodeid             ---*/
24002     +    showall=,           /*-- show all content Y or N     ---*/
24003     +    nodes=,             /*-- nodes to generate report on ---*/
24004     +    format=,            /*-- format for generated report ---*/
24005     +    style=              /*--- style for ODS statement    ---*/
24006     +) ;
24008     +    data _null_ ;
24009     +        call symput('report_date', strip(put(date(),     NLDATE.)));
24010     +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
24011     +    run;
24013     +    data _null_;
24014     +        file print ;
24015     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
24016     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
24017     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
24018     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
24019     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
24020     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
24021     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
24022     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &EM_REPORT_SHOWALL))" / ;
24023     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
24024     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_graphics_note, NOQUOTE, &EM_REPORT_GDEVICE))" ;
24025     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &STYLE))" / ;
24026     +    run ;
24028     +    /* add report view to results */
24029     +    %EM_GETNAME(key=REPORT, type=FILE, extension=&FORMAT);
24030     +    %EM_REPORT(KEY=REPORT, BLOCK=MODEL, VIEWTYPE = FILEVIEWER, autodisplay=Y, DESCRIPTION=CUSTOM);
24032     +%mend;
24034     +%macro EM_REPORT_CREATERESULTS();
24036     +    %EM_GETNAME(key=ODSRESULTS, type=FILE, extension=htm, folder=ODS);
24037     +    filename x "&EM_FILE_ODSRESULTS" nobom;
24039     +    ods listing close;
24040     +    ods html3 file=X encoding = "utf-8" style=styles.em_style;
24041     +    ods html3 text=" ";
24042     +    %if "&EM_REPORT_TITLE" ne "" %then %do;
24043     +        ods html3 text="&EM_REPORT_TITLE";
24044     +    %end;
24045     +    %else %do;
24046     +        ods html3 text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))";
24047     +    %end;
24049     +    data _null_ ;
24050     +        call symput('report_date', strip(put(date(),     NLDATE.)));
24051     +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
24052     +    run;
24054     +    data _null_;
24055     +        file print ;
24056     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
24057     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
24058     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
24059     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
24060     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
24061     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
24062     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
24063     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &showall))" / ;
24064     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
24065     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_graphics_note, NOQUOTE, &EM_REPORT_GDEVICE))" ;
24066     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &EM_REPORT_STYLE))" / ;
24067     +    run ;
24069     +    filename x;
24070     +    ods listing;
24071     +    ods html3 close;
24073     +    %EM_REPORT(KEY=ODSRESULTS, BLOCK=MODEL, VIEWTYPE = HTMLVIEW);
24075     +%mend EM_REPORT_CREATERESULTS;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emrpm.em_modelprops.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMRPM.EM_MODELPROPS.SOURCE.
24076     +%macro em_modelprops(dgmid=, modelid=, output=%nrbquote(work.properties));
24077     +  %global mdl_emwsid mdl_modelid;
24078     +  %do;
24079     +     %let mdl_emwsid  = &dgmid;
24080     +     %let mdl_modelid = &modelid;
24081     +     %let mdl_output  = &output;
24082     +
24083     +     dm "afa c=sashelp.emrpm.modelprops.scl";
24084     +  %end;
24085     +%mend em_modelprops;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename pdffile "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\REPORT.pdf";
MPRINT(TRAIN):   filename pdffile;
NOTE: Fileref PDFFILE has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename rtffile "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Report\REPORT.rtf";
MPRINT(TRAIN):   filename rtffile;
NOTE: Fileref RTFFILE has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_plotmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_PLOTMACROS.SOURCE.
24086     +/*---------------------------------------------------------*/
24087     + * Utility functions:;
MPRINT(EM_REPORT_CREATE):   * Utility functions:;
24088     +/*---------------------------------------------------------*/
24090     +%macro EM_REPORT_GTT();
24092     +    %global EM_REPORT_TTL1 EM_REPORT_TTL2 EM_REPORT_TTL3 EM_REPORT_TITLE EM_REPORT_NODE_TEXT EM_REPORT_KEY_description;
24094     +    %if "&EM_REPORT_TITLE" ne "" %then %do;
24095     +        %let EM_REPORT_ttl1 = &EM_REPORT_TITLE;
24096     +    %end;
24097     +    %else %do;
24098     +        %let EM_REPORT_ttl1 = %sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE));
24099     +    %end;
24101     +    %let EM_REPORT_ttl2 = %sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)));
24103     +    %let msg0 = views_descriptions_&em_report_key_description;
24104     +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
24105     +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
24106     +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
24107     +    %end;
24108     +    %else %do;
24109     +        %let msg2=views_descriptions_&em_report_key_description;
24110     +    %end;
24112     +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&msg0))"
24113     +    %then %do;
24114     +        %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
24115     +    %end;
24116     +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&msg0))"
24117     +    %then %do;
24118     +        %if %sysfunc(exist(sashelp.tmine)) %then %do;
24119     +            %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
24120     +        %end;
24121     +    %end;
24122     +    %else %do;
24123     +        %let EM_REPORT_ttl3 = &em_report_key_description;
24124     +    %end;
24126     +    /*--- special labels ---*/
24128     +    %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS"
24129     +    %then %do;
24130     +       %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.dmine, rpt_regressionmod_title, NOQUOTE));
24131     +    %end;
24133     +%mend;
24135     +/*---------------------------------------------------------*/
24136     +* Plots created by SGPLOT: LINEPLOT, SCATTER, PLOT, BAR;
MPRINT(EM_REPORT_CREATE):   * Plots created by SGPLOT: LINEPLOT, SCATTER, PLOT, BAR;
24137     +/*---------------------------------------------------------*/
24139     +%macro EM_REPORT_SGPLOT(type=);
24141     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24143     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24145     +    /*--- EM_REPORT_SGPLOT 1. identify the plot statement ---*/
24147     +    %let axisstmt = xaxis;
24149     +    %if &type eq LINEPLOT   %then %let plotstmt = series;
24150     +    %if &type eq PLOT       %then %let plotstmt = series;
24151     +    %if &type eq SCATTER    %then %let plotstmt = scatter;
24152     +    %if &type eq BARPLOT    %then %let plotstmt = vbar;
24153     +    %if &type eq HISTOGRAM  %then %let plotstmt = histogram;
24155     +    %if "&plotstmt" eq "vbar" and "%upcase(&EM_REPORT_KEY_ORIENTATION)" eq "HORIZONTAL"
24156     +    %then %do;
24157     +        %let plotstmt = hbar;
24158     +        %let axisstmt = yaxis;
24159     +    %end;
24160     +    /*--- EM_REPORT_SGPLOT 2. options for plot statements ---*/
24162     +    %let plotopt = ;
24164     +    %if &type eq LINEPLOT %then %do;
24165     +        %if "&EM_REPORT_KEY_GROUP" ne "" %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
24166     +    %end;
24167     +    %else %if &type eq PLOT %then %do;
24168     +        %if "&EM_REPORT_KEY_GROUP" ne "" %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
24169     +    %end;
24170     +    %else %if &type eq SCATTER %then %do;
24171     +        %if "&EM_REPORT_KEY_GROUP" ne ""     %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
24172     +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt freq=&EM_REPORT_KEY_FREQUENCY);
24173     +        %let plotopt = %str(&plotopt markerattrs=(symbol=squarefilled));
24174     +    %end;
24175     +    %else %if &type eq BARPLOT %then %do;
24176     +        %let plotopt = missing;
24177     +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt response=&EM_REPORT_KEY_FREQUENCY);
24178     +        %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_SUBGROUP);
24179     +        %else %if "&EM_REPORT_KEY_GROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_GROUP);
24180     +    %end;
24181     +    %else %if &type eq HISTOGRAM %then %do;
24182     +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt freq=&EM_REPORT_KEY_FREQUENCY);
24183     +        %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_SUBGROUP);
24184     +/*        %if "&EM_REPORT_KEY_Y" ne ""         %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_Y);*/
24185     +    %end;
24187     +    %if "&plotopt" ne "" %then %let plotopt = %str(/ &plotopt);
24189     +    /*--- EM_REPORT_SGPLOT 3. handle _ANYNUMERIC_ or BYSET---*/
24191     +    %if &type eq PLOT and "&EM_REPORT_KEY_Y" eq "_ANYNUMERIC_" %then %do;
24193     +         proc contents data=&pdat out=_rptsgplot_temp(keep=name type) noprint;
24194     +         run;
24196     +         /*** For _ANYNUMERIC_, get the first numeric variable that is not X ***/
24197     +         data _null_;
24198     +            set _rptsgplot_temp(where=(type eq 1 and upcase(name) ne "%upcase(&EM_REPORT_KEY_X)"));
24199     +            if _n_=1 then call symput("EM_REPORT_KEY_Y", strip(name));
24200     +         run;
24201     +    %end;
24203     +    /*--- EM_REPORT_SGPLOT 4. call SGPLOT ---*/
24205     +    ods graphics / discretemax=5000;
24207     +    proc sgplot data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
24209     +        %if "&EM_REPORT_KEY_Y" ne "" and "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
24210     +            %let i = 1;
24211     +            %do %while ("%scan(&EM_REPORT_KEY_Y,&i,' ')" ne "");
24212     +                %let thisY=%scan(&EM_REPORT_KEY_Y,&i,' ');
24213     +                %let i = %eval(&i+1);
24214     +                &plotstmt
24215     +                    x = &EM_REPORT_KEY_X  y = &thisY  &plotopt
24216     +                ;
24217     +            %end;
24218     +        %end;
24219     +        %if "&EM_REPORT_KEY_Y2" ne "" and "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
24220     +            &plotstmt
24221     +                x = &EM_REPORT_KEY_X  y = &EM_REPORT_KEY_Y2  &plotopt
24222     +            ;
24223     +        %end;
24224     +        %if "&type" eq "BARPLOT" %then %do;
24225     +            &plotstmt
24226     +                &EM_REPORT_KEY_X &plotopt;
24227     +            &axisstmt
24228     +                type=discrete /* discreteorder=data */
24229     +                %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do; display=(NOVALUES NOTICKS) %end;
24230     +            ;
24231     +        %end;
24232     +        %if "&type" eq "HISTOGRAM" and "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do;
24233     +            &plotstmt
24234     +                &EM_REPORT_KEY_X &plotopt;
24235     +            &axisstmt
24236     +                %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do; display=(NOVALUES NOTICKS) %end;
24237     +            ;
24238     +        %end;
24239     +        %if "&type" eq "HISTOGRAM" and "&EM_REPORT_KEY_FREQUENCY" eq "" %then %do;
24240     +            &plotstmt &EM_REPORT_KEY_X;
24241     +        %end;
24242     +        %if "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
24243     +            %if "&EM_REPORT_KEY_YREF" ne "" %then %do; refline &EM_REPORT_KEY_YREF / axis = y; %end;
24244     +            %if "&EM_REPORT_KEY_XREF" ne "" %then %do; refline &EM_REPORT_KEY_XREF / axis = x; %end;
24245     +        %end;
24247     +        keylegend;
24248     +    run; quit;
24250     +    %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do;
24251     +        %EM_REPORT_makeMultiColumn(dat=&pdat.&EM_REPORT_KEY_WHERECLAUSE, vars=effectnum variable classlevel coefficient tvalue pvalue, split=2);
24252     +    %end;
24254     +    ods graphics / discretemax=100;
24255     +    title1; title2; title3;
24257     +%mend EM_REPORT_SGPLOT;
24259     +/*---------------------------------------------------------*/
24260     +* Plots rendered by SGSILK: DTREE, ICICLE, PIE;
MPRINT(EM_REPORT_CREATE):   * Plots rendered by SGSILK: DTREE, ICICLE, PIE;
24261     +/*---------------------------------------------------------*/
24263     +%macro EM_REPORT_SGSILK(type=);
24265     +    %local temp path view datax viewfile dataxfile;
24266     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24268     +    /*--- EM_REPORT_SGSILK 1. define the XML files for view and data ---*/
24270     +    %let temp      = %nrbquote(%sysfunc(PATHNAME(&EM_REPORT_LIB)));
24271     +    %let path      = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
24272     +    %let view      = view.xml;
24273     +    %let datax     = data.xml;
24274     +    %let viewfile  = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&view);
24275     +    %let dataxfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&datax);
24277     +    /*--- EM_REPORT_SGSILK 2. Call SGRENGER and setup GTL tagsets---*/
24279     +    ods &EM_REPORT_FORMAT exclude SGRENDER; /* disable sgrender output to PDF */
24280     +    ods tagsets.gtl file="&viewfile" data="&dataxfile" encoding="utf-8" style=styles.em_style;
24282     +    %if &type eq DTREE %then %do;   /****** DTREE ******/
24284     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
24285     +            dynamic var1 = "&EM_REPORT_KEY_ID";
24286     +            dynamic var2 = "&EM_REPORT_KEY_PARENT";
24287     +            dynamic var3 = "&EM_REPORT_KEY_NODETEXT";
24288     +            dynamic var4 = "&EM_REPORT_KEY_NODECOLOR";
24289     +            dynamic var5 = "&EM_REPORT_KEY_ABOVETEXT";
24290     +            dynamic var6 = "&EM_REPORT_KEY_BELOWTEXT";
24291     +            dynamic var7 = "&EM_REPORT_KEY_LINKWIDTH";
24292     +        run;
24294     +        ods tagsets.gtl event=LayoutRegion(start)
24295     +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
24297     +        ods tagsets.gtl event=DecisionTree
24298     +            options( id        = "&EM_REPORT_KEY_ID"
24299     +                     parent    = "&EM_REPORT_KEY_PARENT"
24300     +                     nodetext  = "&EM_REPORT_KEY_NODETEXT"
24301     +                     abovetext = "&EM_REPORT_KEY_ABOVETEXT"
24302     +                     belowtext = "&EM_REPORT_KEY_BELOWTEXT"
24303     +                     linkwidth = "&EM_REPORT_KEY_LINKWIDTH"
24304     +                     nodecolor = "&EM_REPORT_KEY_NODECOLOR" );
24306     +    %end;
24307     +    %else %if &type eq ICICLE %then %do;      /****** ICICLE ******/
24309     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
24310     +            dynamic var1="&EM_REPORT_KEY_ID";
24311     +            dynamic var2="&EM_REPORT_KEY_PARENT";
24312     +            dynamic var3="&EM_REPORT_KEY_NODECOLOR";
24313     +            dynamic var4="&EM_REPORT_KEY_NODESIZE";
24314     +        run;
24316     +        ods tagsets.gtl event=LayoutRegion(start)
24317     +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
24319     +        ods tagsets.gtl event=Icicle
24320     +            options( id        = "&EM_REPORT_KEY_ID"
24321     +                     parent    = "&EM_REPORT_KEY_PARENT"
24322     +                     nodecolor = "&EM_REPORT_KEY_NODECOLOR"
24323     +                     nodesize  = "&EM_REPORT_KEY_NODESIZE" );
24325     +    %end;
24326     +    %else %if &type eq PIE %then %do;      /****** PIE ******/
24328     +      proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
24329     +          dynamic var1="&EM_REPORT_KEY_X"
24330     +                  var2=
24331     +                       %if &EM_REPORT_KEY_Y NE %str() %then "&EM_REPORT_KEY_Y" ;
24332     +                       %else "&EM_REPORT_KEY_FREQUENCY";
24333     +               ;
24334     +      run;
24335     +      quit;
24337     +      ods tagsets.gtl event=LayoutRegion(start)
24338     +          options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
24340     +      ods tagsets.gtl event=Pie
24341     +          options( category = "&EM_REPORT_KEY_X"
24342     +                   response =
24343     +                             %if &EM_REPORT_KEY_Y NE %str() %then "&EM_REPORT_KEY_Y" ;
24344     +                             %else "&EM_REPORT_KEY_FREQUENCY";
24345     +                   pielabeldisplay = "1"         );
24348     +    %end;
24350     +    ods tagsets.gtl event=LayoutRegion(finish);
24351     +    ods tagsets.gtl close;
24353     +    /*--- EM_REPORT_SGSILK 3. Call SGSILK to render the graph---*/
24355     +    ods &EM_REPORT_FORMAT select ALL; /* re-enable sgrender output */
24356     +    proc sgsilk viewxml="&viewfile" dataxml="&dataxfile"; run;
24357     +    title1; title2; title3;
24358     +%mend;
24360     +/*---------------------------------------------------------*/
24361     +* DENDROGRAM <- PROC TREE;
MPRINT(EM_REPORT_CREATE):   * DENDROGRAM <- PROC TREE;
24362     +/*---------------------------------------------------------*/
24364     +%macro EM_REPORT_DENDROGRAM() ;
24366     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24368     +    *goptions device=&EM_REPORT_GDEVICE ;
24369     +    goptions reset=all device=&EM_REPORT_GDEVICE;
24371     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24373     +    axis1 minor=none label=(height = &EM_REPORT_TEXT_SIZE pt ) ;
24374     +    axis2 minor=none label=(height = &EM_REPORT_TEXT_SIZE pt angle=90 ) ;
24376     +    ods &EM_REPORT_FORMAT select ALL; /* re-enable sgrender output */
24378     +    proc tree data=&pdat.&EM_REPORT_KEY_WHERECLAUSE horizontal haxis=axis1 vaxis=axis2;
24379     +        height &EM_REPORT_KEY_HEIGHT;
24380     +        name   &EM_REPORT_KEY_NAME;
24381     +        parent &EM_REPORT_KEY_PARENT;
24382     +    run; quit;
24384     +    title1; title2; title3 ;
24385     +    axis1; axis2;
24387     +%mend EM_REPORT_DENDROGRAM;
24389     +/*---------------------------------------------------------*/
24390     +* EVENTPLOT <- SGSCATTER;
MPRINT(EM_REPORT_CREATE):   * EVENTPLOT <- SGSCATTER;
24391     +/*---------------------------------------------------------*/
24393     +%macro EM_REPORT_EVENTPLOT();
24395     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24397     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24399     +    proc sgscatter data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
24400     +        plot (_cumulative_event_count_ _marginal_event_rate_ _event_count_ _cumulative_event_rate_)
24401     +            * _cutoff_score_ / group=datarole join=() markerattrs=(size=0) grid;
24402     +    run; quit;
24404     +    title1; title2; title3 ;
24406     +%mend EM_REPORT_EVENTPLOT;
24408     +/*---------------------------------------------------------*/
24409     + * EM_REPORT_ITERATIONPLOT ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_ITERATIONPLOT ;
24410     + * create plots of iterations: neural, stepwise, tree, etc..;
MPRINT(EM_REPORT_CREATE):   * create plots of iterations: neural, stepwise, tree, etc..;
24411     +/*---------------------------------------------------------*/
24413     +%macro EM_REPORT_ITERATIONPLOT();
24415     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24416     +    %let X    = &EM_REPORT_KEY_X;
24418     +    title1 "&EM_REPORT_TTL1";
24419     +    title2 "&EM_REPORT_TTL2";
24420     +    title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_mdliterationplot_title, NOQUOTE))";
24422     +    %local _misc_ _vmisc_ _ase_ _vase_ ;
24423     +    data _null_ ;
24424     +        set &pdat(obs=2) end=eof;
24425     +        if eof then do ;
24426     +            call symput('_ase_',_ase_);
24427     +            call symput('_vase_',_vase_);
24428     +            call symput('_misc_',_misc_);
24429     +            call symput('_vmisc_',_vmisc_);
24430     +        end;
24431     +    run;
24433     +    %let dsid = %sysfunc(open(&pdat));
24434     +    %if &dsid %then %do;
24435     +        %let _ase_ = %sysfunc(VARNUM(&dsid, _ase_));
24436     +        %let _vase_ = %sysfunc(VARNUM(&dsid, _vase_));
24437     +        %let _misc_ = %sysfunc(VARNUM(&dsid, _misc_));
24438     +        %let _vmisc_ = %sysfunc(VARNUM(&dsid, _vmisc_));
24439     +    %end;
24440     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
24442     +    %if "&_ase_"   eq "." %then %let _ase_   = 0;
24443     +    %if "&_vase_"  eq "." %then %let _vase_  = 0;
24444     +    %if "&_misc_"  eq "." %then %let _misc_  = 0;
24445     +    %if "&_vmisc_" eq "." %then %let _vmisc_ = 0;
24447     +    %put &_ase_ &_vase_ &_misc_ &_vmisc_;
24449     +    %if &_vmisc_ ne 0 %then %do;
24450     +        proc sql noprint;
24451     +            select count(*) into :nonMiss_vmisc from &pdat where _vmisc_ ne .;
24452     +        quit;
24453     +    %end;
24454     +    %else %do;
24455     +        %let nonMiss_vmisc = 0;
24456     +    %end;
24458     +    ods path(prepend) work.templat(update);
24459     +    proc template;
24460     +        define statgraph em.IterationPlot / store=work.templat;
24461     +            begingraph;
24462     +                entrytitle "&EM_REPORT_TTL1";
24463     +                entrytitle "&EM_REPORT_TTL2";
24464     +                entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_mdliterationplot_title, NOQUOTE))";
24466     +              layout lattice / order=columnmajor rows=1 rowdatarange=data columngutter=10;
24468     +                %if &_ase_ ne 0 or &_vase_ ne 0 %then %do;
24469     +                    layout overlay / cycleattrs=true
24470     +                        xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel, NOQUOTE))")
24471     +                        yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, stat_ase_vlabel, NOQUOTE))");
24472     +                        %if &_ase_ ne 0 %then %do ;
24473     +                            seriesplot x=&X y=_ASE_ /  markerattrs=(size=0) display=all name='train'
24474     +                                legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_roletrain_value, NOQUOTE))";
24475     +                        %end;
24476     +                        %if &_vase_  ne 0 %then %do ;
24477     +                            seriesplot x=&X y=_VASE_ /  markerattrs=(size=0) display=all name='validate'
24478     +                                legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rolevalidate_value, NOQUOTE))";
24479     +                        %end;
24480     +                        %if "&EM_REPORT_KEY_XREF" ne "" %then %do; referenceline x=&EM_REPORT_KEY_XREF; %end;
24481     +                    endlayout;
24482     +                %end;
24484     +                %if &_misc_ ne 0 or ( &_vmisc_ ne 0 and &nonMiss_vmisc ne 0) %then %do;
24485     +                    layout overlay / cycleattrs=true
24486     +                        xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel, NOQUOTE))")
24487     +                        yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_vlabel, NOQUOTE))");
24488     +                        %if &_misc_ ne 0 %then %do;
24489     +                            seriesplot x=&X y=_MISC_ /  markerattrs=(size=0) display=all;
24490     +                        %end;
24491     +                        %if &_vmisc_  ne 0 %then %do ;
24492     +                            seriesplot x=&X y=_VMISC_ /  markerattrs=(size=0) display=all;
24493     +                        %end;
24494     +                        %if "&EM_REPORT_KEY_XREF" ne "" %then %do; referenceline x=&EM_REPORT_KEY_XREF; %end;
24495     +                    endlayout;
24496     +                %end;
24498     +                sidebar /  align=bottom;
24499     +                    layout overlay;
24500     +                        discretelegend 'train' 'validate' / down=1 order=columnmajor;
24501     +                    endlayout;
24502     +                endsidebar;
24503     +              endlayout;
24504     +            endgraph;
24505     +        end;
24506     +    run;
24508     +    proc sort data=&pdat.&EM_REPORT_KEY_WHERECLAUSE out=_tmprpt_iterdat;
24509     +        by &X;
24510     +    run;
24512     +    proc sgrender data=_tmprpt_iterdat template='em.IterationPlot';
24513     +    run;
24514     +    title1; title2; title3;
24516     +    proc delete data=_tmprpt_iterdat; run;
24518     +%mend  EM_REPORT_ITERATIONPLOT;
24520     +/* for hpdmassess */
24522     +%macro EM_REPORT_HPDMASSESS();
24524     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24526     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24528     +    /*--- EM_REPORT_HPDMASSESS 1. idenfity the variables     ---*/
24530     +    %let dsid = %sysfunc(open(&pdat));
24531     +    %if &dsid %then %do;
24532     +        %let lift     = %sysfunc(VARNUM(&dsid, lift));
24533     +        %let c_lift   = %sysfunc(VARNUM(&dsid, c_lift));
24534     +        %let mean1    = %sysfunc(VARNUM(&dsid, target_mean));
24535     +        %let mean2    = %sysfunc(VARNUM(&dsid, predicted_mean));
24536     +        %let datarole = %sysfunc(VARNUM(&dsid, &EM_REPORT_KEY_GROUP));
24537     +    %end;
24538     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
24540     +    %if "&lift"     eq "."  %then %let lift     = 0;
24541     +    %if "&c_lift"   eq "."  %then %let c_lift   = 0;
24542     +    %if "&mean1"    eq "."  %then %let mean1   = 0;
24543     +    %if "&mean2"    eq "."  %then %let mean2   = 0;
24544     +    %if "&datarole" eq "."  %then %let datarole = 0;
24546     +    %put &lift &c_lift &mean1 &mean2 &datarole;
24548     +    %if &lift ne 0 and &c_lift ne 0 %then %do;
24549     +        %let hpdm_plot = 1;
24550     +        %let hpdm_var1 = lift;
24551     +        %let hpdm_var2 = c_lift;
24552     +        %let hpdm_lbl1 = assmt_lift_vlabel;
24553     +        %let hpdm_lbl2 = assmt_liftc_vlabel;
24554     +    %end;
24555     +    %else
24556     +    %if &mean1 ne 0 and &mean2 ne 0
24557     +    %then %do;
24558     +        %let hpdm_plot = 1;
24559     +        %let hpdm_var1 = target_mean;
24560     +        %let hpdm_var2 = predicted_mean;
24561     +        %let hpdm_lbl1 = rpt_rpttargetmean_vlabel;
24562     +        %let hpdm_lbl2 = rpt_rptpredmean_vlabel;
24563     +    %end;
24564     +    %else %do;
24565     +        %let hpdm_plot = 0;
24566     +        %let hpdm_var1 = ;
24567     +        %let hpdm_var2 = ;
24568     +        %let hpdm_lbl1 = ;
24569     +        %let hpdm_lbl2 = ;
24570     +    %end;
24571     +    /*--- EM_REPORT_HPDMASSESS 2. call SGPANEL                ---*/
24573     +    %if &hpdm_plot eq 1 %then %do;
24574     +        ods path(prepend) work.templat(update);
24575     +        proc template;
24576     +            define statgraph em.hpdmassess / store=work.templat;
24577     +                begingraph;
24578     +                    entrytitle "&EM_REPORT_TTL1";
24579     +                    entrytitle "&EM_REPORT_TTL2";
24580     +                    entrytitle "&EM_REPORT_TTL3";
24582     +                    layout lattice / order=columnmajor rows=1 rowdatarange=data columngutter=10;
24584     +                        %if &datarole ne 0 %then %do;
24585     +                            layout overlay / cycleattrs=true
24586     +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
24587     +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))")
24588     +                            ;
24589     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var1 / name='var1' markerattrs=(size=0) display=all group=&EM_REPORT_KEY_GROUP;
24590     +                            endlayout;
24591     +                            layout overlay / cycleattrs=true
24592     +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
24593     +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl2, NOQUOTE))")
24594     +                            ;
24595     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var2 /  markerattrs=(size=0) display=all group=&EM_REPORT_KEY_GROUP;
24596     +                            endlayout;
24597     +                            sidebar /  align = bottom;
24598     +                                layout overlay;
24599     +                                    discretelegend 'var1' / down=1 order=columnmajor;
24600     +                                endlayout;
24601     +                            endsidebar;
24602     +                        %end;
24603     +                        %else %do;
24604     +                            layout overlay / cycleattrs=true
24605     +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
24606     +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))")
24607     +                            ;
24608     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var1 /  markerattrs=(size=0) display=all name='var1'
24609     +                                    legendlabel="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))";
24610     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var2 /  markerattrs=(size=0) display=all name='var2'
24611     +                                    legendlabel="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl2, NOQUOTE))";
24612     +                            endlayout;
24613     +                            sidebar /  align=bottom;
24614     +                                layout overlay;
24615     +                                    discretelegend 'var1' 'var2' / down=1 order=columnmajor;
24616     +                                endlayout;
24617     +                            endsidebar;
24618     +                        %end;
24619     +                    endlayout;
24620     +                endgraph;
24621     +            end;
24622     +        run;
24624     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template='em.hpdmassess'; run;
24625     +    %end;
24627     +    title1; title2; title3;
24629     +%mend EM_REPORT_HPDMASSESS;
24631     +/* for heatmap version of histograms */
24633     +%macro EM_REPORT_HEATMAPTEMPLATE();
24635     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24637     +    %if "&EM_REPORT_KEY_FREQUENCY" ne "" "&EM_REPORT_KEY_X" ne "" "&EM_REPORT_KEY_Y" ne "" %then %do;
24639     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24641     +        proc template;
24642     +        define statgraph heatmap;
24643     +        begingraph;
24644     +        entrytitle "&EM_REPORT_TTL1";
24645     +        entrytitle "&EM_REPORT_TTL2";
24646     +        entrytitle "&EM_REPORT_TTL3";
24647     +        layout overlay;
24648     +        heatmapparm x=&EM_REPORT_KEY_X y=&EM_REPORT_KEY_Y colorresponse=&EM_REPORT_KEY_FREQUENCY / name="map" display=all;
24649     +          continuouslegend "map";
24650     +        endlayout;
24651     +        endgraph;
24652     +        end;
24654     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=heatmap; run;
24656     +    %end;
24658     +    title1; title2; title3;
24660     +%mend EM_REPORT_HEATMAPTEMPLATE;
24663     +/* for assessment plot */
24665     +%macro EM_REPORT_EMRANK(pdat=, lattice=no) ;
24667     +    data _tmp_dat;
24668     +        set &pdat.&EM_REPORT_KEY_WHERECLAUSE;
24669     +    run;
24670     +    %let pdat = _tmp_dat;
24672     +    %let varList = GAIN CAPC LIFTC RESPC _MEANP_ _MINP_ _MAXP_;
24673     +    %let varNum = 7;
24674     +    %let modelVar = model;
24675     +    %do k = 1 %to &varNum;
24676     +        %let thisVar = %scan(&varList,&k,' ');
24677     +        %let var_&thisVar = ;
24678     +    %end;
24680     +/*-----------------------------------------------------------------------------*/
24682     +    proc contents data=&pdat out=_tmp_content(keep=name) noprint;
24683     +    run;
24685     +    %let is_cat = 0;
24686     +    %let has_loop = 0;
24687     +    %let has_where = 0;
24689     +    data _null_;
24690     +        set _tmp_content;
24691     +        name=strip(upcase(name));
24692     +        format _tmp_list $500.;
24693     +        _tmp_list = symget('varList');
24695     +        do k = 1 to &varNum;
24696     +            if name eq scan(_tmp_list,k,' ') then call symput(cats('var_',name),name);
24697     +        end;
24699     +        if name eq '_LOOP_'  then call symput('has_loop','1');
24700     +        if name eq '_WHERE_' then call symput('has_where','1');
24701     +        if name eq 'GAIN'    then call symput('is_cat','1');
24702     +    run;
24704     +    %if &has_loop eq 1 %then %do;
24705     +        %if &has_where eq 1 %then %do;
24706     +            proc sql noprint;
24707     +                select count(*) into :nn1 from &pdat;
24708     +                select count(*) into :nn2 from &pdat where _where_ is missing;
24709     +            quit;
24710     +            %if &nn1 ne &nn2
24711     +                %then %let modelvar = _where_;
24712     +                %else %let modelvar = ;
24713     +        %end;
24714     +        %else %do;
24715     +            %let modelvar = ;
24716     +        %end;
24717     +    %end;
24719     +/*-----------------------------------------------------------------------------*/
24721     +    %if "&lattice" eq "yes" %then %do ;
24723     +        proc sql noprint;
24724     +            select count(distinct datarole)  into :ndataroles from &pdat;
24725     +            select distinct datarole into :drole1-:drole%left(&ndataroles) from &pdat;
24726     +        quit;
24728     +        %do d =1 %to &ndataroles;
24730     +            proc sort data=&pdat(where=(datarole eq "&&&drole&d")) out=_tmp_emrp;
24731     +                by &modelvar decile;
24732     +            run;
24734     +            title1 "&EM_REPORT_TTL1";
24735     +            title2 "&EM_REPORT_TTL2";
24736     +            title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_multiplemdlassess_title, NOQUOTE, &&&drole&d))";
24737     +            %if "&EM_REPORT_KEY_WHERE" ne " " %then %do;
24738     +                title4 "&EM_REPORT_KEY_WHERE";
24739     +            %end;
24741     +            proc sgscatter data=_tmp_emrp;
24742     +                plot
24743     +                    %if &is_cat eq 1 %then %do;
24744     +                        (&var_gain &var_liftc &var_capc &var__meanp_) * decile
24745     +                    %end;
24746     +                    %else %do;
24747     +                        (&var__meanp_ &var__minp_ &var__maxp_) * decile
24748     +                    %end;
24749     +                    / %if &modelvar ne %then %do; group=&modelvar %end;
24750     +                        join=() markerattrs=(size=0) grid
24751     +                ;
24752     +            run; quit;
24753     +            title1; title2; title3; title4;
24754     +        %end;
24755     +    %end;
24756     +    %else %do;
24758     +        proc sort data=&pdat out=_tmp_emrp;
24759     +            by target datarole;
24760     +        run;
24762     +        title1 "&EM_REPORT_TTL1";
24763     +        title2 "&EM_REPORT_TTL2";
24764     +        title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_singlemdlassess_title, NOQUOTE, &em_report_key_where))";
24766     +        %if &is_cat eq 1 %then %do;
24767     +            %if "&var_gain" ne " " %then %do;
24768     +                proc sgpanel data=_tmp_emrp;
24769     +                    panelby datarole;
24770     +                    series x=decile y=gain; series x=decile y=basegain; series x=decile y=bestgain;
24771     +                    rowaxis grid; colaxis grid;
24772     +                run; quit;
24773     +            %end;
24774     +            %if "&var_liftc" ne " " %then %do;
24775     +                proc sgpanel data=_tmp_emrp;
24776     +                    panelby datarole;
24777     +                    series x=decile y=liftc; series x=decile y=baseliftc; series x=decile y=bestliftc;
24778     +                    rowaxis grid; colaxis grid;
24779     +                run; quit;
24780     +            %end;
24781     +            %if "&var_capc" ne " " %then %do;
24782     +                proc sgpanel data=_tmp_emrp;
24783     +                    panelby datarole;
24784     +                    series x=decile y=capc; series x=decile y=basecapc; series x=decile y=bestcapc;
24785     +                    rowaxis grid; colaxis grid;
24786     +                run; quit;
24787     +            %end;
24788     +        %end;
24789     +        %else %do;
24790     +            %if "&var__meanp_" ne " " %then %do ;
24791     +                proc sgpanel data=_tmp_emrp;
24792     +                    panelby datarole;
24793     +                    series x=decile y=_meanp_; series x=decile y=_targetmean_;
24794     +                    rowaxis grid; colaxis grid;
24795     +                run; quit;
24796     +            %end;
24797     +            %if "&var__minp_" ne " " %then %do ;
24798     +                proc sgpanel data=_tmp_emrp;
24799     +                    panelby datarole;
24800     +                    series x=decile y=_minp_; series x=decile y=_targetmin_;
24801     +                    rowaxis grid; colaxis grid;
24802     +                run; quit;
24803     +            %end;
24804     +            %if "&var__maxp_" ne " " %then %do ;
24805     +                proc sgpanel data=_tmp_emrp;
24806     +                    panelby datarole;
24807     +                    series x=decile y=_maxp_; series x=decile y=_targetmax_;
24808     +                    rowaxis grid; colaxis grid;
24809     +                run; quit;
24810     +            %end;
24811     +        %end;
24813     +        title1; title2; title3;
24814     +    %end;
24816     +%mend;
24819     +%macro EM_REPORT_LATTICE();
24821     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24823     +    %let numx = 1;
24824     +    %let numy = 1;
24826     +    proc sql noprint;
24827     +        %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do;
24828     +            select count(distinct &EM_REPORT_KEY_LATTICEX) into :numx from &pdat.&EM_REPORT_KEY_WHERECLAUSE;
24829     +        %end;
24830     +        %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do;
24831     +            select count(distinct &EM_REPORT_KEY_LATTICEY) into :numy from &pdat.&EM_REPORT_KEY_WHERECLAUSE;
24832     +        %end;
24833     +    quit;
24835     +    %let numrows=&numy;
24836     +    %let numcols=&numx;
24837     +    %let totalnum = %eval(&numx * &numy);
24839     +    %if &totalnum gt 6 %then %do;
24840     +        %if &totalnum le 18 %then %let numcols=3;
24841     +        %else %if &totalnum le 24 %then %let numcols=4;
24842     +        %else %if &totalnum le 30 %then %let numcols=5;
24843     +        %else %let numcols=3;
24844     +    %end;
24846     +    %if &totalnum gt 6 %then %do;
24847     +        %let numrows  = %sysevalf(&totalnum / &numcols);
24848     +        %let numrows  = %sysfunc(ceil(&numrows));
24849     +        %if &numrows ge 6 %then %let numrows=6;
24850     +    %end;
24852     +    %if (("&EM_REPORT_KEY_LATTICETYPE" eq "BAR") OR ("&EM_REPORT_KEY_LATTICETYPE" eq "HISTOGRAM"))
24853     +    %then %do;
24855     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24856     +        %if "&em_report_key_whereclause" ne "" %then %do ;
24857     +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, &em_report_key_where))";
24858     +        %end;
24860     +        proc sgpanel data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
24861     +            panelby
24862     +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
24863     +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
24864     +              /
24865     +                %if &totalnum ge 5 %then %do; columns=&numcols rows=&numrows /*novarname*/ %end;
24866     +                uniscale=column
24867     +            ;
24868     +            /* originally using frequency so keeping this here; */
24869     +            /* eventrate plot in binning sets y var as response so added y as well */
24871     +            %if "&EM_REPORT_KEY_LATTICETYPE" eq "HISTOGRAM" %then %do;
24872     +                %if "&EM_REPORT_KEY_FREQUENCY" eq "" %then %do;
24873     +                    histogram &EM_REPORT_KEY_X;
24874     +                %end;
24875     +                %else %do;
24876     +                    histogram &EM_REPORT_KEY_X / freq = &EM_REPORT_KEY_FREQUENCY;
24877     +                %end;
24878     +            %end;
24879     +            %else %do;
24880     +                %if "%upcase(&EM_REPORT_KEY_ORIENTATION)" eq "HORIZONTAL"
24881     +                %then %do; hbar %end;
24882     +                %else %do; vbar %end;
24883     +                    &EM_REPORT_KEY_X /
24884     +                    %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do; response=&EM_REPORT_KEY_FREQUENCY %end;
24885     +                    %if "&EM_REPORT_KEY_Y" ne ""         %then %do; response=&EM_REPORT_KEY_Y         %end;
24886     +                    %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %do; group=&EM_REPORT_KEY_SUBGROUP     %end;
24887     +                        %else %if "&EM_REPORT_KEY_GROUP" ne ""  %then %do; group=&EM_REPORT_KEY_GROUP %end;
24888     +                ;
24889     +            %end;
24890     +            colaxis grid fitpolicy=rotatethin /* discreteorder=data */;
24891     +            rowaxis grid ;
24892     +        run; quit;
24894     +        /* special treatments */
24895     +        %if "&EM_REPORT_KEY_DESCRIPTION" eq "EVENTRATE" %then %do ;
24896     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
24898     +                %let wtevexist=0;
24899     +                %let dsid = %sysfunc(open(work.pdl));
24900     +                %if &dsid %then %do;
24901     +                    %let wtevexist = %sysfunc(VARNUM(&dsid, wtev));
24902     +                %end;
24903     +                %if &dsid %then %let dsid = %sysfunc(close(&dsid));
24905     +                %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
24907     +                proc print data=&pdat.&EM_REPORT_KEY_WHERECLAUSE noobs label contents='';
24908     +                    var display_var _label_ _group_ role eventRate
24909     +                        %if &wtevexist ne 0 %then %do; wtev %end;;
24910     +                run;
24911     +            %end;
24912     +        %end;
24913     +    %end;
24914     +    %else %if (("&EM_REPORT_KEY_LATTICETYPE" eq "LINEPLOT") or ("&EM_REPORT_KEY_LATTICETYPE" eq "PLOT")) %then %do;
24916     +        proc sort data=&pdat.&EM_REPORT_KEY_WHERECLAUSE out=_tmp_pdl;
24917     +            by
24918     +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
24919     +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
24920     +            ;
24921     +        run;
24923     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24924     +        %if "&em_report_key_whereclause" ne "" %then %do ;
24925     +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, &em_report_key_where))";
24926     +        %end;
24928     +        proc sgpanel data=_tmp_pdl;
24929     +            panelby
24930     +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
24931     +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
24932     +              /
24933     +                %if &totalnum ge 5 %then %do; columns=&numcols rows=&numrows /*novarname*/ %end;
24934     +                uniscale=column
24935     +            ;
24936     +            %let i = 1;
24937     +            %do %while ("%scan(&EM_REPORT_KEY_Y,&i,' ')" ne "");
24938     +                %let thisY=%scan(&EM_REPORT_KEY_Y,&i,' ');
24939     +                %let i = %eval(&i+1);
24940     +                series x=&EM_REPORT_KEY_X y=&thisY
24941     +                    %if "&EM_REPORT_KEY_GROUP" ne "" %then %do; / group=&EM_REPORT_KEY_GROUP %end;
24942     +                ;
24943     +            %end;
24944     +            %if "&EM_REPORT_KEY_Y2" ne "" %then %do;
24945     +                series x=&EM_REPORT_KEY_X y=&EM_REPORT_KEY_Y2
24946     +                    %if "&EM_REPORT_KEY_GROUP" ne "" %then %do; / group=&EM_REPORT_KEY_GROUP %end;
24947     +                ;
24948     +            %end;
24949     +            %if "&EM_REPORT_KEY_YREF" ne "" %then %do; refline &EM_REPORT_KEY_YREF / axis = y; %end;
24950     +            %if "&EM_REPORT_KEY_XREF" ne "" %then %do; refline &EM_REPORT_KEY_XREF / axis = x; %end;
24951     +            colaxis grid fitpolicy=rotatethin;
24952     +            rowaxis grid;
24953     +        run; quit;
24954     +    %end;
24956     +%mend EM_REPORT_LATTICE;
24958     +/*---------------------------------------------------------*/
24959     + * EM_REPORT_SCOREDIST2 ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_SCOREDIST2 ;
24960     + *     Score Distribution 2;
MPRINT(EM_REPORT_CREATE):   * Score Distribution 2;
24961     +/*---------------------------------------------------------*/
24963     +%macro EM_REPORT_SCOREDIST2() ;
24965     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24967     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24969     +    proc sgpanel data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
24970     +        panelby
24971     +            %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
24972     +            %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
24973     +          / rows=1 uniscale=row layout=lattice
24974     +        ;
24975     +        vbar &EM_REPORT_KEY_X
24976     +            %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do; / response=count %end;
24977     +        ;
24978     +        colaxis fitpolicy=rotatethin;
24979     +    run; quit;
24981     +%mend EM_REPORT_SCOREDIST2;
24983     +/*---------------------------------------------------------*/
24984     + * EM_REPORT_SCOREDIST ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_SCOREDIST ;
24985     + *     Score Distribution ;
MPRINT(EM_REPORT_CREATE):   * Score Distribution ;
24986     +/*---------------------------------------------------------*/
24988     +%macro EM_REPORT_SG4SCOREDIST(y1=,y2=,str1=,str2=,rowstr=);
24989     +    proc sgpanel data=_tmpdat;
24990     +        panelby datarole;
24991     +        %if "&y1" ne " " %then %do;
24992     +            series x=score y=&y1 / legendlabel="%sysfunc(sasmsg(sashelp.dmine, &str1, NOQUOTE))";
24993     +        %end;
24994     +        %if "&y2" ne " " %then %do;
24995     +            series x=score y=&y2 / legendlabel="%sysfunc(sasmsg(sashelp.dmine, &str2, NOQUOTE))";
24996     +        %end;
24997     +        rowaxis grid label="%sysfunc(sasmsg(sashelp.dmine, &rowstr, NOQUOTE))";
24998     +        colaxis grid;
24999     +    run; quit;
25000     +%mend;
25002     +%macro EM_REPORT_SCOREDIST(data=) ;
25004     +    data _tmp_scoredist;
25005     +        set &EM_REPORT_LIB..&EM_REPORT_KEY_FILE.&EM_REPORT_KEY_WHERECLAUSE;
25006     +    run;
25008     +    proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum name) noprint;
25009     +    run;
25011     +    /*--------------------------------------------------------------------------*/
25013     +    %let var_targetMean = ;
25014     +    %let var_targetMax = ;
25015     +    %let var_targetMin = ;
25016     +    %let is_cat = 0;
25017     +    %let modeldescnum = 0;
25018     +    %let loopnum = 0;
25019     +    %let has_where = 0;
25020     +    %let has_target = 0;
25022     +    data _null_;
25023     +        set _tmp_content;
25024     +        name=strip(upcase(name));
25025     +        if name eq 'MODELDESCRIPTION'   then call symput('modeldescnum',  put(varnum,6.));
25026     +        if name eq '_LOOP_'             then call symput('loopnum',       put(varnum,6.));
25027     +        if name eq '_WHERE_'            then call symput('has_where',     '1');
25028     +        if name eq '_TARGET_'           then call symput('has_target',    '1');
25029     +        if name eq '_TARGETMEAN_'       then call symput('var_targetMean',name);
25030     +        if name eq '_TARGETMAX_'        then call symput('var_targetMax', name);
25031     +        if name eq '_TARGETMIN_'        then call symput('var_targetMin', name);
25032     +        if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat',        '1');
25033     +    run;
25035     +    /*--------------------------------------------------------------------------*/
25037     +    %if (&modeldescnum eq 0) and (&loopnum eq 0) %then %do;
25038     +        %let modelvar = ;
25039     +        %let nmodels = 1;
25040     +        %let modeldat1 = _tmp_scoredist;
25041     +    %end;
25042     +    %else %do;
25044     +        %if &loopnum gt 0
25045     +            %then %do;
25046     +                proc sql noprint;
25047     +                    select count(*) into :nn1 from _tmp_scoredist;
25048     +                    select count(*) into :nn2 from _tmp_scoredist where _where_ is missing;
25049     +                quit;
25050     +                %if &nn1 ne &nn2
25051     +                    %then %let modelvar = _where_;
25052     +                    %else %let modelvar = target;
25053     +            %end;
25054     +            %else %let modelvar = model;
25056     +        %let nmodels = 1;
25057     +        proc sql noprint;
25058     +            select count(distinct &modelvar) into :nmodels from _tmp_scoredist;
25059     +            select distinct &modelvar into :cond1-:cond%left(&nmodels) from _tmp_scoredist;
25060     +        quit;
25062     +        %do d = 1 %to &nmodels;
25063     +            %let modeldat&d = %str(_tmp_scoredist(where=(&modelvar eq "&&&cond&d")));
25064     +        %end;
25065     +    %end;
25067     +    /* --- loop through all models or _where_ for plots---*/
25069     +    %do d = 1 %to &nmodels;
25071     +        proc sort data=&&&modeldat&d out=_tmpdat;
25072     +            by &modelvar target datarole;
25073     +        run;
25075     +        title1 "&EM_REPORT_TTL1";
25076     +        title2 "&EM_REPORT_TTL2";
25077     +        title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistsingle_title, NOQUOTE, &em_report_key_where))";
25078     +        %if &nmodels gt 1 %then %do; title4 "&&&cond&d"; %end;
25080     +        %if &is_cat eq 1 %then %do;
25081     +            %EM_REPORT_SG4SCOREDIST(y1=percentageofevents, y2=percentageofnonevents,
25082     +                str1=rpt_events_vlabel, str2=rpt_nonevents_vlabel, rowstr=assmt_percent_vlabel);
25083     +            %EM_REPORT_SG4SCOREDIST(y1=cumulativepercentageofevents, y2=cumulativepercentageofnonevents,
25084     +                str1=rpt_events_vlabel, str2=rpt_nonevents_vlabel, rowstr=assmt_percentC_vlabel);
25085     +        %end;
25086     +        %else %do;
25087     +            %EM_REPORT_SG4SCOREDIST(y1=_meanP_, y2=&var_targetMean,
25088     +                str1=rpt_predicted_vlabel, str2=rpt_target_vlabel, rowstr=rpt_mean_vlabel);
25089     +            %EM_REPORT_SG4SCOREDIST(y1=_meanP_, y2=&var_targetMax,
25090     +                str1=rpt_predicted_vlabel, str2=rpt_target_vlabel, rowstr=rpt_maximum_vlabel);
25091     +        %end;
25093     +        proc delete data=_tmpdat; run;
25094     +        title1; title2; title3; title4;
25095     +    %end;
25097     +    /* --- loop through all models or _where_ for prints ---*/
25099     +    %do d = 1 %to &nmodels;
25101     +        proc sort data=&&&modeldat&d out=_tmpdat;
25102     +            by &modelvar target datarole;
25103     +        run;
25105     +        title1; title2; title3;
25106     +        %EM_REPORT_TABLETEXT(subtitle=rpt_scoredistnone_title);
25108     +        %if &is_cat eq 1 %then %do;
25109     +            proc print data=_tmpdat noobs label contents='';
25110     +                by &modelvar target datarole;
25111     +                var p_label numberofevents percentageofevents percentageofnonevents
25112     +                    cumulativepercentageofevents cumulativepercentageofnonevents ;
25113     +            run;
25114     +        %end;
25115     +        %else %do;
25116     +            proc print data=_tmpdat noobs label contents='';
25117     +                by &modelvar target datarole;
25118     +                var p_label _meanP_ _maxP_ _minP_ &var_targetMean &var_targetMax &var_targetMin;
25119     +            run;
25120     +        %end;
25121     +    %end;
25123     +%mend EM_REPORT_SCOREDIST;
25126     +%macro EM_REPORT_MULTIPLY2PLOT;
25128     +    data _tmp_dat;
25129     +        set &EM_REPORT_LIB..&EM_REPORT_KEY_FILE.&EM_REPORT_KEY_WHERECLAUSE;
25130     +    run;
25132     +    proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
25133     +    run;
25135     +    %let has_datarole = 0;
25136     +    data _null_;
25137     +        set _tmp_content;
25138     +        name=strip(upcase(name));
25139     +        if name eq "DATEROLE" then call symput('has_datarole','1');
25140     +    run;
25142     +    %if &has_datarole eq 1 %then %do;
25143     +        proc sql noprint;
25144     +            select count(distinct datarole) into :ndataroles from _tmp_dat;
25145     +            select distinct datarole into :drole1-:drole%left(&ndataroles) from _tmp_dat;
25146     +        quit;
25147     +    %end;
25148     +    %else %do;
25149     +        %let ndataroles = 1;
25150     +    %end;
25152     +    %if &ndataroles gt 1 %then %do;
25153     +        %do d=1 %to &ndataroles ;
25155     +            proc sort data=_tmp_dat(where=(datarole eq "&&&drole&d")) out=_tmp_empd;
25156     +                by datarole &EM_REPORT_KEY_X;
25157     +            run;
25159     +            title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25160     +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitlethree_title, NOQUOTE, &&&drole&d))";
25162     +            proc sgplot data=_tmp_empd;
25163     +                series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y   ;
25164     +                series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y2 / y2axis ;
25165     +                %if "&EM_REPORT_KEY_YREF"  ne "" %then %do; refline &EM_REPORT_KEY_YREF  / axis = y;  %end;
25166     +                %if "&EM_REPORT_KEY_Y2REF" ne "" %then %do; refline &EM_REPORT_KEY_Y2REF / axis = y2; %end;
25167     +            run; quit;
25168     +        %end;
25169     +    %end;
25170     +    %else %do;
25171     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25172     +        proc sgplot data=_tmp_dat;
25173     +            series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y   ;
25174     +            series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y2 / y2axis ;
25175     +            %if "&EM_REPORT_KEY_YREF"  ne "" %then %do; refline &EM_REPORT_KEY_YREF  / axis = y;  %end;
25176     +            %if "&EM_REPORT_KEY_Y2REF" ne "" %then %do; refline &EM_REPORT_KEY_Y2REF / axis = y2; %end;
25177     +        run; quit;
25178     +    %end;
25180     +    title1; title2; title3; title4;
25182     +%mend EM_REPORT_MULTIPLY2PLOT;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_printmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_PRINTMACROS.SOURCE.
25183     +/*---------------------------------------------------------*/
25184     + * EM_REPORT_NODE_TEXT ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_NODE_TEXT ;
25185     + *      return the text label for a given node ;
MPRINT(EM_REPORT_CREATE):   * return the text label for a given node ;
25186     +/*---------------------------------------------------------*/
25188     +%macro EM_REPORT_NODE_TEXT(nodeid);
25189     +    %global EM_REPORT_NODE_TEXT ;
25190     +    %if not %sysfunc(exist(&em_report_lib..EM_NODEID)) %then %goto skip ;
25191     +    data _null_ ;
25192     +        set &em_report_lib..EM_NODEID ;
25193     +        where upcase(strip(nodeid)) eq upcase(strip("&nodeid")) ;
25194     +        call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
25195     +    run;
25196     +    %skip:
25197     +%mend EM_REPORT_NODE_TEXT;
25199     +/*---------------------------------------------------------*/
25200     + * EM_REPORT_TABLETEXT;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_TABLETEXT;
25201     + *      print the ods texts in front of a table;
MPRINT(EM_REPORT_CREATE):   * print the ods texts in front of a table;
25202     +/*---------------------------------------------------------*/
25204     +%macro EM_REPORT_TABLETEXT(subtitle=);
25205     +%if %substr(%upcase(%sysfunc(strip(&subtitle))), 1, 19) eq VIEWS_DESCRIPTIONS_ %then %do;
25206     +    ods &EM_REPORT_FORMAT text=" ";
25207     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
25208     +    %let thisDVD = dmine;
25210     +    %let msg0 = views_descriptions_&em_report_key_description;
25211     +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
25212     +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
25213     +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
25214     +    %end;
25215     +    %else %do;
25216     +        %let msg2=views_descriptions_&em_report_key_description;
25217     +    %end;
25219     +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&msg0))"
25220     +    %then %do;
25221     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE))";
25222     +    %end;
25223     +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&msg0))"
25224     +    %then %do;
25225     +        %if %sysfunc(exist(sashelp.tmine)) %then %do;
25226     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE))";
25227     +            %let thisDVD = tmine;
25228     +        %end;
25229     +    %end;
25230     +    %else %do;
25231     +        ods &EM_REPORT_FORMAT text="&em_report_key_description";
25232     +    %end;
25234     +    ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
25235     +%end;
25236     +%else %do;
25237     +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, &subtitle, NOQUOTE));
25238     +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
25239     +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, &subtitle, NOQUOTE));
25240     +    %end;
25241     +    %else %do;
25242     +        %let msg2=%sysfunc(sasmsg(sashelp.dmine, &subtitle, NOQUOTE));
25243     +    %end;
25245     +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&subtitle))"
25246     +    %then %do;
25247     +        %let thisDVD = dmine;
25248     +    %end;
25249     +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&subtitle))"
25250     +    %then %do;
25251     +        %let thisDVD = tmine;
25252     +    %end;
25253     +    %else %do;
25254     +        %let thisDVD = dmine;
25255     +    %end;
25257     +    ods &EM_REPORT_FORMAT text=" ";
25258     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
25259     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
25260     +    ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
25261     +%end;
25262     +%mend EM_REPORT_TABLETEXT;
25264     +/*---------------------------------------------------------*/
25265     + *  Print comparison of model fit stats;
MPRINT(EM_REPORT_CREATE):   * Print comparison of model fit stats;
25266     + *      used by EM_REPORT_DATA();
MPRINT(EM_REPORT_CREATE):   * used by EM_REPORT_DATA();
25267     +/*---------------------------------------------------------*/
25269     +%macro EM_REPORT_COMPAREFIT(data=) ;
25270     +    proc sort data=&data out=sd(drop=stat) ;
25271     +        by target datarole ;
25272     +    run ;
25273     +    %EM_REPORT_TABLETEXT(subtitle=rpt_modelfitcomparison_title);
25274     +    proc print data=sd noobs label contents='' ;
25275     +        by target datarole ;
25276     +        label label="%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, NOQUOTE))";
25277     +    run;
25278     +%mend EM_REPORT_COMPAREFIT;
25280     +/*---------------------------------------------------------*/
25281     + * EM_REPORT_CLASSIFYTABT;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_CLASSIFYTABT;
25282     + *      print the table in a lattice plot of classification charts;
MPRINT(EM_REPORT_CREATE):   * print the table in a lattice plot of classification charts;
25283     +/*---------------------------------------------------------*/
25285     +%macro EM_REPORT_CLASSIFYTAB();
25287     +    %if "&em_report_key_whereclause" eq "" %then %do ;
25288     +        %EM_REPORT_TABLETEXT(subtitle=rpt_eventclassification_title);
25289     +    %end; %else %do;
25290     +        ods &EM_REPORT_FORMAT text=" ";
25291     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
25292     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_eventclasswhere_title, NOQUOTE, &em_report_key_where))";
25293     +        ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.dmine, rpt_eventclasswhere_title, NOQUOTE, &em_report_key_where))";
25294     +    %end;
25296     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
25298     +    proc print data=&pdat.&EM_REPORT_KEY_WHERECLAUSE noobs label contents='';
25299     +        label CORRECTTEXT= "%sysfunc(sasmsg(sashelp.dmine, rpt_state_vlabel, NOQUOTE))" percent="%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE))" ;
25300     +        by target datarole ;
25301     +        var from into correcttext count percent ;
25302     +    run;
25304     +%mend EM_REPORT_CLASSIFYTAB;
25306     +/*---------------------------------------------------------*/
25307     + * EM_REPORT_PROPERTIES;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_PROPERTIES;
25308     + *     print the properties table;
MPRINT(EM_REPORT_CREATE):   * print the properties table;
25309     +/*---------------------------------------------------------*/
25311     +%macro EM_REPORT_PROPERTIES(catalog=, dsname=work.properties);
25312     +    %if %sysfunc(cexist(&catalog)) %then %do;
25313     +        proc display cat=sashelp.emutil.prop2Ds.scl;
25314     +        run;
25315     +        %EM_REPORT_TABLETEXT(subtitle=rpt_props_title);
25316     +        %EM_REPORT_makeMultiColumn(dat=work.properties, vars=name value default, split=3);
25317     +        proc delete data=work.properties; run; quit;
25318     +    %end;
25319     +%mend EM_REPORT_PROPERTIES;
25321     +/*---------------------------------------------------------*/
25322     + * EM_REPORT_DATASOURCE ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_DATASOURCE ;
25323     + *     Report on data set starting a flow ;
MPRINT(EM_REPORT_CREATE):   * Report on data set starting a flow ;
25324     +/*--------------------------------------------------------*/
25325     +%macro EM_REPORT_DATASOURCE();
25327     +    proc transpose data=&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTMETADEFAULT out=temp_source;
25328     +        var _all_;
25329     +        format crdate NLDATM24.0 modate NLDATM24.0;
25330     +    run;
25332     +    /* prepare the data source table */
25333     +    data temp_source;
25334     +        set temp_source;
25335     +        rename col1 = value;
25336     +        col1 = right(col1);
25337     +        format label $64.;
25338     +        label
25339     +            col1  = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel, NOQUOTE))"
25340     +            label = "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel, NOQUOTE))"
25341     +        ;
25342     +        *** get the localized label column;
25343     +        _name_=upcase(_name_) ;
25344     +        if _name_ eq "MEMNAME"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_dataname_vlabel, NOQUOTE))" ;
25345     +        if _name_ eq "MEMTYPE"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datatype_vlabel, NOQUOTE))" ;
25346     +        if _name_ eq "MEMLABEL"        then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datalabel_vlabel, NOQUOTE))" ;
25347     +        if _name_ eq "TYPEMEM"         then delete ;
25348     +        if _name_ eq "ENGINE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_engine_vlabel, NOQUOTE))" ;
25349     +        if _name_ eq "CRDATE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_crdate_vlabel, NOQUOTE))" ;
25350     +        if _name_ eq "MODATE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datemode_vlabel, NOQUOTE))" ;
25351     +        if _name_ eq "NOBS"            then label="%sysfunc(sasmsg(sashelp.dmine, rpt_numrows_vlabel, NOQUOTE))" ;
25352     +        if _name_ eq "NCOLS"           then label="%sysfunc(sasmsg(sashelp.dmine, rpt_numcols_vlabel, NOQUOTE))" ;
25353     +        if _name_ eq "NBYTES"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datasize_vlabel, NOQUOTE))" ;
25354     +        if _name_ eq "ROLE"            then label="%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" ;
25355     +        if _name_ eq "USEEXTERNALDATA" then delete ;
25356     +        if _name_ eq "SAMPLINGRATE"    then delete ;
25357     +        if _name_ eq "SEGMENT"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_segment_vlabel, NOQUOTE))" ;
25358     +        if _name_ eq "LIBNAME"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datalib_vlabel, NOQUOTE))" ;
25359     +    run;
25361     +    %EM_REPORT_TABLETEXT(subtitle=rpt_dataattributes_title);
25362     +    %EM_REPORT_makeMultiColumn(dat=temp_source, vars=label value, split=3);
25363     +    proc delete data=temp_source; run; quit;
25365     +%mend EM_REPORT_DATASOURCE ;
25367     +*---------------------------------------------------------*/
25368     + *  a utility macro for split table into multiple columns ;
MPRINT(EM_REPORT_CREATE):   *---------------------------------------------------------*/ * a utility macro for split table into multiple columns ;
25369     +/*---------------------------------------------------------*/
25371     +%macro em_report_makeMultiColumn(dat=,vars=,split=2);
25373     +    %let vars = %upcase(&vars);
25375     +    /*--- check if the variable existing in the table ---*/
25376     +    proc contents data=&dat out=_tmpms_content(keep=name) noprint;
25377     +    run;
25379     +    %let k = 1;
25380     +    %let vars2 = ;
25381     +    %do %while("%scan(&vars,&k,' ')" ne "");
25382     +        data _null_;
25383     +            set _tmpms_content;
25384     +            name=strip(upcase(name));
25385     +            if name eq "%scan(&vars,&k,' ')"
25386     +                then call symput('vars2',catx(' ',symget('vars2'),name));
25387     +        run;
25388     +        %let k = %eval(&k+1);
25389     +    %end;
25391     +    /*--- count the valid variables ---*/
25392     +    %let k = 1;
25393     +    %do %while("%scan(&vars2,&k,' ')" ne "");
25394     +        %let var&k = %scan(&vars2,&k,' ');
25395     +        %let k = %eval(&k+1);
25396     +    %end;
25397     +    %let numvars = %eval(&k-1);
25399     +    /* --- split the table ---*/
25400     +    %let dsid = %sysfunc(open(&dat));
25401     +    %let numobs = %sysfunc(attrn(&dsid, NOBS));
25402     +    %let numrows = %sysfunc(round(%sysevalf(&numobs/&split)));
25403     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
25405     +    data %do d = 1 %to &split; _tmpms_dat&d.(rename=(%do k = 1 %to &numvars; &&&var&k=&&&var&k..&d %end;)) %end;;
25406     +        set &dat;
25407     +        keep &vars2 numrow;
25408     +        %do d = 1 %to &split;
25409     +            if _n_ gt %eval(&numrows*(&d-1)) and _n_ le %eval(&numrows*&d)
25410     +                then do; numrow = _n_-&numrows*(&d-1); output _tmpms_dat&d; end;
25411     +        %end;
25412     +    run;
25414     +    %do d = 1 %to &split;
25415     +        proc sort data=_tmpms_dat&d; by numrow; run;
25416     +    %end;
25418     +    /*--- merge and print ---*/
25419     +    data _tmpms_alldat;
25420     +        merge %do d = 1 %to &split; _tmpms_dat&d %end;;
25421     +        by numrow;
25422     +    run;
25424     +    proc print data=_tmpms_alldat noobs label contents='';
25425     +        var %do d = 1 %to &split; %do k = 1 %to &numvars; &&&var&k..&d %end; %end;;
25426     +    run;
25428     +    proc datasets lib=work nolist;
25429     +        delete _tmpms_:;
25430     +    run; quit;
25432     +%mend em_report_makeMultiColumn;
25434     +*---------------------------------------------------------*/
25435     + *  basic print a data table ;
MPRINT(EM_REPORT_CREATE):   *---------------------------------------------------------*/ * basic print a data table ;
25436     +/*---------------------------------------------------------*/
25437     +%macro EM_REPORT_DATA(maxobs=100);
25439     +%local pd desc ;
25440     +%let pd=&em_report_lib..&EM_REPORT_KEY_FILE ;
25441     +%IF not %SYSFUNC(EXIST(&pd)) %then %goto skip;
25443     +%if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
25445     +    %let desc= %upcase(&em_report_key_description) ;
25447     +    %if "&desc" eq "VARIABLES" %then %do;
25448     +        /*--- NOOP: handled globally by EM_REPORT_NODE --*/
25449     +        %goto skip ;
25450     +    %end;
25451     +    %else %if (("&desc" eq "ITEMS") OR ("&desc" eq "OUTAOV16") OR ("&desc" eq "OUTGINT") OR ("&desc" eq "OUTGVAR")
25452     +              OR ("&desc" eq "HISTWEIGHT") OR ("&desc" eq "EMSTAT")) %then %do;;
25453     +        %goto skip;
25454     +    %end;
25455     +    %if (("&desc" eq "SAMPLE") AND (%substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq GRFEXPL)) %then %do;;
25456     +        %goto skip;
25457     +    %end;
25458     +    %else %if "&desc" eq "MODELDIAGNOSTICS" %then %do;
25460     +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
25462     +        proc sort data=&pd(obs=&maxobs) out=_pd; by datarole; run;
25464     +        proc print data=_pd noobs label contents='';
25465     +            by datarole;
25466     +            var cutoff sensitivity_tpr specificity_tnr one_specificity_fpr precision_event
25467     +                precision_non_event ovl_class_rate precision_overall;
25468     +        run;
25470     +        proc delete data=_pd; run; quit;
25471     +    %end;
25472     +    %else
25473     +    %if "&desc" eq "REPORTFITSTAT" %then %do ;
25475     +        /*--- should switch to proc tabulate ---*/
25476     +        /*--- often there is only one value of the by variable 'target', but there may be several ---*/
25477     +        data pd; set &pd ;
25478     +            where train ne . ;
25479     +            label _NOBS_  = "%sysfunc(sasmsg(sashelp.dmine, stat_nobs_vlabel, NOQUOTE))"
25480     +                  _MISC_  = "%sysfunc(sasmsg(sashelp.dmine, stat_misc_vlabel, NOQUOTE))"
25481     +                  _MAX_   = "%sysfunc(sasmsg(sashelp.dmine, stat_max_vlabel, NOQUOTE))"
25482     +                  _SSE_   = "%sysfunc(sasmsg(sashelp.dmine, stat_sse_vlabel, NOQUOTE))"
25483     +                  _ASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_ase, NOQUOTE))"
25484     +                  _RASE_  = "%sysfunc(sasmsg(sashelp.dmine, stat_rase_vlabel, NOQUOTE))"
25485     +                  _DIV_   = "%sysfunc(sasmsg(sashelp.dmine, stat_div_vlabel, NOQUOTE))"
25486     +                  _DFT_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, NOQUOTE))"
25487     +                  _AIC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_aic, NOQUOTE))"
25488     +                  _MSE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_mse, NOQUOTE))"
25489     +                  _RMSE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rmse, NOQUOTE))"
25490     +                  _AVERR_ = "%sysfunc(sasmsg(sashelp.dmine, stat_averr_vlabel, NOQUOTE))"
25491     +                  _DFE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfe, NOQUOTE))"
25492     +                  _DFM_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfm, NOQUOTE))"
25493     +                  _ERR_   = "%sysfunc(sasmsg(sashelp.dmine, stat_err_vlabel, NOQUOTE))"
25494     +                  _FPE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_fpe, NOQUOTE))"
25495     +                  _NW_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_nw, NOQUOTE))"
25496     +                  _RFPE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rfpe, NOQUOTE))"
25497     +                  _SBC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sbc, NOQUOTE))"
25498     +            ;
25499     +            drop stat ;
25500     +        run;
25502     +        %EM_REPORT_TABLETEXT(subtitle=rpt_modelfitstat_title);
25504     +        proc sort data=pd;
25505     +            by target targetlabel;
25506     +        proc print data=pd noobs label contents='';
25507     +            label label="%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_statlabel, NOQUOTE))" ;
25508     +            by target targetlabel;
25509     +        run;
25511     +    %end ;
25512     +    %else %if "&desc" eq "CLUSMEAN" %then %do;
25514     +        /* determine number of segments to process */
25515     +        %let dsid = %sysfunc(open(&pd));
25516     +        %if &dsid %then %do;
25517     +            %let numseg = %sysfunc(ATTRN(&dsid, NOBS));
25518     +        %end;
25519     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
25521     +        /* transpose data to have a row per segment value */
25522     +        proc transpose data=&pd out=clusmean name=VARIABLE;
25523     +        run;
25525     +        data clusmean;
25526     +            set clusmean;
25527     +            label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
25528     +                %do i=1 %to &numseg;
25529     +                    %let colname = COL&i;
25530     +                    &colname = "%sysfunc(sasmsg(sashelp.dmine, rpt_segcolname_vlabel, NOQUOTE, &i))"
25531     +                %end;
25532     +            ;
25533     +            if missing(_LABEL_) then _LABEL_ = VARIABLE;
25534     +            if VARIABLE="_SEGMENT_" then delete;
25535     +            drop VARIABLE;
25536     +       run;
25538     +       %EM_REPORT_TABLETEXT(subtitle=rpt_meanstats_title);
25539     +       proc print data=clusmean noobs label contents='' ;  run ;
25541     +    %end;
25542     +    %else %if "&desc" eq "COMPAREFIT" %then %do;
25544     +        %EM_REPORT_COMPAREFIT(data=&pd);
25546     +    %end;
25547     +    %else %if "&desc" eq "FITSTAT" %then %do;
25549     +        /*** only print the fitstat table for MDLCOMP nodes ***/
25550     +        %if %substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq MDLCOMP %then %do;
25552     +            data _null_ ;
25553     +                set &pd (obs=2) end=eof ;
25554     +                if eof then do ;
25555     +                    call symput("_misc_"      , strip(put(_misc_,best.))) ;
25556     +                    call symput("_vmisc_"     , strip(put(_vmisc_,best.))) ;
25557     +                    call symput("_aur_"       , strip(put(_aur_, best.)));
25558     +                    call symput("_gini_"      , strip(put(_gini_, best.)));
25559     +                end;
25560     +            run;
25562     +            %let loopflag  = 0; %let validflag = 0;
25563     +            %let ASEflag   = 0; %let VASEflag  = 0; %let MISCflag  = 0; %let VMISCflag = 0;
25564     +            %let KSflag    = 0; %let VKSflag   = 0; %let AURflag   = 0; %let GINIflag  = 0;
25565     +            %let dsid = %sysfunc(open(&pd));
25566     +            %if &dsid %then %do;
25567     +                %let loopflag  = %sysfunc(VARNUM(&dsid, _LOOP_));
25568     +                %let validflag = %sysfunc(VARNUM(&dsid, VKS));
25569     +                %let ASEflag   = %sysfunc(VARNUM(&dsid, _ASE_));
25570     +                %let MISCflag  = %sysfunc(VARNUM(&dsid, _MISC_));
25571     +                %let KSflag    = %sysfunc(VARNUM(&dsid, KS));
25572     +                %let VASEflag  = %sysfunc(VARNUM(&dsid, _VASE_));
25573     +                %let VMISCflag = %sysfunc(VARNUM(&dsid, _VMISC_));
25574     +                %let VKSflag   = %sysfunc(VARNUM(&dsid, VKS));
25575     +                %let AURflag   = %sysfunc(VARNUM(&dsid, _AUR_));
25576     +                %let GINIflag  = %sysfunc(VARNUM(&dsid, _GINI_));
25577     +            %end;
25578     +            %if &dsid %then %let dsid=%sysfunc(close(&dsid));
25580     +            %EM_REPORT_TABLETEXT(subtitle=rpt_fittable_title);
25582     +            proc print data=&pd(obs=&maxobs) noobs label contents='';
25583     +                id
25584     +                    %if &loopflag ne 0 %then %do; _LOOP_ _WHERE_ %end;
25585     +                    USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_
25586     +                ;
25587     +                var
25588     +                %if &validflag ne 0 %then %do;
25589     +                    %if &ASEflag ne 0                         %then %do; _ASE_   %end;
25590     +                    %if &MISCflag ne 0  and "&_misc_" ne "."  %then %do; _MISC_  %end;
25591     +                    %if &KSflag ne 0                          %then %do; KS      %end;
25592     +                    %if &VASEflag ne 0                        %then %do; _VASE_  %end;
25593     +                    %if &VMISCflag ne 0 and "&_vmisc_" ne "." %then %do; _VMISC_ %end;
25594     +                    %if &VKSflag ne 0                         %then %do; VKS     %end;
25595     +                %end;
25596     +                %else %do;
25597     +                    %if &ASEflag ne 0                         %then %do; _ASE_   %end;
25598     +                    %if &MISCflag ne 0  and "&_misc_" ne "."  %then %do; _MISC_  %end;
25599     +                    %if &KSflag ne 0                          %then %do; KS      %end;
25600     +                    %if &AURflag ne 0   and "&_aur_" ne "."   %then %do; _AUR_  %end;
25601     +                    %if &GINIflag ne 0  and "&_gini_" ne "."  %then %do; _GINI_  %end;
25602     +                %end;
25603     +               ;
25604     +            run;
25605     +        %end;
25606     +        %else %do;
25607     +            %goto skip;
25608     +        %end;
25609     +    %end;
25610     +    %else %if "&desc" eq "RULETABLE" %then %do;
25612     +        %let dsid = %sysfunc(open(&pd));
25613     +        %let printflag = 0;
25614     +        %if &dsid %then %do;
25615     +          %let printflag = %sysfunc(VARNUM(&dsid, EXP_CONF));
25616     +          %let lhandflag = %sysfunc(VARNUM(&dsid, _lhand));
25617     +          %let rhandflag = %sysfunc(VARNUM(&dsid, _rhand));
25618     +        %end;
25619     +        %if &dsid %then %let dsid=%sysfunc(close(&dsid));
25621     +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
25623     +        proc print data=&pd(obs=&maxobs) noobs label contents='';
25624     +            %if &printflag ne 0 %then %do;
25625     +                var rule exp_conf support lift count
25626     +                %if &lhandflag ne 0 %then %do; _lhand %end;
25627     +                %if &rhandflag ne 0 %then %do; _rhand %end;
25628     +                ;
25629     +            %end;
25630     +            %else %do;
25631     +                var rule conf support count
25632     +                %if &lhandflag ne 0 %then %do; _lhand %end;
25633     +                %if &rhandflag ne 0 %then %do; _rhand %end;
25634     +                ;
25635     +            %end;
25636     +        run;
25637     +    %end;
25638     +    %else %do ;
25639     +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
25640     +        proc print data=&pd(obs=&maxobs) noobs label contents=''; run ;
25641     +    %end ;
25642     +    %end;
25643     +%skip:
25644     +%mend EM_REPORT_DATA;
25646     +/*---------------------------------------------------------*/
25647     + * EM_REPORT_VARS ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_VARS ;
25648     + * EM_REPORT_VARS_FLIP ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_VARS_FLIP ;
25649     + *     Report on variables used by the node ;
MPRINT(EM_REPORT_CREATE):   * Report on variables used by the node ;
25650     +/*---------------------------------------------------------*/
25651     +%macro EM_REPORT_VARS_FLIP(data=,out=);
25653     +    proc sort data=&data;
25654     +        by descending role level name;
25655     +    run;
25657     +    data &out(keep=role level count names ) ;
25658     +        length role level $16 ;
25659     +        set &data end=eof ;
25660     +        length xrole role $32 count 8 names $200 ;
25661     +        krole= strip(role) !!' * ' !! strip(level) ;
25662     +        retain xrole ; if _n_ eq 1 then xrole=krole ;
25663     +        retain names ; if _n_ eq 1 then names=name ;
25664     +        retain count 0 ending 0 ;
25665     +        count+1 ;
25666     +        role=scan(xrole,1,'*') ;
25667     +        level=scan(xrole,2,'*') ;
25668     +        if xrole ne krole then do ;
25669     +            count=count-1 ;
25670     +            put _n_ "OUTPUT;" ;
25671     +            output ;
25672     +            xrole=krole ; names= strip(name) ;
25673     +            count=1  ; ending=0 ;
25674     +        end ;
25675     +        else if _n_ gt 1 then do ;
25676     +            if length(names) + length(name) lt 196 then
25677     +                names= strip(names) !! ' '  !! strip(name) ;
25678     +            else
25679     +            if not ending then do ;
25680     +                names= strip(names) !! ' ...' ;
25681     +                ending=1 ;
25682     +            end;
25683     +        end;
25684     +        role=scan(xrole,1,'*') ;
25685     +        level=scan(xrole,2,'*') ;
25686     +        if eof and count gt 0 then output ;
25687     +        label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE)) "
25688     +              names = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
25689     +              level = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
25690     +              role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))";
25691     +    run ;
25692     +%mend EM_REPORT_VARS_FLIP ;
25694     +%macro EM_REPORT_VARS(varlist=0);
25696     +    %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE))
25697     +        %then %goto skip ;
25699     +    proc sql noprint;
25700     +        select count(*) into :tmp_numvar from &EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE;
25701     +    quit;
25703     +    %if &tmp_numvar lt 1 %then %goto skip;
25704     +/*--- 1. get minimal set of vars -----------------------------------------*/
25706     +    data _tmpvl_pdv(drop=use newuse count) ;
25707     +        set &EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE end=eof;
25708     +        length use newuse $1;
25709     +        label
25710     +            name   = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
25711     +            level  = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
25712     +            role   = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
25713     +            length = "%sysfunc(sasmsg(sashelp.dmine, meta_length_vlabel, NOQUOTE))"
25714     +        ;
25715     +        if use eq "" then use="Y";
25716     +        newuse=use;
25717     +        if use eq "D" then do;
25718     +            if role="REJECT" then newuse="N";
25719     +            else if role="INPUT"    then newuse="Y";
25720     +            else if role="CROSSID"  then newuse="Y";
25721     +            else if role="TEXT"     then newuse="Y";
25722     +        end ;
25723     +        if newuse eq "Y" then do ;
25724     +            count+1 ;
25725     +            output;
25726     +        end;
25727     +        if eof then call symput("varcount",put(count,6.)) ;
25728     +    run;
25730     +    proc sort data=_tmpvl_pdv; by name; run ;
25732     +/*--- 2. Summarize the variables -----------------------------------------*/
25734     +    %if &varlist ne 1 or &varcount gt &EM_REPORT_PRINT_MAXVARS %then %do;
25736     +        /* why not update pdv here? mxx */
25737     +        %EM_REPORT_VARS_FLIP(data=_tmpvl_pdv,out=_tmpvl_pds);
25738     +        %EM_REPORT_TABLETEXT(subtitle=rpt_varsummary_title);
25739     +        proc print data=_tmpvl_pds noobs label contents=''; run;
25741     +    %end;
25742     +    %else %do;
25744     +        %if %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._variableset)) %then %do;
25745     +            proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._variableset out=_tmpvl_vs;
25746     +                by name;
25747     +            data _tmpvl_pdv;
25748     +                update _tmpvl_pdv _tmpvl_vs;
25749     +                by name;
25750     +                label
25751     +                    type    = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel, NOQUOTE))"
25752     +                    format  = "%sysfunc(sasmsg(sashelp.dmine, meta_format_vlabel, NOQUOTE))"
25753     +                    creator = "%sysfunc(sasmsg(sashelp.dmine, meta_creator_vlabel, NOQUOTE))"
25754     +                    family  = "%sysfunc(sasmsg(sashelp.dmine, rpt_family_vlabel, NOQUOTE))"
25755     +                    label   = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))"
25756     +                ;
25757     +            run;
25758     +        %end;
25760     +        %EM_REPORT_TABLETEXT(subtitle=rpt_varlist_title);
25761     +        proc print data=_tmpvl_pdv noobs label contents='';
25762     +            var name label role level type length format creator;
25763     +        run;
25764     +    %end;
25766     +/*--- 3. for SVM node with EMSTAT table ----------------------------------*/
25768     +    %let emstat_exist = 0;
25769     +    %if %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._emstat)) %then %do;
25770     +        proc sql noprint;
25771     +            select count(*) into :emstat_use from &em_report_lib..&nodeid._emreport
25772     +                where key="DESCRIPTION" and value="EMSTAT" ;
25773     +        quit;
25774     +        %if &emstat_use gt 0 %then %let emstat_exist = 1;
25775     +    %end;
25777     +    %if &emstat_exist eq 1 %then %do;
25779     +        /* check newname column */
25780     +        %let newname_exist = 0;
25781     +        %let newobs = 0;
25782     +        %let tsdsid = %sysfunc(open(work.pdv));
25783     +        %if &tsdsid %then %do;
25784     +            %let tsobs = %sysfunc(ATTRN(&tsdsid, NOBS));
25785     +            %let newobs = %sysfunc(varnum(&tsdsid, NEWNAME));
25786     +            %if &tsobs > 0 AND  &newobs > 0 %then %let newname_exist =1;
25787     +        %end;
25788     +        %if &tsdsid %then %let tsdsid = %sysfunc(close(&tsdsid));
25790     +        %if &newname_exist eq 1 %then %do;
25791     +            data _tmpvl_pdv; set _tmpvl_pdv(drop=name); run;
25792     +            proc sort data=_tmpvl_pdv(rename=(newname=NAME)); by name; run;
25793     +        %end;
25794     +        %else %do;
25795     +            proc sort data=_tmpvl_pdv; by name; run;
25796     +        %end;
25798     +        proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._VARIABLESET out=_tmpvl_v; by name; run;
25800     +        data _tmpvl_pdv ;
25801     +            update _tmpvl_pdv _tmpvl_v;
25802     +            by name;
25803     +            label label="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
25804     +        run;
25806     +        proc sort data=_tmpvl_pdv; by name; run;
25807     +        proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._EMSTAT out=_tmpvl_tempsort; by name; run;
25809     +        data _tmpvl_pdv;
25810     +            merge _tmpvl_pdv(keep=name label role level type length format creator family) _tmpvl_tempsort;
25811     +            by name;
25812     +            label type    = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel, NOQUOTE))"
25813     +                  format  = "%sysfunc(sasmsg(sashelp.dmine, meta_format_vlabel, NOQUOTE))"
25814     +                  creator = "%sysfunc(sasmsg(sashelp.dmine, meta_creator_vlabel, NOQUOTE))"
25815     +                  family  = "%sysfunc(sasmsg(sashelp.dmine, rpt_family_vlabel, NOQUOTE))";
25816     +        run;
25818     +        proc sort data=_tmpvl_pdv; by descending role name; run;
25820     +        %EM_REPORT_TABLETEXT(subtitle=rpt_variable_interval_title);
25821     +        proc print data=_tmpvl_pdv(where=(LEVEL="INTERVAL")) noobs label contents='';
25822     +            var name label role level type length format creator pctmiss min max mean std skewness kurtosis;
25823     +        run;
25825     +        %EM_REPORT_TABLETEXT(subtitle=rpt_variable_class_title);
25826     +        proc print data=_tmpvl_pdv(where=(LEVEL^="INTERVAL")) noobs label contents='';
25827     +            var name label role level type length format creator nlevel pctmiss;
25828     +        run;
25829     +    %end;
25831     +/*--- 4. now get vars created by this node -------------------------------*/
25833     +    %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._CMETA_TRAIN))
25834     +        %then %goto skip;
25836     +    %let pdvxnum = 0;
25838     +    data _tmpvl_pdvx;
25839     +        set &EM_REPORT_LIB..&EM_REPORT_NODEID._CMETA_TRAIN end=eof ;
25840     +        where upcase(creator) eq "&EM_REPORT_NODEID" ;
25841     +        if eof then call symput('pdvxnum',put(_N_,6.));
25842     +        label
25843     +            name   = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
25844     +            label  = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))"
25845     +            role   = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
25846     +            level  = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
25847     +            type   = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel, NOQUOTE))"
25848     +            length = "%sysfunc(sasmsg(sashelp.dmine, meta_length_vlabel, NOQUOTE))";
25849     +    run;
25851     +    %if pdvxnum gt 0 %then %do;
25852     +        %if &varlist ne 1 or &pdvxnum gt &EM_REPORT_PRINT_MAXVARS %then %do ;
25854     +            %EM_REPORT_VARS_FLIP(data=_tmpvl_pdvx,out=_tmpvl_pdvxp) ;
25856     +            proc sql noprint;
25857     +                select count(*) into :nobs from _tmpvl_pdvxp;
25858     +            quit;
25860     +            %if &nobs > 0 %then %do;
25861     +                %EM_REPORT_TABLETEXT(subtitle=rpt_createvarsummary_title);
25862     +                proc print data=_tmpvl_pdvxp noobs label contents=''; run ;
25863     +            %end;
25864     +        %end;
25865     +        %else %do ;
25867     +            %EM_REPORT_TABLETEXT(subtitle=rpt_createvarslist_title);
25868     +            proc print data=_tmpvl_pdvx noobs label contents='';
25869     +                var name label role type length ;
25870     +            run;
25871     +        %end;
25872     +    %end;
25874     +/*------------------------------------------------------------------------*/
25876     +    proc datasets lib=work nolist;
25877     +        delete _tmpvl_:;
25878     +    run; quit;
25879     +    %skip:
25881     +%mend EM_REPORT_VARS;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_rpmmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_RPMMACROS.SOURCE.
25883     +%macro EM_REPORT_validSummaryPath(startNodeID =);
25884     +/*--- purpose: detect whether a flow is valid as a summary path ---*/
25886     +    %global EM_REPORT_NODES EM_REPORT_LIB RPM_REPORT_MODELNODE  RPM_REPORT_SCORENODE RPM_REPORT_MDLCOMP RPM_REPORT_VALIDSUMMARY;
25887     +    %local prednode em_report_mdlOutfit;
25888     +    %let RPM_REPORT_MODELNODE    = ;
25889     +    %let RPM_REPORT_SCORENODE    = ;
25890     +    %let RPM_REPORT_MDLCOMP      = ;
25891     +    %let RPM_REPORT_VALIDSUMMARY = 0;
25893     +    %if &EM_REPORT_NODES eq SUMMARY %then %do;
25895     +        %let predNode=;
25896     +        data _null_ ;
25897     +            set &EM_REPORT_LIB..em_dgraph(where=(to="&startNodeID"));
25898     +            call symput('predNode', strip(from));
25899     +        run;
25900     +        %let predNode = &predNode;
25902     +        /* if predecessor [to Reporter node] is MDLCOMP, RPM report is valid                           [MDLCOMP->Reporter]*/
25903     +        /* or if predecessor is SCORE and MODEL node is fed into score, RPM report is valid            [Score->Model->Reporter]*/
25904     +        /* or if MDLCOMP to SCORE to REPORTER, RPM report is valid, commented xxm                      [MDLCOMP->Score->Reporter]*/
25905     +        /* or if predecessor is MODEL node, RPM report is valid                                        ["model"->Reporter]*/
25906     +        /* or MDLCOMP->SCORE->CODEXPT->Reporter is valid*/
25908     +        %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
25909     +            %let RPM_REPORT_MDLCOMP = &predNode;
25910     +            %let RPM_REPORT_VALIDSUMMARY=1;
25911     +            data _null_;
25912     +                set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
25913     +                call symput('RPM_REPORT_MODELNODE',strip(model));
25914     +            run;
25915     +        %end;
25916     +        %else %if %upcase(%substr(&prednode,1,5)) eq SCORE %then %do;
25917     +            %let RPM_REPORT_SCORENODE = &prednode;
25918     +            %let prednode = ;
25919     +            data _null_ ;
25920     +                set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCORENODE"));
25921     +                call symput('predNode', strip(from));
25922     +            run;
25923     +            %let predNode = &predNode;
25925     +            %if &prednode ne %then %do;
25926     +                %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
25927     +                    %let RPM_REPORT_MDLCOMP = &prednode;
25928     +                    %let RPM_REPORT_VALIDSUMMARY=1;
25929     +                    data _null_;
25930     +                        set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
25931     +                        call symput('RPM_REPORT_MODELNODE',strip(model));
25932     +                    run;
25933     +                %end;
25934     +                %else %do;
25935     +                    %let em_report_mdlOutfit = &EM_REPORT_LIB..&prednode._emoutfit;
25936     +                    %if %sysfunc(exist(&em_report_mdlOutfit))
25937     +                    %then %do;
25938     +                        %let RPM_REPORT_MODELNODE = &prednode;
25939     +                        %let RPM_REPORT_VALIDSUMMARY=1;
25940     +                    %end;
25941     +                %end;
25942     +            %end;
25943     +        %end;
25944     +        %else %if %upcase(%substr(&prednode,1,7)) eq CODEXPT %then %do;
25945     +            %let RPM_REPORT_SCOREXPTNODE = &prednode;
25946     +            %let prednode = ;
25947     +            data _null_ ;
25948     +                set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCOREXPTNODE"));
25949     +                call symput('predNode', strip(from));
25950     +            run;
25951     +/*            %let predNode = &predNode;*/
25953     +            %if &prednode ne %then %do;
25954     +                %if %upcase(%substr(&prednode,1,5)) eq SCORE %then %do;
25955     +                    %let RPM_REPORT_SCORENODE = &prednode;
25956     +                    %let prednode = ;
25957     +                    data _null_ ;
25958     +                        set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCORENODE"));
25959     +                        call symput('predNode', strip(from));
25960     +                    run;
25961     +/*                    %let predNode = &predNode; */
25963     +                    %if &prednode ne %then %do;
25964     +                        %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
25965     +                            %let RPM_REPORT_MDLCOMP = &prednode;
25966     +                            %let RPM_REPORT_VALIDSUMMARY=1;
25967     +                            data _null_;
25968     +                                set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
25969     +                                call symput('RPM_REPORT_MODELNODE',strip(model));
25970     +                            run;
25971     +                        %end;
25972     +                    %end;
25973     +                %end;
25974     +            %end;
25975     +        %end;
25976     +        %else %do;
25977     +            %let em_report_mdlOutfit = &em_lib..&prednode._emoutfit;
25978     +            %if %sysfunc(exist(&em_report_mdlOutfit))
25979     +            %then %do;
25980     +                %let RPM_REPORT_MODELNODE = &prednode;
25981     +                %let RPM_REPORT_VALIDSUMMARY=1;
25982     +            %end;
25983     +        %end;
25984     +    %end;
25986     +    %let RPM_REPORT_MODELNODE = &RPM_REPORT_MODELNODE;
25987     +    %let RPM_REPORT_SCORENODE = &RPM_REPORT_SCORENODE;
25988     +    %let RPM_REPORT_MDLCOMP   = &RPM_REPORT_MDLCOMP;
25990     +%mend EM_REPORT_validSummaryPath;
25992     +%macro em_report_summary(runHP=0);
25994     +%global EM_REPORT_SUMMARY_TARGET RPM_REPORT_MDLCOMP RPM_REPORT_MODELNODE;
25995     +%local  IDSNode freqvar;
25997     +%if not %sysfunc(exist(emreportpath)) %then %goto skip ;
25999     +/*--- RPM-1. Identify the modeling node -------------------------------------*/
26001     +%let em_report_modelID = ;
26002     +%let em_report_modeldesc= ;
26004     +%if &RPM_REPORT_MDLCOMP ne %then %do;
26005     +    %let em_report_mdloutfit = &em_lib..&RPM_REPORT_MDLCOMP._emoutfit;
26006     +    %if %sysfunc(exist(&em_report_mdloutfit)) %then %do;
26007     +        data _null_;
26008     +           set &em_lib..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
26009     +           call symput('em_report_modelID',   strip(model));
26010     +           call symput('em_report_modeldesc', strip(modeldescription));
26011     +        run;
26012     +    %end;
26013     +%end;
26014     +%else %if &RPM_REPORT_MODELNODE ne %then %do;
26015     +    %let em_report_mdloutfit = &em_lib..&RPM_REPORT_MODELNODE._emoutfit;
26016     +    %if %sysfunc(exist(&em_report_mdloutfit)) %then %do;
26017     +        %let em_report_modelID   = &RPM_REPORT_MODELNODE;
26018     +        %let em_report_modeldesc = ;
26019     +    %end;
26020     +%end;
26022     +/*--- RPM-2. Retrieve necessary information for the model--------------------*/
26024     +%if &em_report_modelId ne %then %do;
26026     +    /* RPM-2.1 save model information */
26028     +    %EM_GETNAME(key=MODELINFO, type=DATA);
26029     +    data &EM_USER_MODELINFO;
26030     +        format modelID $100. modeldesc $200.;
26031     +        modelid = "&em_report_modelID";
26032     +        modeldesc="&em_report_modeldesc";
26033     +    run;
26035     +    /* RPM-2.2 retrieve warning file if it exists */
26037     +    %let temp = %nrbquote(%sysfunc(PATHNAME(&em_report_lib)));
26038     +    %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
26039     +    %let file = EMWARN.sas;
26040     +    %let warnfile = %nrbquote(&path&em_dsep&em_report_modelId&em_dsep&file);
26042     +    %if "&warnfile" ne "" %then %do;
26043     +        filename x "&warnfile" encoding='utf-8' NOBOM;
26044     +        data _null_;
26045     +            length string $1000;
26046     +            file PRINT;
26047     +            fid = fopen('x');
26048     +            do while (^fread(fid));
26049     +                rc= fget(fid, string, frlen(fid));
26050     +                string = tranwrd(string, "'", "''");
26051     +                if string eq '' then string = ' ';
26052     +                put string;
26053     +            end;
26054     +            fid = fclose(fid);
26055     +            put " ";
26056     +        run;
26057     +        filename x;
26058     +    %end;
26060     +    /* RPM-2.3 retrieve ID nodeid */
26062     +    data _null_;
26063     +        set emreportpath(where=(substr(upcase(strip(nodeid)),1,3) eq "IDS"));
26064     +        call symput("idsnode",strip(nodeid)) ;
26065     +    run;
26067     +        data _null_;
26068     +        set emreportpath(where=(substr(upcase(strip(nodeid)),1,7) eq "FIMPORT"));
26069     +        call symput("idsnode",strip(nodeid)) ;
26070     +        run;
26072     +%let fimnode=;
26073     +%if "%substr(%upcase(%sysfunc(strip(&idsnode))),1,7)" eq "FIMPORT" %then %do;
26074     +    %let idscmeta = &em_lib..&idsnode._emtrainvariable;
26075     +    %let idstmeta = &em_lib..&idsnode._emtmetadefault;
26076     +    %let fimnode = &idsnode;
26077     +    %let idsnode = &em_report_modelID;
26078     +%end;
26079     +%else %do;
26080     +    %let idscmeta = &em_lib..&idsnode._emcmetadefault;
26081     +    %let idstmeta = &em_lib..&idsnode._emtmetadefault;
26082     +%end;
26084     +    %if %sysfunc(exist(&idstmeta)) %then %do;
26085     +        data _null_;
26086     +            set  &idstmeta;
26087     +            call symput('rpt_rpm_data',    strip(MEMNAME));
26088     +            call symput('rpt_rpm_datalib', strip(LIBNAME));
26089     +            call symput('rpt_rpm_nobs',    strip(NOBS));
26090     +            call symput('rpt_rpm_ncols',   strip(NCOLS));
26091     +        run;
26092     +    %end;
26094     +    /* RPM-2.4 retrieve name of target to use in presense of multiple targets */
26095     +    /* prefer to use the target given by &EM_REPORT_SUMMARY_TARGET        */
26096     +    /* otherwise the last target modelled (by name) will be used          */
26098     +    %let mdlTarget = ;
26100     +    %if "&EM_REPORT_SUMMARY_TARGET" ne "" %then %do;
26101     +        proc sql noprint;
26102     +            select count(*) into :tmpn
26103     +            from &em_lib..&em_report_modelid._variableset;
26104     +                where name eq "&EM_REPORT_SUMMARY_TARGET" and upcase(role) eq "TARGET";
26105     +        quit;
26106     +        %if &tmpn eq 1 %then %let mdlTarget = &EM_REPORT_SUMMARY_TARGET;
26107     +    %end;
26109     +    %if "&mdlTarget" eq "" %then %do;
26110     +        data _null_;
26111     +            set &em_lib..&em_report_modelid._variableset(where=(role="TARGET" and use="Y"));
26112     +            call symput('mdlTarget', strip(name));
26113     +        run;
26114     +    %end;
26116     +    /* RPM-2.5 retrieve name of decmeta from eminfo of the chosen model */
26118     +    data _null_;
26119     +        set &em_lib..&em_report_modelid._eminfo;
26120     +        if KEY="DECMETA" %if "&mdlTarget" ne "" %then %do; and target="&mdlTarget" %end;
26121     +            then  call symput('rpt_rpm_mdldecmeta', strip(data));
26122     +        if KEY="DECDATA" %if "&mdlTarget" ne "" %then %do; and target="&mdlTarget" %end;
26123     +            then  call symput('rpt_rpm_mdldecdata', strip(data));
26124     +    run;
26126     +    /* RPM-2.6 retrieve name of DECISION variable if it exists      */
26127     +    /*       - use this as target var for categorical target        */
26128     +    /*       - otherwise use INTO variable as class target var      */
26129     +    /* RPM-2.7 retrieve target event level, save TARGETINFO table   */
26130     +    /* RPM-2.8 retrieve name of the PREDICTED variable from decmeta */
26131     +    /*       - INTERVAL TARGET ONLY                                 */
26133     +    %let catTarget = ;
26135     +    data _null_;
26136     +        set &rpt_rpm_mdldecmeta;
26137     +        if _type_ eq "INTO"          then call symput('catTarget', strip(variable));
26138     +        if _type_ eq "MODELDECISION" then call symput('catTarget', strip(variable));
26140     +        if _type_ eq "TARGET" then do;
26141     +            call symput('rpt_rpm_eventlvl',    strip(event));
26142     +            call symput('rpt_rpm_targetName',  strip(variable));
26143     +            call symput('rpt_rpm_targetLevel', strip(level));
26144     +            call symput('rpt_rpm_targetLabel', strip(label));
26145     +        end;
26146     +    data _null_;
26147     +        set &rpt_rpm_mdldecmeta;
26148     +        %if "&rpt_rpm_targetLevel" eq "INTERVAL" %then %do;
26149     +            if _type_ eq "PREDICTED"
26150     +                then call symput('rpt_rpm_predvar', strip(variable));
26151     +        %end;
26152     +    run;
26154     +    %EM_GETNAME(key=TARGETINFO, type=DATA);
26155     +    data &EM_USER_TARGETINFO;
26156     +        set &rpt_rpm_mdldecmeta;
26157     +    run;
26159     +    /* RPM-2.9 retrieve freq variable name if it exists */
26161     +    %let freqvar=;
26162     +    data _null_;
26163     +        set &em_lib..&em_report_modelid._variableset(where=(role eq "FREQ"));
26164     +        call symput('freqvar', strip(name));
26165     +    run;
26167     +    /* RPM-2.10 retrieve listing of all inputs into the model */
26168     +    /*     process only when SCORENODE exists                 */
26170     +    %if &RPM_REPORT_SCORENODE ne %then %do;
26172     +        %EM_REGISTER(key=tempvar,  type=DATA);
26173     +        %EM_REGISTER(key=tempmeta, type=DATA);
26174     +        %EM_GETNAME( key=tempvar,  type=DATA);
26175     +        %EM_GETNAME( key=tempmeta, type=DATA);
26177     +        data &EM_USER_tempvar;
26178     +            %if %sysfunc(exist(&em_lib..&rpm_report_scorenode._eminputvars)) %then %do;
26179     +                set &em_lib..&rpm_report_scorenode._eminputvars(where=(scorevar="Y"));
26180     +            %end;
26181     +            %else %do;
26182     +                set &em_lib..&idsnode._variableset(where=(upcase(role)='INPUT') keep=role name);
26183     +            %end;
26184     +        run;
26186     +        proc sql noprint;
26187     +            select count(distinct name) into :n_svars from &EM_USER_tempvar;
26188     +        quit;
26190     +        proc sort data=&EM_USER_tempvar;       by name; run;
26192     +%if %sysfunc(exist(&idscmeta)) %then %do;
26193     +        proc sort data=&idscmeta out=tempmeta; by name; run;
26194     +        data &EM_USER_tempmeta;
26195     +            merge &EM_USER_tempvar(in=_a) tempmeta;
26196     +            by name;
26197     +            if _a;
26198     +        run;
26199     +%end;
26200     +%else %do;
26201     +        data &EM_USER_tempmeta;
26202     +            set &EM_USER_tempvar;
26203     +            by name;
26204     +        run;
26205     +%end;
26207     +        proc delete data=tempmeta; run;
26208     +    %end;
26210     +    /* RPM-2.11 is HPRPM or not */
26212     +    proc sql noprint;
26213     +        %if "&fimnode" ne "" %then %do;
26214     +            select count(*) into :rpt_rpm_isHP from &em_lib..&em_report_modelid._eminfo
26215     +        %end;
26216     +        %else %do;
26217     +            select count(*) into :rpt_rpm_isHP from &em_lib..&idsnode._eminfo
26218     +        %end;
26219     +                where upcase(key) eq 'HPDMSAMPLE';
26220     +    quit;
26222     +    %if &rpt_rpm_isHP ne 0 %then %let rpt_rpm_isHP = 1;
26224     +    /* RPM-2.12 determine if vvn variables are present in ids node */
26226     +    %let vvnflag = 0;
26227     +    %let cmdsid = %sysfunc(open(&idscmeta));
26228     +    %if &cmdsid %then %do;
26229     +        %let newnum = %sysfunc(varnum(&cmdsid, newname));
26230     +        %if &newnum gt 0 %then %let vvnflag = 1;
26231     +    %end;
26232     +    %if &cmdsid %then %let cmdsid = %sysfunc(close(&cmdsid));
26234     +    %if &vvnflag eq 0
26235     +        %then %let name_to_use = name;
26236     +        %else %let name_to_use = newname;
26238     +/* end of 2. Retrieve necessary information for the model */
26239     +%end;
26241     +/*******************************************************************************************/
26243     +%if &em_report_modelId ne  and %sysfunc(exist(&idstmeta)) %then %do;
26245     +    %if &EM_PROPERTY_SUMMARIZATION eq Y %then %do;
26247     +        %EM_GETNAME(key=DATASUM,   type=DATA);
26248     +        %EM_GETNAME(key=TARGETSUM, type=DATA);
26249     +        %EM_GETNAME(key=VARSUM,    type=DATA);
26250     +        %let rpt_rpm_eventlvl = %nrbquote(&rpt_rpm_eventlvl);
26252     +        /* RPM-3.1 - output data summary ------------------------------------------------------------------*/
26254     +        data &EM_USER_DATASUM;
26255     +            length stat $200 value $200;
26256     +            label stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))"
26257     +                  value = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
26259     +            stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptinputdatasource_vlabel, NOQUOTE))";
26260     +            value = "&rpt_rpm_datalib..&rpt_rpm_data";
26261     +            output;
26263     +            stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetvariable_vlabel, NOQUOTE))";
26264     +            %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
26265     +                value = "%nrbquote(&rpt_rpm_targetLabel)";
26266     +            %end;
26267     +            %else %do;
26268     +                value = "&rpt_rpm_targetName";
26269     +            %end;
26270     +            output;
26272     +            %if "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
26273     +                stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpteventlevel_vlabel, NOQUOTE))";
26274     +                value = "&rpt_rpm_eventlvl";
26275     +                output;
26276     +            %end;
26278     +            stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptobservations_vlabel, NOQUOTE))";
26279     +            value = "&rpt_rpm_nobs";
26280     +            output;
26282     +            stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptorigvars_vlabel, NOQUOTE))";
26283     +            value = "&rpt_rpm_ncols";
26284     +            output;
26286     +            %if &RPM_REPORT_SCORENODE ne %then %do;
26287     +                %if &n_svars ne %then %do;
26288     +                    stat="%sysfunc(sasmsg(sashelp.dmine, rpt_rptselectedvars_vlabel, NOQUOTE))";
26289     +                    value="&n_svars";
26290     +                    output;
26291     +                %end;
26292     +            %end;
26293     +        run;
26295     +        ods &EM_REPORT_FORMAT text=" ";
26296     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelsummarization_title, NOQUOTE))";
26297     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdata_title, NOQUOTE))";
26298     +        ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelsummarization_title, NOQUOTE)) %sysfunc(sasmsg(sashelp.dmine, rpt_rptdata_title, NOQUOTE))";
26300     +        proc print data=&EM_USER_DATASUM noobs label style=[outputwidth=50%]; run;
26302     +        /* RPM-3.2 - output target summary -----------------------------------------------------------------*/
26304     +       ods &EM_REPORT_FORMAT text=" ";
26305     +       %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
26306     +           ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
26307     +           ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
26308     +       %end;
26309     +       %else %do;
26310     +           ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, &rpt_rpm_targetName))";
26311     +           ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, &rpt_rpm_targetName))";
26312     +       %end;
26314     +        %if "&rpt_rpm_targetLevel" ne "INTERVAL"
26315     +        %then %do;
26316     +            /* target summary for for non-interval target */
26318     +            %let useD = N;
26319     +            data _null_;
26320     +                set &rpt_rpm_mdldecmeta(where=(_type_ in ('MATRIX'))) end=eof;
26321     +                if eof then call symput('useD', USE);
26322     +            run;
26324     +            %let useP = N;
26325     +            data _null_;
26326     +                set &rpt_rpm_mdldecmeta(where=(_type_ in ('DECPRIOR'))) end=eof;
26327     +                if eof then call symput('useP', USE);
26328     +            run;
26330     +            data &EM_USER_TARGETSUM;
26331     +                set &rpt_rpm_mdldecdata;
26332     +                trainPrior = trainPrior * 100;
26333     +                label
26334     +                    &rpt_rpm_targetName = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))"
26335     +                    count      = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, NOQUOTE))"
26336     +                    trainprior = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptdatapercentage_vlabel, NOQUOTE))"
26337     +                    decprior   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptadjustedperc_vlabel, NOQUOTE))";
26338     +                ;
26339     +                %if &useD eq Y and &useP eq Y %then %do; drop dataprior;          %end;
26340     +                %if &useD eq Y and &useP eq N %then %do; drop decprior dataprior; %end;
26341     +                %if &useD eq N and &useP eq Y %then %do; keep &rpt_rpm_targetName count trainprior decprior; %end;
26342     +                %if &useD eq N and &useP eq N %then %do; keep &rpt_rpm_targetName count trainprior;          %end;
26343     +            run;
26345     +            proc print data=&EM_USER_TARGETSUM noobs label style=[outputwidth=50%]; run;
26346     +        %end;
26347     +        %else %do;
26348     +            /* target summary for interval target */
26350     +            data _null_;
26351     +                %if "&fimnode" ne "" %then %do;
26352     +                    set  &idscmeta(where=(ROLE='TARGET'));
26353     +                %end;
26354     +                %else %do;
26355     +                    set  &em_lib..&idsnode._cmeta_data(where=(ROLE='TARGET'));
26356     +                %end;
26357     +                    call symput('rpt_rpm_ids_target',    strip(name));
26358     +            run;
26360     +            %if &rpt_rpm_isHP eq 1 %then %do;
26361     +                ods &EM_REPORT_FORMAT exclude all;
26362     +                ods listing;
26363     +                proc hpdmdb data=&em_lib..&idsnode._data varout=temp1;
26364     +                    var &rpt_rpm_ids_target;
26365     +                proc transpose data=temp1
26366     +                    out=&EM_USER_TARGETSUM(rename=(col1=&rpt_rpm_ids_target _name_=_stat_));
26367     +                    by name notsorted;
26368     +                    var n min max mean std;
26369     +                run;
26370     +                ods listing close;
26371     +                ods &EM_REPORT_FORMAT select all;
26372     +                proc delete data=temp1; run;
26373     +            %end;
26374     +            %else %do;
26375     +                %if "&fimnode" ne "" %then %do;
26376     +                    proc means data=&em_lib..&fimnode._data noprint;
26377     +                %end;
26378     +                %else %do;
26379     +                    proc means data=&em_lib..&idsnode._data noprint;
26380     +                %end;
26381     +                    var &rpt_rpm_ids_target;
26382     +                    output out=&EM_USER_TARGETSUM;
26383     +                run;
26385     +                data &EM_USER_TARGETSUM;
26386     +                    format _stat_ $50.;
26387     +                    set &EM_USER_TARGETSUM;
26388     +                    if strip(upcase(_stat_)) eq "MIN"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
26389     +                    if strip(upcase(_stat_)) eq "MAX"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
26390     +                    if strip(upcase(_stat_)) eq "N"    then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numObs_vlabel, NOQUOTE))";
26391     +                    if strip(upcase(_stat_)) eq "MEAN" then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel, NOQUOTE))";
26392     +                    if strip(upcase(_stat_)) eq "STD"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel, NOQUOTE))";
26393     +                run;
26394     +            %end;
26396     +            proc print data=&EM_USER_TARGETSUM noobs label style=[outputwidth=50%];
26397     +                var _stat_ &rpt_rpm_ids_target;
26398     +                label _stat_        = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
26399     +                &rpt_rpm_ids_target = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
26400     +            run;
26401     +        %end;
26403     +        /* RPM-3.3 - output variable summary ---------------------------------------------------------------*/
26405     +        %if &RPM_REPORT_SCORENODE ne %then %do;
26407     +            proc sql noprint;
26408     +                create table tempselected as
26409     +                    select a.*, b.name as selected
26410     +                    from &em_lib..&idsnode._variableset as a left join &EM_USER_tempmeta as b
26411     +                        on a.name eq b.name
26412     +                ;
26413     +                create table &EM_USER_VARSUM as
26414     +                    select role,level, count(distinct name) as count, sum(selected ne ' ') as sel_count
26415     +                    from tempselected
26416     +                    group by role, level
26417     +                    order by role, level
26418     +                ;
26419     +            quit;
26421     +            ods &EM_REPORT_FORMAT text=" ";
26422     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarsummary_title, NOQUOTE))";
26423     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarsummary_title, NOQUOTE))";
26425     +            data &EM_USER_VARSUM;
26426     +                format role $50. level $50.;
26427     +                set &EM_USER_VARSUM;
26429     +                role  = upcase(strip(role));
26430     +                level = upcase(strip(level));
26432     +                     if role eq 'ASSESS'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_assess_vlabel, NOQUOTE))";
26433     +                else if role eq 'COST'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_cost_vlabel, NOQUOTE))";
26434     +                else if role eq 'CENSOR'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_censor_vlabel, NOQUOTE))";
26435     +                else if role eq 'CROSSID'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_crossid_vlabel, NOQUOTE))";
26436     +                else if role eq 'FREQ'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_freq_vlabel, NOQUOTE))";
26437     +                else if role eq 'GROUP'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_group_vlabel, NOQUOTE))";
26438     +                else if role eq 'DECISION'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_decision_vlabel, NOQUOTE))";
26439     +                else if role eq 'CLASSIFICATION' then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_vlabel, NOQUOTE))";
26440     +                else if role eq 'KEY'            then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_key_vlabel, NOQUOTE))";
26441     +                else if role eq 'MISSING'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
26442     +                else if role eq 'PREDICT'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
26443     +                else if role eq 'REFERRER'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_referrer_vlabel, NOQUOTE))";
26444     +                else if role eq 'REJECTED'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_rejected_vlabel, NOQUOTE))";
26445     +                else if role eq 'SEGMENT'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_segment_vlabel, NOQUOTE))";
26446     +                else if role eq 'SEQUENCE'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_sequence_vlabel, NOQUOTE))";
26447     +                else if role eq 'TEXT'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_text_vlabel, NOQUOTE))";
26448     +                else if role eq 'TIMEID'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_timeid_vlabel, NOQUOTE))";
26449     +                else if role eq 'TRIAL'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_trial_vlabel, NOQUOTE))";
26450     +                else if role eq 'ID'             then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_id_vlabel, NOQUOTE))";
26451     +                else if role eq 'INPUT'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel, NOQUOTE))";
26452     +                else if role eq 'TARGET'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
26453     +                else if role eq 'TREATMENT'      then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_treatment_vlabel, NOQUOTE))";
26454     +                else if role eq 'RESIDUAL '      then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_residual_vlabel, NOQUOTE))";
26455     +                else if role eq 'LABEL'          then role= "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
26457     +                     if level eq 'INTERVAL'  then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_interval_vlabel , NOQUOTE))";
26458     +                else if level eq 'NOMINAL'   then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_nominal_vlabel , NOQUOTE))";
26459     +                else if level eq 'ORDINAL'   then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_ordinal_vlabel , NOQUOTE))";
26460     +                else if level eq 'BINARY'    then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_binary_vlabel , NOQUOTE))";
26461     +                else if level eq 'UNARY'     then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_unary_vlabel , NOQUOTE))";
26463     +                role  = strip(role);
26464     +                level = strip(level);
26465     +            run;
26467     +            proc print data=&EM_USER_VARSUM label noobs style=[outputwidth=50%];
26468     +                var role level count sel_count;
26469     +                label role      = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptrole_vlabel, NOQUOTE))"
26470     +                      level     = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptlevel_vlabel, NOQUOTE))"
26471     +                      count     = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptorigcount_vlabel, NOQUOTE))"
26472     +                      sel_count = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptselcount_vlabel, NOQUOTE))";
26473     +            run;
26475     +            proc delete data=tempselected; run;
26476     +        %end;
26477     +    %end;  /* end of --&EM_PROPERTY_SUMMARIZATION eq Y           --*/
26478     +/* three output in this section: datasum, targetsum, varsum      --*/
26479     +%end; /* end of &em_report_modelId ne - end of block 3.1,3.2,3.3 --*/
26482     +/***** RPM-4. varRank and Scorecard ************************************************************************/
26484     +%if &em_report_modelId ne  and %sysfunc(exist(&idstmeta)) and &RPM_REPORT_SCORENODE ne  %then %do;
26486     +    %EM_GETNAME(key=VARRANK,   type=DATA);
26487     +    %EM_GETNAME(key=SCORECARD, type=DATA);
26489     +    %if "&rpt_rpm_targetLevel" ne "INTERVAL"
26490     +        %then %let scorecard_target = &catTarget;
26491     +        %else %let scorecard_target = &rpt_rpm_predvar;
26493     +    %if &runHP eq 0 %then %do;
26495     +        %global EM_SUMMARY_REPORT_MAXOBS  EM_SUMMARY_REPORT_SAMPLEMETHOD ;
26497     +        %if &EM_SUMMARY_REPORT_MAXOBS ne  %then %do;
26498     +            %let maxobs = &EM_SUMMARY_REPORT_MAXOBS;
26499     +        %end;
26500     +        %else %do;
26501     +            %exploreObs(data=&em_lib..&em_report_modelid._train);
26502     +            %let maxobs = &_EXPLOREOBS_MAX;
26503     +        %end;
26505     +        %if "&EM_SUMMARY_REPORT_SAMPLEMETHOD" ne ""
26506     +            %then  %let sampleMethod = &EM_SUMMARY_REPORT_SAMPLEMETHOD;
26507     +            %else  %let sampleMethod = RANDOM;
26509     +        %exploreSample(
26510     +            data     = &em_lib..&em_report_modelid._train,
26511     +            seed     = 12345,
26512     +            output   = &em_report_modelid._trainsample,
26513     +            method   = &sampleMethod,
26514     +            size     = &maxobs,
26515     +            sizetype = obs,
26516     +            metaData = &em_lib..&em_report_modelid._cmeta_train
26517     +        );
26519     +         proc delete data = &EM_USER_ScoreCard;
26520     +         run;
26522     +        %em_reporter_scorecard(
26523     +            indata        = %str(&em_report_modelid._trainsample),
26524     +            indata2       = %str(&em_lib..&em_report_modelid._train),
26525     +            inVariableSet = &EM_USER_tempmeta,
26526     +            name          = &name_to_use,
26527     +            libname       = work,
26528     +            crosstab      = &EM_PROPERTY_CROSSTABS,
26529     +            targetVar     = &scorecard_target,
26530     +            targetVar2    = &rpt_rpm_targetName,
26531     +            targetLevel   = &rpt_rpm_targetLevel,
26532     +            freqVar       = &freqVar,
26533     +            outVarRank    = &EM_USER_VarRank,
26534     +            outScoreCard  = &EM_USER_ScoreCard
26535     +        );
26537     +        proc sort data=&em_lib..&idsnode._variableset
26538     +            out=templabel(keep=&name_to_use label %if &vvnflag eq 1 %then %do; name %end;);
26539     +            by &name_to_use;
26540     +        run;
26542     +        %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 %then %do;
26544     +            proc sort data=&EM_USER_ScoreCard;
26545     +                by displayVar;
26546     +            data &EM_USER_ScoreCard;
26547     +                merge &EM_USER_ScoreCard(in=_a) templabel(rename=(&name_to_use=displayVar label=emrpmtmp_lbael));
26548     +                by displayVar;
26549     +                if _a;
26550     +                %if &vvnflag eq 1 %then %do;
26551     +                    if ^missing(name)  then displayvar=name;
26552     +                %end;
26553     +                if ^missing(emrpmtmp_lbael) then displayvar=emrpmtmp_lbael;
26554     +                drop emrpmtmp_lbael name;
26555     +            run;
26557     +        %end;
26559     +        %if %sysfunc(exist(&EM_USER_VarRank)) ne 0 %then %do;
26561     +            proc sort data=&EM_USER_VarRank;
26562     +                by variable;
26563     +            data &EM_USER_VarRank;
26564     +                merge &EM_USER_VarRank(in=_a) templabel(rename=(&name_to_use=variable));
26565     +                by variable;
26566     +                if _a;
26567     +                if missing(label) then do;
26568     +                    label = variable;
26569     +                    %if &vvnflag eq 1 %then %do;
26570     +                        if ^missing(name) then label=name;
26571     +                    %end;
26572     +                end;
26573     +            proc sort data=&EM_USER_VarRank;
26574     +                by descending rank;
26575     +            run;
26577     +        %end;
26579     +        %if %sysfunc(exist(&EM_USER_VarRank)) ne 0 and &EM_PROPERTY_VARRANKING eq Y %then %do;
26580     +            /* generate gtable like listing of variable importance */
26581     +            ods path(prepend) work.templat(update);
26582     +            proc template;
26583     +                define statgraph Rules / store=work.templat ;
26584     +                    begingraph / designheight=470px;
26585     +                        %if "&EM_REPORT_TITLE" ne ""
26586     +                            %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
26587     +                            %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
26588     +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
26589     +                        layout lattice / columns=2 rowdatarange=union columnweights=(0.9 0.1) columngutter=0;
26590     +                            rowaxes; rowaxis; endrowaxes;
26591     +                            layout overlay / xaxisopts=(display=(line));
26592     +                                barchart x=label y=worth / orient=horizontal;
26593     +                            endlayout;
26594     +                        endlayout;
26595     +                    endgraph;
26596     +                end;
26597     +            run;
26598     +            proc sgrender data=&EM_USER_VARRANK template=Rules; run;
26599     +        %end;
26600     +    %end;
26601     +    %else %do;
26603     +        %if &rpt_rpm_isHP eq 1
26604     +            %then %let scorecard_lib = &rpt_rpm_datalib;
26605     +            %else %let scorecard_lib = work;
26607     +        ods &EM_REPORT_FORMAT exclude all;
26608     +        ods listing;
26609     +        %hpdm_scorecard(
26610     +            indata        = %str(&em_lib..&em_report_modelID._train),
26611     +            inVariableSet = &EM_USER_tempmeta,
26612     +            name          = &name_to_use,
26613     +            libname       = &scorecard_lib,
26614     +            crosstab      = &EM_PROPERTY_CROSSTABS,
26615     +            targetVar     = &scorecard_target,
26616     +            targetVar2    = &rpt_rpm_targetName,
26617     +            targetLevel   = &rpt_rpm_targetLevel,
26618     +            freqVar       = &freqVar,
26619     +            outVarRank    = &EM_USER_VarRank,
26620     +            outScoreCard  = &EM_USER_ScoreCard
26621     +        );
26622     +        ods listing close;
26623     +        ods &EM_REPORT_FORMAT select all;
26625     +        /* 3.4 - Variable Ranking from PROC HPREDUCE */
26627     +        %if &EM_PROPERTY_VARRANKING eq Y %then %do;
26628     +            ods &EM_REPORT_FORMAT text=" ";
26629     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
26630     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
26631     +            proc print data=&EM_USER_VARRANK noobs;
26632     +                var number variable;
26633     +            run;
26634     +        %end;
26635     +    %end;
26636     + %end;
26639     +/* RPM-5. Cumulative Lift chart *********************************************************************/
26641     +%if &EM_PROPERTY_LIFTCHART eq Y %then %do;
26643     +    %let em_rank = &em_lib..%sysfunc(trim(&em_report_modelid))_emrank;
26645     +    %if %sysfunc(exist(&em_rank)) %then %do;
26647     +        %EM_GETNAME(key=LIFT, type=DATA);
26648     +        data &EM_USER_LIFT;
26649     +            set &em_rank end=eof;
26650     +            if eof then call symput("_tarexists_", strip(target));
26652     +                 if upcase(strip(datarole)) eq 'TRAIN'    then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_roletrain_value,    NOQUOTE))";
26653     +            else if upcase(strip(datarole)) eq 'RAW'      then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_roleraw_value,      NOQUOTE))";
26654     +            else if upcase(strip(datarole)) eq 'VALIDATE' then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_rolevalidate_value, NOQUOTE))";
26655     +            datarole = strip(datarole);
26656     +        run;
26658     +        %let em_class=&em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
26660     +        %if (%sysfunc(exist(&em_class)) and "&rpt_rpm_targetLevel" ne "INTERVAL" )
26661     +        %then %do;
26662     +            %let this_title = rpt_rptcumliftchart_title;
26663     +            %let this_plotY = liftc;
26664     +        %end;
26665     +        %else %do;
26666     +            %let this_title = rpt_rptmeanpredresp_title;
26667     +            %let this_plotY = _MEANP_;
26668     +        %end;
26670     +        ods path(prepend) work.templat(update);
26671     +        proc template;
26672     +            define statgraph liftplot / store=work.templat;
26673     +                begingraph / designheight=470px;
26674     +                    %if "&EM_REPORT_TITLE" ne ""
26675     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
26676     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
26677     +                    entrytitle "%sysfunc(sasmsg(sashelp.dmine, &this_title, NOQUOTE))";
26678     +                    layout overlay;
26679     +                        seriesplot x=decile y=&this_plotY
26680     +                            / group =datarole lineattrs=(pattern=solid) name='lift';
26681     +                        discretelegend 'lift' ;
26682     +                    endlayout;
26683     +                endgraph;
26684     +            end;
26685     +        run;
26687     +        proc sgrender data=&EM_USER_LIFT
26688     +            %if "&_tarexists_" ne "." %then %do; (where=(target="&rpt_rpm_targetName")) %end;
26689     +            template=liftplot;
26690     +        run;
26691     +    %end;
26692     +%end;
26694     +/* RPM-6. Cumulative captured response chart *********************************************************/
26696     +%if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
26698     +    %EM_GETNAME(key=CAPRESPONSE, type=DATA);
26700     +    %let em_report_rank = &em_lib..%sysfunc(trim(&em_report_modelid))_emrank;
26702     +    %if %sysfunc(exist(&em_report_rank)) %then %do;
26704     +        %let em_report_class = &em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
26706     +        %if (%sysfunc(exist(&em_report_class)) and "&rpt_rpm_targetLevel" ne "INTERVAL" ) %then %do;
26708     +            /* generate % values and create categorical x values for plotting purposes */
26709     +            data &EM_USER_CAPRESPONSE;
26710     +                set &em_report_rank end=eof;
26711     +                length baseCat bestCat capCat decCat liftCat liftCCat $5;
26712     +                format basecapcp bestcapcp capcp decilep PERCENT6.0;
26713     +                basecapcp = basecapc / 100;  baseCat= put(basecapcp, PERCENT6.0 -L);
26714     +                bestcapcp = bestcapc / 100;  bestCat= put(bestcapcp, PERCENT6.0 -L);
26715     +                capcp     = capc / 100;      capCat = put(capcp, PERCENT6.0 -L);
26716     +                decilep   = decile / 100;    decCat = put(decilep, PERCENT6.0 -L);
26717     +                liftCat = lift;
26718     +                liftCCat= liftC;
26719     +                if eof then call symput("_tarexists_", strip(target));
26720     +            run;
26722     +            /* create template for Captured Response Plot */
26724     +            ods path(prepend) work.templat(update);
26725     +            proc template;
26726     +                define statgraph reg_emrank / store=work.templat;
26727     +                    begingraph / designheight=470px;
26728     +                    %if "&EM_REPORT_TITLE" ne ""
26729     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
26730     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
26731     +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelgains_title, NOQUOTE))";
26732     +                        layout overlay / cycleattrs=true xaxisopts=(display=(LINE)) yaxisopts=(label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumcaptresponse_vlabel, NOQUOTE))");
26733     +                            seriesplot x=deccat y=basecapcp / lineattrs=(pattern=solid) name='base'  legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbase_vlabel, NOQUOTE))";
26734     +                            seriesplot x=deccat y=bestcapcp / lineattrs=(pattern=solid) name='best'  legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbest_vlabel, NOQUOTE))";
26735     +                            seriesplot x=deccat y=capcp     / lineattrs=(pattern=solid) name='model' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
26736     +                            innermargin / align=bottom;
26737     +                                blockplot x=deccat block=liftCcat / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumlift_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26738     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
26739     +                                blockplot x=deccat block=liftcat  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptlift_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26740     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
26741     +                                blockplot x=deccat block=capcat   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26742     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
26743     +                                blockplot x=deccat block=bestcat  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbest_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26744     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata2 altfillattrs=graphdata2;
26745     +                                blockplot x=deccat block=deccat   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdecile_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26746     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdatadefault altfillattrs=graphdatadefault;
26747     +                            endinnermargin;
26748     +                            * discretelegend "base" "best" "model" / across=1 location=inside halign=right valign=bottom;
26749     +                        endlayout;
26750     +                    endgraph;
26751     +                end;
26752     +            run;
26753     +        %end;
26754     +        %else %do;
26756     +            /* generate % values and create categorical x values for plotting purposes */
26757     +            data &EM_USER_CAPRESPONSE;
26758     +                set &em_report_rank end=eof;
26759     +                length decCat $5;
26760     +                format  decilep PERCENT6.0;
26761     +                decilep = decile / 100;
26762     +                decCat = put(decilep, PERCENT6.0 -L);
26763     +                if eof then call symput("_tarexists_", strip(target));
26764     +            run;
26766     +            /* create template for Captured Response Plot */
26767     +            ods path(prepend) work.templat(update);
26768     +            proc template;
26769     +                define statgraph reg_emrank / store=work.templat;
26770     +                    begingraph / designheight=470px ;
26771     +                    %if "&EM_REPORT_TITLE" ne ""
26772     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
26773     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
26774     +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelgainspred_title, NOQUOTE))";
26775     +                        layout overlay / cycleattrs=true xaxisopts=(display=(LINE)) yaxisopts=(label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredresp_vlabel, NOQUOTE))");
26776     +                            seriesplot x=deccat y=_meanp_ / lineattrs=(pattern=solid) name='mean' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel, NOQUOTE))";
26777     +                            seriesplot x=deccat y=_minp_ / lineattrs=(pattern=solid) name='min' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
26778     +                            seriesplot x=deccat y=_maxp_     / lineattrs=(pattern=solid) name='max' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
26779     +                            innermargin / align=bottom;
26780     +                                blockplot x=deccat block=_targetmean_  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmean_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26781     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
26782     +                                blockplot x=deccat block=_targetmin_   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmin_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26783     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
26784     +                                blockplot x=deccat block=_targetmax_   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmax_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26785     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
26786     +                                blockplot x=deccat block=_meanp_       / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmean_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26787     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
26788     +                                blockplot x=deccat block=_minp_        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmin_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26789     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
26790     +                                blockplot x=deccat block=_maxp_        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmax_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26791     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
26792     +                                blockplot x=deccat block=deccat        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdecile_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
26793     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdatadefault altfillattrs=graphdatadefault;
26794     +                            endinnermargin;
26795     +                            * discretelegend "mean" "min" "max" / across=1 location=inside halign=left valign=bottom;
26796     +                        endlayout;
26797     +                    endgraph;
26798     +                end;
26799     +            run;
26800     +        %end;
26802     +        /* render plot */
26804     +        %let validflag=0;
26805     +        data tempvalid;
26806     +            set &EM_USER_CAPRESPONSE(where=(datarole="VALIDATE"));
26807     +        run;
26809     +        %let dsid = %sysfunc(open(work.tempvalid));
26810     +        %if &dsid %then %do;
26811     +            %let validobs = %sysfunc(attrn(&dsid, NOBS));
26812     +            %if &validobs gt 0 %then %let validflag = 1;
26813     +        %end;
26814     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
26816     +        proc sgrender data=&EM_USER_CAPRESPONSE
26817     +            %if "&_tarexists_" ne "." %then %do; (where=(target="&rpt_rpm_targetName"))%end;
26818     +            template=reg_emrank;
26819     +            %if &validflag eq 1
26820     +                %then %do; where datarole="VALIDATE"; %end;
26821     +                %else %do; where datarole="TRAIN";    %end;
26822     +        run;
26823     +    %end;
26824     +%end;
26827     +/* RPM-7. ROC CHART ******************************************************************************************/
26829     +%if ((&RPM_REPORT_MDLCOMP ne ) or (&em_report_modelid ne )) and (&EM_PROPERTY_BASICOUTPUT eq Y) %then %do;
26831     +    %let em_report_roc = &em_lib..&RPM_REPORT_MDLCOMP._emroc;
26832     +    %let em_report_hpassess = &em_lib..%sysfunc(trim(&em_report_modelid))_hpassess;
26833     +    %let em_report_hpstats  = &em_lib..%sysfunc(trim(&em_report_modelid))_hpreportstats;
26835     +    %EM_GETNAME(key=ROC, type=DATA);
26836     +    %let plot_KS  = 0;
26837     +    %let plot_ROC = 0;
26838     +    %let train_X  = 0; %let train_Y  = 0; %let train_KS = 0;
26839     +    %let valid_X  = 0; %let valid_Y  = 0; %let valid_KS = 0;
26841     +    %if %sysfunc(exist(&em_report_roc)) %then %do;
26843     +        proc sql noprint;
26844     +            select count(*) into :validroc from &em_report_roc where datarole eq "VALIDATE";
26845     +        quit;
26847     +        /* make the ROC table */
26848     +        data &EM_USER_ROC;
26849     +            length group $32 diff 8;
26850     +            label group="&em_report_modeldesc %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
26851     +            set &em_report_roc;
26852     +            if strip(model)='_Baseline_'
26853     +                then group='Baseline';
26854     +                else group=Datarole;
26855     +            where (strip(model) ='_Baseline_' and DataRole='TRAIN') or (strip(model)= "&em_report_modelid" and DataRole in('TRAIN','VALIDATE'));
26856     +            diff = sensitivity-oneminusspecificity;
26857     +        run;
26859     +        /* get KS statistics */
26861     +        proc sql noprint;
26862     +            create table ks_stat as
26863     +                select distinct datarole, max(diff) as ks from &EM_USER_ROC group by datarole;
26864     +            select round(ks, 0.00001) into :train_ks
26865     +                from ks_stat where datarole eq 'TRAIN';
26866     +            select round(ks, 0.00001) into :valid_ks
26867     +                from ks_stat where datarole eq 'VALIDATE';
26868     +            select oneMinusSpecificity, sensitivity into :train_x, :train_y
26869     +                from &EM_USER_ROC where datarole eq 'TRAIN' and round(diff, 0.00001) eq &train_ks;
26870     +            select oneMinusSpecificity, sensitivity into :valid_x, :valid_y
26871     +                from &EM_USER_ROC where datarole eq 'VALIDATE' and round(diff, 0.00001) eq &valid_ks;
26872     +        quit;
26874     +        %let plot_KS = 1;
26875     +        %let plot_ROC = 1;
26876     +    %end;
26877     +    %else %if %sysfunc(exist(&em_report_hpassess)) and "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
26879     +        /* make the ROC table */
26881     +        proc sql noprint;
26882     +            select count(*) into :validroc from &em_report_hpassess where datarole eq "VALIDATE";
26883     +        quit;
26885     +        data &EM_USER_ROC;
26886     +            length group $32;
26887     +            group='Baseline';
26888     +            sensitivity = 0; oneminusspecificity = 0; output;
26889     +            sensitivity = 1; oneminusspecificity = 1; output;
26890     +        run;
26892     +        data &EM_USER_ROC;
26893     +            length group $32;
26894     +            set &em_report_hpassess(in=in1 rename=(one_minus_specificity=oneminusspecificity)) &EM_USER_ROC;
26895     +            if in1 then group=datarole;
26896     +            label group="&em_report_modeldesc %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
26897     +        run;
26899     +        /* get KS statistics */
26901     +        %if %sysfunc(exist(&em_report_hpstats)) %then %do;
26903     +             data _null_;
26904     +                set &em_report_hpstats;
26905     +                if upcase(stat) eq 'KSREF' then call symput('train_X', put(train,best24.));
26906     +                if upcase(stat) eq 'KSR'   then call symput('train_KS',round(train,0.00001));
26907     +                %if &validroc ge 1 %then %do;
26908     +                    if upcase(stat) eq 'KSREF' then call symput('valid_X', put(validate,best24.));
26909     +                    if upcase(stat) eq 'KSR'   then call symput('valid_KS',round(validate,0.00001));
26910     +                %end;
26911     +            run;
26913     +            data _null_;
26914     +                tmp=&train_X+&train_KS/100; call symput('train_Y',put(tmp,best24.));
26915     +                tmp=&valid_X+&valid_KS/100; call symput('valid_Y',put(tmp,best24.));
26916     +            run;
26918     +            %if &train_Y gt 0 %then %let plot_KS = 1;
26919     +            %let plot_ROC = 1;
26920     +        %end;
26921     +    %end;
26923     +    %if &plot_ROC eq 1 %then %do;
26925     +        /* add coordinates for ref lines */
26926     +        data refline;
26927     +            length oneminusspecificity sensitivity x y 8 datarole $8 group $32 text $60;
26928     +            %if &train_Y gt 0 %then %do;
26929     +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_Y; datarole='TRAIN'; group='TRAIN';
26930     +                text=""; x=.; y=.; output;
26931     +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_X; datarole='TRAIN'; group='TRAIN';
26932     +                text=catx(' = ',"%sysfunc(sasmsg(sashelp.dmine, rpt_trainks_vlabel, NOQUOTE))","&train_KS"); x=&TRAIN_X; y=&TRAIN_X - 0.05; output;
26933     +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_Y; datarole='TRAIN'; group='TRAIN';
26934     +                text=""; x=.; y=.; output;
26935     +            %end;
26936     +            %if &validroc ge 1 and &valid_Y gt 0 %then %do;
26937     +                oneminusspecificity=&VALID_X; sensitivity=&VALID_Y; datarole='VALIDATE'; group='VALIDATE';
26938     +                text=""; x=.; y=.; output;
26939     +                oneminusspecificity=&VALID_X; sensitivity=&VALID_X; datarole='VALIDATE'; group='VALIDATE';
26940     +                text=catx(' = ',"%sysfunc(sasmsg(sashelp.dmine, rpt_validks_vlabel, NOQUOTE))","&valid_KS"); x=&VALID_X; y=&VALID_X - 0.05; output;
26941     +                oneminusspecificity=&VALID_X; sensitivity=&VALID_Y; datarole='VALIDATE'; group='VALIDATE';
26942     +                text=""; x=.; y=.; output;
26943     +            %end;
26944     +        data &EM_USER_ROC;
26945     +           set &EM_USER_ROC refline;
26946     +           if group eq 'TRAIN'    then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel, NOQUOTE))";
26947     +           if group eq 'VALIDATE' then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel, NOQUOTE))";
26948     +           if group eq 'Baseline' then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_baselineroc_value, NOQUOTE))";
26949     +        run;
26951     +        /* plot ROC chart */
26952     +        ods path(prepend) work.templat(update);
26953     +        proc template;
26954     +            define statgraph rocplot / store=work.templat;
26955     +                begingraph / designheight=470px;
26956     +                    %if "&EM_REPORT_TITLE" ne ""
26957     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
26958     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
26959     +                    entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptroc_title, NOQUOTE))";
26960     +                    layout overlay;
26961     +                        seriesplot x=oneminusspecificity y=sensitivity / group =group lineattrs=(pattern=solid) name='series';
26962     +                        %if &plot_ks eq 1 %then %do;
26963     +                            scatterplot x=x y=y / group=group datalabel=text  datalabelattrs=(weight=bold) markerattrs=(size=0px);
26964     +                        %end;
26965     +                        discretelegend 'series' / title="&em_report_modeldesc  %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
26966     +                    endlayout;
26967     +                endgraph;
26968     +            end;
26969     +        run;
26971     +        proc sort data=&EM_USER_ROC; by group oneminusspecificity; run;
26972     +        proc sgrender data=&EM_USER_ROC template=rocplot; run;
26973     +        title1; title2;
26974     +    %end;
26975     +%end;
26977     +/* RPM-8. Scorecard *****************************************************************************************/
26979     +%if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
26981     +    %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 and &runHP eq 0 %then %do;
26983     +        %let ColPercNum = 0;
26984     +        %let sdsid = %sysfunc(open(&EM_USER_SCORECARD));
26985     +        %let colPercnum = %sysfunc(varnum(&sdsid, colPercent));
26986     +        %if &sdsid %then %let sdsid = %sysfunc(close(&sdsid));
26988     +        %let tmpstr1 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE));
26989     +        %let tmpstr2 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE));
26990     +        %let tmpstr3 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_singleN, NOQUOTE));
26992     +        %if &EM_PROPERTY_CROSSTABS eq Y and "&rpt_rpm_targetLevel" ne "INTERVAL" and &colPercnum gt 0
26993     +        %then %do;
26995     +            ods &EM_REPORT_FORMAT text=" ";
26996     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
26997     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
26999     +            proc tabulate data=&EM_USER_SCORECARD order=data noseps;
27000     +                class displayvar rowVariable varvalue &rpt_rpm_targetName / missing;
27001     +                var allfreq allPercent scorepoints colpercent frequency;
27002     +                keylabel sum=" ";
27003     +                table displayvar*varvalue,
27004     +                    (scorepoints="&tmpstr1" allfreq="&tmpstr2 &tmpstr3" allpercent="&tmpstr2 %" )
27005     +                    &rpt_rpm_targetName*(frequency="&tmpstr3" colPercent="%" )
27006     +                    / indent=3 rtspace=32 style=[outputwidth=100%];
27007     +            run; quit;
27008     +        %end;
27009     +        %else %do;
27011     +            ods &EM_REPORT_FORMAT text=" ";
27012     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
27013     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrmpscorecard_title, NOQUOTE))";
27015     +            proc tabulate data = &EM_USER_SCORECARD order=data noseps;
27016     +                class displayvar / missing;
27017     +                keylabel sum=" ";
27018     +                class varvalue / missing;
27019     +                var scorepoints;
27020     +                table displayvar*varvalue, (scorepoints="&tmpstr1")*sum
27021     +                    / misstext = " " indent = 3 rtspace=32;
27022     +            run; quit;
27023     +         %end;
27024     +    %end;
27027     +    %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 and &runHP eq 1 %then %do;
27029     +        %if &EM_PROPERTY_CROSSTABS eq Y and "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
27030     +            ods &EM_REPORT_FORMAT text=" ";
27031     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
27032     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
27033     +            proc tabulate data=&EM_USER_SCORECARD order=data noseps;
27034     +                class displayvar rowVariable displayLvl &rpt_rpm_targetName / MISSING;
27035     +                var allfreq allPercent scorepoints colpercent frequency;
27036     +                keylabel sum=" ";
27037     +                table displayvar * displayLvl, (scorepoints="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE))" allfreq="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE)) N"
27037    !+allpercent="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE)) %" )
27038     +                    &rpt_rpm_targetName*(frequency="N" colPercent="%" )
27039     +                    / indent=3 rtspace=32 style=[outputwidth=100%];
27040     +            run; quit;
27041     +        %end;
27042     +        %else %do;
27043     +            ods &EM_REPORT_FORMAT text=" ";
27044     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
27045     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
27046     +            proc tabulate data = &EM_USER_SCORECARD order=data noseps;
27047     +                class displayvar / MISSING;
27048     +                keylabel sum=" ";
27049     +                class displayLvl / missing;
27050     +                var SCOREPOINTS;
27051     +                table displayvar * displayLvl, (scorepoints="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE))")  * sum / misstext = " "
27052     +                      indent = 3 rtspace=32 style=[outputwidth=50%];
27053     +            run; quit;
27054     +        %end;
27055     +    %end;
27056     +%end;
27058     +%if &RPM_REPORT_SCORENODE ne %then %do;
27060     +    /* RPM-9. Classification matrix *********************************************************************/
27062     +    %if &EM_PROPERTY_CLASSIFICATION eq Y %then %do;
27064     +        %let em_report_class = &em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
27066     +        %if %sysfunc(exist(&em_report_class)) %then %do;
27068     +            %EM_GETNAME(key=MISCLASS, type=DATA);
27069     +            data &EM_USER_MISCLASS;
27070     +                set &em_report_class;
27071     +                where _TYPE_="PREDICTION" AND TARGET="&rpt_rpm_targetName";
27072     +            run;
27074     +            %let numobs=0;
27075     +            %let dsid = %sysfunc(open(&EM_USER_MISCLASS));
27076     +            %let numobs = %sysfunc(attrn(&dsid, NOBS));
27077     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27079     +            %if (%sysfunc(exist(&em_USER_MISCLASS)) and &numobs gt 0) %then %do;
27081     +                ods &EM_REPORT_FORMAT text=" ";
27082     +                %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
27083     +                    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
27084     +                    ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
27085     +                %end;
27086     +                %else %do;
27087     +                    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, &rpt_rpm_targetName))";
27088     +                    ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, &rpt_rpm_targetName))";
27089     +                %end;
27091     +                proc tabulate data=&EM_USER_MISCLASS order=data noseps;
27092     +                    keylabel sum=" ";
27093     +                    class from into datarole;
27094     +                    var pct_col;
27095     +                    table from , (datarole*into='Predicted') * pct_col="" / style=[outputwidth=50%];
27096     +                run; quit;
27097     +            %end;
27098     +        %end;
27099     +    %end;
27101     +    /* RPM-10. Fit Statistics **************************************************************************/
27103     +    %if &EM_PROPERTY_FITSTAT eq Y %then %do;
27105     +        %let fitdat1 =&em_lib..&RPM_REPORT_MDLCOMP._emreportfit;
27106     +        %let fitdat2 =&em_lib..&em_report_modelid._emreportfit;
27108     +        /* prefer to use HPREPORTSTATS table from the modeling nodel */
27110     +        %if %sysfunc(exist(&em_lib..&em_report_modelid._hpreportstats)) %then %do;
27112     +            %EM_GETNAME(key=REPORTFIT, type=DATA);
27114     +            data &EM_USER_REPORTFIT;
27115     +                set &em_lib..&em_report_modelid._hpreportstats;
27116     +            run;
27118     +            %let validfit=0;
27119     +            %let dsid = %sysfunc(open(&EM_USER_REPORTFIT));
27120     +            %if &dsid %then %do;
27121     +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
27122     +                %if &validnum %then %let validfit = 1;
27123     +            %end;
27124     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27126     +            ods &EM_REPORT_FORMAT text=" ";
27127     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27128     +            ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27130     +            proc print data=&EM_USER_REPORTFIT label noobs style=[outputwidth=50%];
27131     +                %if &validfit eq 1 %then %do;
27132     +                    var Label Train Validate;
27133     +                    format Train 12.4 Validate 12.4;
27134     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27135     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))"
27136     +                        validate = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel , NOQUOTE))";
27137     +                %end;
27138     +                %else %do;
27139     +                    var Label Train;
27140     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27141     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))";
27142     +                    format Train 12.4;
27143     +                %end;
27144     +            run;
27145     +        %end;
27146     +        %else %if %sysfunc(exist(&fitdat1)) or %sysfunc(exist(&fitdat2)) %then %do;
27148     +            %EM_GETNAME(key=REPORTFIT, type=DATA);
27150     +            data &EM_USER_REPORTFIT;
27151     +                length Label $40;
27152     +                label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))";
27153     +                %if %sysfunc(exist(&fitdat1)) eq 1
27154     +                    %then %do; set &fitdat1; %end;
27155     +                    %else %do; set &fitdat2.(rename=(stat=fitstat)); %end;
27157     +                if FitStat='_LIFT_'  then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptlift10_vlabel, NOQUOTE))";
27158     +                if FitStat='_LIFTC_' then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumlift10_vlabel, NOQUOTE))";
27159     +                if FitStat='_CAP_'  then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcaptresp10_vlabel, NOQUOTE))";
27160     +                if FitSTat='_CAPC_' then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumcaptresp10_vlabel, NOQUOTE))";
27161     +                if FitSTat='_NOBS_' then Label="%sysfunc(sasmsg(sashelp.dmine, stat_nobs_vlabel, NOQUOTE))";
27162     +                if FitSTat='_MISC_' then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_misc_vlabel, NOQUOTE))";
27163     +                if FitSTat='_MAX_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_max_vlabel, NOQUOTE))";
27164     +                if FitSTat='_SSE_'  then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_sse_vlabel, NOQUOTE))";
27165     +                if FitSTat='_ASE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_ase, NOQUOTE))";
27166     +                if FitSTat='_RASE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_rase_vlabel, NOQUOTE))";
27167     +                if FitSTat='_DIV_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_div_vlabel, NOQUOTE))";
27168     +                if FitSTat='_DFT_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, NOQUOTE))";
27169     +                if FitSTat='_AIC_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_aic, NOQUOTE))";
27170     +                if FitSTat='_MSE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_mse, NOQUOTE))";
27171     +                if FitSTat='_RMSE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rmse, NOQUOTE))";
27172     +                if FitSTat='_AVERR_' then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_averr_vlabel, NOQUOTE))";
27173     +                if FitSTat='_DFE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfe, NOQUOTE))";
27174     +                if FitSTat='_DFM_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfm, NOQUOTE))";
27175     +                if FitSTat='_ERR_'  then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_err_vlabel, NOQUOTE))";
27176     +                if FitSTat='_FPE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_fpe, NOQUOTE))";
27177     +                if FitSTat='_NW_'   then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_nw, NOQUOTE))";
27178     +                if FitSTat='_RFPE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rfpe, NOQUOTE))";
27179     +                if FitSTat='_SBC_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sbc, NOQUOTE))";
27180     +            run;
27182     +            %let validfit=0;
27183     +            %let dsid = %sysfunc(open(&EM_USER_REPORTFIT));
27184     +            %if &dsid %then %do;
27185     +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
27186     +                %if &validnum %then %let validfit = 1;
27187     +            %end;
27188     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27190     +            ods &EM_REPORT_FORMAT text=" ";
27191     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27192     +            ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27194     +            proc print data=
27195     +                %if %sysfunc(exist(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit)) eq 1
27196     +                %then %do;
27197     +                    &EM_USER_REPORTFIT(where=(MODEL="&em_report_modelId" AND TARGET="&rpt_rpm_targetName"))
27198     +                %end;
27199     +                %else %do;
27200     +                    &EM_USER_REPORTFIT(where=(TARGET="&rpt_rpm_targetName"))
27201     +                %end;
27202     +                label noobs style=[outputwidth=50%];
27203     +                %if &validfit eq 1 %then %do;
27204     +                    var Label Train Validate;
27205     +                    format Train 12.4 Validate 12.4;
27206     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27207     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))"
27208     +                        validate = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel , NOQUOTE))"
27209     +                    ;
27210     +                %end;
27211     +                %else %do;
27212     +                    var Label Train;
27213     +                    format Train 12.4;
27214     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27215     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))";
27216     +                %end;
27217     +                %if %sysfunc(exist(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit)) eq 1
27218     +                %then %do;
27219     +                    where FitStat in ('_NOBS_', '_MISC_', '_LOSS_', '_ALOSS_', '_ASE_', '_AUR_', '_GINI_', 'KS',
27220     +                                      '_KS_PROB_CUTOFF', '_LIFT_', '_LIFTC_', '_CAP_', '_CAPC_', '_AIC_', '_AVERR_',
27221     +                                      '_MAX_','_MSE_', '_RASE_', '_RMSE_', '_SBC_', '_SSE_') and TRAIN ne .;
27222     +                %end;
27223     +                %else %do;
27224     +                    where FitStat in ('_NOBS_', '_MISC_', '_LOSS_', '_ALOSS_', '_ASE_', '_AIC_', '_AVERR_', '_MAX_',
27225     +                                      '_MSE_', '_RASE_', '_RMSE_', '_SBC_', '_SSE_') and TRAIN ne .;
27226     +                %end;
27227     +            run;
27228     +        %end;
27229     +    %end;
27231     +    /* RPM-11. Model Comparison Table */
27233     +    %if &EM_PROPERTY_COMPAREMDL eq Y and RPM_REPORT_MDLCOMP ne %then %do;
27235     +        %EM_GETNAME(KEY=COMPAREMDL, TYPE=DATA);
27237     +        %let em_report_mdlOutfit = &em_lib..&RPM_REPORT_MDLCOMP._emoutfit;
27239     +        %if %sysfunc(exist(&em_report_mdlOutfit)) %then %do;
27241     +            /* determine model selection criterion - to included in print */
27242     +            %em_modelprops(dgmid=&em_lib, modelid=&RPM_REPORT_MDLCOMP, output=%nrbquote(work.modelprop));
27244     +            %let selectcrit = ;
27245     +            data _null_;
27246     +                set work.modelprop(where=(NAME="ModelCriteria")) end=eof;
27247     +                if eof then call symput('selectcrit', VALUE);
27248     +            run;
27250     +            %let selectstat=;
27251     +            %let choice = USE="Y";
27252     +            %let dsid = %sysfunc(open(&em_report_mdlOutfit(where=(&choice))));
27253     +            %if &dsid %then %do;
27254     +                %let obs = %sysfunc(fetchobs(&dsid, 1));
27255     +                %let selectstat = %sysfunc(VARNAME(&dsid, 6));
27256     +            %end;
27257     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27259     +            %let validflag=0;
27260     +            %let dsid = %sysfunc(open(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit));
27261     +            %if &dsid %then %do;
27262     +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
27263     +                %if &validnum %then %let validflag = 1;
27264     +            %end;
27265     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27267     +            data &EM_USER_COMPAREMDL;
27268     +                set &em_report_mdlOutfit;
27269     +                keep use model modelDescription &selectstat
27270     +                %if "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
27271     +                    %if &selectstat ne _LIFT_ %then %do; _LIFT_ %end;
27272     +                    %if &validflag eq 1 %then %do;
27273     +                        %if &selectstat ne _VLIFT_ %then %do; _VLIFT_ %end;
27274     +                    %end;
27275     +                    %if &selectstat ne _AIC_ %then %do; _AIC_  %end;
27276     +                %end;
27277     +                %else %do;
27278     +                    %if &selectstat ne _ASE_ %then %do; _ASE_ %end;
27279     +                    %if &validflag eq 1 %then %do;
27280     +                        %if &selectstat ne _VASE_ %then %do; _VASE_ %end;
27281     +                    %end;
27282     +                %end;
27283     +                ;
27284     +            run;
27286     +            ods &EM_REPORT_FORMAT text=" ";
27287     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcomparemdl_title, NOQUOTE, &selectcrit))";
27288     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcomparemdl_title, NOQUOTE, &selectcrit))";
27290     +            proc print data=&EM_USER_COMPAREMDL label noobs style=[outputwidth=50%]; run;
27291     +        %end;
27292     +    %end;
27294     +    /* RPM-12. Project Info */
27296     +    %if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
27298     +        %let pos = %index(&em_nodedir, Workspaces);
27299     +        %if &pos %then %do;
27301     +            %let projpath = %nrbquote(%sysfunc(trim(%sysfunc(substr(&em_nodedir, 1, %eval(&pos-2))))));
27302     +            %let reverse = %nrbquote(%sysfunc(reverse(&projpath)));
27303     +            %let pos2 = %index(&reverse, &em_dsep);
27304     +            %let len = %length(&projpath);
27305     +            %let projname = %nrbquote(%substr(&projpath, %eval(2+ &len-&pos2)));
27306     +            %let projname =%nrbquote(%sysfunc(tranwrd(%nrstr(&projname), %str(%"),"")));
27307     +            %let wsname  = %nrbquote(%sysfunc(tranwrd(%nrstr(&em_wsname), %str(%"),"")));
27309     +            %EM_GETNAME(key=PROJINFO, type=DATA);
27310     +            data &EM_USER_PROJINFO;
27311     +                length stat $200 value $200;
27312     +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))";
27313     +                value="&projname";
27314     +                output;
27316     +                stat="%sysfunc(sasmsg(sashelp.dmine, views_descriptions_diagram, NOQUOTE))";
27317     +                value="&wsname";
27318     +                output;
27320     +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpath_title, NOQUOTE))";
27321     +                value="&projpath";
27322     +                output;
27324     +                %let createTime = %sysfunc(left(%sysfunc(putn(%sysfunc(dateTime()), NLDATM24.0))));
27325     +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_crdate_vlabel, NOQUOTE))";
27326     +                value="&createTime";
27327     +                output;
27329     +                label stat="%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))"
27330     +                      value="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
27332     +            run;
27334     +            ods &EM_REPORT_FORMAT text=" ";
27335     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptprojinfo_title, NOQUOTE))";
27336     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptprojinfo_title, NOQUOTE))";
27338     +            proc print data=&EM_USER_PROJINFO noobs label style=[outputwidth=50%]; run;
27339     +        %end;
27340     +    %end;
27341     +%end;
27343     +%skip:
27345     +%mend em_report_summary;
27348     +%macro em_reporter_scorecard(
27349     +/**----------------------------------------------------------------------**/
27350     +/*  EM_REPORTER_SCORECARD                                                 */
27351     +/*    generate scorecard report for EM RPM flows. currently this is an    */
27352     +/*    interval macro for RPM and does not perform any argument checking.  */
27353     +/**----------------------------------------------------------------------**/
27354     +inData           = ,     /* input training data set                       */
27355     +inData2          = ,
27356     +inVariableSet    = ,     /* input variable metadata, must have the three  */
27357     +                         /* columns: level, role and &name                */
27358     +name             = name, /* variable name column in the metadata          */
27359     +libname          = work, /* libname to save the temporary binned data     */
27360     +crosstab         = Y,    /* create cross-tabulation or not. Default = Y   */
27361     +targetVar        = ,     /* target variable for regressions and scores    */
27362     +targetVar2       = ,     /* target variable for cross-tabulations         */
27363     +targetLevel      = ,     /* target level                                  */
27364     +freqVar          = ,     /* frequency variable                            */
27365     +outVarRank       = ,     /* output dataset for variable ranking (HPREDUCE)*/
27366     +outScorecard     =       /* output dataset for scorecard report           */
27367     +/**----------------------------------------------------------------------**/
27368     +/* Created: 08/20/2012, XXM                                               */
27369     +/**----------------------------------------------------------------------**/
27370     +);
27372     +/**--------------------------------------------------------------------------------------**/
27373     +/** 0. Configurations                                                                    **/
27374     +/**--------------------------------------------------------------------------------------**/
27376     +** get target level;
27377     +%let targetVar   = &targetVar;
27378     +%let targetVar2  = &targetVar2;
27379     +%let targetLevel = &targetLevel;
27381     +** check valid target name and level;    /* TBA */
27383     +** check VariableSet has LEVEL and NAME; /* TBA */
27385     +/**--------------------------------------------------------------------------------------**/
27386     +/** 1. Get the input variables from variable set                                         **/
27387     +/**--------------------------------------------------------------------------------------**/
27389     +%let nom_vars = ;
27390     +%let ord_vars = ;
27391     +%let int_vars = ;
27392     +%let n_nomvars = 0;
27393     +%let n_ordvars = 0;
27394     +%let n_intvars = 0;
27396     +data _null_;
27397     +    set &inVariableSet(where=(LEVEL in ('NOMINAL', 'BINARY') and upcase(&name) ne "&targetVar")) end=eof;
27398     +    call symput('nom_vars'!!strip(put(_N_,BEST.)), strip(&name));
27399     +    if eof then call symput('n_nomvars', strip(put(_N_,BEST.)));
27400     +data _null_;
27401     +    set &inVariableSet(where=(LEVEL='ORDINAL' and upcase(&name) ne "&targetVar")) end=eof;
27402     +    call symput('ord_vars'!!strip(put(_N_,BEST.)), strip(&name));
27403     +    if eof then call symput('n_ordvars', strip(put(_N_,BEST.)));
27404     +data _null_;
27405     +    set &inVariableSet(where=(LEVEL='INTERVAL' and upcase(&name) ne "&targetVar")) end=eof;
27406     +    call symput('int_vars'!!strip(put(_N_,BEST.)), strip(&name));
27407     +    if eof then call symput('n_intvars', strip(put(_N_,BEST.)));
27408     +run;
27410     +%let n_svars = %eval(&n_nomvars+&n_ordvars+&n_intvars);
27412     +%if ((&n_nomvars gt 0) OR (&n_ordvars gt 0) OR (&n_intvars gt 0)) %then %do;
27414     +    /**----------------------------------------------------------------------------------**/
27415     +    /** 2. PROC ARBOR                                                                    **/
27416     +    /**----------------------------------------------------------------------------------**/
27418     +    proc arbor data=&indata
27419     +        alpha=1 leafsize=5 mincatsize=5 maxbranch=8 maxdepth=1 NORULELIMIT
27420     +        maxrules=&n_svars maxsurrs=0 missing=USEINSEARCH exhaustive=5000
27421     +    ;
27422     +        %if &n_nomvars gt 0 %then %do;
27423     +            input %do i=1 %to &n_nomvars; &&nom_vars&i %end; / level = nominal;
27424     +        %end;
27425     +        %if &n_ordvars gt 0 %then %do;
27426     +            input %do i=1 %to &n_ordvars; &&ord_vars&i %end; / level = ordinal;
27427     +        %end;
27428     +        %if &n_intvars gt 0 %then %do;
27429     +            input %do i=1 %to &n_intvars; &&int_vars&i %end; / level = interval;
27430     +        %end;
27431     +        %if &freqvar ne %then %do; freq &freqvar; %end;
27432     +        target &targetVar / level=&targetLevel;
27433     +        save importance=importance rules=rules;
27434     +    run;
27436     +    /**----------------------------------------------------------------------------------**/
27437     +    /** 2. get VarRank output table                                                      **/
27438     +    /**----------------------------------------------------------------------------------**/
27440     +    /* keep only the top 50 input variables - based on rank */
27442     +    data &outVarRank(where=(rank le 50));
27443     +        length variable $32 worth 8;
27444     +        set rules;
27445     +        by rank;
27446     +        retain variable worth;
27447     +        label variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
27448     +        keep variable rank worth;
27450     +        if STAT="VARIABLE" then variable=Character_value;
27451     +        if STAT="WORTH" then worth=Numeric_value;
27452     +        if last.rank then output;
27453     +    run;
27455     +    data &outVarRank;
27456     +        set &outVarRank;
27457     +        if worth=. then do;
27458     +            worth = 0.00;
27459     +            rank  = _N_;
27460     +        end;
27461     +    run;
27463     +    /* selected interval and class input variables */
27464     +    proc sql noprint;
27465     +        create table tempclass(drop=&name) as
27466     +            select a.*, b.*  from &outVarRank as a left join &inVariableSet as b
27467     +                on upcase(a.variable) eq upcase(b.&name)
27468     +            where level ne "INTERVAL"
27469     +            order by a.variable
27470     +        ;
27471     +        create table tempinterval(drop=&name) as
27472     +            select a.*, b.*  from &outVarRank as a left join &inVariableSet as b
27473     +                on upcase(a.variable) eq upcase(b.&name)
27474     +            where level eq "INTERVAL"
27475     +            order by a.variable
27476     +        ;
27477     +    quit;
27479     +    /* create array of class variables names */
27480     +    %let class_vars=;
27481     +    %let n_classvars=0;
27482     +    data _null_;
27483     +        set tempclass end=eof;
27484     +        call symput('class_vars'!!strip(put(_N_,BEST.)), strip(variable));
27485     +        if eof then call symput('n_classvars', strip(put(_N_,BEST.)));
27486     +    run;
27488     +    /**----------------------------------------------------------------------------------**/
27489     +    /** 3. Get Bining information                                                        **/
27490     +    /**----------------------------------------------------------------------------------**/
27492     +    %let dsid = %sysfunc(open(work.rules));
27493     +    %let numobs = %sysfunc(attrn(&dsid, NOBS));
27494     +    %let numvars = %sysfunc(attrn(&dsid, NVARS));
27495     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27497     +    %if %sysfunc(exist(&outVarRank)) and (&numobs gt 0) and (&numvars gt 0) %then %do;
27499     +        data rules;
27500     +            set rules;
27501     +            where STAT in ('VARIABLE', 'INTERVAL', 'MISSING');
27502     +            numeric_value = round(numeric_value, 0.001);
27503     +        proc sort data=rules;
27504     +            by rank numeric_value;
27505     +        run;
27507     +        data binning_rules;
27508     +            length origVar $32;
27509     +            set rules;
27510     +            by rank;
27511     +            retain origVar oldLB;
27512     +            keep origVar LB UB;
27514     +            if STAT="VARIABLE" then origVar = Character_value;
27515     +            if first.rank then oldLB=.;
27516     +            if STAT="INTERVAL" then do;
27517     +                LB = oldLB;
27518     +                UB = Numeric_value;
27519     +                oldLB=UB;
27520     +                output;
27521     +            end;
27522     +            if last.rank then do;
27523     +                LB=oldLB;
27524     +                UB = .;
27525     +                output;
27526     +            end;
27527     +        run;
27529     +        /* names for binning */
27530     +        proc sql noprint;
27531     +            create table tempbinnames(drop=variable) as
27532     +                select distinct origVar, role from binning_rules as a inner join tempinterval as b
27533     +                  on a.OrigVar eq b.variable;
27534     +        quit;
27536     +        /* get name server */
27537     +        proc dmdb data=tempbinnames outtable=tempbinnames nameserver;
27538     +            names origVar;
27539     +            prefix BIN_;
27540     +        run;
27542     +        /* merge binned names back to temp */
27543     +        proc sql noprint;
27544     +            create table binning_rules_names as
27545     +                select a.*, b.bin as binVar from binning_rules as a right join tempbinnames as b
27546     +                    on a.origVar eq b.origVar
27547     +                order by a.origVar, a.LB, a.UB;
27548     +        quit;
27550     +        /* create array of bin variables names */
27551     +        %let bin_vars=;
27552     +        %let n_binvars=0;
27553     +        data _null_;
27554     +            set tempbinnames end=eof;
27555     +            call symput('bin_vars'!!strip(put(_N_,BEST.)), strip(bin));
27556     +            if eof then call symput('n_binvars', strip(put(_N_,BEST.)));
27557     +        run;
27559     +    /**----------------------------------------------------------------------------------**/
27560     +    /** 4. Bin the interval variables                                                    **/
27561     +    /**    note that binned is used for DMREG, binned_full is used for CROSSTAB          **/
27562     +    /**----------------------------------------------------------------------------------**/
27564     +    data binned;
27565     +        set &indata;
27567     +        %if &n_binvars gt 0 %then %do;
27568     +            length %do i=1 %to &n_binvars; &&bin_vars&i %end; $50;
27569     +        %end;
27571     +        %let dsid = %sysfunc(open(binning_rules_names));
27572     +        %if &dsid %then %do;
27573     +            %let orignum = %sysfunc(VARNUM(&dsid, origVar));
27574     +            %let binnum  = %sysfunc(VARNUM(&dsid, binVar));
27575     +            %let lbnum   = %sysfunc(VARNUM(&dsid, LB));
27576     +            %let ubnum   = %sysfunc(VARNUM(&dsid, UB));
27578     +            %let obs     = %sysfunc(fetch(&dsid));
27579     +            %do %while(&obs=0);
27580     +                %let origvar = %sysfunc(getvarc(&dsid, &orignum));
27581     +                %let binvar  = %sysfunc(getvarc(&dsid, &binnum));
27582     +                %let lb   = %sysfunc(getvarn(&dsid, &lbnum));
27583     +                %let ub   = %sysfunc(getvarn(&dsid, &ubnum));
27585     +                %if "&lb" eq "." AND "&ub" ne "." %then %do;
27586     +                    %let count = 1;
27587     +                    if &origvar < &ub then &binvar = "&count: low - &ub";
27588     +                %end;
27589     +                %else %if "&lb" ne "." AND "&ub" eq "." %then %do;
27590     +                    %let count = %eval(&count+1);
27591     +                    else if &origvar >= &lb then &binvar = "&count: &lb - high";
27592     +                %end;
27593     +                %else %if "&lb" eq "." AND "&ub" eq "." %then %do;
27594     +                    %let count = 1;
27595     +                    &binvar = "&count: low - high";
27596     +                %end;
27597     +                %else %do;
27598     +                    %let count = %eval(&count+1);
27599     +                    else if &origvar < &ub AND &origvar >= &lb then &binvar = "&count: &lb - &ub";
27600     +                %end;
27602     +                %let obs = %sysfunc(fetch(&dsid));
27603     +            %end;
27604     +        %end;
27605     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27606     +    run;
27608     +    data binned_full;
27609     +        set &indata2;
27611     +        %if &n_binvars gt 0 %then %do;
27612     +            length %do i=1 %to &n_binvars; &&bin_vars&i %end; $50;
27613     +        %end;
27615     +        %let dsid = %sysfunc(open(binning_rules_names));
27616     +        %if &dsid %then %do;
27617     +            %let orignum = %sysfunc(VARNUM(&dsid, origVar));
27618     +            %let binnum  = %sysfunc(VARNUM(&dsid, binVar));
27619     +            %let lbnum   = %sysfunc(VARNUM(&dsid, LB));
27620     +            %let ubnum   = %sysfunc(VARNUM(&dsid, UB));
27622     +            %let obs     = %sysfunc(fetch(&dsid));
27623     +            %do %while(&obs=0);
27624     +                %let origvar = %sysfunc(getvarc(&dsid, &orignum));
27625     +                %let binvar  = %sysfunc(getvarc(&dsid, &binnum));
27626     +                %let lb   = %sysfunc(getvarn(&dsid, &lbnum));
27627     +                %let ub   = %sysfunc(getvarn(&dsid, &ubnum));
27629     +                %if "&lb" eq "." AND "&ub" ne "." %then %do;
27630     +                    %let count = 1;
27631     +                    if &origvar < &ub then &binvar = "&count: low - &ub";
27632     +                %end;
27633     +                %else %if "&lb" ne "." AND "&ub" eq "." %then %do;
27634     +                    %let count = %eval(&count+1);
27635     +                    else if &origvar >= &lb then &binvar = "&count: &lb - high";
27636     +                %end;
27637     +                %else %if "&lb" eq "." AND "&ub" eq "." %then %do;
27638     +                    %let count = 1;
27639     +                    &binvar = "&count: low - high";
27640     +                %end;
27641     +                %else %do;
27642     +                    %let count = %eval(&count+1);
27643     +                    else if &origvar < &ub AND &origvar >= &lb then &binvar = "&count: &lb - &ub";
27644     +                %end;
27646     +                %let obs     = %sysfunc(fetch(&dsid));
27647     +            %end;
27648     +        %end;
27649     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27650     +    run;
27652     +    /**----------------------------------------------------------------------------------**/
27653     +    /** 5. Generate scores                                                               **/
27654     +    /**----------------------------------------------------------------------------------**/
27656     +    proc dmdb batch data=binned dmdbcat=score_dmdb maxlevel=513 classout=_classout;
27657     +        class
27658     +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
27659     +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
27660     +            %if "&targetLevel" ne "INTERVAL" %then %do; &targetVar %end;
27661     +        ;
27662     +        %if &freqvar ne %then %do; freq &freqvar; %end;
27663     +        %if "&targetLevel" eq  "INTERVAL" %then %do; var &targetVar; %end;
27664     +        target &targetVar;
27665     +    run; quit;
27667     +    proc dmreg data=binned dmdbcat=score_dmdb outest=coeff_est outterms=outterms noprint descending;
27668     +        class
27669     +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
27670     +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
27671     +            %if "&targetLevel" ne "INTERVAL" %then %do; &targetVar %end;
27672     +        ;
27673     +        %if &freqvar ne %then %do; freq &freqvar; %end;
27674     +        model &targetVar =
27675     +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
27676     +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
27677     +            / coding=glm
27678     +        ;
27679     +    run;
27683     +    proc sql noprint;
27684     +        create table _score_tmp1 as
27685     +            select *, min(coefficient) as min_est,
27686     +                case when calculated min_est = coefficient then 0
27687     +                     else coefficient-calculated min_est
27688     +                end as est1
27689     +            from outterms
27690     +            where variable ne 'Intercept'
27691     +            group by variable
27692     +        ;
27693     +        create table _score_tmp2 as
27694     +            select *, max(est1) as max_est1, count(*) as counter
27695     +            from _score_tmp1
27696     +            group by variable
27697     +        ;
27698     +%if "&fimnode" eq "" %then %do;
27699     +        create table _classout2(rename=(name=variable level=value)) as
27700     +            select a.*, b.format
27701     +                from _classout as a left join &inVariableSet(keep=&name format) as b
27702     +                on a.name eq b.&name
27703     +            order by a.name, a.level
27704     +        ;
27705     +%end;
27707     +        create table &outScorecard(rename=(classlevel=value)) as
27708     +            select *, sum(max_est1/counter) as sum_max,
27709     +                case when est1=max_est1 then 1 else 0 end as max_cat,
27710     +                round(1000*((est1) / calculated sum_max)) as score
27711     +            from _score_tmp2
27712     +            order by variable, classlevel
27713     +        ;
27715     +    quit;
27717     +    data &outScorecard;
27718     +%if "&fimnode" ne "" %then %do;
27719     +        set &outScorecard;
27720     +        by variable value;
27721     +%end;
27722     +%else %do;
27723     +        merge &outScorecard(in=_a) _classout2;
27724     +        by variable value;
27725     +        if _a;
27726     +%end;
27727     +        value = tranwrd(value, "'", "''");
27728     +        rename frequency   = AllFreq
27729     +               freqpercent = AllPercent;
27730     +        label  score       = "%sysfunc(sasmsg(sashelp.dmine, rpt_scorecardpoints_vlabel, NOQUOTE))"
27731     +               frequency   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numObs_vlabel, NOQUOTE))"
27732     +               freqpercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptperctobs_vlabel, NOQUOTE))";
27733     +    run;
27735     +    /* replace binned named with original var name instead */
27737     +    proc sort data=tempbinnames; by bin; run;
27739     +    data &outScorecard;
27740     +        merge &outScorecard(in=_a) tempbinnames(rename=(bin=variable origvar=displayVar)) ;
27741     +        by variable;
27742     +        if _a;
27743     +        if displayVar="" then displayVar=variable;
27744     +    run;
27746     +    /**----------------------------------------------------------------------------------**/
27747     +    /** 6. Generate crosstabs                                                            **/
27748     +    /**----------------------------------------------------------------------------------**/
27750     +    %if "&targetLevel" ne "INTERVAL" %then %do;
27752     +        ods &EM_REPORT_FORMAT exclude all;
27753     +        ods listing;
27755     +        data _null_;
27756     +            set &outScorecard end=eof;
27757     +            by variable;
27758     +            if _n_=1          then call execute("proc freq data=work.binned_full order=formatted addnames;");
27759     +            if first.variable then call execute("table "||variable||" * &targetVar2 / missing;");
27760     +            if eof then do;
27761     +                %if &freqvar ne %then %do; call execute("weight &freqvar;"); %end;
27762     +                call execute("ods output crosstabfreqs=tempfreq;");
27763     +                call execute("run;");
27764     +            end;
27765     +        run;
27767     +        data _null_;
27768     +            set &outScorecard end=eof;
27769     +            by variable value;
27771     +            if _n_=1 then do;
27772     +                call execute("data crosstabs;");
27773     +                call execute("  length varvalue $200 displayVar $32;");
27774     +                call execute("  set tempfreq(where=(_type_='11'));");
27775     +            end;
27777     +            if type="N" AND format eq "" then do;
27778     +                call execute("if "||Variable||" = "||value||" then do;");
27779     +            end;
27780     +            else do;
27781     +                if format ne ""
27782     +                    then call execute("%DMNORMCP(put("||variable||","||format||"), _normvar);");
27783     +                    else call execute("%DMNORMCP("||variable||", _normvar);");
27784     +                call execute("if strip(_normvar) = '"||strip(value)||"' then do;");
27785     +            end;
27787     +            call execute("  varvalue='"||strip(value)||"';");
27788     +            call execute("  scorepoints="||score||";");
27789     +            call execute("  allfreq="||allfreq||";");
27790     +            call execute("  allpercent="||allpercent||";");
27791     +            call execute("  displayVar='"||displayVar||"';");
27792     +            call execute("end;");
27794     +            if eof then call execute("run;");
27795     +        run;
27797     +        ods &EM_REPORT_FORMAT select all;
27798     +        ods listing close;
27800     +        proc sort data=crosstabs; by rowVariable varvalue; run;
27802     +        data &outScoreCard;
27803     +            set crosstabs;
27804     +            by rowVariable varvalue;
27805     +            if missing(scorepoints) then delete;
27806     +            if ^first.varvalue then do;
27807     +                 scorepoints=.;
27808     +                 allfreq=.;
27809     +                 allpercent=.;
27810     +            end;
27811     +            keep displayvar rowVariable varValue &targetVar2 scorepoints frequency colPercent allfreq allpercent ;
27812     +        run;
27813     +    %end;
27814     +    %else %do;
27815     +        data &outScoreCard;
27816     +            set &outScoreCard;
27817     +            rename value=varvalue score=scorepoints;
27818     +        run;
27819     +    %end;
27820     +%end;
27822     +/*    proc datasets lib=work nolist;*/
27823     +/*    run; quit;*/
27824     +%end;
27826     +%mend em_reporter_scorecard;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source' ;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
27827     +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
27828     +   proc display c=sashelp.emcore.pathscorecode.scl;
27829     +   run;
27830     +%mend EM_GETTRAINPATH;
27831     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_tagset_template.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TAGSET_TEMPLATE.SOURCE.
27832     +Ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_CREATE):   Ods path(prepend) work.templat(update);
27833     +
27834     +/* emgraph.tpl */
27835     +proc template;
MPRINT(EM_REPORT_CREATE):   proc template;
27836     +define tagset tagsets.gtl / store=work.templat;
MPRINT(EM_REPORT_CREATE):   define tagset tagsets.gtl / store=work.templat;
27837     +parent=tagsets.odsgraph;
MPRINT(EM_REPORT_CREATE):   parent=tagsets.odsgraph;
27838     +%let  map =<>%nrstr(&)%str(%')%str(%");
27839     +map="&map";
MPRINT(EM_REPORT_CREATE):   map="<>&'"";
27840     +mapsub = '/&lt;/&gt;/&amp;/&#39;/&quot;/';
MPRINT(EM_REPORT_CREATE):   mapsub = '/&lt;/&gt;/&amp;/&#39;/&quot;/';
27841     +nobreakspace = ' ' no_byte_order_mark = yes;
MPRINT(EM_REPORT_CREATE):   nobreakspace = ' ' no_byte_order_mark = yes;
27842     +split = '<br/>';
MPRINT(EM_REPORT_CREATE):   split = '<br/>';
27843     +output_type = 'xml';
MPRINT(EM_REPORT_CREATE):   output_type = 'xml';
27844     +indent=2;
MPRINT(EM_REPORT_CREATE):   indent=2;
27845     +
27846     +define event options_set;
MPRINT(EM_REPORT_CREATE):   define event options_set;
27847     +    do / if $options['X'];
MPRINT(EM_REPORT_CREATE):   do / if $options['X'];
27848     +         set $xvar $options['X'];
MPRINT(EM_REPORT_CREATE):   set $xvar $options['X'];
27849     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27850     +         unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
27851     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27852     +
27853     +    do / if $options['Y'];
MPRINT(EM_REPORT_CREATE):   do / if $options['Y'];
27854     +         set $yvar $options['Y'];
MPRINT(EM_REPORT_CREATE):   set $yvar $options['Y'];
27855     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27856     +         unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
27857     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27858     +
27859     +    do / if $options['CATEGORY'];
MPRINT(EM_REPORT_CREATE):   do / if $options['CATEGORY'];
27860     +         set $category $options['CATEGORY'];
MPRINT(EM_REPORT_CREATE):   set $category $options['CATEGORY'];
27861     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27862     +         unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
27863     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27864     +
27865     +    do / if $options['RESPONSE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['RESPONSE'];
27866     +         set $response $options['RESPONSE'];
MPRINT(EM_REPORT_CREATE):   set $response $options['RESPONSE'];
27867     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27868     +         unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
27869     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27870     +
27871     +    do / if $options['LIMITUPPER'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LIMITUPPER'];
27872     +         set $limitupper $options['LIMITUPPER'];
MPRINT(EM_REPORT_CREATE):   set $limitupper $options['LIMITUPPER'];
27873     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27874     +         unset $limitupper;
MPRINT(EM_REPORT_CREATE):   unset $limitupper;
27875     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27876     +
27877     +    do / if $options['LIMITLOWER'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LIMITLOWER'];
27878     +         set $limitlower $options['LIMITLOWER'];
MPRINT(EM_REPORT_CREATE):   set $limitlower $options['LIMITLOWER'];
27879     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27880     +         unset $limitlower;
MPRINT(EM_REPORT_CREATE):   unset $limitlower;
27881     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27882     +
27883     +    do / if $options['WIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['WIDTH'];
27884     +         set $graphwidth $options['WIDTH'];
MPRINT(EM_REPORT_CREATE):   set $graphwidth $options['WIDTH'];
27885     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27886     +         unset $graphwidth;
MPRINT(EM_REPORT_CREATE):   unset $graphwidth;
27887     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27888     +
27889     +    do / if $options['HEIGHT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['HEIGHT'];
27890     +         set $graphheight $options['HEIGHT'];
MPRINT(EM_REPORT_CREATE):   set $graphheight $options['HEIGHT'];
27891     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27892     +         unset $graphheight;
MPRINT(EM_REPORT_CREATE):   unset $graphheight;
27893     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27894     +
27895     +    do / if $options['ROWS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ROWS'];
27896     +         set $rows $options['ROWS'];
MPRINT(EM_REPORT_CREATE):   set $rows $options['ROWS'];
27897     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27898     +         unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
27899     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27900     +
27901     +    do / if $options['COLUMNS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLUMNS'];
27902     +         set $columns $options['COLUMNS'];
MPRINT(EM_REPORT_CREATE):   set $columns $options['COLUMNS'];
27903     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27904     +         unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
27905     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27906     +
27907     +    do / if $options['TITLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE'];
27908     +         set $title $options['TITLE'];
MPRINT(EM_REPORT_CREATE):   set $title $options['TITLE'];
27909     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27910     +         unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title;
27911     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27912     +
27913     +    do / if $options['TITLE2'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE2'];
27914     +         set $title2 $options['TITLE2'];
MPRINT(EM_REPORT_CREATE):   set $title2 $options['TITLE2'];
27915     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27916     +         unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title2;
27917     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27918     +
27919     +do / if $options['TITLE3'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE3'];
27920     +         set $title3 $options['TITLE3'];
MPRINT(EM_REPORT_CREATE):   set $title3 $options['TITLE3'];
27921     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27922     +         unset $title3;
MPRINT(EM_REPORT_CREATE):   unset $title3;
27923     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27924     +
27925     +do / if $options['TITLE4'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE4'];
27926     +         set $title4 $options['TITLE4'];
MPRINT(EM_REPORT_CREATE):   set $title4 $options['TITLE4'];
27927     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27928     +         unset $title4;
MPRINT(EM_REPORT_CREATE):   unset $title4;
27929     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27930     +
27931     +    do / if $options['ID'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ID'];
27932     +         set $id $options['ID'];
MPRINT(EM_REPORT_CREATE):   set $id $options['ID'];
27933     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27934     +         unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
27935     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27936     +
27937     +    do / if $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PARENT'];
27938     +         set $parent $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   set $parent $options['PARENT'];
27939     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27940     +         unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
27941     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27942     +
27943     +    do / if $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PARENT'];
27944     +         set $parent $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   set $parent $options['PARENT'];
27945     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27946     +         unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
27947     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27948     +
27949     +    do / if $options['ABOVETEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ABOVETEXT'];
27950     +         set $abovetext $options['ABOVETEXT'];
MPRINT(EM_REPORT_CREATE):   set $abovetext $options['ABOVETEXT'];
27951     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27952     +         unset $abovetext;
MPRINT(EM_REPORT_CREATE):   unset $abovetext;
27953     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27954     +
27955     +    do / if $options['BELOWTEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['BELOWTEXT'];
27956     +         set $belowtext $options['BELOWTEXT'];
MPRINT(EM_REPORT_CREATE):   set $belowtext $options['BELOWTEXT'];
27957     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27958     +         unset $belowtext;
MPRINT(EM_REPORT_CREATE):   unset $belowtext;
27959     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27960     +
27961     +    do / if $options['LINKWIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LINKWIDTH'];
27962     +         set $linkwidth $options['LINKWIDTH'];
MPRINT(EM_REPORT_CREATE):   set $linkwidth $options['LINKWIDTH'];
27963     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27964     +         unset $linkwidth;
MPRINT(EM_REPORT_CREATE):   unset $linkwidth;
27965     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27966     +
27967     +    do / if $options['NODECOLOR'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODECOLOR'];
27968     +         set $nodecolor $options['NODECOLOR'];
MPRINT(EM_REPORT_CREATE):   set $nodecolor $options['NODECOLOR'];
27969     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27970     +         unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
27971     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27972     +
27973     +    do / if $options['NODESIZE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODESIZE'];
27974     +         set $nodesize $options['NODESIZE'];
MPRINT(EM_REPORT_CREATE):   set $nodesize $options['NODESIZE'];
27975     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27976     +         unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
27977     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27978     +
27979     +    do / if $options['NODETEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODETEXT'];
27980     +         set $nodetext $options['NODETEXT'];
MPRINT(EM_REPORT_CREATE):   set $nodetext $options['NODETEXT'];
27981     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27982     +         unset $nodetext;
MPRINT(EM_REPORT_CREATE):   unset $nodetext;
27983     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27984     +
27985     +    do / if $options['PFDITEMS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PFDITEMS'];
27986     +         set $pfditems $options['PFDITEMS'];
MPRINT(EM_REPORT_CREATE):   set $pfditems $options['PFDITEMS'];
27987     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27988     +         unset $pfditems;
MPRINT(EM_REPORT_CREATE):   unset $pfditems;
27989     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27990     +
27991     +    do / if $options['GRIDSTYLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDSTYLE'];
27992     +         set $gridstyle $options['GRIDSTYLE'];
MPRINT(EM_REPORT_CREATE):   set $gridstyle $options['GRIDSTYLE'];
27993     +    else;
MPRINT(EM_REPORT_CREATE):   else;
27994     +         unset $gridstyle;
MPRINT(EM_REPORT_CREATE):   unset $gridstyle;
27995     +    done;
MPRINT(EM_REPORT_CREATE):   done;
27996     +
27997     +    do / if $options['GRIDHEIGHT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDHEIGHT'];
27998     +         set $gridheight $options['GRIDHEIGHT'];
MPRINT(EM_REPORT_CREATE):   set $gridheight $options['GRIDHEIGHT'];
27999     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28000     +         unset $gridheight;
MPRINT(EM_REPORT_CREATE):   unset $gridheight;
28001     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28002     +
28003     +    do / if $options['GRIDWIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDWIDTH'];
28004     +         set $gridwidth $options['GRIDWIDTH'];
MPRINT(EM_REPORT_CREATE):   set $gridwidth $options['GRIDWIDTH'];
28005     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28006     +         unset $gridwidth;
MPRINT(EM_REPORT_CREATE):   unset $gridwidth;
28007     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28008     +
28009     +    do / if $options['ISGRIDVISIBLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ISGRIDVISIBLE'];
28010     +         set $isGridVisible $options['ISGRIDVISIBLE'];
MPRINT(EM_REPORT_CREATE):   set $isGridVisible $options['ISGRIDVISIBLE'];
28011     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28012     +         unset $isGridVisible;
MPRINT(EM_REPORT_CREATE):   unset $isGridVisible;
28013     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28014     +
28015     +    do / if $options['LAYOUTACTIVATED'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LAYOUTACTIVATED'];
28016     +         set $layoutActivated $options['LAYOUTACTIVATED'];
MPRINT(EM_REPORT_CREATE):   set $layoutActivated $options['LAYOUTACTIVATED'];
28017     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28018     +         unset $layoutActivated;
MPRINT(EM_REPORT_CREATE):   unset $layoutActivated;
28019     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28020     +
28021     +    do / if $options['PIELABELDISPLAY'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PIELABELDISPLAY'];
28022     +         set $pieLabelDisplay $options['PIELABELDISPLAY'];
MPRINT(EM_REPORT_CREATE):   set $pieLabelDisplay $options['PIELABELDISPLAY'];
28023     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28024     +         unset $pieLabelDisplay;
MPRINT(EM_REPORT_CREATE):   unset $pieLabelDisplay;
28025     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28026     +
28027     +    do / if $options['COLORLIST'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLORLIST'];
28028     +         set $colorlist $options['COLORLIST'];
MPRINT(EM_REPORT_CREATE):   set $colorlist $options['COLORLIST'];
28029     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28030     +         unset $colorlist;
MPRINT(EM_REPORT_CREATE):   unset $colorlist;
28031     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28032     +
28033     +    do / if $options['COLORINDEX'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLORINDEX'];
28034     +         set $colorindex $options['COLORINDEX'];
MPRINT(EM_REPORT_CREATE):   set $colorindex $options['COLORINDEX'];
28035     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28036     +         unset $colorindex;
MPRINT(EM_REPORT_CREATE):   unset $colorindex;
28037     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28038     +
28039     +end;
MPRINT(EM_REPORT_CREATE):   end;
28040     +
28041     +define event doc;
MPRINT(EM_REPORT_CREATE):   define event doc;
28042     +   eval $silkindex 0;
MPRINT(EM_REPORT_CREATE):   eval $silkindex 0;
MPRINT(EM_REPORT_CREATE):   eval $level 0;
28043     +   eval $level 0;
28044     +end;
MPRINT(EM_REPORT_CREATE):   end;
28045     +
28046     +define event GraphStyle;
MPRINT(EM_REPORT_CREATE):   define event GraphStyle;
28047     +   pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28048     +   trigger StatXMLDecl;
MPRINT(EM_REPORT_CREATE):   trigger StatXMLDecl;
28049     +   put '<SASReport version="1.0" xmlns:style="http://www.sas.com/sasreportmodel/styles">' CR;
MPRINT(EM_REPORT_CREATE):   put '<SASReport version="1.0" xmlns:style="http://www.sas.com/sasreportmodel/styles">' CR;
28050     +   put '<style:Scheme name="StatGraphScheme" version="9.2">' CR;
MPRINT(EM_REPORT_CREATE):   put '<style:Scheme name="StatGraphScheme" version="9.2">' CR;
28051     +   trigger StatGraphScheme start;
MPRINT(EM_REPORT_CREATE):   trigger StatGraphScheme start;
28052     +   trigger StatDataDefaultScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatDataDefaultScheme;
28053     +   trigger StatTwoColorRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTwoColorRampScheme;
28054     +   trigger StatTwoColorAltRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTwoColorAltRampScheme;
28055     +   trigger StatThreeColorRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatThreeColorRampScheme;
28056     +   trigger StatThreeColorAltRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatThreeColorAltRampScheme;
28057     +   trigger StatAxisLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAxisLineScheme;
28058     +   trigger StatReferenceScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatReferenceScheme;
28059     +   trigger StatGridLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatGridLineScheme;
28060     +   trigger StatOutlineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatOutlineScheme;
28061     +   trigger StatBorderLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBorderLineScheme;
28062     +   trigger StatTitleTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTitleTextScheme;
28063     +   trigger StatFootnoteTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFootnoteTextScheme;
28064     +   trigger StatDataTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatDataTextScheme;
28065     +   trigger StatLabelTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatLabelTextScheme;
28066     +   trigger StatValueTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatValueTextScheme;
28067     +   trigger StatUnicodeTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatUnicodeTextScheme;
28068     +   trigger StatBackFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBackFillScheme;
28069     +   trigger StatWallFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatWallFillScheme;
28070     +   trigger StatFloorFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFloorFillScheme;
28071     +   trigger StatLegendFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatLegendFillScheme;
28072     +   trigger StatHeaderFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatHeaderFillScheme;
28073     +   trigger StatOutlierScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatOutlierScheme;
28074     +   trigger StatFitScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFitScheme;
28075     +   trigger StatFit2Scheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFit2Scheme;
28076     +   trigger StatPredictionScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatPredictionScheme;
28077     +   trigger StatConfidenceScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConfidenceScheme;
28078     +   trigger StatConfidence2Scheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConfidence2Scheme;
28079     +   trigger StatPredictionLimitsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatPredictionLimitsScheme;
28080     +   trigger StatErrorScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatErrorScheme;
28081     +   trigger StatBoxMedianScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxMedianScheme;
28082     +   trigger StatBoxMeanScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxMeanScheme;
28083     +   trigger StatBoxWhiskerScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxWhiskerScheme;
28084     +   trigger StatBoxScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxScheme;
28085     +   trigger StatHistogramScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatHistogramScheme;
28086     +   trigger StatBandScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBandScheme;
28087     +   trigger StatContourScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatContourScheme;
28088     +   trigger StatEllipseScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatEllipseScheme;
28089     +   trigger StatAnnoLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoLineScheme;
28090     +   trigger StatAnnoTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoTextScheme;
28091     +   trigger StatAnnoShapeScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoShapeScheme;
28092     +   trigger StatSelectionScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatSelectionScheme;
28093     +   trigger StatConnectLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConnectLineScheme;
28094     +   trigger StatMissingScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatMissingScheme;
28095     +   trigger StatControlLimitsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatControlLimitsScheme;
28096     +   trigger StatRunTestScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatRunTestScheme;
28097     +   trigger StatStarsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatStarsScheme;
28098     +   trigger StatClippingScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatClippingScheme;
28099     +   trigger StatBlockScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBlockScheme;
28100     +   trigger StatAltBlockScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAltBlockScheme;
28101     +   trigger GraphDataStyle1;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle1;
28102     +   trigger GraphDataStyle2 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle2 / if !$stopDataStyles;
28103     +   trigger GraphDataStyle3 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle3 / if !$stopDataStyles;
28104     +   trigger GraphDataStyle4 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle4 / if !$stopDataStyles;
28105     +   trigger GraphDataStyle5 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle5 / if !$stopDataStyles;
28106     +   trigger GraphDataStyle6 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle6 / if !$stopDataStyles;
28107     +   trigger GraphDataStyle7 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle7 / if !$stopDataStyles;
28108     +   trigger GraphDataStyle8 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle8 / if !$stopDataStyles;
28109     +   trigger GraphDataStyle9 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle9 / if !$stopDataStyles;
28110     +   trigger GraphDataStyle10 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle10 / if !$stopDataStyles;
28111     +   trigger GraphDataStyle11 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle11 / if !$stopDataStyles;
28112     +   trigger GraphDataStyle12 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle12 / if !$stopDataStyles;
28113     +   trigger GraphDataStyle13 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle13 / if !$stopDataStyles;
28114     +   trigger GraphDataStyle14 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle14 / if !$stopDataStyles;
28115     +   trigger GraphDataStyle15 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle15 / if !$stopDataStyles;
28116     +   trigger StatGraphScheme finish;
MPRINT(EM_REPORT_CREATE):   trigger StatGraphScheme finish;
28117     +   put '</style:Scheme>' CR;
MPRINT(EM_REPORT_CREATE):   put '</style:Scheme>' CR;
28118     +   unset $stopDataStyles;
MPRINT(EM_REPORT_CREATE):   unset $stopDataStyles;
28119     +end;
MPRINT(EM_REPORT_CREATE):   end;
28120     +
28121     +%macro dataStyleAttrs(index);
28122     +    do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
28123     +        set $stopDataStyles 'true';
28124     +        break;
28125     +    done;
28126     +    put '<style:Style context="GraphDataStyle' &index '"';
28127     +    putq " color=" COLOR;
28128     +    putq " altColor=" CONTRASTCOLOR;
28129     +    putq " fillColor=" COLOR;
28130     +    putq " textColor=" CONTRASTCOLOR;
28131     +    putq " lineStyle=" LINESTYLE;
28132     +    putq " lineColor=" CONTRASTCOLOR;
28133     +    putq " markerSymbol=" MARKERSYMBOL;
28134     +    putq " markerColor=" CONTRASTCOLOR;
28135     +    put "/>" NL;
28136     +%mend;
28137     +
28138     + define event GraphDataStyle1;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle1;
28139     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28140     +    style=GraphData1;
MPRINT(EM_REPORT_CREATE):   style=GraphData1;
28141     +    %dataStyleAttrs(1);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 1 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28142     + end;
MPRINT(EM_REPORT_CREATE):   end;
28143     + define event GraphDataStyle2;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle2;
28144     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28145     +    style=GraphData2;
MPRINT(EM_REPORT_CREATE):   style=GraphData2;
28146     +    %dataStyleAttrs(2);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 2 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28147     + end;
MPRINT(EM_REPORT_CREATE):   end;
28148     +define event GraphDataStyle3;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle3;
28149     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28150     +    style=GraphData3;
MPRINT(EM_REPORT_CREATE):   style=GraphData3;
28151     +    %dataStyleAttrs(3);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 3 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28152     + end;
MPRINT(EM_REPORT_CREATE):   end;
28153     + define event GraphDataStyle4;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle4;
28154     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28155     +    style=GraphData4;
MPRINT(EM_REPORT_CREATE):   style=GraphData4;
28156     +    %dataStyleAttrs(4);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 4 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28157     + end;
MPRINT(EM_REPORT_CREATE):   end;
28158     + define event GraphDataStyle5;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle5;
28159     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28160     +    style=GraphData5;
MPRINT(EM_REPORT_CREATE):   style=GraphData5;
28161     +    %dataStyleAttrs(5);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 5 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28162     + end;
MPRINT(EM_REPORT_CREATE):   end;
28163     + define event GraphDataStyle6;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle6;
28164     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28165     +    style=GraphData6;
MPRINT(EM_REPORT_CREATE):   style=GraphData6;
28166     +    %dataStyleAttrs(6);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 6 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28167     + end;
MPRINT(EM_REPORT_CREATE):   end;
28168     + define event GraphDataStyle7;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle7;
28169     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28170     +    style=GraphData7;
MPRINT(EM_REPORT_CREATE):   style=GraphData7;
28171     +    %dataStyleAttrs(7);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 7 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28172     + end;
MPRINT(EM_REPORT_CREATE):   end;
28173     + define event GraphDataStyle8;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle8;
28174     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28175     +    style=GraphData8;
MPRINT(EM_REPORT_CREATE):   style=GraphData8;
28176     +    %dataStyleAttrs(8);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 8 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28177     + end;
MPRINT(EM_REPORT_CREATE):   end;
28178     + define event GraphDataStyle9;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle9;
28179     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28180     +    style=GraphData9;
MPRINT(EM_REPORT_CREATE):   style=GraphData9;
28181     +    %dataStyleAttrs(9);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 9 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28182     + end;
MPRINT(EM_REPORT_CREATE):   end;
28183     + define event GraphDataStyle10;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle10;
28184     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28185     +    style=GraphData10;
MPRINT(EM_REPORT_CREATE):   style=GraphData10;
28186     +    %dataStyleAttrs(10);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 10 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28187     + end;
MPRINT(EM_REPORT_CREATE):   end;
28188     + define event GraphDataStyle11;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle11;
28189     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28190     +    style=GraphData11;
MPRINT(EM_REPORT_CREATE):   style=GraphData11;
28191     +    %dataStyleAttrs(11);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 11 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28192     + end;
MPRINT(EM_REPORT_CREATE):   end;
28193     + define event GraphDataStyle12;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle12;
28194     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28195     +    style=GraphData12;
MPRINT(EM_REPORT_CREATE):   style=GraphData12;
28196     +    %dataStyleAttrs(12);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 12 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28197     + end;
MPRINT(EM_REPORT_CREATE):   end;
28198     + define event GraphDataStyle13;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle13;
28199     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28200     +    style=GraphData13;
MPRINT(EM_REPORT_CREATE):   style=GraphData13;
28201     +    %dataStyleAttrs(13);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 13 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28202     + end;
MPRINT(EM_REPORT_CREATE):   end;
28203     + define event GraphDataStyle14;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle14;
28204     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28205     +    style=GraphData14;
MPRINT(EM_REPORT_CREATE):   style=GraphData14;
28206     +    %dataStyleAttrs(14);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 14 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28207     + end;
MPRINT(EM_REPORT_CREATE):   end;
28208     + define event GraphDataStyle15;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle15;
28209     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28210     +    style=GraphData15;
MPRINT(EM_REPORT_CREATE):   style=GraphData15;
28211     +    %dataStyleAttrs(15);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 15 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28212     + end;
MPRINT(EM_REPORT_CREATE):   end;
28213     +
28214     +define event BeginGraph;
MPRINT(EM_REPORT_CREATE):   define event BeginGraph;
28215     +putlog "BeginGraph";
MPRINT(EM_REPORT_CREATE):   putlog "BeginGraph";
28216     +   trigger GraphStyle;
MPRINT(EM_REPORT_CREATE):   trigger GraphStyle;
28217     +   put '<View>' CR;
MPRINT(EM_REPORT_CREATE):   put '<View>' CR;
28218     +   put '<StatGraph';
MPRINT(EM_REPORT_CREATE):   put '<StatGraph';
28219     +   put ' version="9.2_S2DVR"';
MPRINT(EM_REPORT_CREATE):   put ' version="9.2_S2DVR"';
28220     +   putq " designHeight=" $graphheight;
MPRINT(EM_REPORT_CREATE):   putq " designHeight=" $graphheight;
28221     +   putq " designWidth=" $graphwidth;
MPRINT(EM_REPORT_CREATE):   putq " designWidth=" $graphwidth;
28222     +   put ' style:style="StatGraphStyle';
MPRINT(EM_REPORT_CREATE):   put ' style:style="StatGraphStyle';
28223     +   put anchor '"';
MPRINT(EM_REPORT_CREATE):   put anchor '"';
28224     +   put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
28225     +   set $graph_started "true";
MPRINT(EM_REPORT_CREATE):   set $graph_started "true";
28226     +   eval $level 0;
MPRINT(EM_REPORT_CREATE):   eval $level 0;
28227     +end;
MPRINT(EM_REPORT_CREATE):   end;
28228     +
28229     +define event LayoutOverlay;
MPRINT(EM_REPORT_CREATE):   define event LayoutOverlay;
28230     +   start:
28231     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28232     +      put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
28233     +      put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
28234     +      put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
28235     +      put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
28236     +      put '<LayoutOverlay>' CR;
MPRINT(EM_REPORT_CREATE):   put '<LayoutOverlay>' CR;
28237     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title2;
28238     +      unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title3;
28239     +      unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title4;
28240     +      unset $title3;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutOverlay>' CR;
28241     +      unset $title4;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28242     +   finish:
28243     +      put '</LayoutOverlay>' CR;
28244     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28245     +      trigger EndGraph / if $level=0;
28246     +end;
MPRINT(EM_REPORT_CREATE):   end;
28247     +
28248     +define event LayoutRegion;
MPRINT(EM_REPORT_CREATE):   define event LayoutRegion;
28249     +   start:
28250     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28251     +      put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
28252     +      put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
28253     +      put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
28254     +      put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
28255     +      put '<LayoutRegion>' CR;
MPRINT(EM_REPORT_CREATE):   put '<LayoutRegion>' CR;
28256     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title2;
28257     +      unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title3;
28258     +      unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title4;
28259     +      unset $title3;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutRegion>' CR;
28260     +      unset $title4;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28261     +   finish:
28262     +      put '</LayoutRegion>' CR;
28263     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28264     +      trigger EndGraph / if $level=0;
28265     +end;
MPRINT(EM_REPORT_CREATE):   end;
28266     +
28267     +define event LayoutLattice;
MPRINT(EM_REPORT_CREATE):   define event LayoutLattice;
28268     +   start:
28269     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28270     +      put '<LayoutLattice';
MPRINT(EM_REPORT_CREATE):   put '<LayoutLattice';
28271     +      putq " rows=" $rows;
MPRINT(EM_REPORT_CREATE):   putq " rows=" $rows;
28272     +      putq " columns=" $columns;
MPRINT(EM_REPORT_CREATE):   putq " columns=" $columns;
28273     +      put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
28274     +      unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
28275     +      unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
28276     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutLattice>' CR;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28277     +   finish:
28278     +      put '</LayoutLattice>' CR;
28279     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28280     +      trigger EndGraph / if $level=0;
28281     +end;
MPRINT(EM_REPORT_CREATE):   end;
28282     +
28283     +define event LayoutGridded;
MPRINT(EM_REPORT_CREATE):   define event LayoutGridded;
28284     +   start:
28285     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28286     +      put '<LayoutGridded';
MPRINT(EM_REPORT_CREATE):   put '<LayoutGridded';
28287     +      putq " rows=" $rows;
MPRINT(EM_REPORT_CREATE):   putq " rows=" $rows;
28288     +      putq " columns=" $columns;
MPRINT(EM_REPORT_CREATE):   putq " columns=" $columns;
28289     +      put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
28290     +      unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
28291     +      unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
28292     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutGridded>' CR;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28293     +   finish:
28294     +      put '</LayoutGridded>' CR;
28295     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28296     +      trigger EndGraph / if $level=0;
28297     +end;
MPRINT(EM_REPORT_CREATE):   end;
28298     +
28299     +define event EndGraph;
MPRINT(EM_REPORT_CREATE):   define event EndGraph;
28300     +   put '</StatGraph>' CR;
MPRINT(EM_REPORT_CREATE):   put '</StatGraph>' CR;
28301     +   put '</View>' CR;
MPRINT(EM_REPORT_CREATE):   put '</View>' CR;
28302     +   put "</SASReport>" CR;
MPRINT(EM_REPORT_CREATE):   put "</SASReport>" CR;
28303     +   unset $graph_started;
MPRINT(EM_REPORT_CREATE):   unset $graph_started;
28304     +end;
MPRINT(EM_REPORT_CREATE):   end;
28305     +
28306     +define event ScatterPlot;
MPRINT(EM_REPORT_CREATE):   define event ScatterPlot;
28307     +   put '<ScatterPlot';
MPRINT(EM_REPORT_CREATE):   put '<ScatterPlot';
28308     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28309     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28310     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28311     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28312     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28313     +end;
MPRINT(EM_REPORT_CREATE):   end;
28314     +
28315     +define event SeriesPlot;
MPRINT(EM_REPORT_CREATE):   define event SeriesPlot;
28316     +   put '<SeriesPlot';
MPRINT(EM_REPORT_CREATE):   put '<SeriesPlot';
28317     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28318     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28319     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28320     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28321     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28322     +end;
MPRINT(EM_REPORT_CREATE):   end;
28323     +
28324     +define event BandPlot;
MPRINT(EM_REPORT_CREATE):   define event BandPlot;
28325     +   put '<BandPlot';
MPRINT(EM_REPORT_CREATE):   put '<BandPlot';
28326     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28327     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28328     +   put ' limitUpper="StatGraphDataIDX#' $limitupper '"' / if $limitupper;
MPRINT(EM_REPORT_CREATE):   put ' limitUpper="StatGraphDataIDX#' $limitupper '"' / if $limitupper;
28329     +   put ' limitLower="StatGraphDataIDX#' $limitlower '"' / if $limitlower;
MPRINT(EM_REPORT_CREATE):   put ' limitLower="StatGraphDataIDX#' $limitlower '"' / if $limitlower;
28330     +   putq " lineAttrs=" $style;
MPRINT(EM_REPORT_CREATE):   putq " lineAttrs=" $style;
28331     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28332     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28333     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28334     +end;
MPRINT(EM_REPORT_CREATE):   end;
28335     +
28336     +define event Pie;
MPRINT(EM_REPORT_CREATE):   define event Pie;
28337     +   put '<Pie';
MPRINT(EM_REPORT_CREATE):   put '<Pie';
28338     +   put ' category="StatGraphDataIDX#' $category '"' / if $category;
MPRINT(EM_REPORT_CREATE):   put ' category="StatGraphDataIDX#' $category '"' / if $category;
28339     +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
28340     +   putq " pieLabelComponents=" $pieLabelDisplay;
MPRINT(EM_REPORT_CREATE):   putq " pieLabelComponents=" $pieLabelDisplay;
28341     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28342     +   unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
28343     +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
28344     +end;
MPRINT(EM_REPORT_CREATE):   end;
28345     +
28346     +define event Bar;
MPRINT(EM_REPORT_CREATE):   define event Bar;
28347     +   put '<Bar';
MPRINT(EM_REPORT_CREATE):   put '<Bar';
28348     +   put ' category="StatGraphDataIDX#' $category '"' / if $category;
MPRINT(EM_REPORT_CREATE):   put ' category="StatGraphDataIDX#' $category '"' / if $category;
28349     +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
28350     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28351     +   unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
28352     +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
28353     +end;
MPRINT(EM_REPORT_CREATE):   end;
28354     +
28355     +define event Histogram;
MPRINT(EM_REPORT_CREATE):   define event Histogram;
28356     +   put '<Histogram';
MPRINT(EM_REPORT_CREATE):   put '<Histogram';
28357     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28358     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28359     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28360     +end;
MPRINT(EM_REPORT_CREATE):   end;
28361     +
28362     +define event DecisionTree;
MPRINT(EM_REPORT_CREATE):   define event DecisionTree;
28363     +   put '<DecisionTree';
MPRINT(EM_REPORT_CREATE):   put '<DecisionTree';
28364     +   put ' id="StatGraphDataIDX#' $id '"' / if $id;
MPRINT(EM_REPORT_CREATE):   put ' id="StatGraphDataIDX#' $id '"' / if $id;
28365     +   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
MPRINT(EM_REPORT_CREATE):   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
28366     +   put ' aboveText="StatGraphDataIDX#' $abovetext '"' / if $abovetext;
MPRINT(EM_REPORT_CREATE):   put ' aboveText="StatGraphDataIDX#' $abovetext '"' / if $abovetext;
28367     +   put ' belowText="StatGraphDataIDX#' $belowtext '"' / if $belowtext;
MPRINT(EM_REPORT_CREATE):   put ' belowText="StatGraphDataIDX#' $belowtext '"' / if $belowtext;
28368     +   put ' linkWidth="StatGraphDataIDX#' $linkwidth '"' / if $linkwidth;
MPRINT(EM_REPORT_CREATE):   put ' linkWidth="StatGraphDataIDX#' $linkwidth '"' / if $linkwidth;
28369     +   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
MPRINT(EM_REPORT_CREATE):   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
28370     +   put ' nodeText="StatGraphDataIDX#' $nodetext '"' / if $nodetext;
MPRINT(EM_REPORT_CREATE):   put ' nodeText="StatGraphDataIDX#' $nodetext '"' / if $nodetext;
28371     +   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
MPRINT(EM_REPORT_CREATE):   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
28372     +   put ' fitToRegion="true"';
MPRINT(EM_REPORT_CREATE):   put ' fitToRegion="true"';
28373     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28374     +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28375     +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28376     +   unset $abovetext;
MPRINT(EM_REPORT_CREATE):   unset $abovetext;
28377     +   unset $belowtext;
MPRINT(EM_REPORT_CREATE):   unset $belowtext;
28378     +   unset $linkwidth;
MPRINT(EM_REPORT_CREATE):   unset $linkwidth;
28379     +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28380     +   unset $nodetext;
MPRINT(EM_REPORT_CREATE):   unset $nodetext;
28381     +end;
MPRINT(EM_REPORT_CREATE):   end;
28382     +
28383     +define event Icicle;
MPRINT(EM_REPORT_CREATE):   define event Icicle;
28384     +   put '<Icicle';
MPRINT(EM_REPORT_CREATE):   put '<Icicle';
28385     +   put ' id="StatGraphDataIDX#' $id '"' / if $id;
MPRINT(EM_REPORT_CREATE):   put ' id="StatGraphDataIDX#' $id '"' / if $id;
28386     +   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
MPRINT(EM_REPORT_CREATE):   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
28387     +   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
MPRINT(EM_REPORT_CREATE):   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
28388     +   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
MPRINT(EM_REPORT_CREATE):   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
28389     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28390     +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28391     +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28392     +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28393     +   unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
28394     +end;
MPRINT(EM_REPORT_CREATE):   end;
28395     +
28396     +define event PFD;
MPRINT(EM_REPORT_CREATE):   define event PFD;
28397     +   put '<PFD';
MPRINT(EM_REPORT_CREATE):   put '<PFD';
28398     +   putq " id=" $id / if $id;
MPRINT(EM_REPORT_CREATE):   putq " id=" $id / if $id;
28399     +   put ' pfditems="StatGraphDataIDX#' $pfdItems '"' / if $pfdItems;
MPRINT(EM_REPORT_CREATE):   put ' pfditems="StatGraphDataIDX#' $pfdItems '"' / if $pfdItems;
28400     +   putq " isGridVisible=" $isgridvisible / if $isgridvisible;
MPRINT(EM_REPORT_CREATE):   putq " isGridVisible=" $isgridvisible / if $isgridvisible;
28401     +   putq " gridHeight=" $gridheight / if $gridheight;
MPRINT(EM_REPORT_CREATE):   putq " gridHeight=" $gridheight / if $gridheight;
28402     +   putq " gridWidth=" $gridwidth / if $gridwidth;
MPRINT(EM_REPORT_CREATE):   putq " gridWidth=" $gridwidth / if $gridwidth;
28403     +   putq " gridStyle=" $gridstyle / if $gridstyle;
MPRINT(EM_REPORT_CREATE):   putq " gridStyle=" $gridstyle / if $gridstyle;
28404     +   putq " layoutActivated=" $layoutActivated / if $layoutActivated;
MPRINT(EM_REPORT_CREATE):   putq " layoutActivated=" $layoutActivated / if $layoutActivated;
28405     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28406     +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28407     +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28408     +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28409     +   unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
28410     +end;
MPRINT(EM_REPORT_CREATE):   end;
28411     +
28412     +define event HeatMap;
MPRINT(EM_REPORT_CREATE):   define event HeatMap;
28413     +   trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   trigger BeginGraph / if !$graph_started;
28414     +   put '<HeatmapClassic';
MPRINT(EM_REPORT_CREATE):   put '<HeatmapClassic';
28415     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28416     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28417     +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
28418     +   putq ' colorList=' $colorlist / if $colorlist;
MPRINT(EM_REPORT_CREATE):   putq ' colorList=' $colorlist / if $colorlist;
28419     +   putq ' colorIndex=' $colorindex / if $colorindex;
MPRINT(EM_REPORT_CREATE):   putq ' colorIndex=' $colorindex / if $colorindex;
28420     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28421     +   trigger EndGraph / if $level=0;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28422     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $response;
28423     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $colorlist;
28424     +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $colorindex;
28425     +   unset $colorlist;
28426     +   unset $colorindex;
28427     +end;
MPRINT(EM_REPORT_CREATE):   end;
28428     +
28429     +end;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: TAGSET 'Tagsets.Gtl' has been saved to: WORK.TEMPLAT
28430     +run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_CREATE):   run;
28431     +
28432     +
28433     +
28434     +
28435     +
28436     +
28437     +/* data_template.sas */
28438     +proc template;
MPRINT(EM_REPORT_CREATE):   proc template;
28439     +define statgraph dataonly / store=work.templat;
MPRINT(EM_REPORT_CREATE):   define statgraph dataonly / store=work.templat;
28440     +dynamic dummy1 dummy2 var1 var2 var3 var4 var5 var6 var7 var8 var9 var10;
MPRINT(EM_REPORT_CREATE):   dynamic dummy1 dummy2 var1 var2 var3 var4 var5 var6 var7 var8 var9 var10;
28441     +begingraph;
MPRINT(EM_REPORT_CREATE):   begingraph;
28442     +if (0)
28443     +layout overlay;
MPRINT(EM_REPORT_CREATE):   if (0) layout overlay;
28444     +   scatterplot x=dummy1 y=dummy2 /
28445     +      rolename=(a=var1 b=var2 c=var3 d=var4 e=var5 f=var6 g=var7 h=var8 i=var9 j=var10);
MPRINT(EM_REPORT_CREATE):   scatterplot x=dummy1 y=dummy2 / rolename=(a=var1 b=var2 c=var3 d=var4 e=var5 f=var6 g=var7 h=var8 i=var9 j=var10);
28446     +endlayout;
MPRINT(EM_REPORT_CREATE):   endlayout;
28447     +endif;
MPRINT(EM_REPORT_CREATE):   endif;
28448     +endgraph;
MPRINT(EM_REPORT_CREATE):   endgraph;
28449     +end;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: STATGRAPH 'Dataonly' has been saved to: WORK.TEMPLAT
28450     +run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   run;
28451     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Report")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REPORT';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   ;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   length KEY $32 TYPE $10 FILE $200 FOLDER $32 EXTENSION $8 AUTODELETE $1 property $1 action $8 cas $1;
MPRINT(EM_REGISTER):   key = upcase("REPORT");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "REPORT";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "pdf";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   run;

NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_PATH):   proc display c=sashelp.emutil.path.scl;
MPRINT(EM_PATH):   run;

28452      data emreportpath;
MPRINT(EM_PATH):   data emreportpath;
28453      length nodelabel $32 component $32;
MPRINT(EM_PATH):   length nodelabel $32 component $32;
28454      nodelabel="Ids";
MPRINT(EM_PATH):   nodelabel="Ids";
28455      component="DataSource";
MPRINT(EM_PATH):   component="DataSource";
28456      output;
MPRINT(EM_PATH):   output;
28457      nodelabel="Filter";
MPRINT(EM_PATH):   nodelabel="Filter";
28458      component="Filter";
MPRINT(EM_PATH):   component="Filter";
28459      output;
MPRINT(EM_PATH):   output;
28460      nodelabel="Smpl";
MPRINT(EM_PATH):   nodelabel="Smpl";
28461      component="Sample";
MPRINT(EM_PATH):   component="Sample";
28462      output;
MPRINT(EM_PATH):   output;
28463      nodelabel="Clus6";
MPRINT(EM_PATH):   nodelabel="Clus6";
28464      component="Cluster";
MPRINT(EM_PATH):   component="Cluster";
28465      output;
MPRINT(EM_PATH):   output;
28466      nodelabel="Clus5";
MPRINT(EM_PATH):   nodelabel="Clus5";
28467      component="Cluster";
MPRINT(EM_PATH):   component="Cluster";
28468      output;
MPRINT(EM_PATH):   output;
28469      nodelabel="Clus2";
MPRINT(EM_PATH):   nodelabel="Clus2";
28470      component="Cluster";
MPRINT(EM_PATH):   component="Cluster";
28471      output;
MPRINT(EM_PATH):   output;
28472      nodelabel="Clus4";
MPRINT(EM_PATH):   nodelabel="Clus4";
28473      component="Cluster";
MPRINT(EM_PATH):   component="Cluster";
28474      output;
MPRINT(EM_PATH):   output;
28475      nodelabel="Clus3";
MPRINT(EM_PATH):   nodelabel="Clus3";
28476      component="Cluster";
MPRINT(EM_PATH):   component="Cluster";
28477      output;
MPRINT(EM_PATH):   output;
28478      nodelabel="Clus";
MPRINT(EM_PATH):   nodelabel="Clus";
28479      component="Cluster";
MPRINT(EM_PATH):   component="Cluster";
28480      output;
MPRINT(EM_PATH):   output;
28481      run;
MPRINT(EM_PATH):   run;

NOTE: The data set WORK.EMREPORTPATH has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_PATH):   
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   data emreportpath;
MPRINT(EM_REPORT_CREATE):   set emreportpath;
MPRINT(EM_REPORT_CREATE):   rename nodelabel=nodeid;
MPRINT(EM_REPORT_CREATE):   nodeIndex = _n_;
MPRINT(EM_REPORT_CREATE):   run;

NOTE: There were 9 observations read from the data set WORK.EMREPORTPATH.
NOTE: The data set WORK.EMREPORTPATH has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   *** create new style template to address fonts in ods text;
MPRINT(EM_REPORT_CREATE):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_CREATE):   proc template ;
MPRINT(EM_REPORT_CREATE):   define style styles.em_style / store=work.templat;
MPRINT(EM_REPORT_CREATE):   parent= styles.LISTING;
MPRINT(EM_REPORT_CREATE):   style usertext from usertext / foreground=black font_size=10 pt font_face="Arial" font_weight=bold ;
MPRINT(EM_REPORT_CREATE):   style systemtitle from systemtitle / color=colors("systitlefg") backgroundcolor=colors("systitlebg") fontsize=10 pt font_face="Arial" font_weight=bold ;
MPRINT(EM_REPORT_CREATE):   style systemfooter from systemfooter / color=colors("systitlefg") backgroundcolor=colors("systitlebg") font_face="Arial" ;
MPRINT(EM_REPORT_CREATE):   style GraphFonts from GraphFonts / 'GraphTitleFont' = ("Arial", 10 pt) 'GraphTitle1Font' = ("Arial", 10 pt) 'GraphLabelFont' = ("Arial", 8 pt) 'GraphFootnoteFont' = ("Arial", 6 pt) 'GraphValueFont' = ("Arial", 6 pt) 
'GraphDataFont' = ("Arial", 6 pt) ;
MPRINT(EM_REPORT_CREATE):   style Fonts from Fonts/ 'TitleFont' = ("Arial", 10 pt) 'TitleFont2' = ("Arial", 10 pt) 'StrongFont' = ("Arial", 6 pt) 'EmphasisFont' = ("Arial", 6 pt) 'headingFont' = ("Arial", 6 pt) 'headingEmphasisFont' = ("Arial", 6 pt) 
'FixedEmphasisFont' = ("Arial", 6 pt) 'FixedStrongFont' = ("Arial", 6 pt) 'FixedHeadingFont' = ("Arial", 6 pt) 'FixedFont' = ("Arial", 6 pt) 'BatchFixedFont' = ("Arial", 6 pt) 'docFont' = ("Arial", 6 pt) ;
MPRINT(EM_REPORT_CREATE):   style GraphTitleText from GraphTitleText / font_face="Arial";
MPRINT(EM_REPORT_CREATE):   style data from data / font_size=6 pt;
MPRINT(EM_REPORT_CREATE):   style header from header / font_size=8 pt;
MPRINT(EM_REPORT_CREATE):   style rowheader from header;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: STYLE 'Styles.Em_style' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   run;
MPRINT(EM_REPORT_CREATE):   quit;
MPRINT(EM_REPORT_CREATE):   *** options for page layout;
MPRINT(EM_REPORT_CREATE):   options nodate nocenter number ls=97 ;
MPRINT(EM_REPORT_CREATE):   *** get file name;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   *** turn off LISTING and turn on the specified destination;
MPRINT(EM_REPORT_CREATE):   ods listing close;
MPRINT(EM_REPORT_CREATE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_CREATE):   ods PDF 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\REPORT.pdf" style=styles.em_style startpage=NO uniform NOTOC ;
NOTE: Writing ODS PDF output to DISK destination 
      "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspa
      ces\EMWS1\Report\REPORT.pdf", printer "PDF".
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this 
      session.
MPRINT(EM_REPORT_CREATE):   *** titles and footnotes;
MPRINT(EM_REPORT_CREATE):   ods PDF text=" ";
MPRINT(EM_REPORT_CREATE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   ods proclabel "Report Information";
MPRINT(EM_REPORT_CREATE):   data _null_;
MPRINT(EM_REPORT_CREATE):   call symput('report_date', strip(put(date(), NLDATE.)));
MPRINT(EM_REPORT_CREATE):   call symput('report_time', strip(put(datetime(), NLTIME.)));
MPRINT(EM_REPORT_CREATE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_CREATE):   data _null_;
MPRINT(EM_REPORT_CREATE):   file print ;
MPRINT(EM_REPORT_CREATE):   put "User       = bkris2" ;
MPRINT(EM_REPORT_CREATE):   put "Date       = 09:07:50  March 04" ;
MPRINT(EM_REPORT_CREATE):   put "Project    = ZetaExploratoryAnalysis " ;
MPRINT(EM_REPORT_CREATE):   put "Diagram    = ExploratoryAnalysis" / ;
MPRINT(EM_REPORT_CREATE):   put "Start Node = Report";
MPRINT(EM_REPORT_CREATE):   put "Node label = Reporter" ;
MPRINT(EM_REPORT_CREATE):   put "Nodes      = PATH" ;
MPRINT(EM_REPORT_CREATE):   put "Showall    = N" /;
MPRINT(EM_REPORT_CREATE):   put "Format     = PDF" ;
MPRINT(EM_REPORT_CREATE):   put "Style      = LISTING" /;
MPRINT(EM_REPORT_CREATE):   run ;

NOTE: 10 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   set WORK.EM_USER_KEY end=eof;
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   if eof then do;
MPRINT(EM_REGISTER):   key = upcase("PFD");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "PFD";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "xml";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   end;
MPRINT(EM_REGISTER):   run;

NOTE: There were 1 observations read from the data set WORK.EM_USER_KEY.
NOTE: The data set WORK.EM_USER_KEY has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_WORKSPACE_XML):  ;
MPRINT(EM_REPORT_WORKSPACE_XML):  ;
MPRINT(EM_REPORT_WORKSPACE_XML):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Report\PFD.xml" encoding="utf-8" NOBOM;
MPRINT(EM_REPORT_WORKSPACE_XML):   data _null_;
MPRINT(EM_REPORT_WORKSPACE_XML):   file x;
MPRINT(EM_REPORT_WORKSPACE_XML):   set EMWS1.EM_NODEID;
MPRINT(EM_REPORT_WORKSPACE_XML):   length string $400;
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "&", "&amp;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "<", "&lt;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, ">", "&gt;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "'", "&#39;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, '"', '&quot;');
MPRINT(EM_REPORT_WORKSPACE_XML):   string = cats('<PFDNode x="',X,'" y="',Y,'" id="',NODEID,'" 
title="',LABEL,'"></PFDNode>');
MPRINT(EM_REPORT_WORKSPACE_XML):   put string;
MPRINT(EM_REPORT_WORKSPACE_XML):   run;

NOTE: The file X is:
      
      Filename=\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis
      \Workspaces\EMWS1\Report\PFD.xml,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=04Mar2024:09:07:50,
      Create Time=04Mar2024:09:07:50

NOTE: 12 records were written to the file X.
      The minimum record length was 60.
      The maximum record length was 78.
NOTE: There were 12 observations read from the data set EMWS1.EM_NODEID.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_WORKSPACE_XML):   data _null_;
MPRINT(EM_REPORT_WORKSPACE_XML):   file x mod;
MPRINT(EM_REPORT_WORKSPACE_XML):   set EMWS1.EM_DGRAPH(where=(TO ne ""));
MPRINT(EM_REPORT_WORKSPACE_XML):   length string $400;
MPRINT(EM_REPORT_WORKSPACE_XML):   string = cats("<PFDLink id='",_N_,"' fromId='",FROM,"' 
toId='",TO,"'></PFDLink>");
MPRINT(EM_REPORT_WORKSPACE_XML):   put string;
MPRINT(EM_REPORT_WORKSPACE_XML):   run;

NOTE: The file X is:
      
      Filename=\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis
      \Workspaces\EMWS1\Report\PFD.xml,
      RECFM=V,LRECL=131068,File Size (bytes)=860,
      Last Modified=04Mar2024:09:07:50,
      Create Time=04Mar2024:09:07:50

NOTE: 15 records were written to the file X.
      The minimum record length was 53.
      The maximum record length was 57.
NOTE: There were 15 observations read from the data set EMWS1.EM_DGRAPH.
      WHERE TO not = ' ';
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_WORKSPACE_XML):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_MAKEDS):   data xmldata(keep=PFDItemList);
MPRINT(EM_REPORT_MAKEDS):   infile xmlref recfm=v lrecl=78 length=len;
MPRINT(EM_REPORT_MAKEDS):   length PFDItemList $256;
MPRINT(EM_REPORT_MAKEDS):   input record $varying5000. len;
MPRINT(EM_REPORT_MAKEDS):   recordNum+1;
MPRINT(EM_REPORT_MAKEDS):   do start=1 to len by 256 ;
MPRINT(EM_REPORT_MAKEDS):   end=start+256;
MPRINT(EM_REPORT_MAKEDS):   *put recordNum= start= end=;
MPRINT(EM_REPORT_MAKEDS):   PFDItemList=substr(record,start,end);
MPRINT(EM_REPORT_MAKEDS):   output;
MPRINT(EM_REPORT_MAKEDS):   end;
MPRINT(EM_REPORT_MAKEDS):   run;

NOTE: The infile XMLREF is:
      
      Filename=\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis
      \Workspaces\EMWS1\Report\PFD.xml,
      RECFM=V,LRECL=312,File Size (bytes)=1712,
      Last Modified=04Mar2024:09:07:50,
      Create Time=04Mar2024:09:07:50

NOTE: 27 records were read from the infile XMLREF.
      The minimum record length was 53.
      The maximum record length was 78.
NOTE: The data set WORK.XMLDATA has 27 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   data temp;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   set EMWS1.EM_NODEID;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   if X = -1 AND Y= - 1 then delete;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;

NOTE: There were 12 observations read from the data set EMWS1.EM_NODEID.
NOTE: The data set WORK.TEMP has 12 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_WORKSPACE_RENDER):   title1;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title2;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title3;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_WORKSPACE_RENDER):   proc sgrender data=work.xmldata template=dataonly;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   dynamic var1="PFDItemList";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 27 observations read from the data set WORK.XMLDATA.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=LayoutRegion(start) options(title 
="SAS Enterprise Miner Report" title2="Process Flow Diagram");
BeginGraph
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=PFD options(pfditems="PFDItemList" 
id="pfdView1");
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl close;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods PDF select ALL ;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods proclabel = "Process Flow Diagram";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           5.30 seconds
      cpu time            0.42 seconds
      

MPRINT(EM_REPORT_WORKSPACE_RENDER):   title1;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title2;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title3;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   proc sql noprint;
MPRINT(EM_REPORT_CREATE):   select count(*) into :EM_REPORT_NODENUM from emreportpath where 
nodeID ne " ";
MPRINT(EM_REPORT_CREATE):   select strip(nodeID) into :EM_REPORT_NODELIST separated by ' ' from 
emreportpath where nodeID ne " " order by nodeIndex;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT 
      clause.
MPRINT(EM_REPORT_CREATE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Ids")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='IDS';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

28482      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
28483      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
28483    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
28483    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
28484      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
28485      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
28486      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
28487      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
28488      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28489      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28490      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28491      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28492      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28493      output;
MPRINT(EM_GETTRAINPATH):   output;
28494      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 1 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Ids"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=ZETADIABITIES_TRAIN";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Ids";
MPRINT(EM_REPORT_NODE):   put "Node label = ZETADIABITIES_TRAIN";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Ids\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

28495      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28496      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28497      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28497    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
28497    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
28498      Name = 'DataSource';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSource';
28499      Value = "%nrbquote(zetadiabitiestrain)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "zetadiabitiestrain";
28500      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28501      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28502      Name = 'Scope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Scope';
28503      Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
28504      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28505      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28506      Name = 'Role';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Role';
28507      Value = "%nrbquote(RAW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RAW";
28508      Default = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TRAIN";
28509      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28510      Name = 'Library';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Library';
28511      Value = "%nrbquote(ZETADATA)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADATA";
28512      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28513      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28514      Name = 'Table';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Table';
28515      Value = "%nrbquote(ZETADIABITIES_TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADIABITIES_TRAIN";
28516      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28517      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28518      Name = 'NCols';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NCols';
28519      Value = "%nrbquote(22)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "22";
28520      Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
28521      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28522      Name = 'NObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NObs';
28523      Value = "%nrbquote(250716)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "250716";
28524      Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
28525      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28526      Name = 'NBytes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NBytes';
28527      Value = "%nrbquote(44303360)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "44303360";
28528      Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
28529      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28530      Name = 'Segment';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Segment';
28531      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
28532      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28533      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28534      Name = 'DataSourceRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSourceRole';
28535      Value = "%nrbquote(RAW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RAW";
28536      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28537      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28538      Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
28539      Value = "%nrbquote(VIEW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VIEW";
28540      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28541      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28542      Name = 'ComputeStatistics';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ComputeStatistics';
28543      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
28544      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28545      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28546      Name = 'DataSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSelection';
28547      Value = "%nrbquote(DATASOURCE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATASOURCE";
28548      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28549      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28550      Name = 'NewTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewTable';
28551      Value = "%nrbquote( )";
MPRINT(EM_REPORT_PROPERTIES):   Value = " ";
28552      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28553      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28554      Name = 'MetaAdvisor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MetaAdvisor';
28555      Value = "%nrbquote(BASIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BASIC";
28556      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28557      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28558      Name = 'ApplyIntervalLevelLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyIntervalLevelLowerLimit';
28559      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28560      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28561      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28562      Name = 'IntervalLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalLowerLimit';
28563      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
28564      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28565      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28566      Name = 'ApplyMaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxPercentMissing';
28567      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28568      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28569      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28570      Name = 'MaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxPercentMissing';
28571      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
28572      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28573      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28574      Name = 'ApplyMaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxClassLevels';
28575      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28576      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28577      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28578      Name = 'MaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxClassLevels';
28579      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
28580      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28581      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28582      Name = 'IdentifyEmptyColumns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IdentifyEmptyColumns';
28583      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28584      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28585      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28586      Name = 'VariableValidation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VariableValidation';
28587      Value = "%nrbquote(STRICT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STRICT";
28588      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28589      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28590      Name = 'NewVariableRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewVariableRole';
28591      Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
28592      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28593      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28594      Name = 'DropMapVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DropMapVariables';
28595      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28596      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28597      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28598      Name = 'DsId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsId';
28599      Value = "%nrbquote(zetadiabitiestrain)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "zetadiabitiestrain";
28600      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28601      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28602      Name = 'DsSampleName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleName';
28603      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
28604      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28605      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28606      Name = 'DsSampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSizeType';
28607      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
28608      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28609      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28610      Name = 'DsSampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSize';
28611      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
28612      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28613      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28614      Name = 'DsCreatedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreatedBy';
28615      Value = "%nrbquote(bkris2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "bkris2";
28616      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28617      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28618      Name = 'DsCreateDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreateDate';
28619      Value = "%nrbquote(2025037600.8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2025037600.8";
28620      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28621      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28622      Name = 'DsModifiedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifiedBy';
28623      Value = "%nrbquote(bkris2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "bkris2";
28624      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28625      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28626      Name = 'DsModifyDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifyDate';
28627      Value = "%nrbquote(2025037601.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2025037601.1";
28628      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28629      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28630      Name = 'DsScope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsScope';
28631      Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
28632      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28633      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28634      Name = 'Sample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sample';
28635      Value = "%nrbquote(D)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "D";
28636      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28637      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28638      Name = 'SampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeType';
28639      Value = "%nrbquote(PERCENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENT";
28640      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28641      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28642      Name = 'SampleSizePercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizePercent';
28643      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
28644      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28645      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28646      Name = 'SampleSizeObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeObs';
28647      Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
28648      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28649      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28650      Name = 'DBPassThrough';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DBPassThrough';
28651      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28652      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28653      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28654      Name = 'Description';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Description';
28655      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
28656      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28657      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28658      Name = 'Data';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Data';
28659      Value = "%nrbquote(ZETADATA.ZETADIABITIES_TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADATA.ZETADIABITIES_TRAIN";
28660      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28661      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28662      Name = 'CMeta';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CMeta';
28663      Value = "%nrbquote(WORK.M1ROWREY)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "WORK.M1ROWREY";
28664      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28665      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28666      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

28667      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
28668      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
28669      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

28670      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
28671      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28672      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28672    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
28673      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
28674      Value = "DataSource";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DataSource";
28675      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
28676      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

28677      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28678      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
28679      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 43 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.24 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=ZETADIABITIES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=ZETADIABITIES_TRAIN Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 28 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 28 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 43 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 14 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc transpose data=EMWS1.Ids_EMTMETADEFAULT out=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   var _all_;
MPRINT(EM_REPORT_DATASOURCE):   format crdate NLDATM24.0 modate NLDATM24.0;
MPRINT(EM_REPORT_DATASOURCE):   run;

NOTE: Numeric variables in the input data set will be converted to character in the output data 
      set.
NOTE: There were 1 observations read from the data set EMWS1.IDS_EMTMETADEFAULT.
NOTE: The data set WORK.TEMP_SOURCE has 15 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_DATASOURCE):   data temp_source;
MPRINT(EM_REPORT_DATASOURCE):   set temp_source;
MPRINT(EM_REPORT_DATASOURCE):   rename col1 = value;
MPRINT(EM_REPORT_DATASOURCE):   col1 = right(col1);
MPRINT(EM_REPORT_DATASOURCE):   format label $64.;
MPRINT(EM_REPORT_DATASOURCE):   label col1 = "Value" label = "Attribute" ;
MPRINT(EM_REPORT_DATASOURCE):   *** get the localized label column;
MPRINT(EM_REPORT_DATASOURCE):   _name_=upcase(_name_) ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMNAME" then label="Data Name" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMTYPE" then label="Data Type" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMLABEL" then label="Data Label" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "TYPEMEM" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ENGINE" then label="Engine" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "CRDATE" then label="Date Created" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MODATE" then label="Date Modified" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NOBS" then label="Number Rows" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NCOLS" then label="Number Columns" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NBYTES" then label="Data Size" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ROLE" then label="Role" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "USEEXTERNALDATA" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SAMPLINGRATE" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SEGMENT" then label="Segment" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "LIBNAME" then label="Data Library" ;
MPRINT(EM_REPORT_DATASOURCE):   run;

NOTE: There were 15 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK.TEMP_SOURCE has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=ZETADIABITIES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Data Attributes";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=ZETADIABITIES_TRAIN Data Attributes";
MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=temp_source 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "LABEL" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( LABEL=LABEL1 VALUE=VALUE1)) 
_tmpms_dat2(rename=( LABEL=LABEL2 VALUE=VALUE2)) _tmpms_dat3(rename=( LABEL=LABEL3 
VALUE=VALUE3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set temp_source;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep LABEL VALUE numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 4 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 4 and _n_ le 8 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 8 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var LABEL1 VALUE1 LABEL2 VALUE2 LABEL3 VALUE3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc delete data=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   run;

NOTE: Deleting WORK.TEMP_SOURCE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_DATASOURCE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Ids_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Ids_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS1.IDS_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=EMWS1.Ids_variableset out=_tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;

NOTE: There were 22 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set WORK._TMPVL_VS has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   update _tmpvl_pdv _tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   label type = "Type" format = "Format" creator = "Creator" family = 
"Family" label = "Label" ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: There were 22 observations read from the data set WORK._TMPVL_VS.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=ZETADIABITIES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variables List";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=ZETADIABITIES_TRAIN Variables List";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pdv noobs label contents='';
MPRINT(EM_REPORT_VARS):   var name label role level type length format creator;
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Ids_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Ids_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey6
MPRINT(EM_REPORT_NODE):   from EMWS1.Ids_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype = DATA EMSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Filter")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='FILTER';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

28680      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
28681      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
28681    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
28681    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
28682      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
28683      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
28684      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
28685      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
28686      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28687      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28688      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28689      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28690      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28691      output;
MPRINT(EM_GETTRAINPATH):   output;
28692      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
28693      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
28694      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
28695      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
28696      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
28697      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28698      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28699      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28700      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28701      output;
MPRINT(EM_GETTRAINPATH):   output;
28702      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 2 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Filter"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Filter";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Filter";
MPRINT(EM_REPORT_NODE):   put "Node label = Filter";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Filter\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

28703      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28704      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28705      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28705    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
28705    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
28706      Name = 'KeepMissingClass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'KeepMissingClass';
28707      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28708      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28709      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28710      Name = 'KeepMissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'KeepMissingInterval';
28711      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28712      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28713      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28714      Name = 'NormalizeClassValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NormalizeClassValue';
28715      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28716      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28717      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28718      Name = 'ExportTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ExportTable';
28719      Value = "%nrbquote(FILTERED)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "FILTERED";
28720      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28721      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28722      Name = 'TabletoFilter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TabletoFilter';
28723      Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
28724      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28725      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28726      Name = 'IntervalFilterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalFilterMethod';
28727      Value = "%nrbquote(STDDEV)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STDDEV";
28728      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28729      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28730      Name = 'ClassFilterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassFilterMethod';
28731      Value = "%nrbquote(MINPCT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MINPCT";
28732      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28733      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28734      Name = 'MinFreq';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinFreq';
28735      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
28736      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28737      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28738      Name = 'MinPercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinPercent';
28739      Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
28740      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28741      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28742      Name = 'MaxValues';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxValues';
28743      Value = "%nrbquote(25)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "25";
28744      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28745      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28746      Name = 'MADSCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MADSCutoff';
28747      Value = "%nrbquote(9)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "9";
28748      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28749      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28750      Name = 'SpacingsCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SpacingsCutoff';
28751      Value = "%nrbquote(9)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "9";
28752      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28753      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28754      Name = 'StddevCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StddevCutoff';
28755      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
28756      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28757      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28758      Name = 'PercentsCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PercentsCutoff';
28759      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
28760      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28761      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28762      Name = 'PublishScoreCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PublishScoreCode';
28763      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28764      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28765      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28766      Name = 'CreateDistributionData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateDistributionData';
28767      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28768      Default = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "N";
28769      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28770      Name = 'UpdateClassLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UpdateClassLevel';
28771      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
28772      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28773      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28774      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

28775      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
28776      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
28777      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 17 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

28778      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
28779      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28780      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28780    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
28781      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
28782      Value = "Filter";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Filter";
28783      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
28784      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

28785      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28786      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
28787      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 17 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 18 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.21 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Filter";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Filter Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 6 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-6*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 6 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-6*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-6*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 18 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 6 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 6 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 6 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Filter_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Filter_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS1.FILTER_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
3 The SAS System

role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Filter";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Filter Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Filter_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Filter" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_CMETA_TRAIN.
      WHERE UPCASE(creator)='Filter';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
NOTE: Deleting WORK._TMPVL_VS (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Filter_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Filter_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey16
MPRINT(EM_REPORT_NODE):   from EMWS1.Filter_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA EXCLUDECLASS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Filter";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Excluded Class Values";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Filter Excluded Class Values";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.Filter_CLASS(obs=100) noobs label contents='';
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 1 observations read from the data set EMWS1.FILTER_CLASS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = DATA LIMITINTERVAL
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Filter";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Limits for Interval Variables";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Filter Limits for Interval Variables";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.Filter_INTERVAL(obs=100) noobs label contents='';
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 2 observations read from the data set EMWS1.FILTER_INTERVAL.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 15 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = LATTICE BARPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Filter_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.FILTER_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = LATTICE HISTPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Smpl")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='SMPL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

28788      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
28789      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
28789    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
28789    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
28790      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
28791      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
28792      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
28793      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
28794      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28795      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28796      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28797      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28798      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28799      output;
MPRINT(EM_GETTRAINPATH):   output;
28800      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
28801      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
28802      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
28803      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
28804      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
28805      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28806      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28807      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28808      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28809      output;
MPRINT(EM_GETTRAINPATH):   output;
28810      nodelabel="Smpl";
MPRINT(EM_GETTRAINPATH):   nodelabel="Smpl";
28811      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
28812      description="Sampling  Class";
MPRINT(EM_GETTRAINPATH):   description="Sampling  Class";
28813      component="Sample";
MPRINT(EM_GETTRAINPATH):   component="Sample";
28814      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28815      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28816      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28817      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28818      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28819      output;
MPRINT(EM_GETTRAINPATH):   output;
28820      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Smpl"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Sample";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Smpl";
MPRINT(EM_REPORT_NODE):   put "Node label = Sample";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Smpl";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Smpl\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

28821      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28822      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28823      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28823    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
28823    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
28824      Name = 'Method';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Method';
28825      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
28826      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28827      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28828      Name = 'SizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SizeType';
28829      Value = "%nrbquote(PERCENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENT";
28830      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28831      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28832      Name = 'SizePercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SizePercent';
28833      Value = "%nrbquote(90)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "90";
28834      Default = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "10";
28835      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28836      Name = 'SizeObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SizeObs';
28837      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
28838      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28839      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28840      Name = 'RandomSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandomSeed';
28841      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
28842      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28843      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28844      Name = 'Alpha';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Alpha';
28845      Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
28846      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28847      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28848      Name = 'Pvalue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Pvalue';
28849      Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
28850      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28851      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28852      Name = 'AdjustFreq';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AdjustFreq';
28853      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
28854      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28855      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28856      Name = 'FreqMiss';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FreqMiss';
28857      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
28858      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28859      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28860      Name = 'FreqCount';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FreqCount';
28861      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
28862      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28863      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28864      Name = 'StratifyCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StratifyCriterion';
28865      Value = "%nrbquote(PROPORTIONAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROPORTIONAL";
28866      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28867      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28868      Name = 'MinStrataSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinStrataSize';
28869      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
28870      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28871      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28872      Name = 'IgnoreSmallStrata';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IgnoreSmallStrata';
28873      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
28874      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28875      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28876      Name = 'ClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterMethod';
28877      Value = "%nrbquote(RANDOM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANDOM";
28878      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28879      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28880      Name = 'LevelProportion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LevelProportion';
28881      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
28882      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28883      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28884      Name = 'LevelSampleProportion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LevelSampleProportion';
28885      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
28886      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28887      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28888      Name = 'LevelSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LevelSelection';
28889      Value = "%nrbquote(EVENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "EVENT";
28890      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28891      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28892      Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
28893      Value = "%nrbquote(DATA)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATA";
28894      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28895      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28896      Name = 'IntervalDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalDistribution';
28897      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28898      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28899      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28900      Name = 'ClassDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassDistribution';
28901      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
28902      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28903      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28904      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

28905      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
28906      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
28907      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 20 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

28908      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
28909      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28910      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28910    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
28911      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
28912      Value = "Sample";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Sample";
28913      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
28914      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

28915      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28916      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
28917      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 20 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Sample";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Sample Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 7 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 7 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 7 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Smpl_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Smpl_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS1.SMPL_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Sample";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Sample Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Smpl_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Smpl_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey11
MPRINT(EM_REPORT_NODE):   from EMWS1.Smpl_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA INTRVLSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Smpl_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.SMPL_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = LATTICE CLASSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Clus6")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='CLUS6';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

28918      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
28919      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
28919    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
28919    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
28920      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
28921      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
28922      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
28923      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
28924      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28925      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28926      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28927      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28928      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28929      output;
MPRINT(EM_GETTRAINPATH):   output;
28930      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
28931      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
28932      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
28933      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
28934      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
28935      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28936      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28937      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28938      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28939      output;
MPRINT(EM_GETTRAINPATH):   output;
28940      nodelabel="Smpl";
MPRINT(EM_GETTRAINPATH):   nodelabel="Smpl";
28941      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
28942      description="Sampling  Class";
MPRINT(EM_GETTRAINPATH):   description="Sampling  Class";
28943      component="Sample";
MPRINT(EM_GETTRAINPATH):   component="Sample";
28944      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28945      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28946      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28947      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28948      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28949      output;
MPRINT(EM_GETTRAINPATH):   output;
28950      nodelabel="Clus6";
MPRINT(EM_GETTRAINPATH):   nodelabel="Clus6";
28951      parent="Smpl";
MPRINT(EM_GETTRAINPATH):   parent="Smpl";
28952      description="Clustering";
MPRINT(EM_GETTRAINPATH):   description="Clustering";
28953      component="Cluster";
MPRINT(EM_GETTRAINPATH):   component="Cluster";
28954      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
28955      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28956      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
28957      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28958      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28959      output;
MPRINT(EM_GETTRAINPATH):   output;
28960      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 4 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Clus6"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=90% Average Clustering";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Clus6";
MPRINT(EM_REPORT_NODE):   put "Node label = 90% Average Clustering";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Smpl => Clus6";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Clus6\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

28961      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
28962      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
28963      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
28963    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
28963    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
28964      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
28965      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
28966      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28967      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28968      Name = 'Clusvar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Clusvar';
28969      Value = "%nrbquote(_SEGMENT_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_SEGMENT_";
28970      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28971      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28972      Name = 'ClusvarLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarLabel';
28973      Value = "%nrbquote(Segment Variable)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Segment Variable";
28974      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28975      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28976      Name = 'ClusvarRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarRole';
28977      Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
28978      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28979      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28980      Name = 'MaxC';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxC';
28981      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
28982      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28983      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28984      Name = 'NominalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalEncoding';
28985      Value = "%nrbquote(GLM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GLM";
28986      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28987      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28988      Name = 'OrdinalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalEncoding';
28989      Value = "%nrbquote(RANK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANK";
28990      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28991      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28992      Name = 'MissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingInterval';
28993      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
28994      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28995      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
28996      Name = 'MissingNominal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingNominal';
28997      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
28998      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
28999      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29000      Name = 'MissingOrdinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingOrdinal';
29001      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29002      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29003      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29004      Name = 'ImputationMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputationMethod';
29005      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29006      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29007      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29008      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29009      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29010      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29011      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29012      Name = 'TrainDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainDefaults';
29013      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29014      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29015      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29016      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29017      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29018      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29019      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29020      Name = 'LearnInitial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnInitial';
29021      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29022      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29023      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29024      Name = 'LearnFinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnFinal';
29025      Value = "%nrbquote(0.02)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.02";
29026      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29027      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29028      Name = 'LearnSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnSteps';
29029      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29030      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29031      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29032      Name = 'MaxIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIter';
29033      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29034      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29035      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29036      Name = 'MaxSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxSteps';
29037      Value = "%nrbquote(1200)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1200";
29038      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29039      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29040      Name = 'XConv';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'XConv';
29041      Value = "%nrbquote(0.0001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0001";
29042      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29043      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29044      Name = 'Initial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Initial';
29045      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29046      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29047      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29048      Name = 'Drift';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Drift';
29049      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29050      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29051      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29052      Name = 'Radius';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Radius';
29053      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29054      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29055      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29056      Name = 'Stdize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stdize';
29057      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
29058      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29059      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29060      Name = 'Summary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Summary';
29061      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29062      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29063      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29064      Name = 'TreeProfile';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TreeProfile';
29065      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29066      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29067      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29068      Name = 'ClusterGraphs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterGraphs';
29069      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29070      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29071      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29072      Name = 'NumberClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberClusterMethod';
29073      Value = "%nrbquote(AUTOMATIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AUTOMATIC";
29074      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29075      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29076      Name = 'DistancePlot';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistancePlot';
29077      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29078      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29079      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29080      Name = 'FinalMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FinalMaxNum';
29081      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29082      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29083      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29084      Name = 'AutomaticMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMaxNum';
29085      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29086      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29087      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29088      Name = 'AutomaticMinNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMinNum';
29089      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29090      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29091      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29092      Name = 'AutomaticMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMethod';
29093      Value = "%nrbquote(AVERAGE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AVERAGE";
29094      Default = "%nrbquote(WARD)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "WARD";
29095      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29096      Name = 'CCCCutOff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CCCCutOff';
29097      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
29098      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29099      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29100      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

29101      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29102      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29103      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29104      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29105      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29106      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29106    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29107      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29108      Value = "Cluster";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Cluster";
29109      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29110      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

29111      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29112      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29113      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 35 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.16 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90% Average Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90% Average Clustering Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 24 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 35 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Clus6_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus6_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS1.CLUS6_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

15 OUTPUT;
17 OUTPUT;
22 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90% Average Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90% Average Clustering Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus6_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Clus6" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS6_CMETA_TRAIN.
      WHERE UPCASE(creator)='Clus6';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Clus6_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Clus6_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS1.Clus6_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==12 : Viewtype = DATA CLUSMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   proc transpose data=EMWS1.Clus6_OUTMEAN out=clusmean name=VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 5 observations read from the data set EMWS1.CLUS6_OUTMEAN.
NOTE: The data set WORK.CLUSMEAN has 44 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_DATA):   data clusmean;
MPRINT(EM_REPORT_DATA):   set clusmean;
MPRINT(EM_REPORT_DATA):   label _LABEL_ = "Variable" COL1 = "Segment 1" COL2 = "Segment 2" COL3 
= "Segment 3" COL4 = "Segment 4" COL5 = "Segment 5" ;
MPRINT(EM_REPORT_DATA):   if missing(_LABEL_) then _LABEL_ = VARIABLE;
MPRINT(EM_REPORT_DATA):   if VARIABLE="_SEGMENT_" then delete;
MPRINT(EM_REPORT_DATA):   drop VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 44 observations read from the data set WORK.CLUSMEAN.
NOTE: The data set WORK.CLUSMEAN has 43 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90% Average Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Mean Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90% Average Clustering Mean Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=clusmean noobs label contents='' ;
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 43 observations read from the data set WORK.CLUSMEAN.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = PIE segmentsize
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus6_OUTMEAN template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="_SEGMENT_" var2= "_FREQ_" ;
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 5 observations read from the data set EMWS1.CLUS6_OUTMEAN.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_SGSILK):   quit;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=90% Average Clustering" title3="Segment Size");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Pie options( category = "_SEGMENT_" response = 
"_FREQ_" pielabeldisplay = "1" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.70 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==14 : Viewtype = DATA CLUSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus6_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "nodetext";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 23 observations read from the data set EMWS1.CLUS6_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=90% Average Clustering" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent = 
"PARENT" nodetext = "nodetext" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth = 
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.70 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE SEGMENTGRAPH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS1.Clus6_PROFILE;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=90% Average Clustering";
MPRINT(EM_REPORT_LATTICE):   title3 "Segment Plot";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Clus6_PROFILE;
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE / columns=3 rows=6 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _SEGMENT_ / response=BYPERCENT group=FMTVALUE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           2.95 seconds
      cpu time            0.46 seconds
      
NOTE: There were 570 observations read from the data set EMWS1.CLUS6_PROFILE.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = PROPERTIES DISTANCEPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==20 : Viewtype = DATA DISTANCETABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus6_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==21 : Viewtype = SCATTER CCCPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=90% Average Clustering";
MPRINT(EM_REPORT_SGPLOT):   title3 "CCC Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Clus6_CLUSSEED;
MPRINT(EM_REPORT_SGPLOT):   scatter x = _NCL_ y = _CCC_ / markerattrs=(symbol=squarefilled) ;
MPRINT(EM_REPORT_SGPLOT):   refline 5 / axis = x;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.54 seconds
      cpu time            0.20 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS6_CLUSSEED.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus6_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS6_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus6_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==22 : Viewtype = SCATTER INPUTMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Clus5")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='CLUS5';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29114      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29115      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29115    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29115    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29116      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29117      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29118      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29119      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29120      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29121      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29122      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29123      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29124      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29125      output;
MPRINT(EM_GETTRAINPATH):   output;
29126      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
29127      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29128      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
29129      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
29130      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29131      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29132      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29133      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29134      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29135      output;
MPRINT(EM_GETTRAINPATH):   output;
29136      nodelabel="Smpl";
MPRINT(EM_GETTRAINPATH):   nodelabel="Smpl";
29137      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
29138      description="Sampling  Class";
MPRINT(EM_GETTRAINPATH):   description="Sampling  Class";
29139      component="Sample";
MPRINT(EM_GETTRAINPATH):   component="Sample";
29140      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29141      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29142      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29143      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29144      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29145      output;
MPRINT(EM_GETTRAINPATH):   output;
29146      nodelabel="Clus5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Clus5";
29147      parent="Smpl";
MPRINT(EM_GETTRAINPATH):   parent="Smpl";
29148      description="Clustering";
MPRINT(EM_GETTRAINPATH):   description="Clustering";
29149      component="Cluster";
MPRINT(EM_GETTRAINPATH):   component="Cluster";
29150      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29151      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29152      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29153      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29154      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29155      output;
MPRINT(EM_GETTRAINPATH):   output;
29156      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 4 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Clus5"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=90% Centroid Clustering";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Clus5";
MPRINT(EM_REPORT_NODE):   put "Node label = 90% Centroid Clustering";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Smpl => Clus5";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Clus5\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29157      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29158      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29159      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29159    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29159    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29160      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
29161      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
29162      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29163      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29164      Name = 'Clusvar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Clusvar';
29165      Value = "%nrbquote(_SEGMENT_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_SEGMENT_";
29166      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29167      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29168      Name = 'ClusvarLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarLabel';
29169      Value = "%nrbquote(Segment Variable)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Segment Variable";
29170      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29171      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29172      Name = 'ClusvarRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarRole';
29173      Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
29174      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29175      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29176      Name = 'MaxC';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxC';
29177      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29178      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29179      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29180      Name = 'NominalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalEncoding';
29181      Value = "%nrbquote(GLM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GLM";
29182      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29183      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29184      Name = 'OrdinalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalEncoding';
29185      Value = "%nrbquote(RANK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANK";
29186      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29187      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29188      Name = 'MissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingInterval';
29189      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29190      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29191      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29192      Name = 'MissingNominal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingNominal';
29193      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29194      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29195      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29196      Name = 'MissingOrdinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingOrdinal';
29197      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29198      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29199      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29200      Name = 'ImputationMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputationMethod';
29201      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29202      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29203      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29204      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29205      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29206      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29207      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29208      Name = 'TrainDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainDefaults';
29209      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29210      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29211      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29212      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29213      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29214      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29215      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29216      Name = 'LearnInitial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnInitial';
29217      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29218      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29219      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29220      Name = 'LearnFinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnFinal';
29221      Value = "%nrbquote(0.02)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.02";
29222      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29223      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29224      Name = 'LearnSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnSteps';
29225      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29226      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29227      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29228      Name = 'MaxIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIter';
29229      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29230      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29231      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29232      Name = 'MaxSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxSteps';
29233      Value = "%nrbquote(1200)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1200";
29234      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29235      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29236      Name = 'XConv';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'XConv';
29237      Value = "%nrbquote(0.0001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0001";
29238      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29239      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29240      Name = 'Initial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Initial';
29241      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29242      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29243      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29244      Name = 'Drift';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Drift';
29245      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29246      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29247      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29248      Name = 'Radius';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Radius';
29249      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29250      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29251      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29252      Name = 'Stdize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stdize';
29253      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
29254      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29255      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29256      Name = 'Summary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Summary';
29257      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29258      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29259      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29260      Name = 'TreeProfile';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TreeProfile';
29261      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29262      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29263      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29264      Name = 'ClusterGraphs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterGraphs';
29265      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29266      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29267      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29268      Name = 'NumberClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberClusterMethod';
29269      Value = "%nrbquote(AUTOMATIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AUTOMATIC";
29270      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29271      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29272      Name = 'DistancePlot';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistancePlot';
29273      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29274      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29275      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29276      Name = 'FinalMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FinalMaxNum';
29277      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29278      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29279      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29280      Name = 'AutomaticMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMaxNum';
29281      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29282      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29283      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29284      Name = 'AutomaticMinNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMinNum';
29285      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29286      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29287      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29288      Name = 'AutomaticMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMethod';
29289      Value = "%nrbquote(CENTROID)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CENTROID";
29290      Default = "%nrbquote(WARD)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "WARD";
29291      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29292      Name = 'CCCCutOff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CCCCutOff';
29293      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
29294      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29295      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29296      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29297      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29298      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29299      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29300      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29301      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29302      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29302    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29303      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29304      Value = "Cluster";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Cluster";
29305      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29306      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

29307      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29308      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29309      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 35 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.19 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90% Centroid Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90% Centroid Clustering Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 24 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 35 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Clus5_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus5_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS1.CLUS5_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

15 OUTPUT;
17 OUTPUT;
22 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90% Centroid Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90% Centroid Clustering Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus5_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Clus5" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS5_CMETA_TRAIN.
      WHERE UPCASE(creator)='Clus5';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Clus5_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Clus5_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS1.Clus5_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA CLUSMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   proc transpose data=EMWS1.Clus5_OUTMEAN out=clusmean name=VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 4 observations read from the data set EMWS1.CLUS5_OUTMEAN.
NOTE: The data set WORK.CLUSMEAN has 44 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_DATA):   data clusmean;
MPRINT(EM_REPORT_DATA):   set clusmean;
MPRINT(EM_REPORT_DATA):   label _LABEL_ = "Variable" COL1 = "Segment 1" COL2 = "Segment 2" COL3 
= "Segment 3" COL4 = "Segment 4" ;
MPRINT(EM_REPORT_DATA):   if missing(_LABEL_) then _LABEL_ = VARIABLE;
MPRINT(EM_REPORT_DATA):   if VARIABLE="_SEGMENT_" then delete;
MPRINT(EM_REPORT_DATA):   drop VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 44 observations read from the data set WORK.CLUSMEAN.
NOTE: The data set WORK.CLUSMEAN has 43 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90% Centroid Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Mean Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90% Centroid Clustering Mean Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=clusmean noobs label contents='' ;
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 43 observations read from the data set WORK.CLUSMEAN.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = PIE segmentsize
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus5_OUTMEAN template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="_SEGMENT_" var2= "_FREQ_" ;
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 4 observations read from the data set EMWS1.CLUS5_OUTMEAN.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_SGSILK):   quit;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=90% Centroid Clustering" title3="Segment Size");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Pie options( category = "_SEGMENT_" response = 
"_FREQ_" pielabeldisplay = "1" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.49 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = DATA CLUSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus5_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "nodetext";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 45 observations read from the data set EMWS1.CLUS5_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=90% Centroid Clustering" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent = 
"PARENT" nodetext = "nodetext" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth = 
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.66 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==17 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE SEGMENTGRAPH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS1.Clus5_PROFILE;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=90% Centroid Clustering";
MPRINT(EM_REPORT_LATTICE):   title3 "Segment Plot";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Clus5_PROFILE;
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE / columns=3 rows=6 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _SEGMENT_ / response=BYPERCENT group=FMTVALUE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           1.28 seconds
      cpu time            0.51 seconds
      
NOTE: There were 472 observations read from the data set EMWS1.CLUS5_PROFILE.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==19 : Viewtype = PROPERTIES DISTANCEPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==20 : Viewtype = DATA DISTANCETABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus5_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==21 : Viewtype = SCATTER CCCPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=90% Centroid Clustering";
MPRINT(EM_REPORT_SGPLOT):   title3 "CCC Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Clus5_CLUSSEED;
MPRINT(EM_REPORT_SGPLOT):   scatter x = _NCL_ y = _CCC_ / markerattrs=(symbol=squarefilled) ;
MPRINT(EM_REPORT_SGPLOT):   refline 4 / axis = x;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.39 seconds
      cpu time            0.18 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS5_CLUSSEED.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus5_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS5_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus5_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==22 : Viewtype = SCATTER INPUTMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Clus2")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='CLUS2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29310      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29311      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29311    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29311    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29312      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29313      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29314      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29315      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29316      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29317      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29318      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29319      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29320      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29321      output;
MPRINT(EM_GETTRAINPATH):   output;
29322      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
29323      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29324      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
29325      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
29326      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29327      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29328      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29329      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29330      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29331      output;
MPRINT(EM_GETTRAINPATH):   output;
29332      nodelabel="Smpl";
MPRINT(EM_GETTRAINPATH):   nodelabel="Smpl";
29333      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
29334      description="Sampling  Class";
MPRINT(EM_GETTRAINPATH):   description="Sampling  Class";
29335      component="Sample";
MPRINT(EM_GETTRAINPATH):   component="Sample";
29336      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29337      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29338      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29339      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29340      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29341      output;
MPRINT(EM_GETTRAINPATH):   output;
29342      nodelabel="Clus2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Clus2";
29343      parent="Smpl";
MPRINT(EM_GETTRAINPATH):   parent="Smpl";
29344      description="Clustering";
MPRINT(EM_GETTRAINPATH):   description="Clustering";
29345      component="Cluster";
MPRINT(EM_GETTRAINPATH):   component="Cluster";
29346      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29347      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29348      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29349      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29350      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29351      output;
MPRINT(EM_GETTRAINPATH):   output;
29352      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 4 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Clus2"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=90 % Ward Clustering";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Clus2";
MPRINT(EM_REPORT_NODE):   put "Node label = 90 % Ward Clustering";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Smpl => Clus2";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Clus2\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29353      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29354      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29355      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29355    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29355    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29356      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
29357      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
29358      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29359      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29360      Name = 'Clusvar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Clusvar';
29361      Value = "%nrbquote(_SEGMENT_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_SEGMENT_";
29362      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29363      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29364      Name = 'ClusvarLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarLabel';
29365      Value = "%nrbquote(Segment Variable)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Segment Variable";
29366      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29367      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29368      Name = 'ClusvarRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarRole';
29369      Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
29370      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29371      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29372      Name = 'MaxC';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxC';
29373      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29374      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29375      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29376      Name = 'NominalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalEncoding';
29377      Value = "%nrbquote(GLM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GLM";
29378      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29379      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29380      Name = 'OrdinalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalEncoding';
29381      Value = "%nrbquote(RANK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANK";
29382      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29383      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29384      Name = 'MissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingInterval';
29385      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29386      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29387      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29388      Name = 'MissingNominal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingNominal';
29389      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29390      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29391      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29392      Name = 'MissingOrdinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingOrdinal';
29393      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29394      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29395      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29396      Name = 'ImputationMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputationMethod';
29397      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29398      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29399      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29400      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29401      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29402      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29403      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29404      Name = 'TrainDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainDefaults';
29405      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29406      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29407      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29408      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29409      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29410      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29411      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29412      Name = 'LearnInitial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnInitial';
29413      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29414      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29415      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29416      Name = 'LearnFinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnFinal';
29417      Value = "%nrbquote(0.02)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.02";
29418      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29419      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29420      Name = 'LearnSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnSteps';
29421      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29422      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29423      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29424      Name = 'MaxIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIter';
29425      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29426      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29427      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29428      Name = 'MaxSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxSteps';
29429      Value = "%nrbquote(1200)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1200";
29430      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29431      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29432      Name = 'XConv';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'XConv';
29433      Value = "%nrbquote(0.0001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0001";
29434      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29435      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29436      Name = 'Initial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Initial';
29437      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29438      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29439      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29440      Name = 'Drift';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Drift';
29441      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29442      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29443      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29444      Name = 'Radius';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Radius';
29445      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29446      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29447      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29448      Name = 'Stdize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stdize';
29449      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
29450      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29451      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29452      Name = 'Summary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Summary';
29453      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29454      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29455      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29456      Name = 'TreeProfile';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TreeProfile';
29457      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29458      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29459      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29460      Name = 'ClusterGraphs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterGraphs';
29461      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29462      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29463      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29464      Name = 'NumberClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberClusterMethod';
29465      Value = "%nrbquote(AUTOMATIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AUTOMATIC";
29466      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29467      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29468      Name = 'DistancePlot';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistancePlot';
29469      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29470      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29471      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29472      Name = 'FinalMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FinalMaxNum';
29473      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29474      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29475      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29476      Name = 'AutomaticMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMaxNum';
29477      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29478      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29479      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29480      Name = 'AutomaticMinNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMinNum';
29481      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29482      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29483      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29484      Name = 'AutomaticMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMethod';
29485      Value = "%nrbquote(WARD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "WARD";
29486      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29487      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29488      Name = 'CCCCutOff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CCCCutOff';
29489      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
29490      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29491      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29492      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

29493      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29494      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29495      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29496      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29497      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29498      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29498    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29499      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29500      Value = "Cluster";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Cluster";
29501      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29502      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29503      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29504      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29505      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 35 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90 % Ward Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90 % Ward Clustering Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 24 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 35 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Clus2_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus2_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS1.CLUS2_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

15 OUTPUT;
17 OUTPUT;
22 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90 % Ward Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90 % Ward Clustering Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus2_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Clus2" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS2_CMETA_TRAIN.
      WHERE UPCASE(creator)='Clus2';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Clus2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Clus2_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS1.Clus2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA CLUSMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   proc transpose data=EMWS1.Clus2_OUTMEAN out=clusmean name=VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 3 observations read from the data set EMWS1.CLUS2_OUTMEAN.
NOTE: The data set WORK.CLUSMEAN has 44 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_DATA):   data clusmean;
MPRINT(EM_REPORT_DATA):   set clusmean;
MPRINT(EM_REPORT_DATA):   label _LABEL_ = "Variable" COL1 = "Segment 1" COL2 = "Segment 2" COL3 
= "Segment 3" ;
MPRINT(EM_REPORT_DATA):   if missing(_LABEL_) then _LABEL_ = VARIABLE;
MPRINT(EM_REPORT_DATA):   if VARIABLE="_SEGMENT_" then delete;
MPRINT(EM_REPORT_DATA):   drop VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 44 observations read from the data set WORK.CLUSMEAN.
NOTE: The data set WORK.CLUSMEAN has 43 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=90 % Ward Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Mean Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=90 % Ward Clustering Mean Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=clusmean noobs label contents='' ;
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 43 observations read from the data set WORK.CLUSMEAN.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = PIE segmentsize
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus2_OUTMEAN template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="_SEGMENT_" var2= "_FREQ_" ;
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 3 observations read from the data set EMWS1.CLUS2_OUTMEAN.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_SGSILK):   quit;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=90 % Ward Clustering" title3="Segment Size");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Pie options( category = "_SEGMENT_" response = 
"_FREQ_" pielabeldisplay = "1" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.50 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = DATA CLUSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus2_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "nodetext";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 29 observations read from the data set EMWS1.CLUS2_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=90 % Ward Clustering" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent = 
"PARENT" nodetext = "nodetext" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth = 
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.56 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==17 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE SEGMENTGRAPH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS1.Clus2_PROFILE;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=90 % Ward Clustering";
MPRINT(EM_REPORT_LATTICE):   title3 "Segment Plot";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Clus2_PROFILE;
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE / columns=3 rows=5 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _SEGMENT_ / response=BYPERCENT group=FMTVALUE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           1.14 seconds
      cpu time            0.46 seconds
      
NOTE: There were 336 observations read from the data set EMWS1.CLUS2_PROFILE.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = PROPERTIES DISTANCEPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==20 : Viewtype = DATA DISTANCETABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus2_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==21 : Viewtype = SCATTER CCCPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=90 % Ward Clustering";
MPRINT(EM_REPORT_SGPLOT):   title3 "CCC Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Clus2_CLUSSEED;
MPRINT(EM_REPORT_SGPLOT):   scatter x = _NCL_ y = _CCC_ / markerattrs=(symbol=squarefilled) ;
MPRINT(EM_REPORT_SGPLOT):   refline 3 / axis = x;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.40 seconds
      cpu time            0.17 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS2_CLUSSEED.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus2_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS2_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus2_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==22 : Viewtype = SCATTER INPUTMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Clus4")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='CLUS4';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29506      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29507      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29507    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29507    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29508      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29509      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29510      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29511      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29512      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29513      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29514      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29515      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29516      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29517      output;
MPRINT(EM_GETTRAINPATH):   output;
29518      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
29519      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29520      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
29521      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
29522      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29523      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29524      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29525      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29526      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29527      output;
MPRINT(EM_GETTRAINPATH):   output;
29528      nodelabel="Clus4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Clus4";
29529      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
29530      description="Clustering";
MPRINT(EM_GETTRAINPATH):   description="Clustering";
29531      component="Cluster";
MPRINT(EM_GETTRAINPATH):   component="Cluster";
29532      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29533      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29534      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29535      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29536      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29537      output;
MPRINT(EM_GETTRAINPATH):   output;
29538      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Clus4"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Average Clustering";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Clus4";
MPRINT(EM_REPORT_NODE):   put "Node label = Average Clustering";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Clus4";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Clus4\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29539      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29540      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29541      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29541    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29541    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29542      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
29543      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
29544      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29545      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29546      Name = 'Clusvar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Clusvar';
29547      Value = "%nrbquote(_SEGMENT_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_SEGMENT_";
29548      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29549      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29550      Name = 'ClusvarLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarLabel';
29551      Value = "%nrbquote(Segment Variable)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Segment Variable";
29552      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29553      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29554      Name = 'ClusvarRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarRole';
29555      Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
29556      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29557      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29558      Name = 'MaxC';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxC';
29559      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29560      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29561      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29562      Name = 'NominalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalEncoding';
29563      Value = "%nrbquote(GLM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GLM";
29564      Default = "%nrbquote()";
4 The SAS System

MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29565      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29566      Name = 'OrdinalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalEncoding';
29567      Value = "%nrbquote(RANK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANK";
29568      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29569      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29570      Name = 'MissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingInterval';
29571      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29572      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29573      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29574      Name = 'MissingNominal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingNominal';
29575      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29576      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29577      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29578      Name = 'MissingOrdinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingOrdinal';
29579      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29580      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29581      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29582      Name = 'ImputationMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputationMethod';
29583      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29584      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29585      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29586      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29587      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29588      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29589      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29590      Name = 'TrainDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainDefaults';
29591      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29592      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29593      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29594      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29595      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29596      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29597      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29598      Name = 'LearnInitial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnInitial';
29599      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29600      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29601      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29602      Name = 'LearnFinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnFinal';
29603      Value = "%nrbquote(0.02)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.02";
29604      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29605      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29606      Name = 'LearnSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnSteps';
29607      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29608      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29609      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29610      Name = 'MaxIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIter';
29611      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29612      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29613      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29614      Name = 'MaxSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxSteps';
29615      Value = "%nrbquote(1200)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1200";
29616      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29617      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29618      Name = 'XConv';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'XConv';
29619      Value = "%nrbquote(0.0001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0001";
29620      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29621      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29622      Name = 'Initial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Initial';
29623      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29624      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29625      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29626      Name = 'Drift';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Drift';
29627      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29628      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29629      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29630      Name = 'Radius';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Radius';
29631      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29632      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29633      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29634      Name = 'Stdize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stdize';
29635      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
29636      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29637      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29638      Name = 'Summary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Summary';
29639      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29640      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29641      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29642      Name = 'TreeProfile';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TreeProfile';
29643      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29644      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29645      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29646      Name = 'ClusterGraphs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterGraphs';
29647      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29648      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29649      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29650      Name = 'NumberClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberClusterMethod';
29651      Value = "%nrbquote(AUTOMATIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AUTOMATIC";
29652      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29653      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29654      Name = 'DistancePlot';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistancePlot';
29655      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29656      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29657      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29658      Name = 'FinalMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FinalMaxNum';
29659      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29660      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29661      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29662      Name = 'AutomaticMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMaxNum';
29663      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29664      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29665      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29666      Name = 'AutomaticMinNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMinNum';
29667      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29668      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29669      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29670      Name = 'AutomaticMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMethod';
29671      Value = "%nrbquote(AVERAGE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AVERAGE";
29672      Default = "%nrbquote(WARD)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "WARD";
29673      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29674      Name = 'CCCCutOff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CCCCutOff';
29675      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
29676      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29677      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29678      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

29679      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29680      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29681      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29682      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29683      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29684      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29684    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29685      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29686      Value = "Cluster";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Cluster";
29687      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29688      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

29689      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29690      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29691      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 35 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Average Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Average Clustering Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 24 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 35 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Clus4_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus4_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS1.CLUS4_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

15 OUTPUT;
17 OUTPUT;
NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Average Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Average Clustering Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus4_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Clus4" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS4_CMETA_TRAIN.
      WHERE UPCASE(creator)='Clus4';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Clus4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Clus4_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS1.Clus4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==12 : Viewtype = DATA CLUSMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   proc transpose data=EMWS1.Clus4_OUTMEAN out=clusmean name=VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 4 observations read from the data set EMWS1.CLUS4_OUTMEAN.
NOTE: The data set WORK.CLUSMEAN has 44 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_DATA):   data clusmean;
MPRINT(EM_REPORT_DATA):   set clusmean;
MPRINT(EM_REPORT_DATA):   label _LABEL_ = "Variable" COL1 = "Segment 1" COL2 = "Segment 2" COL3 
= "Segment 3" COL4 = "Segment 4" ;
MPRINT(EM_REPORT_DATA):   if missing(_LABEL_) then _LABEL_ = VARIABLE;
MPRINT(EM_REPORT_DATA):   if VARIABLE="_SEGMENT_" then delete;
MPRINT(EM_REPORT_DATA):   drop VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 44 observations read from the data set WORK.CLUSMEAN.
NOTE: The data set WORK.CLUSMEAN has 43 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Average Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Mean Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Average Clustering Mean Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=clusmean noobs label contents='' ;
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 43 observations read from the data set WORK.CLUSMEAN.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = PIE segmentsize
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus4_OUTMEAN template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="_SEGMENT_" var2= "_FREQ_" ;
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 4 observations read from the data set EMWS1.CLUS4_OUTMEAN.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_SGSILK):   quit;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=Average Clustering" title3="Segment Size");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Pie options( category = "_SEGMENT_" response = 
"_FREQ_" pielabeldisplay = "1" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.63 seconds
      cpu time            0.25 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = DATA CLUSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus4_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "nodetext";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 25 observations read from the data set EMWS1.CLUS4_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=Average Clustering" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent = 
"PARENT" nodetext = "nodetext" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth = 
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.52 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE SEGMENTGRAPH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS1.Clus4_PROFILE;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Average Clustering";
MPRINT(EM_REPORT_LATTICE):   title3 "Segment Plot";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Clus4_PROFILE;
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE / columns=3 rows=5 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _SEGMENT_ / response=BYPERCENT group=FMTVALUE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           1.16 seconds
      cpu time            0.43 seconds
      
NOTE: There were 428 observations read from the data set EMWS1.CLUS4_PROFILE.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = PROPERTIES DISTANCEPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==20 : Viewtype = DATA DISTANCETABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus4_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==21 : Viewtype = SCATTER CCCPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=Average Clustering";
MPRINT(EM_REPORT_SGPLOT):   title3 "CCC Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Clus4_CLUSSEED;
MPRINT(EM_REPORT_SGPLOT):   scatter x = _NCL_ y = _CCC_ / markerattrs=(symbol=squarefilled) ;
MPRINT(EM_REPORT_SGPLOT):   refline 4 / axis = x;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.40 seconds
      cpu time            0.25 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS4_CLUSSEED.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus4_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS4_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus4_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==22 : Viewtype = SCATTER INPUTMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Clus3")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='CLUS3';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29692      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29693      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29693    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29693    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29694      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29695      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29696      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29697      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29698      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29699      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29700      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29701      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29702      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29703      output;
MPRINT(EM_GETTRAINPATH):   output;
29704      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
29705      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29706      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
29707      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
29708      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29709      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29710      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29711      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29712      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29713      output;
MPRINT(EM_GETTRAINPATH):   output;
29714      nodelabel="Clus3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Clus3";
29715      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
29716      description="Clustering";
MPRINT(EM_GETTRAINPATH):   description="Clustering";
29717      component="Cluster";
MPRINT(EM_GETTRAINPATH):   component="Cluster";
29718      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29719      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29720      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29721      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29722      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29723      output;
MPRINT(EM_GETTRAINPATH):   output;
29724      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Clus3"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Centroid Clustering";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Clus3";
MPRINT(EM_REPORT_NODE):   put "Node label = Centroid Clustering";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Clus3";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Clus3\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29725      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29726      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29727      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29727    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29727    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29728      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
29729      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
29730      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29731      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29732      Name = 'Clusvar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Clusvar';
29733      Value = "%nrbquote(_SEGMENT_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_SEGMENT_";
29734      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29735      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29736      Name = 'ClusvarLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarLabel';
29737      Value = "%nrbquote(Segment Variable)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Segment Variable";
29738      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29739      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29740      Name = 'ClusvarRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarRole';
29741      Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
29742      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29743      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29744      Name = 'MaxC';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxC';
29745      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29746      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29747      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29748      Name = 'NominalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalEncoding';
29749      Value = "%nrbquote(GLM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GLM";
29750      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29751      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29752      Name = 'OrdinalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalEncoding';
29753      Value = "%nrbquote(RANK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANK";
29754      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29755      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29756      Name = 'MissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingInterval';
29757      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29758      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29759      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29760      Name = 'MissingNominal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingNominal';
29761      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29762      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29763      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29764      Name = 'MissingOrdinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingOrdinal';
29765      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29766      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29767      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29768      Name = 'ImputationMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputationMethod';
29769      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29770      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29771      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29772      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29773      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29774      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29775      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29776      Name = 'TrainDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainDefaults';
29777      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29778      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29779      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29780      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29781      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29782      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29783      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29784      Name = 'LearnInitial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnInitial';
29785      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29786      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29787      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29788      Name = 'LearnFinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnFinal';
29789      Value = "%nrbquote(0.02)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.02";
29790      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29791      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29792      Name = 'LearnSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnSteps';
29793      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29794      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29795      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29796      Name = 'MaxIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIter';
29797      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29798      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29799      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29800      Name = 'MaxSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxSteps';
29801      Value = "%nrbquote(1200)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1200";
29802      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29803      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29804      Name = 'XConv';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'XConv';
29805      Value = "%nrbquote(0.0001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0001";
29806      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29807      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29808      Name = 'Initial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Initial';
29809      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29810      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29811      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29812      Name = 'Drift';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Drift';
29813      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29814      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29815      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29816      Name = 'Radius';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Radius';
29817      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29818      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29819      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29820      Name = 'Stdize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stdize';
29821      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
29822      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29823      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29824      Name = 'Summary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Summary';
29825      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29826      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29827      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29828      Name = 'TreeProfile';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TreeProfile';
29829      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29830      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29831      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29832      Name = 'ClusterGraphs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterGraphs';
29833      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29834      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29835      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29836      Name = 'NumberClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberClusterMethod';
29837      Value = "%nrbquote(AUTOMATIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AUTOMATIC";
29838      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29839      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29840      Name = 'DistancePlot';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistancePlot';
29841      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29842      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29843      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29844      Name = 'FinalMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FinalMaxNum';
29845      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29846      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29847      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29848      Name = 'AutomaticMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMaxNum';
29849      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29850      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29851      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29852      Name = 'AutomaticMinNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMinNum';
29853      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29854      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29855      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29856      Name = 'AutomaticMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMethod';
29857      Value = "%nrbquote(CENTROID)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CENTROID";
29858      Default = "%nrbquote(WARD)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "WARD";
29859      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29860      Name = 'CCCCutOff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CCCCutOff';
29861      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
29862      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29863      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29864      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29865      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29866      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29867      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29868      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29869      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29870      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29870    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29871      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29872      Value = "Cluster";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Cluster";
29873      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29874      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

29875      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29876      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29877      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 35 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Centroid Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Centroid Clustering Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 24 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 35 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Clus3_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus3_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS1.CLUS3_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

15 OUTPUT;
17 OUTPUT;
NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Centroid Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Centroid Clustering Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus3_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Clus3" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS3_CMETA_TRAIN.
      WHERE UPCASE(creator)='Clus3';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Clus3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Clus3_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS1.Clus3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA CLUSMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   proc transpose data=EMWS1.Clus3_OUTMEAN out=clusmean name=VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 2 observations read from the data set EMWS1.CLUS3_OUTMEAN.
NOTE: The data set WORK.CLUSMEAN has 44 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_DATA):   data clusmean;
MPRINT(EM_REPORT_DATA):   set clusmean;
MPRINT(EM_REPORT_DATA):   label _LABEL_ = "Variable" COL1 = "Segment 1" COL2 = "Segment 2" ;
MPRINT(EM_REPORT_DATA):   if missing(_LABEL_) then _LABEL_ = VARIABLE;
MPRINT(EM_REPORT_DATA):   if VARIABLE="_SEGMENT_" then delete;
MPRINT(EM_REPORT_DATA):   drop VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 44 observations read from the data set WORK.CLUSMEAN.
NOTE: The data set WORK.CLUSMEAN has 43 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Centroid Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Mean Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Centroid Clustering Mean Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=clusmean noobs label contents='' ;
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 43 observations read from the data set WORK.CLUSMEAN.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = PIE segmentsize
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus3_OUTMEAN template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="_SEGMENT_" var2= "_FREQ_" ;
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 2 observations read from the data set EMWS1.CLUS3_OUTMEAN.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_SGSILK):   quit;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=Centroid Clustering" title3="Segment Size");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Pie options( category = "_SEGMENT_" response = 
"_FREQ_" pielabeldisplay = "1" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.43 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==14 : Viewtype = DATA CLUSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus3_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "nodetext";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=Centroid Clustering" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent = 
"PARENT" nodetext = "nodetext" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth = 
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.69 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE SEGMENTGRAPH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS1.Clus3_PROFILE;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Centroid Clustering";
MPRINT(EM_REPORT_LATTICE):   title3 "Segment Plot";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Clus3_PROFILE;
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE / columns=4 rows=6 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _SEGMENT_ / response=BYPERCENT group=FMTVALUE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           1.04 seconds
      cpu time            0.43 seconds
      
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==19 : Viewtype = PROPERTIES DISTANCEPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==20 : Viewtype = DATA DISTANCETABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus3_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==21 : Viewtype = SCATTER CCCPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=Centroid Clustering";
MPRINT(EM_REPORT_SGPLOT):   title3 "CCC Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Clus3_CLUSSEED;
MPRINT(EM_REPORT_SGPLOT):   scatter x = _NCL_ y = _CCC_ / markerattrs=(symbol=squarefilled) ;
MPRINT(EM_REPORT_SGPLOT):   refline 2 / axis = x;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.31 seconds
      cpu time            0.18 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS3_CLUSSEED.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus3_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS3_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus3_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==22 : Viewtype = SCATTER INPUTMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Clus")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='CLUS';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29878      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29879      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29879    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29879    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29880      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29881      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29882      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29883      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29884      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29885      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29886      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29887      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29888      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29889      output;
MPRINT(EM_GETTRAINPATH):   output;
29890      nodelabel="Filter";
MPRINT(EM_GETTRAINPATH):   nodelabel="Filter";
29891      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29892      description="Filtering";
MPRINT(EM_GETTRAINPATH):   description="Filtering";
29893      component="Filter";
MPRINT(EM_GETTRAINPATH):   component="Filter";
29894      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29895      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29896      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29897      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29898      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29899      output;
MPRINT(EM_GETTRAINPATH):   output;
29900      nodelabel="Clus";
MPRINT(EM_GETTRAINPATH):   nodelabel="Clus";
29901      parent="Filter";
MPRINT(EM_GETTRAINPATH):   parent="Filter";
29902      description="Clustering";
MPRINT(EM_GETTRAINPATH):   description="Clustering";
29903      component="Cluster";
MPRINT(EM_GETTRAINPATH):   component="Cluster";
29904      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29905      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29906      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29907      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29908      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29909      output;
MPRINT(EM_GETTRAINPATH):   output;
29910      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Clus"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Ward Clustering";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Clus";
MPRINT(EM_REPORT_NODE):   put "Node label = Ward Clustering";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Filter => Clus";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x 
"\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EM
WS1\Clus\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29911      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29912      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29913      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29913    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29913    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29914      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
29915      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
29916      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29917      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29918      Name = 'Clusvar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Clusvar';
29919      Value = "%nrbquote(_SEGMENT_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_SEGMENT_";
29920      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29921      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29922      Name = 'ClusvarLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarLabel';
29923      Value = "%nrbquote(Segment Variable)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Segment Variable";
29924      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29925      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29926      Name = 'ClusvarRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusvarRole';
29927      Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
29928      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29929      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29930      Name = 'MaxC';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxC';
29931      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29932      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29933      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29934      Name = 'NominalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalEncoding';
29935      Value = "%nrbquote(GLM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GLM";
29936      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29937      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29938      Name = 'OrdinalEncoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalEncoding';
29939      Value = "%nrbquote(RANK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANK";
29940      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29941      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29942      Name = 'MissingInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingInterval';
29943      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29944      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29945      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29946      Name = 'MissingNominal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingNominal';
29947      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29948      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29949      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29950      Name = 'MissingOrdinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingOrdinal';
29951      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29952      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29953      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29954      Name = 'ImputationMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputationMethod';
29955      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29956      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29957      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29958      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29959      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29960      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29961      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29962      Name = 'TrainDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainDefaults';
29963      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29964      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29965      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29966      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29967      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29968      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29969      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29970      Name = 'LearnInitial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnInitial';
29971      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29972      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29973      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29974      Name = 'LearnFinal';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnFinal';
29975      Value = "%nrbquote(0.02)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.02";
29976      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29977      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29978      Name = 'LearnSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LearnSteps';
29979      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29980      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29981      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29982      Name = 'MaxIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIter';
29983      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29984      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29985      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29986      Name = 'MaxSteps';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxSteps';
29987      Value = "%nrbquote(1200)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1200";
29988      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29989      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29990      Name = 'XConv';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'XConv';
29991      Value = "%nrbquote(0.0001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0001";
29992      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29993      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29994      Name = 'Initial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Initial';
29995      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29996      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29997      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29998      Name = 'Drift';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Drift';
29999      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30000      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30001      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30002      Name = 'Radius';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Radius';
30003      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30004      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30005      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30006      Name = 'Stdize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stdize';
30007      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
30008      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30009      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30010      Name = 'Summary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Summary';
30011      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30012      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30013      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30014      Name = 'TreeProfile';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TreeProfile';
30015      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30016      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30017      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30018      Name = 'ClusterGraphs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClusterGraphs';
30019      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30020      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30021      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30022      Name = 'NumberClusterMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberClusterMethod';
30023      Value = "%nrbquote(AUTOMATIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AUTOMATIC";
30024      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30025      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30026      Name = 'DistancePlot';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistancePlot';
30027      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30028      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30029      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30030      Name = 'FinalMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FinalMaxNum';
30031      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
30032      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30033      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30034      Name = 'AutomaticMaxNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMaxNum';
30035      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
30036      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30037      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30038      Name = 'AutomaticMinNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMinNum';
30039      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
30040      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30041      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30042      Name = 'AutomaticMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AutomaticMethod';
30043      Value = "%nrbquote(WARD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "WARD";
30044      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30045      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30046      Name = 'CCCCutOff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CCCCutOff';
30047      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
30048      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30049      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30050      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

30051      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
30052      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
30053      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 34 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

30054      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
30055      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30056      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30056    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
30057      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
30058      Value = "Cluster";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Cluster";
30059      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
30060      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

30061      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30062      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
30063      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 34 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 35 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.18 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Ward Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Ward Clustering Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 24 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-12*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 35 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 12 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 12 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 11 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 12 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Clus_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS1.CLUS_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

15 OUTPUT;
17 OUTPUT;
NOTE: There were 21 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Ward Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Ward Clustering Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Clus_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Clus" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS_CMETA_TRAIN.
      WHERE UPCASE(creator)='Clus';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Clus_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Clus_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS1.Clus_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA CLUSMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   proc transpose data=EMWS1.Clus_OUTMEAN out=clusmean name=VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTMEAN.
NOTE: The data set WORK.CLUSMEAN has 44 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_DATA):   data clusmean;
MPRINT(EM_REPORT_DATA):   set clusmean;
MPRINT(EM_REPORT_DATA):   label _LABEL_ = "Variable" COL1 = "Segment 1" COL2 = "Segment 2" COL3 
= "Segment 3" ;
MPRINT(EM_REPORT_DATA):   if missing(_LABEL_) then _LABEL_ = VARIABLE;
MPRINT(EM_REPORT_DATA):   if VARIABLE="_SEGMENT_" then delete;
MPRINT(EM_REPORT_DATA):   drop VARIABLE;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 44 observations read from the data set WORK.CLUSMEAN.
NOTE: The data set WORK.CLUSMEAN has 43 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Ward Clustering";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Mean Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Ward Clustering Mean Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=clusmean noobs label contents='' ;
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 43 observations read from the data set WORK.CLUSMEAN.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = PIE segmentsize
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus_OUTMEAN template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="_SEGMENT_" var2= "_FREQ_" ;
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 3 observations read from the data set EMWS1.CLUS_OUTMEAN.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_SGSILK):   quit;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=Ward Clustering" title3="Segment Size");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Pie options( category = "_SEGMENT_" response = 
"_FREQ_" pielabeldisplay = "1" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.46 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = DATA CLUSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl 
file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\view.xml" 
data="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
es\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS1.Clus_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "nodetext";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 31 observations read from the data set EMWS1.CLUS_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS 
Enterprise Miner Report" title2="Node=Ward Clustering" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent = 
"PARENT" nodetext = "nodetext" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth = 
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk 
viewxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\view.xml" 
dataxml="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Works
paces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.46 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==17 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==18 : Viewtype = LATTICE SEGMENTGRAPH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS1.Clus_PROFILE;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Ward Clustering";
MPRINT(EM_REPORT_LATTICE):   title3 "Segment Plot";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Clus_PROFILE;
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE / columns=3 rows=5 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _SEGMENT_ / response=BYPERCENT group=FMTVALUE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.98 seconds
      cpu time            0.45 seconds
      
NOTE: There were 336 observations read from the data set EMWS1.CLUS_PROFILE.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==19 : Viewtype = PROPERTIES DISTANCEPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==20 : Viewtype = DATA DISTANCETABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==21 : Viewtype = SCATTER CCCPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=Ward Clustering";
MPRINT(EM_REPORT_SGPLOT):   title3 "CCC Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Clus_CLUSSEED;
MPRINT(EM_REPORT_SGPLOT):   scatter x = _NCL_ y = _CCC_ / markerattrs=(symbol=squarefilled) ;
MPRINT(EM_REPORT_SGPLOT):   refline 3 / axis = x;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.34 seconds
      cpu time            0.20 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS_CLUSSEED.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Clus_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.CLUS_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Clus_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==22 : Viewtype = SCATTER INPUTMEAN
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP' 
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in 
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   data _NULL_ ;
MPRINT(EM_REPORT_CREATE):   file print;
MPRINT(EM_REPORT_CREATE):   put "End of Report" ;
MPRINT(EM_REPORT_CREATE):   run;

NOTE: 1 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   title1;
MPRINT(EM_REPORT_CREATE):   title2;
MPRINT(EM_REPORT_CREATE):   title3 ;
MPRINT(EM_REPORT_CREATE):   ods graphics / reset=height;
MPRINT(EM_REPORT_CREATE):   ods listing;
MPRINT(EM_REPORT_CREATE):   ods PDF close;
NOTE: ODS PDF printed 35 pages to 
      \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspac
      es\EMWS1\Report\REPORT.pdf.
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT_RESULTS):   data _null_ ;
MPRINT(EM_REPORT_RESULTS):   call symput('report_date', strip(put(date(), NLDATE.)));
MPRINT(EM_REPORT_RESULTS):   call symput('report_time', strip(put(datetime(), NLTIME.)));
MPRINT(EM_REPORT_RESULTS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_RESULTS):   data _null_;
MPRINT(EM_REPORT_RESULTS):   file print ;
MPRINT(EM_REPORT_RESULTS):   put "User       = bkris2" ;
MPRINT(EM_REPORT_RESULTS):   put "Date       = 09:08:42  March 04" ;
MPRINT(EM_REPORT_RESULTS):   put "Project    = ZetaExploratoryAnalysis " ;
MPRINT(EM_REPORT_RESULTS):   put "Diagram    = ExploratoryAnalysis" / ;
MPRINT(EM_REPORT_RESULTS):   put "Start Node = Report";
MPRINT(EM_REPORT_RESULTS):   put "Node label = Ward Clustering" ;
MPRINT(EM_REPORT_RESULTS):   put "Nodes      = PATH" ;
MPRINT(EM_REPORT_RESULTS):   put "Showall    = N" / ;
MPRINT(EM_REPORT_RESULTS):   put "Format     = PDF" ;
MPRINT(EM_REPORT_RESULTS):   put "Graphics   = GIF" ;
MPRINT(EM_REPORT_RESULTS):   put "Style      = LISTING" / ;
MPRINT(EM_REPORT_RESULTS):   run ;

NOTE: 11 lines were written to file PRINT.
NOTE: The DATA step printed page 2.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_RESULTS):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "REPORT";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "FILEVIEWER";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.70199130182247;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_RESULTS):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Report;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30064      *------------------------------------------------------------*;
30065      * End TRAIN: Report;
30066      *------------------------------------------------------------*;
30067      

30068      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
30069      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
30070      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30071      ;
MPRINT(EM_DIAGRAM):   ;
30072      ;
MPRINT(EM_DIAGRAM):   ;
30073      ;
MPRINT(EM_DIAGRAM):   ;
30074      ;
MPRINT(EM_DIAGRAM):   ;
30075      quit;
MPRINT(EM_DIAGRAM):   quit;
30076      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30077      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
30078      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
30079      /*; *"; *'; */
30080      ;
MPRINT(EM_DIAGRAM):   ;
30081      run;
MPRINT(EM_DIAGRAM):   run;
30082      quit;
MPRINT(EM_DIAGRAM):   quit;
30083      /* Reset EM Options */
30084      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
30085      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
30086      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
30087      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
30088      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
30089      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
