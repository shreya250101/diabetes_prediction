*------------------------------------------------------------*
User:                bkris2
Date:                March 03, 2024
Time:                18:22:33
Site:                70080107
Platform:            X64_10PRO
Maintenance Release: 9.04.01M7P080520
EM Version:          15.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 03, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:21:17" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                March 03, 2024
Time:                18:21:17
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1DZTD2Q "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1DZTD2Q new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 03, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:21:17" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080107";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M7P080520";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 03, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:21:18" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22194      proc freq data=EMWS1.Clus3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Clus3_VariableSet noprint;
22195      table ROLE*LEVEL/out=WORK.Clus3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Clus3META;
22196      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.CLUS3_VARIABLESET.
NOTE: The data set WORK.CLUS3META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.17 seconds
      cpu time            0.14 seconds
 
 
22197      proc print data=WORK.Clus3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Clus3META label noobs;
22198      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22199      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22200      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22201      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22202      run;
 
NOTE: There were 4 observations read from the data set WORK.CLUS3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
22203      title10;
MPRINT(EM_DIAGRAM):   title10;
22204      data WORK.M1M5OHG8;
MPRINT(EM_DIAGRAM):    data WORK.M1M5OHG8;
22205      set WORK.M1M5OHG8;
MPRINT(EM_DIAGRAM):   set WORK.M1M5OHG8;
22206      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
22207      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1M5OHG8.
NOTE: The data set WORK.M1M5OHG8 has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1M5OHG8;
MPRINT(EM_DIAGRAM):   set WORK.M1M5OHG8;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
22216      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22217      * Clus3: Preliminary Clustering;
MPRINT(EM_DIAGRAM):   * Clus3: Preliminary Clustering;
22218      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22219      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22220      * Clus3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: DMDBClass Macro ;
22221      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22222      %macro DMDBClass;
22223          AnyHealthcare(ASC) CholCheck(ASC) DiffWalk(ASC) Education(ASC) Fruits(ASC)
22224         GenHlth(ASC) HeartDiseaseorAttack(ASC) HighBP(ASC) HighChol(ASC)
22225         HvyAlcoholConsump(ASC) Income(ASC) MentHlth(ASC) NoDocbcCost(ASC)
22226         PhysActivity(ASC) PhysHlth(ASC) Sex(ASC) Smoker(ASC) Stroke(ASC) Veggies(ASC)
22227      %mend DMDBClass;
22228      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22229      * Clus3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: DMDBVar Macro ;
22230      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22231      %macro DMDBVar;
22232          Age BMI
22233      %mend DMDBVar;
22234      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22235      * Clus3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Clus3: Create DMDB;
22236      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22237      proc dmdb batch data=EMWS1.Filter_TRAIN
22238      dmdbcat=WORK.Clus3_DMDB
22239      maxlevel = 513
22240      out=WORK.Clus3_DMDB
22241      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Filter_TRAIN dmdbcat=WORK.Clus3_DMDB maxlevel = 513 out=WORK.Clus3_DMDB ;
MPRINT(EM_DIAGRAM):   class
22242      class %DMDBClass;
MPRINT(DMDBCLASS):   AnyHealthcare(ASC) CholCheck(ASC) DiffWalk(ASC) Education(ASC) Fruits(ASC) GenHlth(ASC) HeartDiseaseorAttack(ASC) HighBP(ASC) HighChol(ASC) HvyAlcoholConsump(ASC) Income(ASC) MentHlth(ASC) NoDocbcCost(ASC) PhysActivity(ASC)
PhysHlth(ASC) Sex(ASC) Smoker(ASC) Stroke(ASC) Veggies(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
22243      var %DMDBVar;
MPRINT(DMDBVAR):   Age BMI
MPRINT(EM_DIAGRAM):  ;
22244      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 100000   Memory used = 511K.
NOTE: Records processed = 200000   Memory used = 511K.
NOTE: Records processed = 247875   Memory used = 511K.
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           1.85 seconds
      cpu time            1.29 seconds
 
NOTE: There were 250716 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.CLUS3_DMDB has 247875 observations and 21 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           1.91 seconds
      cpu time            1.35 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22245      quit;
22246      *--- end code ---*;
 
22247      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22248      * Clus3: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Interval Inputs Macro ;
22249      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22250      %macro DMVQINTERVAL;
22251          Age BMI
22252      %mend DMVQINTERVAL;
22253      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22254      * Clus3: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Nominal Inputs Macro ;
22255      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22256      %macro DMVQNOMINAL;
22257          AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol
22258         HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
22259      %mend DMVQNOMINAL;
22260      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22261      * Clus3: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Ordinal Inputs Macro ;
22262      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22263      %macro DMVQORDINAL;
22264          Education GenHlth Income MentHlth PhysHlth
22265      %mend DMVQORDINAL;
22266      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22267      * Clus3: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus3: Run DMVQ procedure;
22268      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22269      title;
MPRINT(EM_DIAGRAM):   title;
22270      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
22271      proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=STD nominal=GLM ordinal=RANK
22272      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS3_DMDB.DATA has 21 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
22273      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   Age BMI
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 2 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
22274      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 14 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
22275      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   Education GenHlth Income MentHlth PhysHlth
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 5 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
22276      VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 50 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
22277      MAKE outvar=EMWS1.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus3_OUTVAR;
 
NOTE: 21 input variable(s).
NOTE: Number of cases=247875
NOTE: Sum of frequencies=247875
NOTE: Sum of weights=247875
NOTE: VARDEF=DF
NOTE: Maximum number of categories=31
NOTE: The total number of variables is 21 with dimensionality 35.
NOTE: 21 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS3_OUTVAR.DATA with 36 variables.
NOTE: The data set EMWS1.CLUS3_OUTVAR has 4 observations and 36 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
22278      INITIAL radius=0
22279      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 50 seeds were selected from data set WORK.CLUS3_DMDB.DATA using the SEPARATE algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
22280      TRAIN tech=FORGY
22281      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: The limit of 10 iterations was reached without convergence.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
22282      SAVE outstat=WORK.Clus3_OUTSTAT outmean=EMWS1.Clus3_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=WORK.Clus3_OUTSTAT outmean=EMWS1.Clus3_OUTMEAN;
NOTE: The data set WORK.CLUS3_OUTSTAT has 316 observations and 38 variables.
NOTE: The data set EMWS1.CLUS3_OUTMEAN has 50 observations and 44 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
22283      code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\DMVQSCORECODE.sas"
22284      group=Clus3
22285      ;
MPRINT(EM_DIAGRAM):   code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\DMVQSCORECODE.sas" group=Clus3 ;
NOTE: External file \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
22286      run;
MPRINT(EM_DIAGRAM):   run;
 
22287      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 247875 observations read from the data set WORK.CLUS3_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           9.90 seconds
      cpu time            9.53 seconds
 
 
22288      proc transpose data=EMWS1.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
22289      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
22290      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
22291      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS3_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS3_OUTVAR has 35 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.49 seconds
      cpu time            0.07 seconds
 
 
22292      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22293      * Clus3: DMVQ Variables;
MPRINT(EM_DIAGRAM):   * Clus3: DMVQ Variables;
22294      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22295      %macro dmvqvars;
22296          Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0
22297         DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0
22298         HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
22299         NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0
22300         Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
22301      %mend ;
22302
22303
 
22304      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22305      * Clus3: Determining the number of clusters;
MPRINT(EM_DIAGRAM):   * Clus3: Determining the number of clusters;
22306      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22307      proc cluster data=EMWS1.Clus3_OUTMEAN method=CENTROID pseudo outtree=EMWS1.Clus3_CLUSSEED
WARNING: The SAS/STAT product with which CLUSTER is associated will be expiring soon, and is currently in warning mode to indicate this upcoming expiration. Please run PROC SETINIT to obtain more information on your warning period.
22308      ;
MPRINT(EM_DIAGRAM):   proc cluster data=EMWS1.Clus3_OUTMEAN method=CENTROID pseudo outtree=EMWS1.Clus3_CLUSSEED ;
MPRINT(EM_DIAGRAM):   var
22309      var %dmvqvars;
MPRINT(DMVQVARS):   Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0 DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0 HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0 Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
MPRINT(EM_DIAGRAM):  ;
22310      copy _SEGMENT_;
MPRINT(EM_DIAGRAM):   copy _SEGMENT_;
22311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS3_CLUSSEED has 99 observations and 52 variables.
NOTE: The PROCEDURE CLUSTER printed page 2.
NOTE: PROCEDURE CLUSTER used (Total process time):
      real time           0.16 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22312      quit;
22313      proc sort data =EMWS1.Clus3_CLUSSEED out=WORK._SEED_;
MPRINT(EM_DIAGRAM):   proc sort data =EMWS1.Clus3_CLUSSEED out=WORK._SEED_;
22314      by _ncl_;
MPRINT(EM_DIAGRAM):   by _ncl_;
22315      where (_ccc_ > -99999.0);
MPRINT(EM_DIAGRAM):   where (_ccc_ > -99999.0);
22316      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set EMWS1.CLUS3_CLUSSEED.
      WHERE _ccc_>-99999;
NOTE: The data set WORK._SEED_ has 49 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
22317      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):   data WORK._SEED2_;
22318      retain oJump occc oncl;
MPRINT(EM_DIAGRAM):   retain oJump occc oncl;
22319      set WORK._SEED_;
MPRINT(EM_DIAGRAM):   set WORK._SEED_;
22320      _lccc_=lag(_ccc_);
MPRINT(EM_DIAGRAM):   _lccc_=lag(_ccc_);
22321      if _lccc_ > . then jump = _ccc_ - _lccc_;
MPRINT(EM_DIAGRAM):   if _lccc_ > . then jump = _ccc_ - _lccc_;
22322      if jump<0 and ojump>0 then do;
MPRINT(EM_DIAGRAM):   if jump<0 and ojump>0 then do;
22323      * Have a local Max;
MPRINT(EM_DIAGRAM):   * Have a local Max;
22324      numclus = oncl;
MPRINT(EM_DIAGRAM):   numclus = oncl;
22325      cccvalue = occc;
MPRINT(EM_DIAGRAM):   cccvalue = occc;
22326      output;
MPRINT(EM_DIAGRAM):   output;
22327      end;
MPRINT(EM_DIAGRAM):   end;
22328      ojump = jump;
MPRINT(EM_DIAGRAM):   ojump = jump;
22329      occc = _ccc_;
MPRINT(EM_DIAGRAM):   occc = _ccc_;
22330      oncl = _ncl_;
MPRINT(EM_DIAGRAM):   oncl = _ncl_;
22331      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._SEED_.
NOTE: The data set WORK._SEED2_ has 14 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
 
 
22332      proc print data=WORK._SEED2_ label;
MPRINT(EM_DIAGRAM):   proc print data=WORK._SEED2_ label;
22333      var numclus cccvalue;
MPRINT(EM_DIAGRAM):   var numclus cccvalue;
22334      label numclus="%sysfunc(sasmsg(sashelp.dmine, rpt_numclus_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label numclus= "Number of Clusters";
22335      label cccvalue="%sysfunc(sasmsg(sashelp.dmine, rpt_ccc_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label cccvalue= "Clustering Cubic Criterion";
22336      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_OptClus_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Candidates for Optimum Number of Clusters";
MPRINT(EM_DIAGRAM):   run;
22337      run;
 
NOTE: There were 14 observations read from the data set WORK._SEED2_.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22338      title10;
MPRINT(EM_DIAGRAM):   title10;
22339      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):    data WORK._SEED2_;
22340      length msg $200;
MPRINT(EM_DIAGRAM):   length msg $200;
22341      set WORK._SEED2_ end=eof;
MPRINT(EM_DIAGRAM):   set WORK._SEED2_ end=eof;
22342      retain select cccSelect 0 numSel;
MPRINT(EM_DIAGRAM):   retain select cccSelect 0 numSel;
22343      if _N_=1 then numSel = numClus;
MPRINT(EM_DIAGRAM):   if _N_=1 then numSel = numClus;
22344      if cccvalue>=3 then do;
MPRINT(EM_DIAGRAM):   if cccvalue>=3 then do;
22345      if 20>= numclus >= 2 and cccSelect<1 then do;
MPRINT(EM_DIAGRAM):   if 20>= numclus >= 2 and cccSelect<1 then do;
22346      cccSelect = 1;
MPRINT(EM_DIAGRAM):   cccSelect = 1;
22347      select =1;
MPRINT(EM_DIAGRAM):   select =1;
22348      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
22349      end;
MPRINT(EM_DIAGRAM):   end;
22350      end;
MPRINT(EM_DIAGRAM):   end;
22351      else if 20>= numclus >= 2 and select<1 then do;
MPRINT(EM_DIAGRAM):   else if 20>= numclus >= 2 and select<1 then do;
22352      select = 1;
MPRINT(EM_DIAGRAM):   select = 1;
22353      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
22354      end;
MPRINT(EM_DIAGRAM):   end;
22355      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
22356      if ^(select=1 and cccselect=1) then do;
MPRINT(EM_DIAGRAM):   if ^(select=1 and cccselect=1) then do;
22357      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
22358      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
22359      put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
MPRINT(EM_DIAGRAM):   put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
22360      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
22361      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
22362      end;
MPRINT(EM_DIAGRAM):   end;
22363      if select<1 then do;
MPRINT(EM_DIAGRAM):   if select<1 then do;
22364      msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
22365      put msg;
MPRINT(EM_DIAGRAM):   put msg;
22366      end;
MPRINT(EM_DIAGRAM):   end;
22367      if cccselect<1 then do;
MPRINT(EM_DIAGRAM):   if cccselect<1 then do;
22368      msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
22369      put msg;
MPRINT(EM_DIAGRAM):   put msg;
22370      end;
MPRINT(EM_DIAGRAM):   end;
22371      call symput('em_maxC', strip(put(numSel,best.)));
MPRINT(EM_DIAGRAM):   call symput('em_maxC', strip(put(numSel,best.)));
22372      end;
MPRINT(EM_DIAGRAM):   end;
22373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._SEED2_.
NOTE: The data set WORK._SEED2_ has 14 observations and 63 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22374      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22375      * Clus3: Training;
MPRINT(EM_DIAGRAM):   * Clus3: Training;
22376      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22377      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22378      * Clus3: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus3: Run DMVQ procedure;
22379      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22380      title;
MPRINT(EM_DIAGRAM):   title;
22381      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
22382      proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=STD nominal=GLM ordinal=RANK
22383      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus3_DMDB dmdbcat=WORK.Clus3_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS3_DMDB.DATA has 21 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
22384      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   Age BMI
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 2 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
22385      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 14 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
22386      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   Education GenHlth Income MentHlth PhysHlth
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 5 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
22387      VQ maxc = 2 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 2 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 2 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
22388      MAKE outvar=EMWS1.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS1.Clus3_OUTVAR;
 
NOTE: 21 input variable(s).
NOTE: Number of cases=247875
NOTE: Sum of frequencies=247875
NOTE: Sum of weights=247875
NOTE: VARDEF=DF
NOTE: Maximum number of categories=31
NOTE: The total number of variables is 21 with dimensionality 35.
NOTE: 21 variables will be used for clustering.
NOTE: Open output data set EMWS1.CLUS3_OUTVAR.DATA with 36 variables.
NOTE: The data set EMWS1.CLUS3_OUTVAR has 4 observations and 36 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
22389      INITIAL radius=0
22390      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 2 seeds were selected from data set WORK.CLUS3_DMDB.DATA using the SEPARATE algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
22391      TRAIN tech=FORGY
22392      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
22393      SAVE outstat=EMWS1.Clus3_OUTSTAT outmean=EMWS1.Clus3_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS1.Clus3_OUTSTAT outmean=EMWS1.Clus3_OUTMEAN;
NOTE: The data set EMWS1.CLUS3_OUTSTAT has 28 observations and 38 variables.
NOTE: The data set EMWS1.CLUS3_OUTMEAN has 2 observations and 44 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
22394      code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\DMVQSCORECODE.sas"
22395      group=Clus3
22396      ;
MPRINT(EM_DIAGRAM):   code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\DMVQSCORECODE.sas" group=Clus3 ;
NOTE: External file \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
22397      run;
MPRINT(EM_DIAGRAM):   run;
 
22398      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 247875 observations read from the data set WORK.CLUS3_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           3.25 seconds
      cpu time            2.98 seconds
 
 
22399      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
22400      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22401      * Clus3: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus3: Cluster Label;
22402      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22403      data EMWS1.Clus3_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_LABEL;
22404      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
22405      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
22406      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name";
22407      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Segment Label";
22408      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
22409      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
22410      output;
MPRINT(EM_DIAGRAM):   output;
22411      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
22412      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
22413      output;
MPRINT(EM_DIAGRAM):   output;
22414      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS3_LABEL has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 03, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:21:38" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 03, 2024
Time:                18:21:38
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O258E3SA "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O258E3SA new;
MPRINT(EM_DIAGRAM):   run;
22516      proc transpose data=EMWS1.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus3_OUTVAR out=WORK.Clus3_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
22517      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
22518      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
22519      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS3_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS3_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
22520      proc sort data=WORK.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus3_OUTVAR;
22521      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22522      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS3_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
22523      proc sort data=EMWS1.Clus3_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus3_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus3_SORTEDVARS;
22524      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22525      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS1.CLUS3_VARIABLESET.
NOTE: The data set WORK.CLUS3_SORTEDVARS has 22 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
22526      data WORK.Clus3_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_OUTVAR;
22527      merge WORK.Clus3_OUTVAR(in=INVAR) WORK.Clus3_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus3_OUTVAR(in=INVAR) WORK.Clus3_SORTEDVARS;
22528      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22529      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
22530      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS3_OUTVAR.
NOTE: There were 22 observations read from the data set WORK.CLUS3_SORTEDVARS.
NOTE: The data set WORK.CLUS3_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
22531      filename emflow "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22532      *------------------------------------------------------------*;
22533      * Clus3: Scoring DATA data;
22534      *------------------------------------------------------------*;
22535      data EMWS1.Clus3_TRAIN
22536      / view=EMWS1.Clus3_TRAIN
22537      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_TRAIN / view=EMWS1.Clus3_TRAIN ;
22538      set EMWS1.Filter_TRAIN
22539      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Filter_TRAIN ;
22540      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize Age ;
MPRINT(EM_DIAGRAM):   drop T_Age ;
MPRINT(EM_DIAGRAM):   if missing( Age ) then T_Age = .;
MPRINT(EM_DIAGRAM):   else T_Age = (Age - 8.05176802824004) * 0.32679747529256;
MPRINT(EM_DIAGRAM):   *** Standardize BMI ;
MPRINT(EM_DIAGRAM):   drop T_BMI ;
MPRINT(EM_DIAGRAM):   if missing( BMI ) then T_BMI = .;
MPRINT(EM_DIAGRAM):   else T_BMI = (BMI - 27.8250408472012) * 0.18851519374223;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AnyHealthcare ;
MPRINT(EM_DIAGRAM):   drop AnyHealthcare0 AnyHealthcare1 ;
MPRINT(EM_DIAGRAM):   if missing( AnyHealthcare ) then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = .;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AnyHealthcare , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = -0.15940630304357;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = 0.15940630304357;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = 3.13662617667999;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = -3.13662617667999;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = .;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for CholCheck ;
MPRINT(EM_DIAGRAM):   drop CholCheck0 CholCheck1 ;
MPRINT(EM_DIAGRAM):   if missing( CholCheck ) then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = .;
MPRINT(EM_DIAGRAM):   CholCheck1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( CholCheck , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = -0.13978817572022;
MPRINT(EM_DIAGRAM):   CholCheck1 = 0.13978817572022;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = 3.57682601034125;
MPRINT(EM_DIAGRAM):   CholCheck1 = -3.57682601034125;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CholCheck0 = .;
MPRINT(EM_DIAGRAM):   CholCheck1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DiffWalk ;
MPRINT(EM_DIAGRAM):   drop DiffWalk0 DiffWalk1 ;
MPRINT(EM_DIAGRAM):   if missing( DiffWalk ) then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = .;
MPRINT(EM_DIAGRAM):   DiffWalk1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( DiffWalk , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = 0.3095643103152;
MPRINT(EM_DIAGRAM):   DiffWalk1 = -0.3095643103152;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = -1.6151667559647;
MPRINT(EM_DIAGRAM):   DiffWalk1 = 1.6151667559647;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = .;
MPRINT(EM_DIAGRAM):   DiffWalk1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Fruits ;
MPRINT(EM_DIAGRAM):   drop Fruits0 Fruits1 ;
MPRINT(EM_DIAGRAM):   if missing( Fruits ) then do;
MPRINT(EM_DIAGRAM):   Fruits0 = .;
MPRINT(EM_DIAGRAM):   Fruits1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Fruits , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Fruits0 = -0.5342681311123;
MPRINT(EM_DIAGRAM):   Fruits1 = 0.5342681311123;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Fruits0 = 0.93585590031975;
MPRINT(EM_DIAGRAM):   Fruits1 = -0.93585590031975;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Fruits0 = .;
MPRINT(EM_DIAGRAM):   Fruits1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   drop HeartDiseaseorAttack0 HeartDiseaseorAttack1 ;
MPRINT(EM_DIAGRAM):   if missing( HeartDiseaseorAttack ) then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = .;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HeartDiseaseorAttack , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = 0.22710871668592;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = -0.22710871668592;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = -2.20157988715912;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = 2.20157988715912;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = .;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighBP ;
MPRINT(EM_DIAGRAM):   drop HighBP0 HighBP1 ;
MPRINT(EM_DIAGRAM):   if missing( HighBP ) then do;
MPRINT(EM_DIAGRAM):   HighBP0 = .;
MPRINT(EM_DIAGRAM):   HighBP1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighBP , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HighBP0 = 0.60662950455921;
MPRINT(EM_DIAGRAM):   HighBP1 = -0.60662950455921;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HighBP0 = -0.82422298799588;
MPRINT(EM_DIAGRAM):   HighBP1 = 0.82422298799588;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HighBP0 = .;
MPRINT(EM_DIAGRAM):   HighBP1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighChol ;
MPRINT(EM_DIAGRAM):   drop HighChol0 HighChol1 ;
MPRINT(EM_DIAGRAM):   if missing( HighChol ) then do;
MPRINT(EM_DIAGRAM):   HighChol0 = .;
MPRINT(EM_DIAGRAM):   HighChol1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighChol , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HighChol0 = 0.60519767235518;
MPRINT(EM_DIAGRAM):   HighChol1 = -0.60519767235518;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HighChol0 = -0.82617301039587;
MPRINT(EM_DIAGRAM):   HighChol1 = 0.82617301039587;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HighChol0 = .;
MPRINT(EM_DIAGRAM):   HighChol1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   drop HvyAlcoholConsump0 HvyAlcoholConsump1 ;
MPRINT(EM_DIAGRAM):   if missing( HvyAlcoholConsump ) then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = .;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HvyAlcoholConsump , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = 0.17357304228491;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = -0.17357304228491;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = -2.88062003334322;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = 2.88062003334322;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = .;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for NoDocbcCost ;
MPRINT(EM_DIAGRAM):   drop NoDocbcCost0 NoDocbcCost1 ;
MPRINT(EM_DIAGRAM):   if missing( NoDocbcCost ) then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = .;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( NoDocbcCost , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = 0.21203136396168;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = -0.21203136396168;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = -2.35813218154186;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = 2.35813218154186;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = .;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysActivity ;
MPRINT(EM_DIAGRAM):   drop PhysActivity0 PhysActivity1 ;
MPRINT(EM_DIAGRAM):   if missing( PhysActivity ) then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = .;
MPRINT(EM_DIAGRAM):   PhysActivity1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysActivity , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = -0.39540760740426;
MPRINT(EM_DIAGRAM):   PhysActivity1 = 0.39540760740426;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = 1.26451280524572;
MPRINT(EM_DIAGRAM):   PhysActivity1 = -1.26451280524572;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = .;
MPRINT(EM_DIAGRAM):   PhysActivity1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Sex ;
MPRINT(EM_DIAGRAM):   drop Sex0 Sex1 ;
MPRINT(EM_DIAGRAM):   if missing( Sex ) then do;
MPRINT(EM_DIAGRAM):   Sex0 = .;
MPRINT(EM_DIAGRAM):   Sex1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Sex , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Sex0 = 0.63067022233455;
MPRINT(EM_DIAGRAM):   Sex1 = -0.63067022233455;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Sex0 = -0.79280417109819;
MPRINT(EM_DIAGRAM):   Sex1 = 0.79280417109819;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Sex0 = .;
MPRINT(EM_DIAGRAM):   Sex1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Smoker ;
MPRINT(EM_DIAGRAM):   drop Smoker0 Smoker1 ;
MPRINT(EM_DIAGRAM):   if missing( Smoker ) then do;
MPRINT(EM_DIAGRAM):   Smoker0 = .;
MPRINT(EM_DIAGRAM):   Smoker1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Smoker , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Smoker0 = 0.63114466603367;
MPRINT(EM_DIAGRAM):   Smoker1 = -0.63114466603367;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Smoker0 = -0.7922082048105;
MPRINT(EM_DIAGRAM):   Smoker1 = 0.7922082048105;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Smoker0 = .;
MPRINT(EM_DIAGRAM):   Smoker1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Stroke ;
MPRINT(EM_DIAGRAM):   drop Stroke0 Stroke1 ;
MPRINT(EM_DIAGRAM):   if missing( Stroke ) then do;
MPRINT(EM_DIAGRAM):   Stroke0 = .;
MPRINT(EM_DIAGRAM):   Stroke1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Stroke , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Stroke0 = 0.14489743273379;
MPRINT(EM_DIAGRAM):   Stroke1 = -0.14489743273378;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Stroke0 = -3.45070284145663;
MPRINT(EM_DIAGRAM):   Stroke1 = 3.45070284145663;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Stroke0 = .;
MPRINT(EM_DIAGRAM):   Stroke1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Veggies ;
MPRINT(EM_DIAGRAM):   drop Veggies0 Veggies1 ;
MPRINT(EM_DIAGRAM):   if missing( Veggies ) then do;
MPRINT(EM_DIAGRAM):   Veggies0 = .;
MPRINT(EM_DIAGRAM):   Veggies1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Veggies , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Veggies0 = -0.33925255015504;
MPRINT(EM_DIAGRAM):   Veggies1 = 0.33925255015504;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Veggies0 = 1.47382232683513;
MPRINT(EM_DIAGRAM):   Veggies1 = -1.47382232683513;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Veggies0 = .;
MPRINT(EM_DIAGRAM):   Veggies1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop T_Education ;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   T_Education = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Education , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.81032358932347;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.71362805228958;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.19282563753062;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_Education = -0.23450021957985;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_Education = 1.05502095498466;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_Education = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GenHlth ;
MPRINT(EM_DIAGRAM):   drop T_GenHlth ;
MPRINT(EM_DIAGRAM):   if missing( GenHlth ) then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( GenHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = -1.4767070194314;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = -0.50697937184535;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 0.67028858758655;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 1.42327294300141;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 1.72271200300089;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Income ;
MPRINT(EM_DIAGRAM):   drop T_Income ;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   T_Income = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Income , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.71654961353095;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.56939520629206;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.37834052561171;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.12755068098766;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_Income = -0.8060973677071;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_Income = -0.36823854405569;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_Income = 0.19328494694827;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_Income = 1.14079558485619;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_Income = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for MentHlth ;
MPRINT(EM_DIAGRAM):   drop T_MentHlth ;
MPRINT(EM_DIAGRAM):   if missing( MentHlth ) then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( MentHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = -0.64642594988229;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.08940309912206;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 2.0307349089589;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.46046162551661;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 0.90779440570373;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.26081745228278;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.66859965091116;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.79355117273767;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.35391488142563;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.87030502183819;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.57788118743921;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.73878343236461;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.91314358056186;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.54375977729304;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.60909115584375;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72520529256066;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92738302129238;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.89955685243419;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.93136800349923;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84186049367204;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.61517168903869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.83945576302997;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92402498671721;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90191864145764;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84062377505612;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.9230287411655;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72885533014237;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.9027345322112;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72158101995012;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90333571487172;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84278803263398;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_MentHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysHlth ;
MPRINT(EM_DIAGRAM):   drop T_PhysHlth ;
MPRINT(EM_DIAGRAM):   if missing( PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = -0.73130504087574;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.86306848927175;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 0.84738417559862;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 0.63962005317307;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.03135467225463;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.22952668497363;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.44021226213214;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.57306541611342;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.13397888490182;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.34557335908836;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.64186567507459;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.51486354571126;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.29966594402074;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.69046732061816;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.38749623450632;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67194042851999;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.48915474406123;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.70734683685303;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.71297875236601;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.39522997439662;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61545085519742;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61191264890973;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.7025588971518;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61351133386082;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67964982295418;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67765349555333;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.701252357674;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.49412933225929;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.48425319223149;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67863542894968;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61680608558743;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUS3vlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUS3vads [2] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 2;
MPRINT(EM_DIAGRAM):   CLUS3vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_Age ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_Age - 0.42184681145588 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_Age - -0.19528322070761 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_BMI ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_BMI - 0.35557592040749 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_BMI - -0.1646048021643 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( AnyHealthcare0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( AnyHealthcare0 - 0.05876880098551 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( AnyHealthcare0 - -0.02720551731536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( AnyHealthcare1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( AnyHealthcare1 - -0.05876880098551 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( AnyHealthcare1 - 0.02720551731536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( CholCheck0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( CholCheck0 - -0.06160551438692 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( CholCheck0 - 0.02851870142449 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( CholCheck1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( CholCheck1 - 0.06160551438692 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( CholCheck1 - -0.02851870142449 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( DiffWalk0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( DiffWalk0 - -0.60277936734095 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( DiffWalk0 - 0.2790413321456 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( DiffWalk1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( DiffWalk1 - 0.60277936734095 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( DiffWalk1 - -0.2790413321456 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Fruits0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Fruits0 - 0.13930833715652 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Fruits0 - -0.06448924114748 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Fruits1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Fruits1 - -0.13930833715652 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Fruits1 - 0.06448924114748 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HeartDiseaseorAttack0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HeartDiseaseorAttack0 - -0.36364500761233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HeartDiseaseorAttack0 - 0.16834018025464 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HeartDiseaseorAttack1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HeartDiseaseorAttack1 - 0.36364500761233 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HeartDiseaseorAttack1 - -0.16834018025464 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HighBP0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HighBP0 - -0.41693250517112 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HighBP0 - 0.19300826796957 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighBP1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HighBP1 - 0.41693250517112 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HighBP1 - -0.19300826796957 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighChol0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HighChol0 - -0.29878653804832 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HighChol0 - 0.13831560620938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighChol1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HighChol1 - 0.29878653804832 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HighChol1 - -0.13831560620938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HvyAlcoholConsump0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HvyAlcoholConsump0 - 0.04994435920007 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HvyAlcoholConsump0 - -0.02312046708884 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HvyAlcoholConsump1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( HvyAlcoholConsump1 - -0.04994435920007 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( HvyAlcoholConsump1 - 0.02312046708884 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( NoDocbcCost0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( NoDocbcCost0 - -0.2101089136713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( NoDocbcCost0 - 0.09726456203285 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( NoDocbcCost1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( NoDocbcCost1 - 0.2101089136713 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( NoDocbcCost1 - -0.09726456203285 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( PhysActivity0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( PhysActivity0 - 0.38493719538107 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( PhysActivity0 - -0.17819685545195 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( PhysActivity1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( PhysActivity1 - -0.38493719538107 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( PhysActivity1 - 0.17819685545195 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Sex0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Sex0 - 0.04590548241346 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Sex0 - -0.02125077210582 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Sex1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Sex1 - -0.04590548241346 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Sex1 - 0.02125077210582 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Smoker0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Smoker0 - -0.22841623999465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Smoker0 - 0.10573947176221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Smoker1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Smoker1 - 0.22841623999465 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Smoker1 - -0.10573947176221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Stroke0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Stroke0 - -0.25492440634086 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Stroke0 - 0.11801075118998 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Stroke1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Stroke1 - 0.25492440634086 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Stroke1 - -0.11801075118998 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Veggies0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Veggies0 - 0.20122345955718 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Veggies0 - -0.09315126770411 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Veggies1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( Veggies1 - -0.20122345955718 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( Veggies1 - 0.09315126770411 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( T_Education ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_Education - -0.55448800541977 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_Education - 0.25668607798119 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_GenHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_GenHlth - 0.89094562531727 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_GenHlth - -0.4124405506023 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_Income ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_Income - -0.70970556764715 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_Income - 0.3285400890559 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_MentHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_MentHlth - 0.35787613830386 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_MentHlth - -0.16566962936395 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS3vads [1] + ( T_PhysHlth - 0.72892570699831 )**2;
MPRINT(EM_DIAGRAM):   CLUS3vads [2] + ( T_PhysHlth - -0.33743756229428 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   _vqnvar = 21 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 8.3559825725387E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS3vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 2;
MPRINT(EM_DIAGRAM):   if CLUS3vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS3vads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (21 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUS3vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   run;
23508      run;
 
NOTE: DATA STEP view saved on file EMWS1.CLUS3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.26 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.39 seconds
      cpu time            0.29 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
23509      quit;
23510      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23511      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23512      * Clus3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus3: Computing metadata for TRAIN data;
23513      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.CLUS3_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus3_TRAIN out=WORK.M1CD_I2V noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CD_I2V;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CD_I2V(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CD_I2V;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1CD_I2V;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0QQ92IF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MSAYZG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQ92IF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Filter_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Filter_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus3";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.CLUS3_TRAIN.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 03, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18:21:41" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                March 03, 2024
Time:                18:21:41
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0VMSBHA "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0VMSBHA new;
MPRINT(EM_DIAGRAM):   run;
23923      data WORK.M1M6XSJ0;
MPRINT(EM_DIAGRAM):    data WORK.M1M6XSJ0;
23924      set WORK.M1M6XSJ0;
MPRINT(EM_DIAGRAM):   set WORK.M1M6XSJ0;
23925      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
23926      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1M6XSJ0.
NOTE: The data set WORK.M1M6XSJ0 has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
23927      data WORK.M1M6XSJ0;
MPRINT(EM_DIAGRAM):    data WORK.M1M6XSJ0;
23928      set WORK.M1M6XSJ0 end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1M6XSJ0 end=_eof_ nobs=_nobs_;
23929      output;
MPRINT(EM_DIAGRAM):   output;
23930      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
23931      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
23932      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
23933      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
23934      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
23935      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
23936      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
23937      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
23938      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
23939      output;
MPRINT(EM_DIAGRAM):   output;
23940      end;
MPRINT(EM_DIAGRAM):   end;
23941      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1M6XSJ0.
NOTE: The data set WORK.M1M6XSJ0 has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
23942      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23943      * Clus3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus3: Create decision matrix;
23944      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23945      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23946      * Clus3: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Tree Variables Macro ;
23947      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23948      %macro EM_TREEVARS;
23949          Age AnyHealthcare BMI CholCheck DiffWalk Education Fruits GenHlth
23950         HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump Income MentHlth
23951         NoDocbcCost PhysActivity PhysHlth Sex Smoker Stroke Veggies
23952      %mend EM_TREEVARS;
23953      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23954      * Clus3: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Tree Targets Macro ;
23955      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23956      %macro EM_TREETARGETS;
23957          _SEGMENT_
23958      %mend EM_TREETARGETS;
23959      data EMWS1.EM_Clus3 / view=EMWS1.EM_Clus3;
MPRINT(EM_DIAGRAM):   data EMWS1.EM_Clus3 / view=EMWS1.EM_Clus3;
23960      set
23960    ! EMWS1.Clus3_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_TRAIN(keep
MPRINT(EM_DIAGRAM):  =Age AnyHealthcare BMI CholCheck DiffWalk Education Fruits GenHlth HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump Income MentHlth NoDocbcCost PhysActivity PhysHlth Sex Smoker Stroke Veggies _SEGMENT_);
23961      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.EM_CLUS3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS3_TRAIN.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.34 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus3: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23962      *------------------------------------------------------------* ;
23963      * Clus3: Interval Inputs Macro ;
23964      *------------------------------------------------------------* ;
23965      %macro INTINPUTS;
23966          Age BMI
23967      %mend INTINPUTS;
23968      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23969      * Clus3: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Binary and Nominal Inputs Macro ;
23970      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23971      %macro NOMINPUTS;
23972          AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol
23973         HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
23974      %mend NOMINPUTS;
23975      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23976      * Clus3: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: Ordinal Inputs Macro ;
23977      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
23978      %macro ORDINPUTS;
23979          Education GenHlth Income MentHlth PhysHlth
23980      %mend ORDINPUTS;
23981      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23982      * Clus3: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Clus3: Run ARBOR procedure;
23983      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
23984      proc arbor data=EMWS1.EM_Clus3
23985      MAXSURRS=5
23986      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS1.EM_Clus3 MAXSURRS=5 ;
23987      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
23988      input %INTINPUTS
MPRINT(INTINPUTS):   Age BMI
23989      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
23990      input %NOMINPUTS
MPRINT(NOMINPUTS):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
23991      / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
23992      input %ORDINPUTS
MPRINT(ORDINPUTS):   Education GenHlth Income MentHlth PhysHlth
23993      / level=ordinal;
MPRINT(EM_DIAGRAM):   / level=ordinal;
23994      target _SEGMENT_ / level=NOMINAL
23995      Criterion=PROBCHISQ
23996      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
23997      ;
MPRINT(EM_DIAGRAM):   ;
23998      Performance DISK
23999      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
24000      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1428095 kilobytes of physical memory.
NOTE: Will use 247875 out of 247875 training cases.
NOTE: Using memory pool with 305067008 bytes.
NOTE: Passed training data 18 times.
NOTE: Training used 51296040 bytes of work memory.
NOTE: The subtree sequence contains 59 subtrees. The largest has 117 nodes and 59 leaves.
NOTE: Using subtree with 65 nodes and 33 leaves.
NOTE: Created macro variable NLEAVES equal to 33.
24001      save
24002      MODEL=EMWS1.Clus3_PLOTDS
24003      SEQUENCE=EMWS1.Clus3_OUTSEQ
24004      IMPORTANCE=EMWS1.Clus3_OUTIMPORT
24005      NODESTAT=EMWS1.Clus3_OUTNODES
24006      SUMMARY=WORK.OUTSUMMARY_TREE_1D8RBWH
24007      STATSBYNODE=WORK.OUTSTATS_TREE_1D8RBWH
24008      Pathlistnonmissing = WORK.OUTPATH_TREE_1D8RBWH
24009      Rules = WORK.OUTRULES_TREE_1D8RBWH
24010      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS1.Clus3_PLOTDS SEQUENCE=EMWS1.Clus3_OUTSEQ IMPORTANCE=EMWS1.Clus3_OUTIMPORT NODESTAT=EMWS1.Clus3_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_1D8RBWH STATSBYNODE=WORK.OUTSTATS_TREE_1D8RBWH Pathlistnonmissing =
WORK.OUTPATH_TREE_1D8RBWH Rules = WORK.OUTRULES_TREE_1D8RBWH ;
NOTE: The data set EMWS1.CLUS3_OUTIMPORT has 21 observations and 5 variables.
NOTE: The data set EMWS1.CLUS3_PLOTDS has 4441 observations and 4 variables.
NOTE: The data set EMWS1.CLUS3_OUTNODES has 65 observations and 20 variables.
NOTE: The data set WORK.OUTPATH_TREE_1D8RBWH has 342 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_1D8RBWH has 1229 observations and 6 variables.
NOTE: The data set EMWS1.CLUS3_OUTSEQ has 59 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_1D8RBWH has 260 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_1D8RBWH has 12 observations and 5 variables.
24011      run;
MPRINT(EM_DIAGRAM):   run;
 
24012      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View EMWS1.EM_CLUS3.VIEW used (Total process time):
      real time           32.23 seconds
      cpu time            31.20 seconds
 
NOTE: There were 247875 observations read from the data set EMWS1.CLUS3_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS1.EM_CLUS3.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           32.26 seconds
      cpu time            31.23 seconds
 
 
24013      data EMWS1.Clus3_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus3_OUTIMPORT;
24014      set EMWS1.Clus3_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_OUTIMPORT;
24015      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
24016         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
24017      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
24018      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.CLUS3_OUTIMPORT.
NOTE: The data set EMWS1.CLUS3_OUTIMPORT has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds
 
 
24019      filename x "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
24020      data temp;
MPRINT(EM_DIAGRAM):    data temp;
24021      length varname $20;
MPRINT(EM_DIAGRAM):   length varname $20;
24022      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
24023      set WORK.OUTPATH_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_1D8RBWH;
24024      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
24025      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
24026      output;
MPRINT(EM_DIAGRAM):   output;
24027      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.OUTPATH_TREE_1D8RBWH.
NOTE: The data set WORK.TEMP has 342 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24028      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
24029      by node;
MPRINT(EM_DIAGRAM):   by node;
24030      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 342 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24031      proc sort data=EMWS1.Clus3_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_OUTNODES out=outnodes;
24032      by node;
MPRINT(EM_DIAGRAM):   by node;
24033      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_OUTNODES.
NOTE: The data set WORK.OUTNODES has 65 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
24034      data temp;
MPRINT(EM_DIAGRAM):   data temp;
24035      merge temp(in=_a) outnodes(keep= node
24036      NPRIORS
24037      P__SEGMENT_1
24038      P__SEGMENT_2
24039      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_2 );
24040      by node;
MPRINT(EM_DIAGRAM):   by node;
24041      if _a;
MPRINT(EM_DIAGRAM):   if _a;
24042      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: There were 65 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 342 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24043      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
24044      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
24045      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 342 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24046      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
24047      file x;
MPRINT(EM_DIAGRAM):   file x;
24048      set temp;
MPRINT(EM_DIAGRAM):   set temp;
24049      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
24050      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
24051      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
24052      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
24053      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
24054      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
24055      end;
MPRINT(EM_DIAGRAM):   end;
24056      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
24057      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
24058      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
24059      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
24060      end;
MPRINT(EM_DIAGRAM):   end;
24061      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
24062      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
24063      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
24064      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
24065      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
24066      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
24067      end;
MPRINT(EM_DIAGRAM):   end;
24068      else do;
MPRINT(EM_DIAGRAM):   else do;
24069      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
24070      end;
MPRINT(EM_DIAGRAM):   end;
24071      end;
MPRINT(EM_DIAGRAM):   end;
24072      end;
MPRINT(EM_DIAGRAM):   end;
24073      else do;
MPRINT(EM_DIAGRAM):   else do;
24074      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
24075      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
24076      end;
MPRINT(EM_DIAGRAM):   end;
24077      else do;
MPRINT(EM_DIAGRAM):   else do;
24078      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
24079      end;
MPRINT(EM_DIAGRAM):   end;
24080      end;
MPRINT(EM_DIAGRAM):   end;
24081      end;
MPRINT(EM_DIAGRAM):   end;
24082      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
24083      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
24084      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
24085      end;
MPRINT(EM_DIAGRAM):   end;
24086      else do;
MPRINT(EM_DIAGRAM):   else do;
24087      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
24088      end;
MPRINT(EM_DIAGRAM):   end;
24089      end;
MPRINT(EM_DIAGRAM):   end;
24090      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
24091      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
24092      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
24093      end;
MPRINT(EM_DIAGRAM):   end;
24094      else do;
MPRINT(EM_DIAGRAM):   else do;
24095      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
24096      end;
MPRINT(EM_DIAGRAM):   end;
24097      end;
MPRINT(EM_DIAGRAM):   end;
24098      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
24099      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
24100      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
24101      end;
MPRINT(EM_DIAGRAM):   end;
24102      else do;
MPRINT(EM_DIAGRAM):   else do;
24103      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
24104      end;
MPRINT(EM_DIAGRAM):   end;
24105      end;
MPRINT(EM_DIAGRAM):   end;
24106      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
24107      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
24108      end;
MPRINT(EM_DIAGRAM):   end;
24109      else do;
MPRINT(EM_DIAGRAM):   else do;
24110      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
24111      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
24112      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
24113      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
24114      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
24115      end;
MPRINT(EM_DIAGRAM):   end;
24116      end;
MPRINT(EM_DIAGRAM):   end;
24117      else do;
MPRINT(EM_DIAGRAM):   else do;
24118      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
24119      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
24120      end;
MPRINT(EM_DIAGRAM):   end;
24121      end;
MPRINT(EM_DIAGRAM):   end;
24122      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
24123      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
24124      end;
MPRINT(EM_DIAGRAM):   end;
24125      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
24126      end;
MPRINT(EM_DIAGRAM):   end;
24127      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
24128      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
24129      end;
MPRINT(EM_DIAGRAM):   end;
24130      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
24131      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
24132      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
24133      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
24134      end;
MPRINT(EM_DIAGRAM):   end;
24135      end;
MPRINT(EM_DIAGRAM):   end;
24136      put string;
MPRINT(EM_DIAGRAM):   put string;
24137      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
24138      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
24139      end;
MPRINT(EM_DIAGRAM):   end;
24140      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
24141      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
24142      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
24143      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
24144      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
24145      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
24146      put " ";
MPRINT(EM_DIAGRAM):   put " ";
24147      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
24148      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
24149      end;
MPRINT(EM_DIAGRAM):   end;
24150      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      24066:67    24069:66    24113:108   24114:72
NOTE: The file X is:
      Filename=\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1\Clus3\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=03Mar2024:18:22:14,
      Create Time=03Mar2024:18:22:14
 
NOTE: 471 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
24151      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
24152      /* belowtext */
24153      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
24154      set WORK.OUTRULES_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_1D8RBWH;
24155      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
24156      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
24157      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
24158      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_1D8RBWH.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.01 seconds
 
 
24159      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
24160      set WORK.OUTRULES_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_1D8RBWH;
24161      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
24162      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
24163      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_1D8RBWH.
NOTE: The data set WORK.TEMPVAR has 32 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.03 seconds
 
 
24164      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
24165      by node;
MPRINT(EM_DIAGRAM):   by node;
24166      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24167      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
24168      by node;
MPRINT(EM_DIAGRAM):   by node;
24169      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 32 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
24170      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
24171      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
24172      by node;
MPRINT(EM_DIAGRAM):   by node;
24173      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
24174      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
24175      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 32 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 32 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24176      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
24177      by node;
MPRINT(EM_DIAGRAM):   by node;
24178      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 32 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24179      /* abovetext */
24180      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
24181      set WORK.OUTRULES_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_1D8RBWH;
24182      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
24183      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_1D8RBWH.
NOTE: The data set WORK.TEMPOUTRULES has 49 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24184      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
24185      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
24186      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 49 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24187      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
24188      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
24189      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
24190      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
24191      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
24192      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
24193      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
24194      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
24195      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
24196      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24197      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
24198      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
24199      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
24200      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
24201      output;
MPRINT(EM_DIAGRAM):   output;
24202      end;
MPRINT(EM_DIAGRAM):   end;
24203      else do;
MPRINT(EM_DIAGRAM):   else do;
24204      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
24205      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
24206      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
24207      output;
MPRINT(EM_DIAGRAM):   output;
24208      end;
MPRINT(EM_DIAGRAM):   end;
24209      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
24210      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24211      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
24212      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24213      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
24214      output;
MPRINT(EM_DIAGRAM):   output;
24215      end;
MPRINT(EM_DIAGRAM):   end;
24216      else do;
MPRINT(EM_DIAGRAM):   else do;
24217      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24218      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
24219      output;
MPRINT(EM_DIAGRAM):   output;
24220      end;
MPRINT(EM_DIAGRAM):   end;
24221      end;
MPRINT(EM_DIAGRAM):   end;
24222      end;
MPRINT(EM_DIAGRAM):   end;
24223      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
24224      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
24225      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24226      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
24227      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
24228      end;
MPRINT(EM_DIAGRAM):   end;
24229      else do;
MPRINT(EM_DIAGRAM):   else do;
24230      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
24231      end;
MPRINT(EM_DIAGRAM):   end;
24232      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24233      output;
MPRINT(EM_DIAGRAM):   output;
24234      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24235      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
24236      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
24237      end;
MPRINT(EM_DIAGRAM):   end;
24238      else do;
MPRINT(EM_DIAGRAM):   else do;
24239      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
24240      end;
MPRINT(EM_DIAGRAM):   end;
24241      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24242      output;
MPRINT(EM_DIAGRAM):   output;
24243      end;
MPRINT(EM_DIAGRAM):   end;
24244      else do;
MPRINT(EM_DIAGRAM):   else do;
24245      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24246      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
24247      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
24248      end;
MPRINT(EM_DIAGRAM):   end;
24249      else do;
MPRINT(EM_DIAGRAM):   else do;
24250      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
24251      end;
MPRINT(EM_DIAGRAM):   end;
24252      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24253      output;
MPRINT(EM_DIAGRAM):   output;
24254      end;
MPRINT(EM_DIAGRAM):   end;
24255      end;
MPRINT(EM_DIAGRAM):   end;
24256      else do;
MPRINT(EM_DIAGRAM):   else do;
24257      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
24258      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24259      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
24260      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
24261      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
24262      end;
MPRINT(EM_DIAGRAM):   end;
24263      else do;
MPRINT(EM_DIAGRAM):   else do;
24264      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
24265      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
24266      end;
MPRINT(EM_DIAGRAM):   end;
24267      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24268      output;
MPRINT(EM_DIAGRAM):   output;
24269      end;
MPRINT(EM_DIAGRAM):   end;
24270      else do;
MPRINT(EM_DIAGRAM):   else do;
24271      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
24272      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
24273      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
24274      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
24275      end;
MPRINT(EM_DIAGRAM):   end;
24276      else do;
MPRINT(EM_DIAGRAM):   else do;
24277      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
24278      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
24279      end;
MPRINT(EM_DIAGRAM):   end;
24280      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
24281      output;
MPRINT(EM_DIAGRAM):   output;
24282      end;
MPRINT(EM_DIAGRAM):   end;
24283      end;
MPRINT(EM_DIAGRAM):   end;
24284      end;
MPRINT(EM_DIAGRAM):   end;
24285      else do;
MPRINT(EM_DIAGRAM):   else do;
24286      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
24287      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
24288      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
24289      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
24290      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
24291      output;
MPRINT(EM_DIAGRAM):   output;
24292      end;
MPRINT(EM_DIAGRAM):   end;
24293      end;
MPRINT(EM_DIAGRAM):   end;
24294      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
24295      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
24296      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
24297      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
24298      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
24299      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
24300      end;
MPRINT(EM_DIAGRAM):   end;
24301      else do;
MPRINT(EM_DIAGRAM):   else do;
24302      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
24303      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
24304      end;
MPRINT(EM_DIAGRAM):   end;
24305      end;
MPRINT(EM_DIAGRAM):   end;
24306      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
24307      output;
MPRINT(EM_DIAGRAM):   output;
24308      end;
MPRINT(EM_DIAGRAM):   end;
24309      else do;
MPRINT(EM_DIAGRAM):   else do;
24310      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
24311      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
24312      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
24313      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
24314      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
24315      end;
MPRINT(EM_DIAGRAM):   end;
24316      else do;
MPRINT(EM_DIAGRAM):   else do;
24317      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
24318      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
24319      end;
MPRINT(EM_DIAGRAM):   end;
24320      end;
MPRINT(EM_DIAGRAM):   end;
24321      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
24322      end;
MPRINT(EM_DIAGRAM):   end;
24323      end;
MPRINT(EM_DIAGRAM):   end;
24324      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
24325      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      24198:25   24213:26   24227:24   24227:47   24236:26   24247:26   24260:24   24260:47   24273:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      24278:11
NOTE: There were 49 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 64 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24326      /* MIssing value to abovetext */
24327      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
24328      set WORK.OUTRULES_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_1D8RBWH;
24329      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
24330      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
24331      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_1D8RBWH.
NOTE: The data set WORK.TEMPMISSING has 32 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
24332      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
24333      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
24334      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 64 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24335      proc sort data=EMWS1.Clus3_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_OUTNODES out=tempoutnodes;
24336      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
24337      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 65 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24338      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
24339      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
24340      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 32 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24341      data WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_outnodes;
24342      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
24343      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
24344      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
24345      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
24346      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
24347      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
24348      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Or Missing";
24349      end;
MPRINT(EM_DIAGRAM):   end;
24350      else do;
MPRINT(EM_DIAGRAM):   else do;
24351      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Missing Values Only";
24352      end;
MPRINT(EM_DIAGRAM):   end;
24353      end;
MPRINT(EM_DIAGRAM):   end;
24354      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Non-Missing Values";
24355      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
24356      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
24357      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
24358      end;
MPRINT(EM_DIAGRAM):   end;
24359      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
24360      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
24361      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 64 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 65 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 32 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS3_OUTNODES has 65 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
24362      proc sort data=WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus3_outnodes;
24363      by node;
MPRINT(EM_DIAGRAM):   by node;
24364      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: The data set WORK.CLUS3_OUTNODES has 65 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24365      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
24366      by node;
MPRINT(EM_DIAGRAM):   by node;
24367      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24368      data WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus3_outnodes;
24369      merge WORK.Clus3_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus3_outnodes tempbelow;
24370      by node;
MPRINT(EM_DIAGRAM):   by node;
24371      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: There were 32 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS3_OUTNODES has 65 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: View EMWS1.EM_CLUS3.VIEW used (Total process time):
      real time           2.21 seconds
      cpu time            2.15 seconds
 
NOTE: There were 247875 observations read from the data set EMWS1.CLUS3_TRAIN.
24372      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
24373      set WORK.OUTSTATS_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_1D8RBWH;
24374      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
24375      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
24376      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.OUTSTATS_TREE_1D8RBWH.
NOTE: The data set WORK.TEMPOUTSTATS has 260 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24377      data EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus3_TREE_PLOT;
24378      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
24379      set WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_outnodes;
24380      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
24381         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
24382         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
24383         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Parent Id" depth = "Depth" belowtext= "Below Text" abovetext = "Above Text" linkwidth = "Link Width" nodetext = "Node Text" textall = "All Text" N = "Train: Number of Observations" nodecolor = "Node Color" node =
"Node";
24384      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
24385      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 65 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
 
 
24386      proc sort data=EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_TREE_PLOT;
24387      by node;
MPRINT(EM_DIAGRAM):   by node;
24388      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.16 seconds
      cpu time            0.07 seconds
 
 
24389      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
24390      by node;
MPRINT(EM_DIAGRAM):   by node;
24391      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 260 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
24392      data EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS1.Clus3_TREE_PLOT;
24393      merge EMWS1.Clus3_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus3_TREE_PLOT tempoutstats;
24394      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
24395      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
24396      by node;
MPRINT(EM_DIAGRAM):   by node;
24397      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
24398      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
24399      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
24400      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
24401      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
24402      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
24403      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
24404      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
24405      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
24406      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
24407      end;
MPRINT(EM_DIAGRAM):   end;
24408      else do;
MPRINT(EM_DIAGRAM):   else do;
24409      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
24410      end;
MPRINT(EM_DIAGRAM):   end;
24411      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
24412      end;
MPRINT(EM_DIAGRAM):   end;
24413      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
24414      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Count:"|| put(N, 13.);
24415      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Count:"|| put(N, 13.);
24416      output EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus3_TREE_PLOT;
24417      end;
MPRINT(EM_DIAGRAM):   end;
24418      end;
MPRINT(EM_DIAGRAM):   end;
24419      else do;
MPRINT(EM_DIAGRAM):   else do;
24420      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
24421      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Train: Root Average Square Error";
24422      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
24423      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Average"|| put(STATVALUE, 13.4)||'0A'x|| "Count:"|| put(N, 13.);
24424      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
24425      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
24426      ;
MPRINT(EM_DIAGRAM):   ;
24427      ;
MPRINT(EM_DIAGRAM):   ;
24428      end;
MPRINT(EM_DIAGRAM):   end;
24429      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
24430      output EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS1.Clus3_TREE_PLOT;
24431      end;
MPRINT(EM_DIAGRAM):   end;
24432      ;
MPRINT(EM_DIAGRAM):   ;
24433      end;
MPRINT(EM_DIAGRAM):   end;
24434      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Predicted Variable";
24435      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
24436      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: There were 260 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.06 seconds
 
 
24437      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
24438      set WORK.OUTSTATS_TREE_1D8RBWH;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_1D8RBWH;
24439      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
24440      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
24441      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.OUTSTATS_TREE_1D8RBWH.
NOTE: The data set WORK.TEMPCOLOR has 260 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24442      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
24443      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
24444      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
24445      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
24446      end;
MPRINT(EM_DIAGRAM):   end;
24447      else do;
MPRINT(EM_DIAGRAM):   else do;
24448      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
24449      end;
MPRINT(EM_DIAGRAM):   end;
24450      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 65 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
24451      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
24452      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
24453      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
24454      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
24455      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
24456      end;
MPRINT(EM_DIAGRAM):   end;
24457      else do;
MPRINT(EM_DIAGRAM):   else do;
24458      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
24459      end;
MPRINT(EM_DIAGRAM):   end;
24460      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
24461      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24462      proc sort data=EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_TREE_PLOT;
24463      by node;
MPRINT(EM_DIAGRAM):   by node;
24464      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.04 seconds
 
 
24465      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
24466      by node;
MPRINT(EM_DIAGRAM):   by node;
24467      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 65 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24468      data EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_TREE_PLOT;
24469      merge EMWS1.Clus3_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus3_TREE_PLOT tempcolor;
24470      by node;
MPRINT(EM_DIAGRAM):   by node;
24471      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
24472      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
24473      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
24474      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
24475      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
24476      end;
MPRINT(EM_DIAGRAM):   end;
24477      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
24478      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: There were 65 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.06 seconds
 
 
24479      data EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_TREE_PLOT;
24480      set EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_TREE_PLOT;
24481      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Node Id:"|| put(Node, 13.)||'0A'x||trim(textall);
24482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.04 seconds
 
 
24483      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
24484      set WORK.Clus3_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_outnodes;
24485      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.CLUS3_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 65 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24486      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
24487      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
24488      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 65 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24489      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
24490      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
24491      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
24492      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Leaf Index";
24493      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Percent Cases";
24494      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Event Percentage";
24495      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Training Percent ";
24496      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
24497      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
24498      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
24499      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
24500      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
24501      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
24502      keep NODE index tprob perc_train percevent_train
24503      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
24504      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24505      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
24506      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
24507      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24508      proc sort data=EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_TREE_PLOT;
24509      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
24510      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.32 seconds
      cpu time            0.07 seconds
 
 
24511      data EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_TREE_PLOT;
24512      merge EMWS1.Clus3_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus3_TREE_PLOT tree_temp;
24513      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
24514      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: There were 33 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
24515      proc sort data=EMWS1.Clus3_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_TREE_PLOT;
24516      by node index;
MPRINT(EM_DIAGRAM):   by node index;
24517      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS1.CLUS3_TREE_PLOT.
NOTE: The data set EMWS1.CLUS3_TREE_PLOT has 65 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
ERROR: Invalid file, \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS1.
24518      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
24519      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Importance";
24520      proc print data=EMWS1.Clus3_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Clus3_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
24521      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.CLUS3_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24522      title10;
MPRINT(EM_DIAGRAM):   title10;
24523      data WORK.M1Z92K5Q;
MPRINT(EM_DIAGRAM):    data WORK.M1Z92K5Q;
24524      set WORK.M1Z92K5Q;
MPRINT(EM_DIAGRAM):   set WORK.M1Z92K5Q;
24525      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
24526      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1Z92K5Q.
NOTE: The data set WORK.M1Z92K5Q has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24527      proc sort data=EMWS1.Clus3_OUTIMPORT out=WORK.Clus3_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus3_OUTIMPORT out=WORK.Clus3_GRAPHVARS(keep=NAME);
24528      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
24529      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24530      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.CLUS3_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS3_GRAPHVARS has 21 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
24531      proc sort data = WORK.M1Z92K5Q;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M1Z92K5Q;
24532      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1Z92K5Q.
NOTE: The data set WORK.M1Z92K5Q has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24534      data WORK.M1Z92K5Q;
MPRINT(EM_DIAGRAM):   data WORK.M1Z92K5Q;
24535      merge WORK.M1Z92K5Q WORK.Clus3_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M1Z92K5Q WORK.Clus3_GRAPHVARS(in=_b_);
24536      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24537      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
24538      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1Z92K5Q.
NOTE: There were 21 observations read from the data set WORK.CLUS3_GRAPHVARS.
NOTE: The data set WORK.M1Z92K5Q has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24539      data WORK.M1Z92K5Q;
MPRINT(EM_DIAGRAM):    data WORK.M1Z92K5Q;
24540      set WORK.M1Z92K5Q end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1Z92K5Q end=_eof_ nobs=_nobs_;
24541      output;
MPRINT(EM_DIAGRAM):   output;
24542      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
24543      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
24544      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
24545      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
24546      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
24547      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
24548      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
24549      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
24550      output;
MPRINT(EM_DIAGRAM):   output;
24551      end;
MPRINT(EM_DIAGRAM):   end;
24552      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1Z92K5Q.
NOTE: The data set WORK.M1Z92K5Q has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24553      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
24554      * Clus3: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus3: STDIZE Variables Macro ;
24555      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
24556      %macro stdizevar;
24557          Age BMI
24558      %mend stdizevar;
24559      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24560      * Clus3: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus3: Computing Summary Statistics;
24561      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24562      proc stdize
24563      data = EMWS1.Clus3_TRAIN
24564      out=_null_
24565      outstat=WORK.Clus3_STAT
24566      add=0 fuzz=1E-14 initial=MAD
24567      vardef=df
24568      method=STD
24569      mult=1
24570      pctlmtd=ORD_STAT pctldef=2
24571      pctlpts=(
24572      0
24573      100
24574      )
24575      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS1.Clus3_TRAIN out=_null_ outstat=WORK.Clus3_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
24576      var %stdizevar;
MPRINT(STDIZEVAR):   Age BMI
MPRINT(EM_DIAGRAM):  ;
24577      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.CLUS3_TRAIN.VIEW used (Total process time):
      real time           2.53 seconds
      cpu time            2.53 seconds
 
NOTE: There were 247875 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS1.CLUS3_TRAIN.
NOTE: The data set WORK.CLUS3_STAT has 10 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           2.58 seconds
      cpu time            2.56 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
24578      quit;
 
24579      data WORK.Clus3_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus3_MINMAX;
24580      set WORK.Clus3_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_STAT;
24581      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
24582      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
24583      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
24584      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS3_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS3_MINMAX has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24585      proc transpose data=WORK.Clus3_MINMAX out=WORK.Clus3_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus3_MINMAX out=WORK.Clus3_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
24586      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
24587      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS3_MINMAX.
NOTE: The data set WORK.CLUS3_MINMAX has 2 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
 
 
24588      data WORK.Clus3_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus3_UGRID;
24589      set WORK.Clus3_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus3_MINMAX;
24590      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
24591      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
24592      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
24593      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
24594      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
24595      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
24596      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
24597      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
24598      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
24599      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
24600      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS3_MINMAX.
NOTE: The data set WORK.CLUS3_UGRID has 2 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
24601      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24602      * Clus3: Creating formats for binning interval variables;
MPRINT(EM_DIAGRAM):   * Clus3: Creating formats for binning interval variables;
24603      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24604      proc format;
MPRINT(EM_DIAGRAM):   proc format;
24605      value F1_
24606      1-2.5 = "1:2.5"
24607      2.5-4 = "2.5:4"
24608      4-5.5 = "4:5.5"
24609      5.5-7 = "5.5:7"
24610      7-8.5 = "7:8.5"
24611      8.5-10 = "8.5:10"
24612      10-11.5 = "10:11.5"
24613      11.5-13 = "11.5:13"
24614      ;
MPRINT(EM_DIAGRAM):   value F1_ 1-2.5 = "1:2.5" 2.5-4 = "2.5:4" 4-5.5 = "4:5.5" 5.5-7 = "5.5:7" 7-8.5 = "7:8.5" 8.5-10 = "8.5:10" 10-11.5 = "10:11.5" 11.5-13 = "11.5:13" ;
NOTE: Format F1_ has been output.
24615      value F2_
24616      12-16 = "12:16"
24617      16-20 = "16:20"
24618      20-24 = "20:24"
24619      24-28 = "24:28"
24620      28-32 = "28:32"
24621      32-36 = "32:36"
24622      36-40 = "36:40"
24623      40-44 = "40:44"
24624      ;
MPRINT(EM_DIAGRAM):   value F2_ 12-16 = "12:16" 16-20 = "16:20" 20-24 = "20:24" 24-28 = "24:28" 28-32 = "28:32" 32-36 = "32:36" 36-40 = "36:40" 40-44 = "40:44" ;
NOTE: Format F2_ has been output.
MPRINT(EM_DIAGRAM):   run;
24625      run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24626      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
24627      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
24628      proc freq data = EMWS1.Clus3_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Clus3_TRAIN order=formatted addnames;
24629      table Age * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Age * _SEGMENT_ / missing;
24630      table AnyHealthcare * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table AnyHealthcare * _SEGMENT_ / missing;
24631      table BMI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BMI * _SEGMENT_ / missing;
24632      table CholCheck * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CholCheck * _SEGMENT_ / missing;
24633      table DiffWalk * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DiffWalk * _SEGMENT_ / missing;
24634      table Education * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Education * _SEGMENT_ / missing;
24635      table Fruits * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Fruits * _SEGMENT_ / missing;
24636      table GenHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GenHlth * _SEGMENT_ / missing;
24637      table HeartDiseaseorAttack * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HeartDiseaseorAttack * _SEGMENT_ / missing;
24638      table HighBP * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HighBP * _SEGMENT_ / missing;
24639      table HighChol * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HighChol * _SEGMENT_ / missing;
24640      table HvyAlcoholConsump * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HvyAlcoholConsump * _SEGMENT_ / missing;
24641      table Income * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Income * _SEGMENT_ / missing;
24642      table MentHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MentHlth * _SEGMENT_ / missing;
24643      table NoDocbcCost * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table NoDocbcCost * _SEGMENT_ / missing;
24644      table PhysActivity * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PhysActivity * _SEGMENT_ / missing;
24645      table PhysHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PhysHlth * _SEGMENT_ / missing;
24646      table Sex * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Sex * _SEGMENT_ / missing;
24647      table Smoker * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Smoker * _SEGMENT_ / missing;
24648      table Stroke * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Stroke * _SEGMENT_ / missing;
24649      table Veggies * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Veggies * _SEGMENT_ / missing;
24650      format AGE F1_.;
MPRINT(EM_DIAGRAM):   format AGE F1_.;
24651      format BMI F2_.;
MPRINT(EM_DIAGRAM):   format BMI F2_.;
24652      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.CLUS3_TRAIN.VIEW used (Total process time):
      real time           3.73 seconds
      cpu time            3.32 seconds
 
NOTE: There were 247875 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 435 observations and 32 variables.
NOTE: There were 247875 observations read from the data set EMWS1.CLUS3_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           3.87 seconds
      cpu time            3.45 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
24653      quit;
24654      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
24655      data EMWS1.Clus3_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS1.Clus3_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
24656      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
24657         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
24658         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
24659      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
24660      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
24661      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
24662      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
24663      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
24664      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
24665      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
24666      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
24667      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
24668      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
24669      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
24670      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
24671      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
24672      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
24673      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
24674      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
24675      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
24676      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
24677      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
24678      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
24679      end;
MPRINT(EM_DIAGRAM):   end;
24680      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
24681      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
24682      end;
MPRINT(EM_DIAGRAM):   end;
24683      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
24684      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.07 seconds
 
 
24685      proc sort data=EMWS1.Clus3_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_PROFILE NOTHREADS;
24686      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
24687      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.07 seconds
 
 
24688      proc means data=EMWS1.Clus3_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS1.Clus3_PROFILE noprint missing NWAY;
24689      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
24690      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
24691      output out=WORK.Clus3_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus3_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
24692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: The data set WORK.CLUS3_STATCOUNT has 42 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
24693      proc sort data=WORK.Clus3_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus3_STATCOUNT NOTHREADS;
24694      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
24695      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK.CLUS3_STATCOUNT.
NOTE: The data set WORK.CLUS3_STATCOUNT has 42 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
 
 
24696      data EMWS1.Clus3_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_PROFILE(drop=SUM);
24697      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Percent";
24698      merge EMWS1.Clus3_PROFILE WORK.Clus3_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus3_PROFILE WORK.Clus3_STATCOUNT;
24699      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
24700      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
24701      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: There were 42 observations read from the data set WORK.CLUS3_STATCOUNT.
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.07 seconds
 
 
24702      proc sort data=EMWS1.Clus3_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus3_PROFILE NOTHREADS;
24703      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
24704      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.34 seconds
      cpu time            0.09 seconds
 
 
24705      proc sort data=WORK.M1Z92K5Q;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1Z92K5Q;
24706      by Name;
MPRINT(EM_DIAGRAM):   by Name;
24707      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1Z92K5Q.
NOTE: The data set WORK.M1Z92K5Q has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds
 
 
24708      data EMWS1.Clus3_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_PROFILE;
24709      merge EMWS1.Clus3_PROFILE(in=_a) WORK.M1Z92K5Q(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus3_PROFILE(in=_a) WORK.M1Z92K5Q(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
24710      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
24711      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
24712      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
24713      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
24714      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: There were 22 observations read from the data set WORK.M1Z92K5Q.
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.46 seconds
      cpu time            0.07 seconds
 
 
24715      proc sort data=EMWS1.Clus3_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Clus3_PROFILE;
24716      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
24717      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.40 seconds
      cpu time            0.06 seconds
 
 
24718      data EMWS1.Clus3_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
24719      set EMWS1.Clus3_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_PROFILE;
24720      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
24721      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Ordered Values";
24722      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
24723      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
24724      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
24725      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS1.CLUS3_PROFILE.
NOTE: The data set EMWS1.CLUS3_PROFILE has 248 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.39 seconds
      cpu time            0.09 seconds
 
 
24726      data WORK.Clus3_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus3_temp;
24727      set EMWS1.Clus3_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_OUTMEAN;
24728      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
24729      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS3_OUTMEAN.
NOTE: The data set WORK.CLUS3_TEMP has 2 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
 
 
24730      proc distance data=WORK.Clus3_temp out=EMWS1.Clus3_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus3_temp out=EMWS1.Clus3_DISTANCE method=l(2) shape=square;
24731      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
24732      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0 DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0 HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0 Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
MPRINT(EM_DIAGRAM):  );
24733      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.CLUS3_DISTANCE has 2 observations and 3 variables.
NOTE: PROCEDURE DISTANCE used (Total process time):
      real time           0.49 seconds
      cpu time            0.04 seconds
 
 
24734      proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
24735      modify Clus3_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus3_DISTANCE;
24736      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
24737      run;
 
NOTE: MODIFY was successful for EMWS1.CLUS3_DISTANCE.DATA.
24738      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.56 seconds
      cpu time            0.23 seconds
 
 
24739      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24740      * Clus3: Creating data set for Input Mean report;
MPRINT(EM_DIAGRAM):   * Clus3: Creating data set for Input Mean report;
24741      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24742      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
24743      set EMWS1.Clus3_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_OUTSTAT;
24744      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
24745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.CLUS3_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 3 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24746      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
24747      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
24748      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 3 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
24749      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
24750      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
24751      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 3 observations and 36 variables.
NOTE: The data set WORK.STAT has 10 observations and 36 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
24752      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
24753      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
24754      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 35 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
24755      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
24756      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
24757      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
24758      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
24759      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
24760      end;
MPRINT(EM_DIAGRAM):   end;
24761      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
24762      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 35 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
24763      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
24764      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24765      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 35 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24766      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
24767      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
24768      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 105 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
 
 
24769      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
24770      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24771      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 105 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24772      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
24773      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
24774      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24775      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
24776      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
24777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 105 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24778      proc transpose data=EMWS1.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
24779      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
24780      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
24781      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
24782      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.CLUS3_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
24783      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
24784      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24785      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24786      data EMWS1.Clus3_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_INPUTMEAN(rename=(NAME=VARIABLE));
24787      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
24788      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))" _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))"
24788    !  INPUT =
24789         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
24790         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name" _SEGMENT_CHAR_ = "Segment Id" NAME = "Variable" INPUT = "Input" LABEL = "Label" CV = "Coefficient of Variation" STDMEAN = "Normalized Mean";
24791      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
24792      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
24793      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
24794      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
24795      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
24796      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: There were 105 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS1.CLUS3_INPUTMEAN has 105 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
24797      proc sort data=EMWS1.Clus3_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus3_INPUTMEAN;
24798      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
24799      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set EMWS1.CLUS3_INPUTMEAN.
NOTE: The data set EMWS1.CLUS3_INPUTMEAN has 105 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.09 seconds
 
 
24800      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24801      * Clus3: Determining the important variables;
MPRINT(EM_DIAGRAM):   * Clus3: Determining the important variables;
24802      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
24803      %let _nobs = 0;
24804      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
24805      set EMWS1.Clus3_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
24806      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
24807      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.CLUS3_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
24808      proc transpose data=EMWS1.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus3_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
24809      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
24810      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
24811      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
24812      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.CLUS3_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
24813      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
24814      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
24815      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 7 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24816      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
24817      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
24818      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24819      data vars;
MPRINT(EM_DIAGRAM):   data vars;
24820      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
24821      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
24822      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
24823      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might cause unexpected results.
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: There were 7 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 10 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
24824      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
24825      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
24826      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.VARS.
NOTE: The data set WORK.VARS has 10 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24827      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24828      set vars;
MPRINT(EM_DIAGRAM):   set vars;
24829      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
24830      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
24831      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24832      *------------------------------------------------------------*;
24833      * mergeVarMeansandClusLabel;
24834      *------------------------------------------------------------*;
24835      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ T_GenHlth T_PhysHlth DiffWalk0 DiffWalk1 Stroke0 Stroke1 T_Income BMI HeartDiseaseorAttack0 HeartDiseaseorAttack1);
24836      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ T_GenHlth T_PhysHlth DiffWalk0 DiffWalk1 Stroke0 Stroke1 T_Income BMI HeartDiseaseorAttack0 HeartDiseaseorAttack1 8;
24837      set EMWS1.Clus3_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS1.Clus3_OUTSTAT;
24838      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
24839      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS3_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 2 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24840      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
24841      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
24842      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 2 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24843      data EMWS1.Clus3_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus3_LABEL;
24844      merge EMWS1.Clus3_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Clus3_LABEL(keep=_SEGMENT_ LABEL) temp;
24845      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
24846      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.CLUS3_LABEL.
NOTE: There were 2 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.CLUS3_LABEL has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
