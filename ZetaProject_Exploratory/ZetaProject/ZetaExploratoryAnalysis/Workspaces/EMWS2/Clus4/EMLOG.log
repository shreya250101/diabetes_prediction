*------------------------------------------------------------*
User:                bkris2
Date:                March 09, 2024
Time:                15:38:43
Site:                70080107
Platform:            X64_10PRO
Maintenance Release: 9.04.01M7P080520
EM Version:          15.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:37:50" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                March 09, 2024
Time:                15:37:50
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1C5CCPU "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1C5CCPU new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:37:50" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080107";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M7P080520";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:37:50" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
41763      proc freq data=EMWS2.Clus4_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Clus4_VariableSet noprint;
41764      table ROLE*LEVEL/out=WORK.Clus4META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Clus4META;
41765      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS2.CLUS4_VARIABLESET.
NOTE: The data set WORK.CLUS4META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
41766      proc print data=WORK.Clus4META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Clus4META label noobs;
41767      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
41768      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
41769      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
41770      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
41771      run;
 
NOTE: There were 4 observations read from the data set WORK.CLUS4META.
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
41772      title10;
MPRINT(EM_DIAGRAM):   title10;
41773      data WORK.M0_OGAVI;
MPRINT(EM_DIAGRAM):    data WORK.M0_OGAVI;
41774      set WORK.M0_OGAVI;
MPRINT(EM_DIAGRAM):   set WORK.M0_OGAVI;
41775      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
41776      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M0_OGAVI.
NOTE: The data set WORK.M0_OGAVI has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus4: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0_OGAVI;
MPRINT(EM_DIAGRAM):   set WORK.M0_OGAVI;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
41785      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
41786      * Clus4: Preliminary Clustering;
MPRINT(EM_DIAGRAM):   * Clus4: Preliminary Clustering;
41787      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41788      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41789      * Clus4: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: DMDBClass Macro ;
41790      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41791      %macro DMDBClass;
41792          AnyHealthcare(ASC) CholCheck(ASC) DiffWalk(ASC) Education(ASC) Fruits(ASC)
41793         GenHlth(ASC) HeartDiseaseorAttack(ASC) HighBP(ASC) HighChol(ASC)
41794         HvyAlcoholConsump(ASC) Income(ASC) MentHlth(ASC) NoDocbcCost(ASC)
41795         PhysActivity(ASC) PhysHlth(ASC) Sex(ASC) Smoker(ASC) Stroke(ASC) Veggies(ASC)
41796      %mend DMDBClass;
41797      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41798      * Clus4: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: DMDBVar Macro ;
41799      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41800      %macro DMDBVar;
41801          Age BMI
41802      %mend DMDBVar;
41803      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41804      * Clus4: Create DMDB;
MPRINT(EM_DIAGRAM):   * Clus4: Create DMDB;
41805      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41806      proc dmdb batch data=EMWS2.Varsel2_TRAIN
41807      dmdbcat=WORK.Clus4_DMDB
41808      maxlevel = 513
41809      out=WORK.Clus4_DMDB
41810      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Varsel2_TRAIN dmdbcat=WORK.Clus4_DMDB maxlevel = 513 out=WORK.Clus4_DMDB ;
MPRINT(EM_DIAGRAM):   class
41811      class %DMDBClass;
MPRINT(DMDBCLASS):   AnyHealthcare(ASC) CholCheck(ASC) DiffWalk(ASC) Education(ASC) Fruits(ASC) GenHlth(ASC) HeartDiseaseorAttack(ASC) HighBP(ASC) HighChol(ASC) HvyAlcoholConsump(ASC) Income(ASC) MentHlth(ASC) NoDocbcCost(ASC) PhysActivity(ASC)
PhysHlth(ASC) Sex(ASC) Smoker(ASC) Stroke(ASC) Veggies(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
41812      var %DMDBVar;
MPRINT(DMDBVAR):   Age BMI
MPRINT(EM_DIAGRAM):  ;
41813      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 100000   Memory used = 511K.
NOTE: Records processed = 200000   Memory used = 511K.
NOTE: Records processed = 223088   Memory used = 511K.
NOTE: View EMWS2.VARSEL2_TRAIN.VIEW used (Total process time):
      real time           0.85 seconds
      cpu time            0.84 seconds
 
NOTE: There were 223088 observations read from the data set EMWS2.SMPL_DATA.
NOTE: There were 223088 observations read from the data set EMWS2.VARSEL2_TRAIN.
NOTE: The data set WORK.CLUS4_DMDB has 223088 observations and 21 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.88 seconds
      cpu time            0.85 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
41814      quit;
41815      *--- end code ---*;
 
41816      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
41817      * Clus4: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Interval Inputs Macro ;
41818      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41819      %macro DMVQINTERVAL;
41820          Age BMI
41821      %mend DMVQINTERVAL;
41822      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41823      * Clus4: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Nominal Inputs Macro ;
41824      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41825      %macro DMVQNOMINAL;
41826          AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol
41827         HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
41828      %mend DMVQNOMINAL;
41829      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41830      * Clus4: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Ordinal Inputs Macro ;
41831      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41832      %macro DMVQORDINAL;
41833          Education GenHlth Income MentHlth PhysHlth
41834      %mend DMVQORDINAL;
41835      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41836      * Clus4: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus4: Run DMVQ procedure;
41837      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41838      title;
MPRINT(EM_DIAGRAM):   title;
41839      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
41840      proc dmvq data=WORK.Clus4_DMDB dmdbcat=WORK.Clus4_DMDB std=STD nominal=GLM ordinal=RANK
41841      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus4_DMDB dmdbcat=WORK.Clus4_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS4_DMDB.DATA has 21 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
41842      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   Age BMI
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 2 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
41843      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 14 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
41844      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   Education GenHlth Income MentHlth PhysHlth
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 5 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
41845      VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 50 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
41846      MAKE outvar=EMWS2.Clus4_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS2.Clus4_OUTVAR;
 
NOTE: 21 input variable(s).
NOTE: Number of cases=223088
NOTE: Sum of frequencies=223088
NOTE: Sum of weights=223088
NOTE: VARDEF=DF
NOTE: Maximum number of categories=31
NOTE: The total number of variables is 21 with dimensionality 35.
NOTE: 21 variables will be used for clustering.
NOTE: Open output data set EMWS2.CLUS4_OUTVAR.DATA with 36 variables.
NOTE: The data set EMWS2.CLUS4_OUTVAR has 4 observations and 36 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
41847      INITIAL radius=0
41848      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 50 seeds were selected from data set WORK.CLUS4_DMDB.DATA using the SEPARATE algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
41849      TRAIN tech=FORGY
41850      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: The limit of 10 iterations was reached without convergence.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
41851      SAVE outstat=WORK.Clus4_OUTSTAT outmean=EMWS2.Clus4_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=WORK.Clus4_OUTSTAT outmean=EMWS2.Clus4_OUTMEAN;
NOTE: The data set WORK.CLUS4_OUTSTAT has 316 observations and 38 variables.
NOTE: The data set EMWS2.CLUS4_OUTMEAN has 50 observations and 44 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
41852      code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\DMVQSCORECODE.sas"
41853      group=Clus4
41854      ;
MPRINT(EM_DIAGRAM):   code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\DMVQSCORECODE.sas" group=Clus4 ;
NOTE: External file \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
41855      run;
MPRINT(EM_DIAGRAM):   run;
 
41856      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 223088 observations read from the data set WORK.CLUS4_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           7.45 seconds
      cpu time            7.18 seconds
 
 
41857      proc transpose data=EMWS2.Clus4_OUTVAR out=WORK.Clus4_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS2.Clus4_OUTVAR out=WORK.Clus4_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
41858      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
41859      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
41860      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS4_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS4_OUTVAR has 35 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
41861      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
41862      * Clus4: DMVQ Variables;
MPRINT(EM_DIAGRAM):   * Clus4: DMVQ Variables;
41863      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
41864      %macro dmvqvars;
41865          Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0
41866         DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0
41867         HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
41868         NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0
41869         Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
41870      %mend ;
41871
41872
 
41873      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
41874      * Clus4: Determining the number of clusters;
MPRINT(EM_DIAGRAM):   * Clus4: Determining the number of clusters;
41875      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41876      proc cluster data=EMWS2.Clus4_OUTMEAN method=WARD pseudo outtree=EMWS2.Clus4_CLUSSEED
41877      ;
MPRINT(EM_DIAGRAM):   proc cluster data=EMWS2.Clus4_OUTMEAN method=WARD pseudo outtree=EMWS2.Clus4_CLUSSEED ;
MPRINT(EM_DIAGRAM):   var
41878      var %dmvqvars;
MPRINT(DMVQVARS):   Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0 DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0 HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0 Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
MPRINT(EM_DIAGRAM):  ;
41879      copy _SEGMENT_;
MPRINT(EM_DIAGRAM):   copy _SEGMENT_;
41880      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS4_CLUSSEED has 99 observations and 52 variables.
NOTE: The PROCEDURE CLUSTER printed page 11.
NOTE: PROCEDURE CLUSTER used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
41881      quit;
41882      proc sort data =EMWS2.Clus4_CLUSSEED out=WORK._SEED_;
MPRINT(EM_DIAGRAM):   proc sort data =EMWS2.Clus4_CLUSSEED out=WORK._SEED_;
41883      by _ncl_;
MPRINT(EM_DIAGRAM):   by _ncl_;
41884      where (_ccc_ > -99999.0);
MPRINT(EM_DIAGRAM):   where (_ccc_ > -99999.0);
41885      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set EMWS2.CLUS4_CLUSSEED.
      WHERE _ccc_>-99999;
NOTE: The data set WORK._SEED_ has 49 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
41886      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):   data WORK._SEED2_;
41887      retain oJump occc oncl;
MPRINT(EM_DIAGRAM):   retain oJump occc oncl;
41888      set WORK._SEED_;
MPRINT(EM_DIAGRAM):   set WORK._SEED_;
41889      _lccc_=lag(_ccc_);
MPRINT(EM_DIAGRAM):   _lccc_=lag(_ccc_);
41890      if _lccc_ > . then jump = _ccc_ - _lccc_;
MPRINT(EM_DIAGRAM):   if _lccc_ > . then jump = _ccc_ - _lccc_;
41891      if jump<0 and ojump>0 then do;
MPRINT(EM_DIAGRAM):   if jump<0 and ojump>0 then do;
41892      * Have a local Max;
MPRINT(EM_DIAGRAM):   * Have a local Max;
41893      numclus = oncl;
MPRINT(EM_DIAGRAM):   numclus = oncl;
41894      cccvalue = occc;
MPRINT(EM_DIAGRAM):   cccvalue = occc;
41895      output;
MPRINT(EM_DIAGRAM):   output;
41896      end;
MPRINT(EM_DIAGRAM):   end;
41897      ojump = jump;
MPRINT(EM_DIAGRAM):   ojump = jump;
41898      occc = _ccc_;
MPRINT(EM_DIAGRAM):   occc = _ccc_;
41899      oncl = _ncl_;
MPRINT(EM_DIAGRAM):   oncl = _ncl_;
41900      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._SEED_.
NOTE: The data set WORK._SEED2_ has 2 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
41901      proc print data=WORK._SEED2_ label;
MPRINT(EM_DIAGRAM):   proc print data=WORK._SEED2_ label;
41902      var numclus cccvalue;
MPRINT(EM_DIAGRAM):   var numclus cccvalue;
41903      label numclus="%sysfunc(sasmsg(sashelp.dmine, rpt_numclus_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label numclus= "Number of Clusters";
41904      label cccvalue="%sysfunc(sasmsg(sashelp.dmine, rpt_ccc_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label cccvalue= "Clustering Cubic Criterion";
41905      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_OptClus_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Candidates for Optimum Number of Clusters";
MPRINT(EM_DIAGRAM):   run;
41906      run;
 
NOTE: There were 2 observations read from the data set WORK._SEED2_.
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
41907      title10;
MPRINT(EM_DIAGRAM):   title10;
41908      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):    data WORK._SEED2_;
41909      length msg $200;
MPRINT(EM_DIAGRAM):   length msg $200;
41910      set WORK._SEED2_ end=eof;
MPRINT(EM_DIAGRAM):   set WORK._SEED2_ end=eof;
41911      retain select cccSelect 0 numSel;
MPRINT(EM_DIAGRAM):   retain select cccSelect 0 numSel;
41912      if _N_=1 then numSel = numClus;
MPRINT(EM_DIAGRAM):   if _N_=1 then numSel = numClus;
41913      if cccvalue>=3 then do;
MPRINT(EM_DIAGRAM):   if cccvalue>=3 then do;
41914      if 20>= numclus >= 2 and cccSelect<1 then do;
MPRINT(EM_DIAGRAM):   if 20>= numclus >= 2 and cccSelect<1 then do;
41915      cccSelect = 1;
MPRINT(EM_DIAGRAM):   cccSelect = 1;
41916      select =1;
MPRINT(EM_DIAGRAM):   select =1;
41917      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
41918      end;
MPRINT(EM_DIAGRAM):   end;
41919      end;
MPRINT(EM_DIAGRAM):   end;
41920      else if 20>= numclus >= 2 and select<1 then do;
MPRINT(EM_DIAGRAM):   else if 20>= numclus >= 2 and select<1 then do;
41921      select = 1;
MPRINT(EM_DIAGRAM):   select = 1;
41922      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
41923      end;
MPRINT(EM_DIAGRAM):   end;
41924      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
41925      if ^(select=1 and cccselect=1) then do;
MPRINT(EM_DIAGRAM):   if ^(select=1 and cccselect=1) then do;
41926      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
41927      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
41928      put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
MPRINT(EM_DIAGRAM):   put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
41929      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
41930      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
41931      end;
MPRINT(EM_DIAGRAM):   end;
41932      if select<1 then do;
MPRINT(EM_DIAGRAM):   if select<1 then do;
41933      msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
41934      put msg;
MPRINT(EM_DIAGRAM):   put msg;
41935      end;
MPRINT(EM_DIAGRAM):   end;
41936      if cccselect<1 then do;
MPRINT(EM_DIAGRAM):   if cccselect<1 then do;
41937      msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
41938      put msg;
MPRINT(EM_DIAGRAM):   put msg;
41939      end;
MPRINT(EM_DIAGRAM):   end;
41940      call symput('em_maxC', strip(put(numSel,best.)));
MPRINT(EM_DIAGRAM):   call symput('em_maxC', strip(put(numSel,best.)));
41941      end;
MPRINT(EM_DIAGRAM):   end;
41942      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._SEED2_.
NOTE: The data set WORK._SEED2_ has 2 observations and 63 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
41943      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
41944      * Clus4: Training;
MPRINT(EM_DIAGRAM):   * Clus4: Training;
41945      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41946      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41947      * Clus4: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus4: Run DMVQ procedure;
41948      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41949      title;
MPRINT(EM_DIAGRAM):   title;
41950      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
41951      proc dmvq data=WORK.Clus4_DMDB dmdbcat=WORK.Clus4_DMDB std=STD nominal=GLM ordinal=RANK
41952      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus4_DMDB dmdbcat=WORK.Clus4_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS4_DMDB.DATA has 21 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
41953      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   Age BMI
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 2 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
41954      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 14 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
41955      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   Education GenHlth Income MentHlth PhysHlth
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 5 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
41956      VQ maxc = 3 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 3 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 3 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
41957      MAKE outvar=EMWS2.Clus4_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS2.Clus4_OUTVAR;
 
NOTE: 21 input variable(s).
NOTE: Number of cases=223088
NOTE: Sum of frequencies=223088
NOTE: Sum of weights=223088
NOTE: VARDEF=DF
NOTE: Maximum number of categories=31
NOTE: The total number of variables is 21 with dimensionality 35.
NOTE: 21 variables will be used for clustering.
NOTE: Open output data set EMWS2.CLUS4_OUTVAR.DATA with 36 variables.
NOTE: The data set EMWS2.CLUS4_OUTVAR has 4 observations and 36 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
41958      INITIAL radius=0
41959      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 3 seeds were selected from data set WORK.CLUS4_DMDB.DATA using the SEPARATE algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
41960      TRAIN tech=FORGY
41961      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: The limit of 10 iterations was reached without convergence.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
41962      SAVE outstat=EMWS2.Clus4_OUTSTAT outmean=EMWS2.Clus4_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS2.Clus4_OUTSTAT outmean=EMWS2.Clus4_OUTMEAN;
NOTE: The data set EMWS2.CLUS4_OUTSTAT has 34 observations and 38 variables.
NOTE: The data set EMWS2.CLUS4_OUTMEAN has 3 observations and 44 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
41963      code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\DMVQSCORECODE.sas"
41964      group=Clus4
41965      ;
MPRINT(EM_DIAGRAM):   code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\DMVQSCORECODE.sas" group=Clus4 ;
NOTE: External file \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
41966      run;
MPRINT(EM_DIAGRAM):   run;
 
41967      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 223088 observations read from the data set WORK.CLUS4_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           2.81 seconds
      cpu time            2.60 seconds
 
 
41968      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
41969      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
41970      * Clus4: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus4: Cluster Label;
41971      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41972      data EMWS2.Clus4_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_LABEL;
41973      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
41974      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
41975      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name";
41976      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Segment Label";
41977      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
41978      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
41979      output;
MPRINT(EM_DIAGRAM):   output;
41980      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
41981      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
41982      output;
MPRINT(EM_DIAGRAM):   output;
41983      _SEGMENT_= 3;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 3;
41984      Label='Cluster3';
MPRINT(EM_DIAGRAM):   Label='Cluster3';
41985      output;
MPRINT(EM_DIAGRAM):   output;
41986      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS4_LABEL has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:38:05" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 09, 2024
Time:                15:38:05
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2DJ_E13 "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2DJ_E13 new;
MPRINT(EM_DIAGRAM):   run;
42088      proc transpose data=EMWS2.Clus4_OUTVAR out=WORK.Clus4_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS2.Clus4_OUTVAR out=WORK.Clus4_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
42089      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
42090      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
42091      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS4_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS4_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
42092      proc sort data=WORK.Clus4_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus4_OUTVAR;
42093      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42094      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS4_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
42095      proc sort data=EMWS2.Clus4_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus4_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus4_SORTEDVARS;
42096      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42097      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set EMWS2.CLUS4_VARIABLESET.
NOTE: The data set WORK.CLUS4_SORTEDVARS has 22 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
42098      data WORK.Clus4_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus4_OUTVAR;
42099      merge WORK.Clus4_OUTVAR(in=INVAR) WORK.Clus4_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus4_OUTVAR(in=INVAR) WORK.Clus4_SORTEDVARS;
42100      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
42101      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
42102      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS4_OUTVAR.
NOTE: There were 22 observations read from the data set WORK.CLUS4_SORTEDVARS.
NOTE: The data set WORK.CLUS4_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
42103      filename emflow "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42104      *------------------------------------------------------------*;
42105      * Clus4: Scoring DATA data;
42106      *------------------------------------------------------------*;
42107      data EMWS2.Clus4_TRAIN
42108      / view=EMWS2.Clus4_TRAIN
42109      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_TRAIN / view=EMWS2.Clus4_TRAIN ;
42110      set EMWS2.Varsel2_TRAIN
42111      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel2_TRAIN ;
42112      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize Age ;
MPRINT(EM_DIAGRAM):   drop T_Age ;
MPRINT(EM_DIAGRAM):   if missing( Age ) then T_Age = .;
MPRINT(EM_DIAGRAM):   else T_Age = (Age - 8.04916893781826) * 0.32668431645045;
MPRINT(EM_DIAGRAM):   *** Standardize BMI ;
MPRINT(EM_DIAGRAM):   drop T_BMI ;
MPRINT(EM_DIAGRAM):   if missing( BMI ) then T_BMI = .;
MPRINT(EM_DIAGRAM):   else T_BMI = (BMI - 27.8285967869181) * 0.18842113768423;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AnyHealthcare ;
MPRINT(EM_DIAGRAM):   drop AnyHealthcare0 AnyHealthcare1 ;
MPRINT(EM_DIAGRAM):   if missing( AnyHealthcare ) then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = .;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AnyHealthcare , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = -0.1593113516288;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = 0.1593113516288;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = 3.13849423547027;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = -3.13849423547027;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = .;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for CholCheck ;
MPRINT(EM_DIAGRAM):   drop CholCheck0 CholCheck1 ;
MPRINT(EM_DIAGRAM):   if missing( CholCheck ) then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = .;
MPRINT(EM_DIAGRAM):   CholCheck1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( CholCheck , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = -0.14003274976362;
MPRINT(EM_DIAGRAM):   CholCheck1 = 0.14003274976362;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = 3.57057730835098;
MPRINT(EM_DIAGRAM):   CholCheck1 = -3.57057730835098;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CholCheck0 = .;
MPRINT(EM_DIAGRAM):   CholCheck1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DiffWalk ;
MPRINT(EM_DIAGRAM):   drop DiffWalk0 DiffWalk1 ;
MPRINT(EM_DIAGRAM):   if missing( DiffWalk ) then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = .;
MPRINT(EM_DIAGRAM):   DiffWalk1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( DiffWalk , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = 0.30942347688694;
MPRINT(EM_DIAGRAM):   DiffWalk1 = -0.30942347688694;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = -1.61590117130857;
MPRINT(EM_DIAGRAM):   DiffWalk1 = 1.61590117130857;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = .;
MPRINT(EM_DIAGRAM):   DiffWalk1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Fruits ;
MPRINT(EM_DIAGRAM):   drop Fruits0 Fruits1 ;
MPRINT(EM_DIAGRAM):   if missing( Fruits ) then do;
MPRINT(EM_DIAGRAM):   Fruits0 = .;
MPRINT(EM_DIAGRAM):   Fruits1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Fruits , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Fruits0 = -0.53450104825433;
MPRINT(EM_DIAGRAM):   Fruits1 = 0.53450104825433;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Fruits0 = 0.93544766724959;
MPRINT(EM_DIAGRAM):   Fruits1 = -0.93544766724959;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Fruits0 = .;
MPRINT(EM_DIAGRAM):   Fruits1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   drop HeartDiseaseorAttack0 HeartDiseaseorAttack1 ;
MPRINT(EM_DIAGRAM):   if missing( HeartDiseaseorAttack ) then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = .;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HeartDiseaseorAttack , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = 0.22663308855856;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = -0.22663308855856;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = -2.2061992885155;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = 2.2061992885155;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = .;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighBP ;
MPRINT(EM_DIAGRAM):   drop HighBP0 HighBP1 ;
MPRINT(EM_DIAGRAM):   if missing( HighBP ) then do;
MPRINT(EM_DIAGRAM):   HighBP0 = .;
MPRINT(EM_DIAGRAM):   HighBP1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighBP , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HighBP0 = 0.60657808494059;
MPRINT(EM_DIAGRAM):   HighBP1 = -0.60657808494059;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HighBP0 = -0.82429248788463;
MPRINT(EM_DIAGRAM):   HighBP1 = 0.82429248788463;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HighBP0 = .;
MPRINT(EM_DIAGRAM):   HighBP1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighChol ;
MPRINT(EM_DIAGRAM):   drop HighChol0 HighChol1 ;
MPRINT(EM_DIAGRAM):   if missing( HighChol ) then do;
MPRINT(EM_DIAGRAM):   HighChol0 = .;
MPRINT(EM_DIAGRAM):   HighChol1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighChol , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HighChol0 = 0.60510965964047;
MPRINT(EM_DIAGRAM):   HighChol1 = -0.60510965964047;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HighChol0 = -0.82629280621474;
MPRINT(EM_DIAGRAM):   HighChol1 = 0.82629280621474;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HighChol0 = .;
MPRINT(EM_DIAGRAM):   HighChol1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   drop HvyAlcoholConsump0 HvyAlcoholConsump1 ;
MPRINT(EM_DIAGRAM):   if missing( HvyAlcoholConsump ) then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = .;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HvyAlcoholConsump , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = 0.17343267916064;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = -0.17343267916064;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = -2.88295009424872;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = 2.88295009424872;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = .;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for NoDocbcCost ;
MPRINT(EM_DIAGRAM):   drop NoDocbcCost0 NoDocbcCost1 ;
MPRINT(EM_DIAGRAM):   if missing( NoDocbcCost ) then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = .;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( NoDocbcCost , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = 0.21187343092214;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = -0.21187343092214;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = -2.359888904219;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = 2.359888904219;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = .;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysActivity ;
MPRINT(EM_DIAGRAM):   drop PhysActivity0 PhysActivity1 ;
MPRINT(EM_DIAGRAM):   if missing( PhysActivity ) then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = .;
MPRINT(EM_DIAGRAM):   PhysActivity1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysActivity , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = -0.39511195909239;
MPRINT(EM_DIAGRAM):   PhysActivity1 = 0.39511195909239;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = 1.26545842824024;
MPRINT(EM_DIAGRAM):   PhysActivity1 = -1.26545842824024;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = .;
MPRINT(EM_DIAGRAM):   PhysActivity1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Sex ;
MPRINT(EM_DIAGRAM):   drop Sex0 Sex1 ;
MPRINT(EM_DIAGRAM):   if missing( Sex ) then do;
MPRINT(EM_DIAGRAM):   Sex0 = .;
MPRINT(EM_DIAGRAM):   Sex1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Sex , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Sex0 = 0.63000517059661;
MPRINT(EM_DIAGRAM):   Sex1 = -0.63000517059661;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Sex0 = -0.79364072243801;
MPRINT(EM_DIAGRAM):   Sex1 = 0.79364072243801;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Sex0 = .;
MPRINT(EM_DIAGRAM):   Sex1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Smoker ;
MPRINT(EM_DIAGRAM):   drop Smoker0 Smoker1 ;
MPRINT(EM_DIAGRAM):   if missing( Smoker ) then do;
MPRINT(EM_DIAGRAM):   Smoker0 = .;
MPRINT(EM_DIAGRAM):   Smoker1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Smoker , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Smoker0 = 0.63116790023475;
MPRINT(EM_DIAGRAM):   Smoker1 = -0.63116790023475;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Smoker0 = -0.79217868739207;
MPRINT(EM_DIAGRAM):   Smoker1 = 0.79217868739207;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Smoker0 = .;
MPRINT(EM_DIAGRAM):   Smoker1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Stroke ;
MPRINT(EM_DIAGRAM):   drop Stroke0 Stroke1 ;
MPRINT(EM_DIAGRAM):   if missing( Stroke ) then do;
MPRINT(EM_DIAGRAM):   Stroke0 = .;
MPRINT(EM_DIAGRAM):   Stroke1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Stroke , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Stroke0 = 0.1448627995183;
MPRINT(EM_DIAGRAM):   Stroke1 = -0.1448627995183;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Stroke0 = -3.45152627447887;
MPRINT(EM_DIAGRAM):   Stroke1 = 3.45152627447887;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Stroke0 = .;
MPRINT(EM_DIAGRAM):   Stroke1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Veggies ;
MPRINT(EM_DIAGRAM):   drop Veggies0 Veggies1 ;
MPRINT(EM_DIAGRAM):   if missing( Veggies ) then do;
MPRINT(EM_DIAGRAM):   Veggies0 = .;
MPRINT(EM_DIAGRAM):   Veggies1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Veggies , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Veggies0 = -0.33906253229067;
MPRINT(EM_DIAGRAM):   Veggies1 = 0.33906253229067;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Veggies0 = 1.47464762725045;
MPRINT(EM_DIAGRAM):   Veggies1 = -1.47464762725045;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Veggies0 = .;
MPRINT(EM_DIAGRAM):   Veggies1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop T_Education ;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   T_Education = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Education , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.8105774638073;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.7140774293823;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.19358083252604;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_Education = -0.23583674994353;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_Education = 1.05424411700749;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_Education = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GenHlth ;
MPRINT(EM_DIAGRAM):   drop T_GenHlth ;
MPRINT(EM_DIAGRAM):   if missing( GenHlth ) then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( GenHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = -1.47650999922401;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = -0.50699892966105;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 0.67078862696307;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 1.42413548078415;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 1.72285792338403;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Income ;
MPRINT(EM_DIAGRAM):   drop T_Income ;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   T_Income = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Income , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.71665306975879;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.56969637576835;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.37887010298008;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.12844259485713;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_Income = -0.80709473267178;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_Income = -0.36854283179585;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_Income = 0.19354414027939;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_Income = 1.14091281040462;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_Income = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for MentHlth ;
MPRINT(EM_DIAGRAM):   drop T_MentHlth ;
MPRINT(EM_DIAGRAM):   if missing( MentHlth ) then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( MentHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = -0.64692713100466;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.08857747257817;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 2.02987457207006;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.45990715933354;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 0.90623216092549;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.2601056894718;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.66746374210456;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.79265205922791;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.35305257777185;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.86923022212536;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.57690157487132;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.73787024688111;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.91192626810556;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.54314346344954;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.60787433208707;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72422010349468;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92628228892776;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.89843828575167;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.93039354804695;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.61396014024958;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.8408234247775;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.83848639813203;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92284829059155;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90076577351288;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.83959290870703;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92180855220642;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72050947751472;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72792119059037;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90153842313853;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90213937284736;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84175823543569;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_MentHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysHlth ;
MPRINT(EM_DIAGRAM):   drop T_PhysHlth ;
MPRINT(EM_DIAGRAM):   if missing( PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = -0.73159346519283;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.86253869535975;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 0.84666504855354;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 0.63888889830955;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.03058665401748;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.22889671506304;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.43999951951104;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.57312879493313;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.34490589202054;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.13322610689758;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.64152805088406;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.51490783870127;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.68970593724254;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.29906297433101;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.38709760387639;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67131467822845;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.48904287688194;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.70658262198488;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.71220818356566;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.39495896557261;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61537459872726;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61191271467755;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.70182253141653;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61347236556453;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67887853426414;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.49408244246473;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.70049727892875;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67694925513227;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.48410247985267;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67788684872907;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61670886653808;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUS4vlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUS4vads [3] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 3;
MPRINT(EM_DIAGRAM):   CLUS4vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_Age ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_Age - 0.53969887226305 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_Age - -0.61546938269952 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_Age - -0.11065670097039 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_BMI ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_BMI - 0.36930905457931 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_BMI - -0.04774488780789 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_BMI - -0.1393895396938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( AnyHealthcare0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( AnyHealthcare0 - -0.12265228381376 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( AnyHealthcare0 - 1.2217161985906 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( AnyHealthcare0 - -0.15931135162852 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( AnyHealthcare1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( AnyHealthcare1 - 0.12265228381376 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( AnyHealthcare1 - -1.2217161985906 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( AnyHealthcare1 - 0.15931135162852 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( CholCheck0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( CholCheck0 - -0.12800484033715 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( CholCheck0 - 1.12118872244066 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( CholCheck0 - -0.14003274976372 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( CholCheck1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( CholCheck1 - 0.12800484033715 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( CholCheck1 - -1.12118872244066 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( CholCheck1 - 0.14003274976372 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( DiffWalk0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( DiffWalk0 - -0.76313335535289 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( DiffWalk0 - 0.16352220339809 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( DiffWalk0 - 0.27697251041048 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( DiffWalk1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( DiffWalk1 - 0.76313335535289 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( DiffWalk1 - -0.16352220339809 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( DiffWalk1 - -0.27697251041048 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Fruits0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Fruits0 - 0.12343332942892 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Fruits0 - 0.07100036254016 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Fruits0 - -0.06141458095452 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Fruits1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Fruits1 - -0.12343332942892 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Fruits1 - -0.07100036254016 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Fruits1 - 0.06141458095452 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HeartDiseaseorAttack0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HeartDiseaseorAttack0 - -0.47239263320329 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HeartDiseaseorAttack0 - 0.16035979448278 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HeartDiseaseorAttack0 - 0.16136765517917 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HeartDiseaseorAttack1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HeartDiseaseorAttack1 - 0.47239263320329 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HeartDiseaseorAttack1 - -0.16035979448278 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HeartDiseaseorAttack1 - -0.16136765517917 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighBP0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HighBP0 - -0.46430618229414 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HighBP0 - 0.24076942025178 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HighBP0 - 0.14442710996734 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HighBP1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HighBP1 - 0.46430618229414 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HighBP1 - -0.24076942025178 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HighBP1 - -0.14442710996734 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighChol0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HighChol0 - -0.33812212873419 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HighChol0 - 0.22014109155754 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HighChol0 - 0.09753677900308 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
The SAS System
 
MPRINT(EM_DIAGRAM):   if not missing( HighChol1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HighChol1 - 0.33812212873419 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HighChol1 - -0.22014109155754 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HighChol1 - -0.09753677900308 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HvyAlcoholConsump0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HvyAlcoholConsump0 - 0.06617606432324 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HvyAlcoholConsump0 - -0.05818027989413 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HvyAlcoholConsump0 - -0.0165157801343 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HvyAlcoholConsump1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( HvyAlcoholConsump1 - -0.06617606432324 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( HvyAlcoholConsump1 - 0.05818027989413 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( HvyAlcoholConsump1 - 0.0165157801343 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( NoDocbcCost0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( NoDocbcCost0 - -0.05439123054683 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( NoDocbcCost0 - -1.04885057660903 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( NoDocbcCost0 - 0.20056170181343 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( NoDocbcCost1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( NoDocbcCost1 - 0.05439123054683 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( NoDocbcCost1 - 1.04885057660903 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( NoDocbcCost1 - -0.20056170181343 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( PhysActivity0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( PhysActivity0 - 0.41463697194409 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( PhysActivity0 - 0.00844749445782 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( PhysActivity0 - -0.16707802451306 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( PhysActivity1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( PhysActivity1 - -0.41463697194409 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( PhysActivity1 - -0.00844749445782 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( PhysActivity1 - 0.16707802451306 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Sex0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Sex0 - 0.05105650956478 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Sex0 - -0.00566435519373 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Sex0 - -0.01943007341023 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Sex1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Sex1 - -0.05105650956478 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Sex1 - 0.00566435519373 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Sex1 - 0.01943007341023 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Smoker0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Smoker0 - -0.23840148022303 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Smoker0 - -0.02692721593642 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Smoker0 - 0.09982697761452 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Smoker1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Smoker1 - 0.23840148022303 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Smoker1 - 0.02692721593642 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Smoker1 - -0.09982697761452 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Stroke0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Stroke0 - -0.33246781994988 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Stroke0 - 0.09899503396332 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Stroke0 - 0.11593395766771 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Stroke1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Stroke1 - 0.33246781994988 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Stroke1 - -0.09899503396332 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Stroke1 - -0.11593395766771 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Veggies0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Veggies0 - 0.19894133752745 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Veggies0 - 0.02947367026096 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Veggies0 - -0.08449776324794 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Veggies1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( Veggies1 - -0.19894133752745 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( Veggies1 - -0.02947367026096 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( Veggies1 - 0.08449776324794 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( T_Education ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_Education - -0.5462482496917 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_Education - -0.20906465690137 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_Education - 0.2538597437855 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_GenHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_GenHlth - 0.95371189239256 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_GenHlth - -0.00540151959237 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_GenHlth - -0.38006442013173 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_Income ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_Income - -0.71048743945181 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_Income - -0.36285444842433 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_Income - 0.34569126920928 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_MentHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_MentHlth - 0.35516346401449 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_MentHlth - 0.22826019089854 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_MentHlth - -0.18079880346005 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS4vads [1] + ( T_PhysHlth - 0.82505872259016 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [2] + ( T_PhysHlth - -0.03750449849773 )**2;
MPRINT(EM_DIAGRAM):   CLUS4vads [3] + ( T_PhysHlth - -0.32319681299581 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   _vqnvar = 21 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 8.3559825725387E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS4vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 3;
MPRINT(EM_DIAGRAM):   if CLUS4vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS4vads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (21 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUS4vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus4: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   run;
43117      run;
 
NOTE: DATA STEP view saved on file EMWS2.CLUS4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.VARSEL2_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
43118      quit;
43119      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
43120      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
43121      * Clus4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus4: Computing metadata for TRAIN data;
43122      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.CLUS4_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Clus4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Clus4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Clus4_TRAIN out=WORK.M1DN2ND0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DN2ND0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DN2ND0(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DN2ND0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DN2ND0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M00VPMEK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3P98OZM(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   set WORK.M00VPMEK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Varsel2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Varsel2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus4";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.CLUS4_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:38:07" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                March 09, 2024
Time:                15:38:07
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0TNUMUB "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0TNUMUB new;
MPRINT(EM_DIAGRAM):   run;
43532      data WORK.M0XQ1YVR;
MPRINT(EM_DIAGRAM):    data WORK.M0XQ1YVR;
43533      set WORK.M0XQ1YVR;
MPRINT(EM_DIAGRAM):   set WORK.M0XQ1YVR;
43534      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
43535      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M0XQ1YVR.
NOTE: The data set WORK.M0XQ1YVR has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43536      data WORK.M0XQ1YVR;
MPRINT(EM_DIAGRAM):    data WORK.M0XQ1YVR;
43537      set WORK.M0XQ1YVR end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M0XQ1YVR end=_eof_ nobs=_nobs_;
43538      output;
MPRINT(EM_DIAGRAM):   output;
43539      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
43540      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
43541      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
43542      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
43543      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
43544      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
43545      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
43546      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
43547      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
43548      output;
MPRINT(EM_DIAGRAM):   output;
43549      end;
MPRINT(EM_DIAGRAM):   end;
43550      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M0XQ1YVR.
NOTE: The data set WORK.M0XQ1YVR has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
43551      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
43552      * Clus4: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus4: Create decision matrix;
43553      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43554      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43555      * Clus4: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Tree Variables Macro ;
43556      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43557      %macro EM_TREEVARS;
43558          Age AnyHealthcare BMI CholCheck DiffWalk Education Fruits GenHlth
43559         HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump Income MentHlth
43560         NoDocbcCost PhysActivity PhysHlth Sex Smoker Stroke Veggies
43561      %mend EM_TREEVARS;
43562      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43563      * Clus4: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Tree Targets Macro ;
43564      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43565      %macro EM_TREETARGETS;
43566          _SEGMENT_
43567      %mend EM_TREETARGETS;
43568      data EMWS2.EM_Clus4 / view=EMWS2.EM_Clus4;
MPRINT(EM_DIAGRAM):   data EMWS2.EM_Clus4 / view=EMWS2.EM_Clus4;
43569      set
43569    ! EMWS2.Clus4_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_TRAIN(keep
MPRINT(EM_DIAGRAM):  =Age AnyHealthcare BMI CholCheck DiffWalk Education Fruits GenHlth HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump Income MentHlth NoDocbcCost PhysActivity PhysHlth Sex Smoker Stroke Veggies _SEGMENT_);
43570      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.EM_CLUS4.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS4_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus4: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43571      *------------------------------------------------------------* ;
43572      * Clus4: Interval Inputs Macro ;
43573      *------------------------------------------------------------* ;
43574      %macro INTINPUTS;
43575          Age BMI
43576      %mend INTINPUTS;
43577      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43578      * Clus4: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Binary and Nominal Inputs Macro ;
43579      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43580      %macro NOMINPUTS;
43581          AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol
43582         HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
43583      %mend NOMINPUTS;
43584      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43585      * Clus4: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: Ordinal Inputs Macro ;
43586      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
43587      %macro ORDINPUTS;
43588          Education GenHlth Income MentHlth PhysHlth
43589      %mend ORDINPUTS;
43590      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43591      * Clus4: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Clus4: Run ARBOR procedure;
43592      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
43593      proc arbor data=EMWS2.EM_Clus4
43594      MAXSURRS=5
43595      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS2.EM_Clus4 MAXSURRS=5 ;
43596      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
43597      input %INTINPUTS
MPRINT(INTINPUTS):   Age BMI
43598      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
43599      input %NOMINPUTS
MPRINT(NOMINPUTS):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
43600      / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
43601      input %ORDINPUTS
MPRINT(ORDINPUTS):   Education GenHlth Income MentHlth PhysHlth
43602      / level=ordinal;
MPRINT(EM_DIAGRAM):   / level=ordinal;
43603      target _SEGMENT_ / level=NOMINAL
43604      Criterion=PROBCHISQ
43605      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
43606      ;
MPRINT(EM_DIAGRAM):   ;
43607      Performance DISK
43608      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
43609      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1473292 kilobytes of physical memory.
NOTE: Will use 223088 out of 223088 training cases.
NOTE: Using memory pool with 415667200 bytes.
NOTE: Passed training data 18 times.
NOTE: Training used 24272080 bytes of work memory.
NOTE: The subtree sequence contains 32 subtrees. The largest has 63 nodes and 32 leaves.
NOTE: Using subtree with 29 nodes and 15 leaves.
NOTE: Created macro variable NLEAVES equal to 15.
43610      save
43611      MODEL=EMWS2.Clus4_PLOTDS
43612      SEQUENCE=EMWS2.Clus4_OUTSEQ
43613      IMPORTANCE=EMWS2.Clus4_OUTIMPORT
43614      NODESTAT=EMWS2.Clus4_OUTNODES
43615      SUMMARY=WORK.OUTSUMMARY_TREE_2Z1GX3N
43616      STATSBYNODE=WORK.OUTSTATS_TREE_2Z1GX3N
43617      Pathlistnonmissing = WORK.OUTPATH_TREE_2Z1GX3N
43618      Rules = WORK.OUTRULES_TREE_2Z1GX3N
43619      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS2.Clus4_PLOTDS SEQUENCE=EMWS2.Clus4_OUTSEQ IMPORTANCE=EMWS2.Clus4_OUTIMPORT NODESTAT=EMWS2.Clus4_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_2Z1GX3N STATSBYNODE=WORK.OUTSTATS_TREE_2Z1GX3N Pathlistnonmissing =
WORK.OUTPATH_TREE_2Z1GX3N Rules = WORK.OUTRULES_TREE_2Z1GX3N ;
NOTE: The data set EMWS2.CLUS4_OUTIMPORT has 21 observations and 5 variables.
NOTE: The data set EMWS2.CLUS4_PLOTDS has 2431 observations and 4 variables.
NOTE: The data set EMWS2.CLUS4_OUTNODES has 29 observations and 22 variables.
NOTE: The data set WORK.OUTPATH_TREE_2Z1GX3N has 115 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_2Z1GX3N has 488 observations and 6 variables.
NOTE: The data set EMWS2.CLUS4_OUTSEQ has 32 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_2Z1GX3N has 145 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_2Z1GX3N has 16 observations and 6 variables.
43620      run;
MPRINT(EM_DIAGRAM):   run;
 
43621      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 223088 observations read from the data set EMWS2.SMPL_DATA.
NOTE: There were 223088 observations read from the data set EMWS2.VARSEL2_TRAIN.
NOTE: View EMWS2.EM_CLUS4.VIEW used (Total process time):
      real time           22.93 seconds
      cpu time            22.70 seconds
 
NOTE: There were 223088 observations read from the data set EMWS2.CLUS4_TRAIN.
NOTE: There were 223088 observations read from the data set EMWS2.EM_CLUS4.
NOTE: The data set WORK._NAMEDAT has 3 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           22.95 seconds
      cpu time            22.71 seconds
 
 
43622      data EMWS2.Clus4_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS2.Clus4_OUTIMPORT;
43623      set EMWS2.Clus4_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_OUTIMPORT;
43624      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
43625         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
43626      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
43627      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.CLUS4_OUTIMPORT.
NOTE: The data set EMWS2.CLUS4_OUTIMPORT has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.09 seconds
 
 
43628      filename x "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
43629      data temp;
MPRINT(EM_DIAGRAM):    data temp;
43630      length varname $20;
MPRINT(EM_DIAGRAM):   length varname $20;
43631      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
43632      set WORK.OUTPATH_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_2Z1GX3N;
43633      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
43634      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
43635      output;
MPRINT(EM_DIAGRAM):   output;
43636      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set WORK.OUTPATH_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMP has 115 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43637      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
43638      by node;
MPRINT(EM_DIAGRAM):   by node;
43639      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 115 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
43640      proc sort data=EMWS2.Clus4_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_OUTNODES out=outnodes;
43641      by node;
MPRINT(EM_DIAGRAM):   by node;
43642      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_OUTNODES.
NOTE: The data set WORK.OUTNODES has 29 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
43643      data temp;
MPRINT(EM_DIAGRAM):   data temp;
43644      merge temp(in=_a) outnodes(keep= node
43645      NPRIORS
43646      P__SEGMENT_1
43647      P__SEGMENT_2
43648      P__SEGMENT_3
43649      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_2 P__SEGMENT_3 );
43650      by node;
MPRINT(EM_DIAGRAM):   by node;
43651      if _a;
MPRINT(EM_DIAGRAM):   if _a;
43652      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set WORK.TEMP.
NOTE: There were 29 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 115 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43653      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
43654      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
43655      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 115 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43656      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
43657      file x;
MPRINT(EM_DIAGRAM):   file x;
43658      set temp;
MPRINT(EM_DIAGRAM):   set temp;
43659      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
43660      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
43661      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
43662      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
43663      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
43664      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
43665      end;
MPRINT(EM_DIAGRAM):   end;
43666      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
43667      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
43668      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
43669      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
43670      end;
MPRINT(EM_DIAGRAM):   end;
43671      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
43672      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
43673      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
43674      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
43675      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
43676      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
43677      end;
MPRINT(EM_DIAGRAM):   end;
43678      else do;
MPRINT(EM_DIAGRAM):   else do;
43679      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
43680      end;
MPRINT(EM_DIAGRAM):   end;
43681      end;
MPRINT(EM_DIAGRAM):   end;
43682      end;
MPRINT(EM_DIAGRAM):   end;
43683      else do;
MPRINT(EM_DIAGRAM):   else do;
43684      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
43685      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
43686      end;
MPRINT(EM_DIAGRAM):   end;
43687      else do;
MPRINT(EM_DIAGRAM):   else do;
43688      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
43689      end;
MPRINT(EM_DIAGRAM):   end;
43690      end;
MPRINT(EM_DIAGRAM):   end;
43691      end;
MPRINT(EM_DIAGRAM):   end;
43692      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
43693      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
43694      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
43695      end;
MPRINT(EM_DIAGRAM):   end;
43696      else do;
MPRINT(EM_DIAGRAM):   else do;
43697      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
43698      end;
MPRINT(EM_DIAGRAM):   end;
43699      end;
MPRINT(EM_DIAGRAM):   end;
43700      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
43701      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
43702      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
43703      end;
MPRINT(EM_DIAGRAM):   end;
43704      else do;
MPRINT(EM_DIAGRAM):   else do;
43705      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
43706      end;
MPRINT(EM_DIAGRAM):   end;
43707      end;
MPRINT(EM_DIAGRAM):   end;
43708      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
43709      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
43710      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
43711      end;
MPRINT(EM_DIAGRAM):   end;
43712      else do;
MPRINT(EM_DIAGRAM):   else do;
43713      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
43714      end;
MPRINT(EM_DIAGRAM):   end;
43715      end;
MPRINT(EM_DIAGRAM):   end;
43716      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
43717      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
43718      end;
MPRINT(EM_DIAGRAM):   end;
43719      else do;
MPRINT(EM_DIAGRAM):   else do;
43720      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
43721      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
43722      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
43723      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
43724      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
43725      end;
MPRINT(EM_DIAGRAM):   end;
43726      end;
MPRINT(EM_DIAGRAM):   end;
43727      else do;
MPRINT(EM_DIAGRAM):   else do;
43728      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
43729      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
43730      end;
MPRINT(EM_DIAGRAM):   end;
43731      end;
MPRINT(EM_DIAGRAM):   end;
43732      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
43733      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
43734      end;
MPRINT(EM_DIAGRAM):   end;
43735      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
43736      end;
MPRINT(EM_DIAGRAM):   end;
43737      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
43738      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
43739      end;
MPRINT(EM_DIAGRAM):   end;
43740      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
43741      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
43742      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
43743      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
43744      end;
MPRINT(EM_DIAGRAM):   end;
43745      end;
MPRINT(EM_DIAGRAM):   end;
43746      put string;
MPRINT(EM_DIAGRAM):   put string;
43747      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
43748      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
43749      end;
MPRINT(EM_DIAGRAM):   end;
43750      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
43751      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
43752      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
43753      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
43754      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
43755      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
43756      put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=3  = " P__SEGMENT_3;
43757      put " ";
MPRINT(EM_DIAGRAM):   put " ";
43758      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
43759      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
43760      end;
MPRINT(EM_DIAGRAM):   end;
43761      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      43676:67    43679:66    43723:108   43724:72
NOTE: The file X is:
      Filename=\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus4\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=09Mar2024:15:38:31,
      Create Time=09Mar2024:15:38:31
 
NOTE: 217 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 115 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
43762      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
43763      /* belowtext */
43764      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
43765      set WORK.OUTRULES_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_2Z1GX3N;
43766      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
43767      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
43768      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
43769      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 488 observations read from the data set WORK.OUTRULES_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
43770      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
43771      set WORK.OUTRULES_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_2Z1GX3N;
43772      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
43773      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
43774      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 488 observations read from the data set WORK.OUTRULES_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMPVAR has 14 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
43775      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
43776      by node;
MPRINT(EM_DIAGRAM):   by node;
43777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43778      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
43779      by node;
MPRINT(EM_DIAGRAM):   by node;
43780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 14 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43781      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
43782      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
43783      by node;
MPRINT(EM_DIAGRAM):   by node;
43784      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
43785      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
43786      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 14 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 14 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43787      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
43788      by node;
MPRINT(EM_DIAGRAM):   by node;
43789      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 14 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43790      /* abovetext */
43791      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
43792      set WORK.OUTRULES_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_2Z1GX3N;
43793      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
43794      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 488 observations read from the data set WORK.OUTRULES_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMPOUTRULES has 25 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43795      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
43796      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
43797      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 25 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43798      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
43799      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
43800      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
43801      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
43802      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
43803      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
43804      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
43805      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
43806      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
43807      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43808      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
43809      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
43810      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
43811      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
43812      output;
MPRINT(EM_DIAGRAM):   output;
43813      end;
MPRINT(EM_DIAGRAM):   end;
43814      else do;
MPRINT(EM_DIAGRAM):   else do;
43815      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
43816      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
43817      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
43818      output;
MPRINT(EM_DIAGRAM):   output;
43819      end;
MPRINT(EM_DIAGRAM):   end;
43820      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
43821      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43822      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
43823      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43824      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
43825      output;
MPRINT(EM_DIAGRAM):   output;
43826      end;
MPRINT(EM_DIAGRAM):   end;
43827      else do;
MPRINT(EM_DIAGRAM):   else do;
43828      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43829      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
43830      output;
MPRINT(EM_DIAGRAM):   output;
43831      end;
MPRINT(EM_DIAGRAM):   end;
43832      end;
MPRINT(EM_DIAGRAM):   end;
43833      end;
MPRINT(EM_DIAGRAM):   end;
43834      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
43835      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
43836      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43837      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
43838      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
43839      end;
MPRINT(EM_DIAGRAM):   end;
43840      else do;
MPRINT(EM_DIAGRAM):   else do;
43841      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
43842      end;
MPRINT(EM_DIAGRAM):   end;
43843      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43844      output;
MPRINT(EM_DIAGRAM):   output;
43845      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43846      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
43847      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
43848      end;
MPRINT(EM_DIAGRAM):   end;
43849      else do;
MPRINT(EM_DIAGRAM):   else do;
43850      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
43851      end;
MPRINT(EM_DIAGRAM):   end;
43852      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43853      output;
MPRINT(EM_DIAGRAM):   output;
43854      end;
MPRINT(EM_DIAGRAM):   end;
43855      else do;
MPRINT(EM_DIAGRAM):   else do;
43856      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43857      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
43858      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
43859      end;
MPRINT(EM_DIAGRAM):   end;
43860      else do;
MPRINT(EM_DIAGRAM):   else do;
43861      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
43862      end;
MPRINT(EM_DIAGRAM):   end;
43863      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43864      output;
MPRINT(EM_DIAGRAM):   output;
43865      end;
MPRINT(EM_DIAGRAM):   end;
43866      end;
MPRINT(EM_DIAGRAM):   end;
43867      else do;
MPRINT(EM_DIAGRAM):   else do;
43868      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
43869      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43870      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
43871      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
43872      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
43873      end;
MPRINT(EM_DIAGRAM):   end;
43874      else do;
MPRINT(EM_DIAGRAM):   else do;
43875      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
43876      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
43877      end;
MPRINT(EM_DIAGRAM):   end;
43878      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43879      output;
MPRINT(EM_DIAGRAM):   output;
43880      end;
MPRINT(EM_DIAGRAM):   end;
43881      else do;
MPRINT(EM_DIAGRAM):   else do;
43882      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
43883      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
43884      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
43885      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
43886      end;
MPRINT(EM_DIAGRAM):   end;
43887      else do;
MPRINT(EM_DIAGRAM):   else do;
43888      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
43889      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
43890      end;
MPRINT(EM_DIAGRAM):   end;
43891      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
43892      output;
MPRINT(EM_DIAGRAM):   output;
43893      end;
MPRINT(EM_DIAGRAM):   end;
43894      end;
MPRINT(EM_DIAGRAM):   end;
43895      end;
MPRINT(EM_DIAGRAM):   end;
43896      else do;
MPRINT(EM_DIAGRAM):   else do;
43897      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
43898      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
43899      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
43900      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
43901      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
43902      output;
MPRINT(EM_DIAGRAM):   output;
43903      end;
MPRINT(EM_DIAGRAM):   end;
43904      end;
MPRINT(EM_DIAGRAM):   end;
43905      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
43906      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
43907      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
43908      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
43909      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
43910      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
43911      end;
MPRINT(EM_DIAGRAM):   end;
43912      else do;
MPRINT(EM_DIAGRAM):   else do;
43913      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
43914      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
43915      end;
MPRINT(EM_DIAGRAM):   end;
43916      end;
MPRINT(EM_DIAGRAM):   end;
43917      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
43918      output;
MPRINT(EM_DIAGRAM):   output;
43919      end;
MPRINT(EM_DIAGRAM):   end;
43920      else do;
MPRINT(EM_DIAGRAM):   else do;
43921      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
43922      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
43923      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
43924      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
43925      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
43926      end;
MPRINT(EM_DIAGRAM):   end;
43927      else do;
MPRINT(EM_DIAGRAM):   else do;
43928      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
43929      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
43930      end;
MPRINT(EM_DIAGRAM):   end;
43931      end;
MPRINT(EM_DIAGRAM):   end;
43932      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
43933      end;
MPRINT(EM_DIAGRAM):   end;
43934      end;
MPRINT(EM_DIAGRAM):   end;
43935      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
43936      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      43809:25   43824:26   43838:24   43838:47   43847:26   43858:26   43871:24   43871:47   43884:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      43889:11
NOTE: There were 25 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 28 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43937      /* MIssing value to abovetext */
43938      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
43939      set WORK.OUTRULES_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_2Z1GX3N;
43940      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
43941      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
43942      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 488 observations read from the data set WORK.OUTRULES_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMPMISSING has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43943      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
43944      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
43945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 28 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43946      proc sort data=EMWS2.Clus4_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_OUTNODES out=tempoutnodes;
43947      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
43948      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 29 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43949      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
43950      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
43951      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 14 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
43952      data WORK.Clus4_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus4_outnodes;
43953      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
43954      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
43955      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
43956      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
43957      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
43958      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
43959      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Or Missing";
43960      end;
MPRINT(EM_DIAGRAM):   end;
43961      else do;
MPRINT(EM_DIAGRAM):   else do;
43962      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Missing Values Only";
43963      end;
MPRINT(EM_DIAGRAM):   end;
43964      end;
MPRINT(EM_DIAGRAM):   end;
43965      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Non-Missing Values";
43966      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
43967      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
43968      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
43969      end;
MPRINT(EM_DIAGRAM):   end;
43970      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
43971      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
43972      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 28 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 29 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 14 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS4_OUTNODES has 29 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
43973      proc sort data=WORK.Clus4_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus4_outnodes;
43974      by node;
MPRINT(EM_DIAGRAM):   by node;
43975      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.CLUS4_OUTNODES.
NOTE: The data set WORK.CLUS4_OUTNODES has 29 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43976      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
43977      by node;
MPRINT(EM_DIAGRAM):   by node;
43978      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43979      data WORK.Clus4_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus4_outnodes;
43980      merge WORK.Clus4_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus4_outnodes tempbelow;
43981      by node;
MPRINT(EM_DIAGRAM):   by node;
43982      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.CLUS4_OUTNODES.
NOTE: There were 14 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS4_OUTNODES has 29 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 223088 observations read from the data set EMWS2.SMPL_DATA.
NOTE: There were 223088 observations read from the data set EMWS2.VARSEL2_TRAIN.
NOTE: View EMWS2.EM_CLUS4.VIEW used (Total process time):
      real time           1.57 seconds
      cpu time            1.54 seconds
 
NOTE: There were 223088 observations read from the data set EMWS2.CLUS4_TRAIN.
43983      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
43984      set WORK.OUTSTATS_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_2Z1GX3N;
43985      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
43986      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
43987      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 145 observations read from the data set WORK.OUTSTATS_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMPOUTSTATS has 145 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
43988      data EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS2.Clus4_TREE_PLOT;
43989      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
43990      set WORK.Clus4_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus4_outnodes;
43991      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
43992         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
43993         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
43994         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Parent Id" depth = "Depth" belowtext= "Below Text" abovetext = "Above Text" linkwidth = "Link Width" nodetext = "Node Text" textall = "All Text" N = "Train: Number of Observations" nodecolor = "Node Color" node =
"Node";
43995      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
43996      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 29 observations read from the data set WORK.CLUS4_OUTNODES.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
 
 
43997      proc sort data=EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_TREE_PLOT;
43998      by node;
MPRINT(EM_DIAGRAM):   by node;
43999      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
44000      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
44001      by node;
MPRINT(EM_DIAGRAM):   by node;
44002      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 145 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 145 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44003      data EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS2.Clus4_TREE_PLOT;
44004      merge EMWS2.Clus4_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus4_TREE_PLOT tempoutstats;
44005      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
44006      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
44007      by node;
MPRINT(EM_DIAGRAM):   by node;
44008      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
44009      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
44010      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
44011      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
44012      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
44013      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
44014      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
44015      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
44016      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
44017      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
44018      end;
MPRINT(EM_DIAGRAM):   end;
44019      else do;
MPRINT(EM_DIAGRAM):   else do;
44020      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
44021      end;
MPRINT(EM_DIAGRAM):   end;
44022      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
44023      end;
MPRINT(EM_DIAGRAM):   end;
44024      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
44025      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Count:"|| put(N, 13.);
44026      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Count:"|| put(N, 13.);
44027      output EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS2.Clus4_TREE_PLOT;
44028      end;
MPRINT(EM_DIAGRAM):   end;
44029      end;
MPRINT(EM_DIAGRAM):   end;
44030      else do;
MPRINT(EM_DIAGRAM):   else do;
44031      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
44032      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Train: Root Average Square Error";
44033      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
44034      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Average"|| put(STATVALUE, 13.4)||'0A'x|| "Count:"|| put(N, 13.);
44035      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
44036      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
44037      ;
MPRINT(EM_DIAGRAM):   ;
44038      ;
MPRINT(EM_DIAGRAM):   ;
44039      end;
MPRINT(EM_DIAGRAM):   end;
44040      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
44041      output EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS2.Clus4_TREE_PLOT;
44042      end;
MPRINT(EM_DIAGRAM):   end;
44043      ;
MPRINT(EM_DIAGRAM):   ;
44044      end;
MPRINT(EM_DIAGRAM):   end;
44045      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Predicted Variable";
44046      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
44047      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: There were 145 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
 
 
44048      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
44049      set WORK.OUTSTATS_TREE_2Z1GX3N;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_2Z1GX3N;
44050      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
44051      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
44052      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 145 observations read from the data set WORK.OUTSTATS_TREE_2Z1GX3N.
NOTE: The data set WORK.TEMPCOLOR has 145 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
44053      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
44054      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
44055      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
44056      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
44057      end;
MPRINT(EM_DIAGRAM):   end;
44058      else do;
MPRINT(EM_DIAGRAM):   else do;
44059      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
44060      end;
MPRINT(EM_DIAGRAM):   end;
44061      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 145 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 29 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
44062      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
44063      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
44064      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
44065      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
44066      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
44067      end;
MPRINT(EM_DIAGRAM):   end;
44068      else do;
MPRINT(EM_DIAGRAM):   else do;
44069      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
44070      end;
MPRINT(EM_DIAGRAM):   end;
44071      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
44072      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 29 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44073      proc sort data=EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_TREE_PLOT;
44074      by node;
MPRINT(EM_DIAGRAM):   by node;
44075      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
44076      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
44077      by node;
MPRINT(EM_DIAGRAM):   by node;
44078      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 29 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
44079      data EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_TREE_PLOT;
44080      merge EMWS2.Clus4_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus4_TREE_PLOT tempcolor;
44081      by node;
MPRINT(EM_DIAGRAM):   by node;
44082      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
44083      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
44084      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
44085      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
44086      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
44087      end;
MPRINT(EM_DIAGRAM):   end;
44088      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
44089      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: There were 29 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds
 
 
44090      data EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_TREE_PLOT;
44091      set EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_TREE_PLOT;
44092      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Node Id:"|| put(Node, 13.)||'0A'x||trim(textall);
44093      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
 
 
44094      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
44095      set WORK.Clus4_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus4_outnodes;
44096      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.CLUS4_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 29 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44097      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
44098      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
44099      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 29 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44100      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
44101      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
44102      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
44103      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Leaf Index";
44104      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Percent Cases";
44105      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Event Percentage";
44106      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Training Percent ";
44107      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
44108      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
44109      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
44110      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
44111      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
44112      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
44113      keep NODE index tprob perc_train percevent_train
44114      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
44115      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44116      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
44117      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
44118      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
44119      proc sort data=EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_TREE_PLOT;
44120      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
44121      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
 
 
44122      data EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_TREE_PLOT;
44123      merge EMWS2.Clus4_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus4_TREE_PLOT tree_temp;
44124      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
44125      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: There were 15 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
 
 
44126      proc sort data=EMWS2.Clus4_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_TREE_PLOT;
44127      by node index;
MPRINT(EM_DIAGRAM):   by node index;
44128      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set EMWS2.CLUS4_TREE_PLOT.
NOTE: The data set EMWS2.CLUS4_TREE_PLOT has 29 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
 
 
ERROR: Invalid file, \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2.
44129      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
44130      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Importance";
44131      proc print data=EMWS2.Clus4_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Clus4_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
44132      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.CLUS4_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44133      title10;
MPRINT(EM_DIAGRAM):   title10;
44134      data WORK.M1PNLYOI;
MPRINT(EM_DIAGRAM):    data WORK.M1PNLYOI;
44135      set WORK.M1PNLYOI;
MPRINT(EM_DIAGRAM):   set WORK.M1PNLYOI;
44136      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
44137      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1PNLYOI.
NOTE: The data set WORK.M1PNLYOI has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44138      proc sort data=EMWS2.Clus4_OUTIMPORT out=WORK.Clus4_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Clus4_OUTIMPORT out=WORK.Clus4_GRAPHVARS(keep=NAME);
44139      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
44140      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44141      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.CLUS4_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS4_GRAPHVARS has 15 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44142      proc sort data = WORK.M1PNLYOI;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M1PNLYOI;
44143      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44144      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1PNLYOI.
NOTE: The data set WORK.M1PNLYOI has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
44145      data WORK.M1PNLYOI;
MPRINT(EM_DIAGRAM):   data WORK.M1PNLYOI;
44146      merge WORK.M1PNLYOI WORK.Clus4_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M1PNLYOI WORK.Clus4_GRAPHVARS(in=_b_);
44147      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44148      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
44149      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1PNLYOI.
NOTE: There were 15 observations read from the data set WORK.CLUS4_GRAPHVARS.
NOTE: The data set WORK.M1PNLYOI has 15 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44150      data WORK.M1PNLYOI;
MPRINT(EM_DIAGRAM):    data WORK.M1PNLYOI;
44151      set WORK.M1PNLYOI end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1PNLYOI end=_eof_ nobs=_nobs_;
44152      output;
MPRINT(EM_DIAGRAM):   output;
44153      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
44154      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
44155      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
44156      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
44157      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
44158      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
44159      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
44160      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
44161      output;
MPRINT(EM_DIAGRAM):   output;
44162      end;
MPRINT(EM_DIAGRAM):   end;
44163      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.M1PNLYOI.
NOTE: The data set WORK.M1PNLYOI has 16 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44164      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
44165      * Clus4: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus4: STDIZE Variables Macro ;
44166      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
44167      %macro stdizevar;
44168          Age BMI
44169      %mend stdizevar;
44170      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44171      * Clus4: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus4: Computing Summary Statistics;
44172      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44173      proc stdize
44174      data = EMWS2.Clus4_TRAIN
44175      out=_null_
44176      outstat=WORK.Clus4_STAT
44177      add=0 fuzz=1E-14 initial=MAD
44178      vardef=df
44179      method=STD
44180      mult=1
44181      pctlmtd=ORD_STAT pctldef=2
44182      pctlpts=(
44183      0
44184      100
44185      )
44186      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS2.Clus4_TRAIN out=_null_ outstat=WORK.Clus4_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
44187      var %stdizevar;
MPRINT(STDIZEVAR):   Age BMI
MPRINT(EM_DIAGRAM):  ;
44188      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 223088 observations read from the data set EMWS2.SMPL_DATA.
NOTE: View EMWS2.CLUS4_TRAIN.VIEW used (Total process time):
      real time           1.63 seconds
      cpu time            1.62 seconds
 
NOTE: There were 223088 observations read from the data set EMWS2.VARSEL2_TRAIN.
NOTE: There were 223088 observations read from the data set EMWS2.CLUS4_TRAIN.
NOTE: The data set WORK.CLUS4_STAT has 10 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           1.65 seconds
      cpu time            1.64 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
44189      quit;
 
44190      data WORK.Clus4_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus4_MINMAX;
44191      set WORK.Clus4_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus4_STAT;
44192      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
44193      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
44194      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
44195      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS4_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS4_MINMAX has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44196      proc transpose data=WORK.Clus4_MINMAX out=WORK.Clus4_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus4_MINMAX out=WORK.Clus4_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
44197      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
44198      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS4_MINMAX.
NOTE: The data set WORK.CLUS4_MINMAX has 2 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44199      data WORK.Clus4_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus4_UGRID;
44200      set WORK.Clus4_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus4_MINMAX;
44201      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
44202      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
44203      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
44204      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
44205      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
44206      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
44207      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
44208      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
44209      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
44210      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
44211      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS4_MINMAX.
NOTE: The data set WORK.CLUS4_UGRID has 2 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44212      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
44213      * Clus4: Creating formats for binning interval variables;
MPRINT(EM_DIAGRAM):   * Clus4: Creating formats for binning interval variables;
44214      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44215      proc format;
MPRINT(EM_DIAGRAM):   proc format;
44216      value F1_
44217      1-2.5 = "1:2.5"
44218      2.5-4 = "2.5:4"
44219      4-5.5 = "4:5.5"
44220      5.5-7 = "5.5:7"
44221      7-8.5 = "7:8.5"
44222      8.5-10 = "8.5:10"
44223      10-11.5 = "10:11.5"
44224      11.5-13 = "11.5:13"
44225      ;
MPRINT(EM_DIAGRAM):   value F1_ 1-2.5 = "1:2.5" 2.5-4 = "2.5:4" 4-5.5 = "4:5.5" 5.5-7 = "5.5:7" 7-8.5 = "7:8.5" 8.5-10 = "8.5:10" 10-11.5 = "10:11.5" 11.5-13 = "11.5:13" ;
NOTE: Format F1_ is already on the library WORK.FORMATS.
NOTE: Format F1_ has been output.
44226      value F2_
44227      12-16 = "12:16"
44228      16-20 = "16:20"
44229      20-24 = "20:24"
44230      24-28 = "24:28"
44231      28-32 = "28:32"
44232      32-36 = "32:36"
44233      36-40 = "36:40"
44234      40-44 = "40:44"
44235      ;
MPRINT(EM_DIAGRAM):   value F2_ 12-16 = "12:16" 16-20 = "16:20" 20-24 = "20:24" 24-28 = "24:28" 28-32 = "28:32" 32-36 = "32:36" 36-40 = "36:40" 40-44 = "40:44" ;
NOTE: Format F2_ is already on the library WORK.FORMATS.
NOTE: Format F2_ has been output.
MPRINT(EM_DIAGRAM):   run;
44236      run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44237      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
44238      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
44239      proc freq data = EMWS2.Clus4_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.Clus4_TRAIN order=formatted addnames;
44240      table Age * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Age * _SEGMENT_ / missing;
44241      table AnyHealthcare * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table AnyHealthcare * _SEGMENT_ / missing;
44242      table BMI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BMI * _SEGMENT_ / missing;
44243      table CholCheck * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CholCheck * _SEGMENT_ / missing;
44244      table DiffWalk * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DiffWalk * _SEGMENT_ / missing;
44245      table Education * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Education * _SEGMENT_ / missing;
44246      table GenHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GenHlth * _SEGMENT_ / missing;
44247      table HeartDiseaseorAttack * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HeartDiseaseorAttack * _SEGMENT_ / missing;
44248      table HighBP * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HighBP * _SEGMENT_ / missing;
44249      table HighChol * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HighChol * _SEGMENT_ / missing;
44250      table HvyAlcoholConsump * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HvyAlcoholConsump * _SEGMENT_ / missing;
44251      table Income * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Income * _SEGMENT_ / missing;
44252      table MentHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MentHlth * _SEGMENT_ / missing;
44253      table NoDocbcCost * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table NoDocbcCost * _SEGMENT_ / missing;
44254      table PhysHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PhysHlth * _SEGMENT_ / missing;
44255      format AGE F1_.;
MPRINT(EM_DIAGRAM):   format AGE F1_.;
44256      format BMI F2_.;
MPRINT(EM_DIAGRAM):   format BMI F2_.;
44257      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 223088 observations read from the data set EMWS2.SMPL_DATA.
NOTE: View EMWS2.CLUS4_TRAIN.VIEW used (Total process time):
      real time           2.10 seconds
      cpu time            2.07 seconds
 
NOTE: There were 223088 observations read from the data set EMWS2.VARSEL2_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 508 observations and 26 variables.
NOTE: There were 223088 observations read from the data set EMWS2.CLUS4_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           2.17 seconds
      cpu time            2.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
44258      quit;
44259      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
44260      data EMWS2.Clus4_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS2.Clus4_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
44261      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
44262         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
44263         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
44264      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
44265      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
44266      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
44267      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
44268      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
44269      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
44270      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
44271      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
44272      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
44273      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
44274      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
44275      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
44276      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
44277      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
44278      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
44279      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
44280      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
44281      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
44282      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
44283      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
44284      end;
MPRINT(EM_DIAGRAM):   end;
44285      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
44286      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
44287      end;
MPRINT(EM_DIAGRAM):   end;
44288      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
44289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
44290      proc sort data=EMWS2.Clus4_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_PROFILE NOTHREADS;
44291      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
44292      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.07 seconds
 
 
44293      proc means data=EMWS2.Clus4_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS2.Clus4_PROFILE noprint missing NWAY;
44294      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
44295      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
44296      output out=WORK.Clus4_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus4_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
44297      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: The data set WORK.CLUS4_STATCOUNT has 45 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
44298      proc sort data=WORK.Clus4_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus4_STATCOUNT NOTHREADS;
44299      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
44300      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set WORK.CLUS4_STATCOUNT.
NOTE: The data set WORK.CLUS4_STATCOUNT has 45 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44301      data EMWS2.Clus4_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_PROFILE(drop=SUM);
44302      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Percent";
44303      merge EMWS2.Clus4_PROFILE WORK.Clus4_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus4_PROFILE WORK.Clus4_STATCOUNT;
44304      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
44305      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
44306      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: There were 45 observations read from the data set WORK.CLUS4_STATCOUNT.
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
 
 
44307      proc sort data=EMWS2.Clus4_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Clus4_PROFILE NOTHREADS;
44308      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
44309      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
 
 
44310      proc sort data=WORK.M1PNLYOI;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1PNLYOI;
44311      by Name;
MPRINT(EM_DIAGRAM):   by Name;
44312      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.M1PNLYOI.
NOTE: The data set WORK.M1PNLYOI has 16 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44313      data EMWS2.Clus4_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_PROFILE;
44314      merge EMWS2.Clus4_PROFILE(in=_a) WORK.M1PNLYOI(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus4_PROFILE(in=_a) WORK.M1PNLYOI(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
44315      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
44316      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
44317      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
44318      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
44319      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: There were 16 observations read from the data set WORK.M1PNLYOI.
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
 
44320      proc sort data=EMWS2.Clus4_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Clus4_PROFILE;
44321      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
44322      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
 
44323      data EMWS2.Clus4_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
44324      set EMWS2.Clus4_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_PROFILE;
44325      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
44326      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Ordered Values";
44327      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
44328      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
44329      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
44330      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.CLUS4_PROFILE.
NOTE: The data set EMWS2.CLUS4_PROFILE has 336 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
 
 
44331      data WORK.Clus4_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus4_temp;
44332      set EMWS2.Clus4_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_OUTMEAN;
44333      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
44334      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.CLUS4_OUTMEAN.
NOTE: The data set WORK.CLUS4_TEMP has 3 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44335      proc distance data=WORK.Clus4_temp out=EMWS2.Clus4_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus4_temp out=EMWS2.Clus4_DISTANCE method=l(2) shape=square;
44336      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
44337      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0 DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0 HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0 Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
MPRINT(EM_DIAGRAM):  );
44338      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS4_DISTANCE has 3 observations and 4 variables.
NOTE: PROCEDURE DISTANCE used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
 
 
44339      proc datasets lib=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS2 nolist;
44340      modify Clus4_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus4_DISTANCE;
44341      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
44342      run;
 
NOTE: MODIFY was successful for EMWS2.CLUS4_DISTANCE.DATA.
44343      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.50 seconds
      cpu time            0.29 seconds
 
 
44344      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
44345      * Clus4: Creating data set for Input Mean report;
MPRINT(EM_DIAGRAM):   * Clus4: Creating data set for Input Mean report;
44346      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44347      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
44348      set EMWS2.Clus4_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_OUTSTAT;
44349      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
44350      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.CLUS4_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 4 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44351      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
44352      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
44353      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 4 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
44354      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
44355      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
44356      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 4 observations and 36 variables.
NOTE: The data set WORK.STAT has 10 observations and 36 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44357      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
44358      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
44359      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 35 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
44360      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
44361      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
44362      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
44363      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
44364      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
44365      end;
MPRINT(EM_DIAGRAM):   end;
44366      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
44367      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 35 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44368      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
44369      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44370      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 35 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
44371      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
44372      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
44373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 140 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
44374      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
44375      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44376      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 140 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44377      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
44378      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
44379      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44380      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
44381      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
44382      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 140 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44383      proc transpose data=EMWS2.Clus4_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS2.Clus4_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
44384      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
44385      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
44386      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
44387      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.CLUS4_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
44388      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
44389      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44390      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44391      data EMWS2.Clus4_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_INPUTMEAN(rename=(NAME=VARIABLE));
44392      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
44393      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))" _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))"
44393    !  INPUT =
44394         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
44395         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name" _SEGMENT_CHAR_ = "Segment Id" NAME = "Variable" INPUT = "Input" LABEL = "Label" CV = "Coefficient of Variation" STDMEAN = "Normalized Mean";
44396      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
44397      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44398      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
44399      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
44400      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
44401      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: There were 140 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS2.CLUS4_INPUTMEAN has 140 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.06 seconds
 
 
44402      proc sort data=EMWS2.Clus4_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus4_INPUTMEAN;
44403      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
44404      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 140 observations read from the data set EMWS2.CLUS4_INPUTMEAN.
NOTE: The data set EMWS2.CLUS4_INPUTMEAN has 140 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.12 seconds
 
 
44405      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
44406      * Clus4: Determining the important variables;
MPRINT(EM_DIAGRAM):   * Clus4: Determining the important variables;
44407      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
44408      %let _nobs = 0;
44409      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
44410      set EMWS2.Clus4_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
44411      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
44412      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.CLUS4_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44413      proc transpose data=EMWS2.Clus4_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS2.Clus4_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
44414      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
44415      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
44416      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
44417      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.CLUS4_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
44418      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
44419      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
44420      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44421      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
44422      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
44423      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
44424      data vars;
MPRINT(EM_DIAGRAM):   data vars;
44425      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
44426      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
44427      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
44428      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might cause unexpected results.
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: There were 6 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
44429      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
44430      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
44431      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VARS.
NOTE: The data set WORK.VARS has 9 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44432      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
44433      set vars;
MPRINT(EM_DIAGRAM):   set vars;
44434      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
44435      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
44436      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44437      *------------------------------------------------------------*;
44438      * mergeVarMeansandClusLabel;
44439      *------------------------------------------------------------*;
44440      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ BMI T_GenHlth T_PhysHlth DiffWalk0 DiffWalk1 AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1);
44441      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ BMI T_GenHlth T_PhysHlth DiffWalk0 DiffWalk1 AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 8;
44442      set EMWS2.Clus4_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus4_OUTSTAT;
44443      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
44444      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.CLUS4_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 3 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44445      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
44446      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
44447      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 3 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44448      data EMWS2.Clus4_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus4_LABEL;
44449      merge EMWS2.Clus4_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus4_LABEL(keep=_SEGMENT_ LABEL) temp;
44450      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
44451      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.CLUS4_LABEL.
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS2.CLUS4_LABEL has 3 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
