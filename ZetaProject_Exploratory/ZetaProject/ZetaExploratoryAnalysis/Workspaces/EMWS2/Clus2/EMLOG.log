*------------------------------------------------------------*
User:                bkris2
Date:                March 09, 2024
Time:                15:47:31
Site:                70080107
Platform:            X64_10PRO
Maintenance Release: 9.04.01M7P080520
EM Version:          15.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:46:23" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                March 09, 2024
Time:                15:46:23
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1R967RI "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1R967RI new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:46:23" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080107";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M7P080520";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:46:23" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                bkris2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
36661      proc freq data=EMWS2.Clus2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Clus2_VariableSet noprint;
36662      table ROLE*LEVEL/out=WORK.Clus2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Clus2META;
36663      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.CLUS2_VARIABLESET.
NOTE: The data set WORK.CLUS2META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.40 seconds
      cpu time            0.11 seconds
 
 
36664      proc print data=WORK.Clus2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Clus2META label noobs;
36665      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
36666      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
36667      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
36668      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
36669      run;
 
NOTE: There were 3 observations read from the data set WORK.CLUS2META.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
36670      title10;
MPRINT(EM_DIAGRAM):   title10;
36671      data WORK.M3RDBJNG;
MPRINT(EM_DIAGRAM):    data WORK.M3RDBJNG;
36672      set WORK.M3RDBJNG;
MPRINT(EM_DIAGRAM):   set WORK.M3RDBJNG;
36673      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
36674      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M3RDBJNG.
NOTE: The data set WORK.M3RDBJNG has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3RDBJNG;
MPRINT(EM_DIAGRAM):   set WORK.M3RDBJNG;
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
36683      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36684      * Clus2: Preliminary Clustering;
MPRINT(EM_DIAGRAM):   * Clus2: Preliminary Clustering;
36685      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36686      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36687      * Clus2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: DMDBClass Macro ;
36688      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36689      %macro DMDBClass;
36690          AnyHealthcare(ASC) CholCheck(ASC) DiffWalk(ASC) Education(ASC) Fruits(ASC)
36691         GenHlth(ASC) HeartDiseaseorAttack(ASC) HighBP(ASC) HighChol(ASC)
36692         HvyAlcoholConsump(ASC) Income(ASC) MentHlth(ASC) NoDocbcCost(ASC)
36693         PhysActivity(ASC) PhysHlth(ASC) Sex(ASC) Smoker(ASC) Stroke(ASC) Veggies(ASC)
36694      %mend DMDBClass;
36695      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36696      * Clus2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: DMDBVar Macro ;
36697      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36698      %macro DMDBVar;
36699          Age BMI
36700      %mend DMDBVar;
36701      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36702      * Clus2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Clus2: Create DMDB;
36703      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36704      proc dmdb batch data=EMWS2.Varsel_TRAIN
36705      dmdbcat=WORK.Clus2_DMDB
36706      maxlevel = 513
36707      out=WORK.Clus2_DMDB
36708      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Varsel_TRAIN dmdbcat=WORK.Clus2_DMDB maxlevel = 513 out=WORK.Clus2_DMDB ;
MPRINT(EM_DIAGRAM):   class
36709      class %DMDBClass;
MPRINT(DMDBCLASS):   AnyHealthcare(ASC) CholCheck(ASC) DiffWalk(ASC) Education(ASC) Fruits(ASC) GenHlth(ASC) HeartDiseaseorAttack(ASC) HighBP(ASC) HighChol(ASC) HvyAlcoholConsump(ASC) Income(ASC) MentHlth(ASC) NoDocbcCost(ASC) PhysActivity(ASC)
PhysHlth(ASC) Sex(ASC) Smoker(ASC) Stroke(ASC) Veggies(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
36710      var %DMDBVar;
MPRINT(DMDBVAR):   Age BMI
MPRINT(EM_DIAGRAM):  ;
36711      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 100000   Memory used = 511K.
NOTE: Records processed = 200000   Memory used = 511K.
NOTE: Records processed = 247875   Memory used = 511K.
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS2.IDS_DATA.
NOTE: View EMWS2.VARSEL_TRAIN.VIEW used (Total process time):
      real time           1.23 seconds
      cpu time            1.18 seconds
 
NOTE: There were 247875 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS2.VARSEL_TRAIN.
NOTE: The data set WORK.CLUS2_DMDB has 247875 observations and 21 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           1.25 seconds
      cpu time            1.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
36712      quit;
36713      *--- end code ---*;
 
36714      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
36715      * Clus2: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Interval Inputs Macro ;
36716      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36717      %macro DMVQINTERVAL;
36718          Age BMI
36719      %mend DMVQINTERVAL;
36720      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36721      * Clus2: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Nominal Inputs Macro ;
36722      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36723      %macro DMVQNOMINAL;
36724          AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol
36725         HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
36726      %mend DMVQNOMINAL;
36727      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36728      * Clus2: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Ordinal Inputs Macro ;
36729      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36730      %macro DMVQORDINAL;
36731          Education GenHlth Income MentHlth PhysHlth
36732      %mend DMVQORDINAL;
36733      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36734      * Clus2: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus2: Run DMVQ procedure;
36735      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36736      title;
MPRINT(EM_DIAGRAM):   title;
36737      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
36738      proc dmvq data=WORK.Clus2_DMDB dmdbcat=WORK.Clus2_DMDB std=STD nominal=GLM ordinal=RANK
36739      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus2_DMDB dmdbcat=WORK.Clus2_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS2_DMDB.DATA has 21 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
36740      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   Age BMI
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 2 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
36741      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 14 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
36742      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   Education GenHlth Income MentHlth PhysHlth
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 5 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
36743      VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 50 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 50 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
36744      MAKE outvar=EMWS2.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS2.Clus2_OUTVAR;
 
NOTE: 21 input variable(s).
NOTE: Number of cases=247875
NOTE: Sum of frequencies=247875
NOTE: Sum of weights=247875
NOTE: VARDEF=DF
NOTE: Maximum number of categories=31
NOTE: The total number of variables is 21 with dimensionality 35.
NOTE: 21 variables will be used for clustering.
NOTE: Open output data set EMWS2.CLUS2_OUTVAR.DATA with 36 variables.
NOTE: The data set EMWS2.CLUS2_OUTVAR has 4 observations and 36 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
36745      INITIAL radius=0
36746      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 50 seeds were selected from data set WORK.CLUS2_DMDB.DATA using the SEPARATE algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
36747      TRAIN tech=FORGY
36748      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
WARNING: The limit of 10 iterations was reached without convergence.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
36749      SAVE outstat=WORK.Clus2_OUTSTAT outmean=EMWS2.Clus2_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=WORK.Clus2_OUTSTAT outmean=EMWS2.Clus2_OUTMEAN;
NOTE: The data set WORK.CLUS2_OUTSTAT has 316 observations and 38 variables.
NOTE: The data set EMWS2.CLUS2_OUTMEAN has 50 observations and 44 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
36750      code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\DMVQSCORECODE.sas"
36751      group=Clus2
36752      ;
MPRINT(EM_DIAGRAM):   code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\DMVQSCORECODE.sas" group=Clus2 ;
NOTE: External file \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
36753      run;
MPRINT(EM_DIAGRAM):   run;
 
36754      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 247875 observations read from the data set WORK.CLUS2_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           8.92 seconds
      cpu time            8.62 seconds
 
 
36755      proc transpose data=EMWS2.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS2.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(where=(COL1 ^in('IMPUTED','OMITTED')));
36756      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
36757      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
36758      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS2_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS2_OUTVAR has 35 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
36759      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
36760      * Clus2: DMVQ Variables;
MPRINT(EM_DIAGRAM):   * Clus2: DMVQ Variables;
36761      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
36762      %macro dmvqvars;
36763          Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0
36764         DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0
36765         HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
36766         NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0
36767         Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
36768      %mend ;
36769
36770
 
36771      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36772      * Clus2: Determining the number of clusters;
MPRINT(EM_DIAGRAM):   * Clus2: Determining the number of clusters;
36773      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36774      proc cluster data=EMWS2.Clus2_OUTMEAN method=CENTROID pseudo outtree=EMWS2.Clus2_CLUSSEED
36775      ;
MPRINT(EM_DIAGRAM):   proc cluster data=EMWS2.Clus2_OUTMEAN method=CENTROID pseudo outtree=EMWS2.Clus2_CLUSSEED ;
MPRINT(EM_DIAGRAM):   var
36776      var %dmvqvars;
MPRINT(DMVQVARS):   Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0 DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0 HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0 Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
MPRINT(EM_DIAGRAM):  ;
36777      copy _SEGMENT_;
MPRINT(EM_DIAGRAM):   copy _SEGMENT_;
36778      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS2_CLUSSEED has 99 observations and 52 variables.
NOTE: The PROCEDURE CLUSTER printed page 8.
NOTE: PROCEDURE CLUSTER used (Total process time):
      real time           0.13 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
36779      quit;
36780      proc sort data =EMWS2.Clus2_CLUSSEED out=WORK._SEED_;
MPRINT(EM_DIAGRAM):   proc sort data =EMWS2.Clus2_CLUSSEED out=WORK._SEED_;
36781      by _ncl_;
MPRINT(EM_DIAGRAM):   by _ncl_;
36782      where (_ccc_ > -99999.0);
MPRINT(EM_DIAGRAM):   where (_ccc_ > -99999.0);
36783      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set EMWS2.CLUS2_CLUSSEED.
      WHERE _ccc_>-99999;
NOTE: The data set WORK._SEED_ has 49 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
36784      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):   data WORK._SEED2_;
36785      retain oJump occc oncl;
MPRINT(EM_DIAGRAM):   retain oJump occc oncl;
36786      set WORK._SEED_;
MPRINT(EM_DIAGRAM):   set WORK._SEED_;
36787      _lccc_=lag(_ccc_);
MPRINT(EM_DIAGRAM):   _lccc_=lag(_ccc_);
36788      if _lccc_ > . then jump = _ccc_ - _lccc_;
MPRINT(EM_DIAGRAM):   if _lccc_ > . then jump = _ccc_ - _lccc_;
36789      if jump<0 and ojump>0 then do;
MPRINT(EM_DIAGRAM):   if jump<0 and ojump>0 then do;
36790      * Have a local Max;
MPRINT(EM_DIAGRAM):   * Have a local Max;
36791      numclus = oncl;
MPRINT(EM_DIAGRAM):   numclus = oncl;
36792      cccvalue = occc;
MPRINT(EM_DIAGRAM):   cccvalue = occc;
36793      output;
MPRINT(EM_DIAGRAM):   output;
36794      end;
MPRINT(EM_DIAGRAM):   end;
36795      ojump = jump;
MPRINT(EM_DIAGRAM):   ojump = jump;
36796      occc = _ccc_;
MPRINT(EM_DIAGRAM):   occc = _ccc_;
36797      oncl = _ncl_;
MPRINT(EM_DIAGRAM):   oncl = _ncl_;
36798      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._SEED_.
NOTE: The data set WORK._SEED2_ has 14 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
36799      proc print data=WORK._SEED2_ label;
MPRINT(EM_DIAGRAM):   proc print data=WORK._SEED2_ label;
36800      var numclus cccvalue;
MPRINT(EM_DIAGRAM):   var numclus cccvalue;
36801      label numclus="%sysfunc(sasmsg(sashelp.dmine, rpt_numclus_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label numclus= "Number of Clusters";
36802      label cccvalue="%sysfunc(sasmsg(sashelp.dmine, rpt_ccc_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label cccvalue= "Clustering Cubic Criterion";
36803      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_OptClus_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Candidates for Optimum Number of Clusters";
MPRINT(EM_DIAGRAM):   run;
36804      run;
 
NOTE: There were 14 observations read from the data set WORK._SEED2_.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
36805      title10;
MPRINT(EM_DIAGRAM):   title10;
36806      data WORK._SEED2_;
MPRINT(EM_DIAGRAM):    data WORK._SEED2_;
36807      length msg $200;
MPRINT(EM_DIAGRAM):   length msg $200;
36808      set WORK._SEED2_ end=eof;
MPRINT(EM_DIAGRAM):   set WORK._SEED2_ end=eof;
36809      retain select cccSelect 0 numSel;
MPRINT(EM_DIAGRAM):   retain select cccSelect 0 numSel;
36810      if _N_=1 then numSel = numClus;
MPRINT(EM_DIAGRAM):   if _N_=1 then numSel = numClus;
36811      if cccvalue>=3 then do;
MPRINT(EM_DIAGRAM):   if cccvalue>=3 then do;
36812      if 20>= numclus >= 2 and cccSelect<1 then do;
MPRINT(EM_DIAGRAM):   if 20>= numclus >= 2 and cccSelect<1 then do;
36813      cccSelect = 1;
MPRINT(EM_DIAGRAM):   cccSelect = 1;
36814      select =1;
MPRINT(EM_DIAGRAM):   select =1;
36815      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
36816      end;
MPRINT(EM_DIAGRAM):   end;
36817      end;
MPRINT(EM_DIAGRAM):   end;
36818      else if 20>= numclus >= 2 and select<1 then do;
MPRINT(EM_DIAGRAM):   else if 20>= numclus >= 2 and select<1 then do;
36819      select = 1;
MPRINT(EM_DIAGRAM):   select = 1;
36820      numSel = numClus;
MPRINT(EM_DIAGRAM):   numSel = numClus;
36821      end;
MPRINT(EM_DIAGRAM):   end;
36822      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
36823      if ^(select=1 and cccselect=1) then do;
MPRINT(EM_DIAGRAM):   if ^(select=1 and cccselect=1) then do;
36824      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
36825      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
36826      put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
MPRINT(EM_DIAGRAM):   put "WARNING: The number of clusters selected based on the CCC values may not be valid.  Please refer to the documentation on the Cubic Clustering Criterion.";
36827      put '*;';
MPRINT(EM_DIAGRAM):   put '*;';
36828      put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
36829      end;
MPRINT(EM_DIAGRAM):   end;
36830      if select<1 then do;
MPRINT(EM_DIAGRAM):   if select<1 then do;
36831      msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noCCCclusternum_note', 'NOQUOTE');
36832      put msg;
MPRINT(EM_DIAGRAM):   put msg;
36833      end;
MPRINT(EM_DIAGRAM):   end;
36834      if cccselect<1 then do;
MPRINT(EM_DIAGRAM):   if cccselect<1 then do;
36835      msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
MPRINT(EM_DIAGRAM):   msg = sasmsg('sashelp.dmine', 'rpt_noValidclusterNum_note', 'NOQUOTE');
36836      put msg;
MPRINT(EM_DIAGRAM):   put msg;
36837      end;
MPRINT(EM_DIAGRAM):   end;
36838      call symput('em_maxC', strip(put(numSel,best.)));
MPRINT(EM_DIAGRAM):   call symput('em_maxC', strip(put(numSel,best.)));
36839      end;
MPRINT(EM_DIAGRAM):   end;
36840      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._SEED2_.
NOTE: The data set WORK._SEED2_ has 14 observations and 63 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
36841      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36842      * Clus2: Training;
MPRINT(EM_DIAGRAM):   * Clus2: Training;
36843      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36844      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36845      * Clus2: Run DMVQ procedure;
MPRINT(EM_DIAGRAM):   * Clus2: Run DMVQ procedure;
36846      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36847      title;
MPRINT(EM_DIAGRAM):   title;
36848      options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
36849      proc dmvq data=WORK.Clus2_DMDB dmdbcat=WORK.Clus2_DMDB std=STD nominal=GLM ordinal=RANK
36850      ;
MPRINT(EM_DIAGRAM):   proc dmvq data=WORK.Clus2_DMDB dmdbcat=WORK.Clus2_DMDB std=STD nominal=GLM ordinal=RANK ;
NOTE: The training set WORK.CLUS2_DMDB.DATA has 21 variable(s).
NOTE: The DMVQ statement has finished with return code=0 and status=begin.
MPRINT(EM_DIAGRAM):   input
36851      input %DMVQINTERVAL / level=interval;
MPRINT(DMVQINTERVAL):   Age BMI
MPRINT(EM_DIAGRAM):   / level=interval;
NOTE: 2 input variable(s) defined for ID=I1.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
36852      input %DMVQNOMINAL / level=nominal;
MPRINT(DMVQNOMINAL):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
MPRINT(EM_DIAGRAM):   / level=nominal;
NOTE: 14 input variable(s) defined for ID=I2.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
MPRINT(EM_DIAGRAM):   input
36853      input %DMVQORDINAL / level=ordinal;
MPRINT(DMVQORDINAL):   Education GenHlth Income MentHlth PhysHlth
MPRINT(EM_DIAGRAM):   / level=ordinal;
NOTE: 5 input variable(s) defined for ID=I3.
NOTE: The INPUT statement has finished with return code=0 and status=variables.
36854      VQ maxc = 2 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
MPRINT(EM_DIAGRAM):   VQ maxc = 2 clusname=_SEGMENT_ CLUSLABEL="Segment Id" DISTLABEL="Distance";
NOTE: A maximum of 2 clusters have been requested.
NOTE: The VQ statement has finished with return code=0 and status=architecture.
36855      MAKE outvar=EMWS2.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   MAKE outvar=EMWS2.Clus2_OUTVAR;
 
NOTE: 21 input variable(s).
NOTE: Number of cases=247875
NOTE: Sum of frequencies=247875
NOTE: Sum of weights=247875
NOTE: VARDEF=DF
NOTE: Maximum number of categories=31
NOTE: The total number of variables is 21 with dimensionality 35.
NOTE: 21 variables will be used for clustering.
NOTE: Open output data set EMWS2.CLUS2_OUTVAR.DATA with 36 variables.
NOTE: The data set EMWS2.CLUS2_OUTVAR has 4 observations and 36 variables.
NOTE: The MAKE statement has finished with return code=0 and status=made.
36856      INITIAL radius=0
36857      ;
MPRINT(EM_DIAGRAM):   INITIAL radius=0 ;
NOTE: 2 seeds were selected from data set WORK.CLUS2_DMDB.DATA using the SEPARATE algorithm.
NOTE: The INITIAL statement has finished with return code=0 and status=initialized.
36858      TRAIN tech=FORGY
36859      ;
MPRINT(EM_DIAGRAM):   TRAIN tech=FORGY ;
NOTE: F-Convergence criterion is satisfied.
NOTE: The TRAIN statement has finished with return code=0 and status=trained.
36860      SAVE outstat=EMWS2.Clus2_OUTSTAT outmean=EMWS2.Clus2_OUTMEAN;
MPRINT(EM_DIAGRAM):   SAVE outstat=EMWS2.Clus2_OUTSTAT outmean=EMWS2.Clus2_OUTMEAN;
NOTE: The data set EMWS2.CLUS2_OUTSTAT has 28 observations and 38 variables.
NOTE: The data set EMWS2.CLUS2_OUTMEAN has 2 observations and 44 variables.
NOTE: The SAVE statement has finished with return code=0 and status=statistics.
36861      code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\DMVQSCORECODE.sas"
36862      group=Clus2
36863      ;
MPRINT(EM_DIAGRAM):   code file="\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\DMVQSCORECODE.sas" group=Clus2 ;
NOTE: External file \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\DMVQSCORECODE.sas opened.
NOTE: The CODE statement has finished with return code=0 and status=statistics.
36864      run;
MPRINT(EM_DIAGRAM):   run;
 
36865      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 247875 observations read from the data set WORK.CLUS2_DMDB.
NOTE: PROCEDURE DMVQ used (Total process time):
      real time           2.97 seconds
      cpu time            2.70 seconds
 
 
36866      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
WARNING: Libref _SPDSLIB is not assigned.
36867      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36868      * Clus2: Cluster Label;
MPRINT(EM_DIAGRAM):   * Clus2: Cluster Label;
36869      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36870      data EMWS2.Clus2_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_LABEL;
36871      length _SEGMENT_ 8 Label $80;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ 8 Label $80;
36872      format _SEGMENT_ 4.;
MPRINT(EM_DIAGRAM):   format _SEGMENT_ 4.;
36873      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name";
36874      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentLabel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Segment Label";
36875      _SEGMENT_= 1;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 1;
36876      Label='Cluster1';
MPRINT(EM_DIAGRAM):   Label='Cluster1';
36877      output;
MPRINT(EM_DIAGRAM):   output;
36878      _SEGMENT_= 2;
MPRINT(EM_DIAGRAM):   _SEGMENT_= 2;
36879      Label='Cluster2';
MPRINT(EM_DIAGRAM):   Label='Cluster2';
36880      output;
MPRINT(EM_DIAGRAM):   output;
36881      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS2_LABEL has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:46:41" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 09, 2024
Time:                15:46:41
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O22G1SW1 "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O22G1SW1 new;
MPRINT(EM_DIAGRAM):   run;
36983      proc transpose data=EMWS2.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS2.Clus2_OUTVAR out=WORK.Clus2_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
36984      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
36985      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
36986      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS2_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.19 seconds
      cpu time            0.04 seconds
 
 
36987      proc sort data=WORK.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_OUTVAR;
36988      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36989      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
36990      proc sort data=EMWS2.Clus2_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus2_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus2_SORTEDVARS;
36991      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36992      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.CLUS2_VARIABLESET.
NOTE: The data set WORK.CLUS2_SORTEDVARS has 21 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
36993      data WORK.Clus2_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_OUTVAR;
36994      merge WORK.Clus2_OUTVAR(in=INVAR) WORK.Clus2_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus2_OUTVAR(in=INVAR) WORK.Clus2_SORTEDVARS;
36995      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
36996      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
36997      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS2_OUTVAR.
NOTE: There were 21 observations read from the data set WORK.CLUS2_SORTEDVARS.
NOTE: The data set WORK.CLUS2_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
36998      filename emflow "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36999      *------------------------------------------------------------*;
37000      * Clus2: Scoring DATA data;
37001      *------------------------------------------------------------*;
37002      data EMWS2.Clus2_TRAIN
37003      / view=EMWS2.Clus2_TRAIN
37004      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_TRAIN / view=EMWS2.Clus2_TRAIN ;
37005      set EMWS2.Varsel_TRAIN
37006      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_TRAIN ;
37007      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize Age ;
MPRINT(EM_DIAGRAM):   drop T_Age ;
MPRINT(EM_DIAGRAM):   if missing( Age ) then T_Age = .;
MPRINT(EM_DIAGRAM):   else T_Age = (Age - 8.05176802824004) * 0.32679747529256;
MPRINT(EM_DIAGRAM):   *** Standardize BMI ;
MPRINT(EM_DIAGRAM):   drop T_BMI ;
MPRINT(EM_DIAGRAM):   if missing( BMI ) then T_BMI = .;
MPRINT(EM_DIAGRAM):   else T_BMI = (BMI - 27.8250408472012) * 0.18851519374223;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AnyHealthcare ;
MPRINT(EM_DIAGRAM):   drop AnyHealthcare0 AnyHealthcare1 ;
MPRINT(EM_DIAGRAM):   if missing( AnyHealthcare ) then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = .;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AnyHealthcare , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = -0.15940630304357;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = 0.15940630304357;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = 3.13662617667999;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = -3.13662617667999;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AnyHealthcare0 = .;
MPRINT(EM_DIAGRAM):   AnyHealthcare1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for CholCheck ;
MPRINT(EM_DIAGRAM):   drop CholCheck0 CholCheck1 ;
MPRINT(EM_DIAGRAM):   if missing( CholCheck ) then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = .;
MPRINT(EM_DIAGRAM):   CholCheck1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( CholCheck , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = -0.13978817572022;
MPRINT(EM_DIAGRAM):   CholCheck1 = 0.13978817572022;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   CholCheck0 = 3.57682601034125;
MPRINT(EM_DIAGRAM):   CholCheck1 = -3.57682601034125;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CholCheck0 = .;
MPRINT(EM_DIAGRAM):   CholCheck1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DiffWalk ;
MPRINT(EM_DIAGRAM):   drop DiffWalk0 DiffWalk1 ;
MPRINT(EM_DIAGRAM):   if missing( DiffWalk ) then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = .;
MPRINT(EM_DIAGRAM):   DiffWalk1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( DiffWalk , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = 0.3095643103152;
MPRINT(EM_DIAGRAM):   DiffWalk1 = -0.3095643103152;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = -1.6151667559647;
MPRINT(EM_DIAGRAM):   DiffWalk1 = 1.6151667559647;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   DiffWalk0 = .;
MPRINT(EM_DIAGRAM):   DiffWalk1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Fruits ;
MPRINT(EM_DIAGRAM):   drop Fruits0 Fruits1 ;
MPRINT(EM_DIAGRAM):   if missing( Fruits ) then do;
MPRINT(EM_DIAGRAM):   Fruits0 = .;
MPRINT(EM_DIAGRAM):   Fruits1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Fruits , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Fruits0 = -0.5342681311123;
MPRINT(EM_DIAGRAM):   Fruits1 = 0.5342681311123;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Fruits0 = 0.93585590031975;
MPRINT(EM_DIAGRAM):   Fruits1 = -0.93585590031975;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Fruits0 = .;
MPRINT(EM_DIAGRAM):   Fruits1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   drop HeartDiseaseorAttack0 HeartDiseaseorAttack1 ;
MPRINT(EM_DIAGRAM):   if missing( HeartDiseaseorAttack ) then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = .;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HeartDiseaseorAttack , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = 0.22710871668592;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = -0.22710871668592;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = -2.20157988715912;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = 2.20157988715912;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack0 = .;
MPRINT(EM_DIAGRAM):   HeartDiseaseorAttack1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighBP ;
MPRINT(EM_DIAGRAM):   drop HighBP0 HighBP1 ;
MPRINT(EM_DIAGRAM):   if missing( HighBP ) then do;
MPRINT(EM_DIAGRAM):   HighBP0 = .;
MPRINT(EM_DIAGRAM):   HighBP1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighBP , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HighBP0 = 0.60662950455921;
MPRINT(EM_DIAGRAM):   HighBP1 = -0.60662950455921;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HighBP0 = -0.82422298799588;
MPRINT(EM_DIAGRAM):   HighBP1 = 0.82422298799588;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HighBP0 = .;
MPRINT(EM_DIAGRAM):   HighBP1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighChol ;
MPRINT(EM_DIAGRAM):   drop HighChol0 HighChol1 ;
MPRINT(EM_DIAGRAM):   if missing( HighChol ) then do;
MPRINT(EM_DIAGRAM):   HighChol0 = .;
MPRINT(EM_DIAGRAM):   HighChol1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighChol , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HighChol0 = 0.60519767235518;
MPRINT(EM_DIAGRAM):   HighChol1 = -0.60519767235518;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HighChol0 = -0.82617301039587;
MPRINT(EM_DIAGRAM):   HighChol1 = 0.82617301039587;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HighChol0 = .;
MPRINT(EM_DIAGRAM):   HighChol1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   drop HvyAlcoholConsump0 HvyAlcoholConsump1 ;
MPRINT(EM_DIAGRAM):   if missing( HvyAlcoholConsump ) then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = .;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HvyAlcoholConsump , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = 0.17357304228491;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = -0.17357304228491;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
The SAS System
 
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = -2.88062003334322;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = 2.88062003334322;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump0 = .;
MPRINT(EM_DIAGRAM):   HvyAlcoholConsump1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for NoDocbcCost ;
MPRINT(EM_DIAGRAM):   drop NoDocbcCost0 NoDocbcCost1 ;
MPRINT(EM_DIAGRAM):   if missing( NoDocbcCost ) then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = .;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( NoDocbcCost , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = 0.21203136396168;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = -0.21203136396168;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = -2.35813218154186;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = 2.35813218154186;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   NoDocbcCost0 = .;
MPRINT(EM_DIAGRAM):   NoDocbcCost1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysActivity ;
MPRINT(EM_DIAGRAM):   drop PhysActivity0 PhysActivity1 ;
MPRINT(EM_DIAGRAM):   if missing( PhysActivity ) then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = .;
MPRINT(EM_DIAGRAM):   PhysActivity1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysActivity , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = -0.39540760740426;
MPRINT(EM_DIAGRAM):   PhysActivity1 = 0.39540760740426;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = 1.26451280524572;
MPRINT(EM_DIAGRAM):   PhysActivity1 = -1.26451280524572;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   PhysActivity0 = .;
MPRINT(EM_DIAGRAM):   PhysActivity1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Sex ;
MPRINT(EM_DIAGRAM):   drop Sex0 Sex1 ;
MPRINT(EM_DIAGRAM):   if missing( Sex ) then do;
MPRINT(EM_DIAGRAM):   Sex0 = .;
MPRINT(EM_DIAGRAM):   Sex1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Sex , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Sex0 = 0.63067022233455;
MPRINT(EM_DIAGRAM):   Sex1 = -0.63067022233455;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Sex0 = -0.79280417109819;
MPRINT(EM_DIAGRAM):   Sex1 = 0.79280417109819;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Sex0 = .;
MPRINT(EM_DIAGRAM):   Sex1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Smoker ;
MPRINT(EM_DIAGRAM):   drop Smoker0 Smoker1 ;
MPRINT(EM_DIAGRAM):   if missing( Smoker ) then do;
MPRINT(EM_DIAGRAM):   Smoker0 = .;
MPRINT(EM_DIAGRAM):   Smoker1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Smoker , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Smoker0 = 0.63114466603367;
MPRINT(EM_DIAGRAM):   Smoker1 = -0.63114466603367;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Smoker0 = -0.7922082048105;
MPRINT(EM_DIAGRAM):   Smoker1 = 0.7922082048105;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Smoker0 = .;
MPRINT(EM_DIAGRAM):   Smoker1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Stroke ;
MPRINT(EM_DIAGRAM):   drop Stroke0 Stroke1 ;
MPRINT(EM_DIAGRAM):   if missing( Stroke ) then do;
MPRINT(EM_DIAGRAM):   Stroke0 = .;
MPRINT(EM_DIAGRAM):   Stroke1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Stroke , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Stroke0 = 0.14489743273379;
MPRINT(EM_DIAGRAM):   Stroke1 = -0.14489743273378;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Stroke0 = -3.45070284145663;
MPRINT(EM_DIAGRAM):   Stroke1 = 3.45070284145663;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Stroke0 = .;
MPRINT(EM_DIAGRAM):   Stroke1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Veggies ;
MPRINT(EM_DIAGRAM):   drop Veggies0 Veggies1 ;
MPRINT(EM_DIAGRAM):   if missing( Veggies ) then do;
MPRINT(EM_DIAGRAM):   Veggies0 = .;
MPRINT(EM_DIAGRAM):   Veggies1 = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Veggies , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Veggies0 = -0.33925255015504;
MPRINT(EM_DIAGRAM):   Veggies1 = 0.33925255015504;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Veggies0 = 1.47382232683513;
MPRINT(EM_DIAGRAM):   Veggies1 = -1.47382232683513;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Veggies0 = .;
MPRINT(EM_DIAGRAM):   Veggies1 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop T_Education ;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   T_Education = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Education , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.81032358932347;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.71362805228958;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_Education = -1.19282563753062;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_Education = -0.23450021957985;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_Education = 1.05502095498466;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_Education = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GenHlth ;
MPRINT(EM_DIAGRAM):   drop T_GenHlth ;
MPRINT(EM_DIAGRAM):   if missing( GenHlth ) then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( GenHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = -1.4767070194314;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = -0.50697937184535;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 0.67028858758655;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 1.42327294300141;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = 1.72271200300089;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_GenHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Income ;
MPRINT(EM_DIAGRAM):   drop T_Income ;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   T_Income = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Income , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.71654961353095;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.56939520629206;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.37834052561171;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_Income = -1.12755068098766;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_Income = -0.8060973677071;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_Income = -0.36823854405569;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_Income = 0.19328494694827;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_Income = 1.14079558485619;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   T_Income = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for MentHlth ;
MPRINT(EM_DIAGRAM):   drop T_MentHlth ;
MPRINT(EM_DIAGRAM):   if missing( MentHlth ) then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( MentHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = -0.64642594988229;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.08940309912206;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 2.0307349089589;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.46046162551661;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 0.90779440570373;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.26081745228278;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.66859965091116;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.79355117273767;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.35391488142563;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.87030502183819;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.57788118743921;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.73878343236461;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.91314358056186;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.54375977729304;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.60909115584375;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72520529256066;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92738302129238;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.89955685243419;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.93136800349923;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84186049367204;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.61517168903869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.83945576302997;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.92402498671721;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90191864145764;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84062377505612;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.9230287411655;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72885533014237;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.9027345322112;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.72158101995012;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.90333571487172;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   T_MentHlth = 1.84278803263398;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_MentHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysHlth ;
MPRINT(EM_DIAGRAM):   drop T_PhysHlth ;
MPRINT(EM_DIAGRAM):   if missing( PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysHlth , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = -0.73130504087574;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.86306848927175;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 0.84738417559862;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 0.63962005317307;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.03135467225463;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.22952668497363;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.44021226213214;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.57306541611342;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.13397888490182;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.34557335908836;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.64186567507459;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.51486354571126;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.29966594402074;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.69046732061816;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.38749623450632;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67194042851999;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.48915474406123;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.70734683685303;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.71297875236601;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.39522997439662;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61545085519742;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61191264890973;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.7025588971518;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61351133386082;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67964982295418;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67765349555333;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.701252357674;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.49412933225929;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.48425319223149;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.67863542894968;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = 1.61680608558743;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   T_PhysHlth = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUS2vlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUS2vads [2] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 2;
MPRINT(EM_DIAGRAM):   CLUS2vads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_Age ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_Age - 0.42184681145588 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_Age - -0.19528322070761 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_BMI ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_BMI - 0.35557592040749 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_BMI - -0.1646048021643 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( AnyHealthcare0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( AnyHealthcare0 - 0.05876880098551 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( AnyHealthcare0 - -0.02720551731536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( AnyHealthcare1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( AnyHealthcare1 - -0.05876880098551 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( AnyHealthcare1 - 0.02720551731536 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( CholCheck0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( CholCheck0 - -0.06160551438692 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( CholCheck0 - 0.02851870142449 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( CholCheck1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( CholCheck1 - 0.06160551438692 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( CholCheck1 - -0.02851870142449 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( DiffWalk0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( DiffWalk0 - -0.60277936734095 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( DiffWalk0 - 0.2790413321456 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( DiffWalk1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( DiffWalk1 - 0.60277936734095 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( DiffWalk1 - -0.2790413321456 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Fruits0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Fruits0 - 0.13930833715652 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Fruits0 - -0.06448924114748 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Fruits1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Fruits1 - -0.13930833715652 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Fruits1 - 0.06448924114748 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HeartDiseaseorAttack0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HeartDiseaseorAttack0 - -0.36364500761233 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HeartDiseaseorAttack0 - 0.16834018025464 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HeartDiseaseorAttack1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HeartDiseaseorAttack1 - 0.36364500761233 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HeartDiseaseorAttack1 - -0.16834018025464 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( HighBP0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HighBP0 - -0.41693250517112 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HighBP0 - 0.19300826796957 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighBP1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HighBP1 - 0.41693250517112 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HighBP1 - -0.19300826796957 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighChol0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HighChol0 - -0.29878653804832 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HighChol0 - 0.13831560620938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HighChol1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HighChol1 - 0.29878653804832 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HighChol1 - -0.13831560620938 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HvyAlcoholConsump0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HvyAlcoholConsump0 - 0.04994435920007 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HvyAlcoholConsump0 - -0.02312046708884 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( HvyAlcoholConsump1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( HvyAlcoholConsump1 - -0.04994435920007 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( HvyAlcoholConsump1 - 0.02312046708884 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( NoDocbcCost0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( NoDocbcCost0 - -0.2101089136713 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( NoDocbcCost0 - 0.09726456203285 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( NoDocbcCost1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( NoDocbcCost1 - 0.2101089136713 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( NoDocbcCost1 - -0.09726456203285 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( PhysActivity0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( PhysActivity0 - 0.38493719538107 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( PhysActivity0 - -0.17819685545195 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( PhysActivity1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( PhysActivity1 - -0.38493719538107 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( PhysActivity1 - 0.17819685545195 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Sex0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Sex0 - 0.04590548241346 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Sex0 - -0.02125077210582 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Sex1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Sex1 - -0.04590548241346 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Sex1 - 0.02125077210582 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Smoker0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Smoker0 - -0.22841623999465 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Smoker0 - 0.10573947176221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Smoker1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Smoker1 - 0.22841623999465 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Smoker1 - -0.10573947176221 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Stroke0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Stroke0 - -0.25492440634086 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Stroke0 - 0.11801075118998 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Stroke1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Stroke1 - 0.25492440634086 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Stroke1 - -0.11801075118998 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.49999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Veggies0 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Veggies0 - 0.20122345955718 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Veggies0 - -0.09315126770411 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( Veggies1 ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( Veggies1 - -0.20122345955718 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( Veggies1 - 0.09315126770411 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.5;
MPRINT(EM_DIAGRAM):   if not missing( T_Education ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_Education - -0.55448800541977 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_Education - 0.25668607798119 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_GenHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_GenHlth - 0.89094562531727 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_GenHlth - -0.4124405506023 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_Income ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_Income - -0.70970556764715 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_Income - 0.3285400890559 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_MentHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_MentHlth - 0.35787613830386 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_MentHlth - -0.16566962936395 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   CLUS2vads [1] + ( T_PhysHlth - 0.72892570699831 )**2;
MPRINT(EM_DIAGRAM):   CLUS2vads [2] + ( T_PhysHlth - -0.33743756229428 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   _vqnvar = 21 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 8.3559825725387E-11 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUS2vads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 2;
MPRINT(EM_DIAGRAM):   if CLUS2vads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUS2vads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (21 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUS2vlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
37975      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.CLUS2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.20 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.34 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
37976      quit;
37977      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
37978      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
37979      * Clus2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus2: Computing metadata for TRAIN data;
37980      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Clus2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Clus2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Clus2_TRAIN out=WORK.M1RFDHA7 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RFDHA7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RFDHA7(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RFDHA7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1RFDHA7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0OLYA25 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FXIS1Z(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OLYA25;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 09, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:46:44" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                March 09, 2024
Time:                15:46:44
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0KPXXBI "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0KPXXBI new;
MPRINT(EM_DIAGRAM):   run;
38390      data WORK.M16CODXB;
MPRINT(EM_DIAGRAM):    data WORK.M16CODXB;
38391      set WORK.M16CODXB;
MPRINT(EM_DIAGRAM):   set WORK.M16CODXB;
38392      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
38393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M16CODXB.
NOTE: The data set WORK.M16CODXB has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38394      data WORK.M16CODXB;
MPRINT(EM_DIAGRAM):    data WORK.M16CODXB;
38395      set WORK.M16CODXB end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M16CODXB end=_eof_ nobs=_nobs_;
38396      output;
MPRINT(EM_DIAGRAM):   output;
38397      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
38398      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
38399      ROLE = 'TARGET';
MPRINT(EM_DIAGRAM):   ROLE = 'TARGET';
38400      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
38401      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
38402      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
38403      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
38404      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
38405      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
38406      output;
MPRINT(EM_DIAGRAM):   output;
38407      end;
MPRINT(EM_DIAGRAM):   end;
38408      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M16CODXB.
NOTE: The data set WORK.M16CODXB has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38409      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
38410      * Clus2: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Clus2: Create decision matrix;
38411      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38412      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38413      * Clus2: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Tree Variables Macro ;
38414      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38415      %macro EM_TREEVARS;
38416          Age AnyHealthcare BMI CholCheck DiffWalk Education Fruits GenHlth
38417         HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump Income MentHlth
38418         NoDocbcCost PhysActivity PhysHlth Sex Smoker Stroke Veggies
38419      %mend EM_TREEVARS;
38420      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38421      * Clus2: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Tree Targets Macro ;
38422      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38423      %macro EM_TREETARGETS;
38424          _SEGMENT_
38425      %mend EM_TREETARGETS;
38426      data EMWS2.EM_Clus2 / view=EMWS2.EM_Clus2;
MPRINT(EM_DIAGRAM):   data EMWS2.EM_Clus2 / view=EMWS2.EM_Clus2;
38427      set
38427    ! EMWS2.Clus2_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_TRAIN(keep
MPRINT(EM_DIAGRAM):  =Age AnyHealthcare BMI CholCheck DiffWalk Education Fruits GenHlth HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump Income MentHlth NoDocbcCost PhysActivity PhysHlth Sex Smoker Stroke Veggies _SEGMENT_);
38428      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.EM_CLUS2.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.25 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.28 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Clus2: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38429      *------------------------------------------------------------* ;
38430      * Clus2: Interval Inputs Macro ;
38431      *------------------------------------------------------------* ;
38432      %macro INTINPUTS;
38433          Age BMI
38434      %mend INTINPUTS;
38435      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38436      * Clus2: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Binary and Nominal Inputs Macro ;
38437      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38438      %macro NOMINPUTS;
38439          AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol
38440         HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
38441      %mend NOMINPUTS;
38442      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38443      * Clus2: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: Ordinal Inputs Macro ;
38444      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38445      %macro ORDINPUTS;
38446          Education GenHlth Income MentHlth PhysHlth
38447      %mend ORDINPUTS;
38448      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38449      * Clus2: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Clus2: Run ARBOR procedure;
38450      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
38451      proc arbor data=EMWS2.EM_Clus2
38452      MAXSURRS=5
38453      ;
MPRINT(EM_DIAGRAM):    proc arbor data=EMWS2.EM_Clus2 MAXSURRS=5 ;
38454      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
38455      input %INTINPUTS
MPRINT(INTINPUTS):   Age BMI
38456      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
38457      input %NOMINPUTS
MPRINT(NOMINPUTS):   AnyHealthcare CholCheck DiffWalk Fruits HeartDiseaseorAttack HighBP HighChol HvyAlcoholConsump NoDocbcCost PhysActivity Sex Smoker Stroke Veggies
38458      / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
MPRINT(EM_DIAGRAM):   input
38459      input %ORDINPUTS
MPRINT(ORDINPUTS):   Education GenHlth Income MentHlth PhysHlth
38460      / level=ordinal;
MPRINT(EM_DIAGRAM):   / level=ordinal;
38461      target _SEGMENT_ / level=NOMINAL
38462      Criterion=PROBCHISQ
38463      ;
MPRINT(EM_DIAGRAM):   target _SEGMENT_ / level=NOMINAL Criterion=PROBCHISQ ;
38464      ;
MPRINT(EM_DIAGRAM):   ;
38465      Performance DISK
38466      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
38467      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: 1368936 kilobytes of physical memory.
NOTE: Will use 247875 out of 247875 training cases.
NOTE: Using memory pool with 305067008 bytes.
NOTE: Passed training data 18 times.
NOTE: Training used 51296040 bytes of work memory.
NOTE: The subtree sequence contains 59 subtrees. The largest has 117 nodes and 59 leaves.
NOTE: Using subtree with 65 nodes and 33 leaves.
NOTE: Created macro variable NLEAVES equal to 33.
38468      save
38469      MODEL=EMWS2.Clus2_PLOTDS
38470      SEQUENCE=EMWS2.Clus2_OUTSEQ
38471      IMPORTANCE=EMWS2.Clus2_OUTIMPORT
38472      NODESTAT=EMWS2.Clus2_OUTNODES
38473      SUMMARY=WORK.OUTSUMMARY_TREE_0JY2IB5
38474      STATSBYNODE=WORK.OUTSTATS_TREE_0JY2IB5
38475      Pathlistnonmissing = WORK.OUTPATH_TREE_0JY2IB5
38476      Rules = WORK.OUTRULES_TREE_0JY2IB5
38477      ;
MPRINT(EM_DIAGRAM):   save MODEL=EMWS2.Clus2_PLOTDS SEQUENCE=EMWS2.Clus2_OUTSEQ IMPORTANCE=EMWS2.Clus2_OUTIMPORT NODESTAT=EMWS2.Clus2_OUTNODES SUMMARY=WORK.OUTSUMMARY_TREE_0JY2IB5 STATSBYNODE=WORK.OUTSTATS_TREE_0JY2IB5 Pathlistnonmissing =
WORK.OUTPATH_TREE_0JY2IB5 Rules = WORK.OUTRULES_TREE_0JY2IB5 ;
NOTE: The data set EMWS2.CLUS2_OUTIMPORT has 21 observations and 5 variables.
NOTE: The data set EMWS2.CLUS2_PLOTDS has 4441 observations and 4 variables.
NOTE: The data set EMWS2.CLUS2_OUTNODES has 65 observations and 20 variables.
NOTE: The data set WORK.OUTPATH_TREE_0JY2IB5 has 342 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_0JY2IB5 has 1229 observations and 6 variables.
NOTE: The data set EMWS2.CLUS2_OUTSEQ has 59 observations and 11 variables.
NOTE: The data set WORK.OUTSTATS_TREE_0JY2IB5 has 260 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_0JY2IB5 has 12 observations and 5 variables.
38478      run;
MPRINT(EM_DIAGRAM):   run;
 
38479      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS2.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS2.VARSEL_TRAIN.
NOTE: View EMWS2.EM_CLUS2.VIEW used (Total process time):
      real time           28.15 seconds
      cpu time            27.34 seconds
 
NOTE: There were 247875 observations read from the data set EMWS2.CLUS2_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS2.EM_CLUS2.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           28.20 seconds
      cpu time            27.39 seconds
 
 
38480      data EMWS2.Clus2_OUTIMPORT;
MPRINT(EM_DIAGRAM):    data EMWS2.Clus2_OUTIMPORT;
38481      set EMWS2.Clus2_OUTIMPORT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_OUTIMPORT;
38482      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
38483         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
38484      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" ;
38485      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.CLUS2_OUTIMPORT.
NOTE: The data set EMWS2.CLUS2_OUTIMPORT has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
 
 
38486      filename x "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\ENGLISHRULES.txt" encoding='utf-8' NOBOM;
38487      data temp;
MPRINT(EM_DIAGRAM):    data temp;
38488      length varname $20;
MPRINT(EM_DIAGRAM):   length varname $20;
38489      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
38490      set WORK.OUTPATH_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0JY2IB5;
38491      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
38492      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
38493      output;
MPRINT(EM_DIAGRAM):   output;
38494      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.OUTPATH_TREE_0JY2IB5.
NOTE: The data set WORK.TEMP has 342 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.01 seconds
 
 
38495      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
38496      by node;
MPRINT(EM_DIAGRAM):   by node;
38497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 342 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38498      proc sort data=EMWS2.Clus2_OUTNODES out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_OUTNODES out=outnodes;
38499      by node;
MPRINT(EM_DIAGRAM):   by node;
38500      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_OUTNODES.
NOTE: The data set WORK.OUTNODES has 65 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38501      data temp;
MPRINT(EM_DIAGRAM):   data temp;
38502      merge temp(in=_a) outnodes(keep= node
38503      NPRIORS
38504      P__SEGMENT_1
38505      P__SEGMENT_2
38506      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P__SEGMENT_1 P__SEGMENT_2 );
38507      by node;
MPRINT(EM_DIAGRAM):   by node;
38508      if _a;
MPRINT(EM_DIAGRAM):   if _a;
38509      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: There were 65 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 342 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38510      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
38511      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
38512      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 342 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
38513      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
38514      file x;
MPRINT(EM_DIAGRAM):   file x;
38515      set temp;
MPRINT(EM_DIAGRAM):   set temp;
38516      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
38517      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
38518      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
38519      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
38520      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
38521      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
38522      end;
MPRINT(EM_DIAGRAM):   end;
38523      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
38524      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
38525      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
38526      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
38527      end;
MPRINT(EM_DIAGRAM):   end;
38528      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
38529      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
38530      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
38531      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
38532      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
38533      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
38534      end;
MPRINT(EM_DIAGRAM):   end;
38535      else do;
MPRINT(EM_DIAGRAM):   else do;
38536      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
38537      end;
MPRINT(EM_DIAGRAM):   end;
38538      end;
MPRINT(EM_DIAGRAM):   end;
38539      end;
MPRINT(EM_DIAGRAM):   end;
38540      else do;
MPRINT(EM_DIAGRAM):   else do;
38541      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
38542      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
38543      end;
MPRINT(EM_DIAGRAM):   end;
38544      else do;
MPRINT(EM_DIAGRAM):   else do;
38545      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
38546      end;
MPRINT(EM_DIAGRAM):   end;
38547      end;
MPRINT(EM_DIAGRAM):   end;
38548      end;
MPRINT(EM_DIAGRAM):   end;
38549      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
38550      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
38551      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
38552      end;
MPRINT(EM_DIAGRAM):   end;
38553      else do;
MPRINT(EM_DIAGRAM):   else do;
38554      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
38555      end;
MPRINT(EM_DIAGRAM):   end;
38556      end;
MPRINT(EM_DIAGRAM):   end;
38557      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
38558      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
38559      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
38560      end;
MPRINT(EM_DIAGRAM):   end;
38561      else do;
MPRINT(EM_DIAGRAM):   else do;
38562      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
38563      end;
MPRINT(EM_DIAGRAM):   end;
38564      end;
MPRINT(EM_DIAGRAM):   end;
38565      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
38566      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
38567      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
38568      end;
MPRINT(EM_DIAGRAM):   end;
38569      else do;
MPRINT(EM_DIAGRAM):   else do;
38570      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
38571      end;
MPRINT(EM_DIAGRAM):   end;
38572      end;
MPRINT(EM_DIAGRAM):   end;
38573      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
38574      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
38575      end;
MPRINT(EM_DIAGRAM):   end;
38576      else do;
MPRINT(EM_DIAGRAM):   else do;
38577      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
38578      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
38579      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
38580      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
38581      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
38582      end;
MPRINT(EM_DIAGRAM):   end;
38583      end;
MPRINT(EM_DIAGRAM):   end;
38584      else do;
MPRINT(EM_DIAGRAM):   else do;
38585      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
38586      else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
38587      end;
MPRINT(EM_DIAGRAM):   end;
38588      end;
MPRINT(EM_DIAGRAM):   end;
38589      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
38590      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
38591      end;
MPRINT(EM_DIAGRAM):   end;
38592      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
38593      end;
MPRINT(EM_DIAGRAM):   end;
38594      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
38595      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
38596      end;
MPRINT(EM_DIAGRAM):   end;
38597      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
38598      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
38599      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
38600      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
38601      end;
MPRINT(EM_DIAGRAM):   end;
38602      end;
MPRINT(EM_DIAGRAM):   end;
38603      put string;
MPRINT(EM_DIAGRAM):   put string;
38604      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
38605      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
38606      end;
MPRINT(EM_DIAGRAM):   end;
38607      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
38608      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
38609      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
38610      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
38611      put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=1  = " P__SEGMENT_1;
38612      put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
MPRINT(EM_DIAGRAM):   put " Predicted: _SEGMENT_=2  = " P__SEGMENT_2;
38613      put " ";
MPRINT(EM_DIAGRAM):   put " ";
38614      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
38615      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
38616      end;
MPRINT(EM_DIAGRAM):   end;
38617      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      38533:67    38536:66    38580:108   38581:72
NOTE: The file X is:
      Filename=\\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2\Clus2\ENGLISHRULES.txt,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=09Mar2024:15:47:13,
      Create Time=09Mar2024:15:47:13
 
NOTE: 471 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 342 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
 
 
38618      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
38619      /* belowtext */
38620      data templabel;
MPRINT(EM_DIAGRAM):    data templabel;
38621      set WORK.OUTRULES_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0JY2IB5;
38622      if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT ="LABEL"));
38623      rename character_value = belowtext;
MPRINT(EM_DIAGRAM):   rename character_value = belowtext;
38624      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
38625      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_0JY2IB5.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
38626      data tempvar;
MPRINT(EM_DIAGRAM):   data tempvar;
38627      set WORK.OUTRULES_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0JY2IB5;
38628      if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT="VARIABLE"));
38629      keep NODE character_value;
MPRINT(EM_DIAGRAM):   keep NODE character_value;
38630      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_0JY2IB5.
NOTE: The data set WORK.TEMPVAR has 32 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38631      proc sort data=templabel;
MPRINT(EM_DIAGRAM):   proc sort data=templabel;
38632      by node;
MPRINT(EM_DIAGRAM):   by node;
38633      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK.TEMPLABEL has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38634      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
38635      by node;
MPRINT(EM_DIAGRAM):   by node;
38636      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 32 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
38637      data tempbelow;
MPRINT(EM_DIAGRAM):   data tempbelow;
38638      merge templabel tempvar;
MPRINT(EM_DIAGRAM):   merge templabel tempvar;
38639      by node;
MPRINT(EM_DIAGRAM):   by node;
38640      if missing(belowtext) then belowtext= character_value;
MPRINT(EM_DIAGRAM):   if missing(belowtext) then belowtext= character_value;
38641      keep node belowtext;
MPRINT(EM_DIAGRAM):   keep node belowtext;
38642      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.TEMPLABEL.
NOTE: There were 32 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPBELOW has 32 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38643      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
38644      by node;
MPRINT(EM_DIAGRAM):   by node;
38645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.TEMPBELOW has 32 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38646      /* abovetext */
38647      data tempoutrules;
MPRINT(EM_DIAGRAM):   data tempoutrules;
38648      set WORK.OUTRULES_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0JY2IB5;
38649      if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
MPRINT(EM_DIAGRAM):   if ((ROLE='PRIMARY') AND(STAT in ("INTERVAL", "ORDINAL", "NOMINAL")));
38650      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_0JY2IB5.
NOTE: The data set WORK.TEMPOUTRULES has 49 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38651      proc sort data=tempoutrules;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutrules;
38652      by node numeric_value;
MPRINT(EM_DIAGRAM):   by node numeric_value;
38653      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPOUTRULES has 49 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
38654      data tempabove;
MPRINT(EM_DIAGRAM):   data tempabove;
38655      set tempoutrules(rename=(node=parent));
MPRINT(EM_DIAGRAM):   set tempoutrules(rename=(node=parent));
38656      by parent numeric_value;
MPRINT(EM_DIAGRAM):   by parent numeric_value;
38657      retain abovetext tempstring flag branch origval origchar;
MPRINT(EM_DIAGRAM):   retain abovetext tempstring flag branch origval origchar;
38658      *length abovetext tempstring origchar $45;
MPRINT(EM_DIAGRAM):   *length abovetext tempstring origchar $45;
38659      length abovetext $256;
MPRINT(EM_DIAGRAM):   length abovetext $256;
38660      length tempstring origchar $64;
MPRINT(EM_DIAGRAM):   length tempstring origchar $64;
38661      if STAT in ("INTERVAL", "ORDINAL") then do;
MPRINT(EM_DIAGRAM):   if STAT in ("INTERVAL", "ORDINAL") then do;
38662      if first.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent then do;
38663      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38664      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
38665      abovetext = "< "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(NUMERIC_VALUE);
38666      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
38667      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
38668      output;
MPRINT(EM_DIAGRAM):   output;
38669      end;
MPRINT(EM_DIAGRAM):   end;
38670      else do;
MPRINT(EM_DIAGRAM):   else do;
38671      abovetext = "< "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = "< "||strip(CHARACTER_VALUE);
38672      branch = 1;
MPRINT(EM_DIAGRAM):   branch = 1;
38673      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
38674      output;
MPRINT(EM_DIAGRAM):   output;
38675      end;
MPRINT(EM_DIAGRAM):   end;
38676      if first.parent AND last.parent then do;
MPRINT(EM_DIAGRAM):   if first.parent AND last.parent then do;
38677      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38678      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
38679      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38680      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
38681      output;
MPRINT(EM_DIAGRAM):   output;
38682      end;
MPRINT(EM_DIAGRAM):   end;
38683      else do;
MPRINT(EM_DIAGRAM):   else do;
38684      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38685      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
38686      output;
MPRINT(EM_DIAGRAM):   output;
38687      end;
MPRINT(EM_DIAGRAM):   end;
38688      end;
MPRINT(EM_DIAGRAM):   end;
38689      end;
MPRINT(EM_DIAGRAM):   end;
38690      else if last.parent then do;
MPRINT(EM_DIAGRAM):   else if last.parent then do;
38691      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
38692      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38693      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
38694      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
38695      end;
MPRINT(EM_DIAGRAM):   end;
38696      else do;
MPRINT(EM_DIAGRAM):   else do;
38697      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
38698      end;
MPRINT(EM_DIAGRAM):   end;
38699      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38700      output;
MPRINT(EM_DIAGRAM):   output;
38701      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38702      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
38703      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
38704      end;
MPRINT(EM_DIAGRAM):   end;
38705      else do;
MPRINT(EM_DIAGRAM):   else do;
38706      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
38707      end;
MPRINT(EM_DIAGRAM):   end;
38708      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38709      output;
MPRINT(EM_DIAGRAM):   output;
38710      end;
MPRINT(EM_DIAGRAM):   end;
38711      else do;
MPRINT(EM_DIAGRAM):   else do;
38712      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38713      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
38714      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
38715      end;
MPRINT(EM_DIAGRAM):   end;
38716      else do;
MPRINT(EM_DIAGRAM):   else do;
38717      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
38718      end;
MPRINT(EM_DIAGRAM):   end;
38719      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38720      output;
MPRINT(EM_DIAGRAM):   output;
38721      end;
MPRINT(EM_DIAGRAM):   end;
38722      end;
MPRINT(EM_DIAGRAM):   end;
38723      else do;
MPRINT(EM_DIAGRAM):   else do;
38724      if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
MPRINT(EM_DIAGRAM):   if ( missing(character_value) AND (origval ne numeric_value)) or ( ^missing(character_value) AND (origchar ne character_value)) then do;
38725      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38726      numeric_value = round(numeric_value,0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value,0.0001);
38727      abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
MPRINT(EM_DIAGRAM):   abovetext= "[ "||strip(origval)||", "|| strip(numeric_value)||" )";
38728      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
38729      end;
MPRINT(EM_DIAGRAM):   end;
38730      else do;
MPRINT(EM_DIAGRAM):   else do;
38731      abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
MPRINT(EM_DIAGRAM):   abovetext= ">= "||strip(origchar)||" AND < "|| strip(character_value);
38732      origchar = character_value;
MPRINT(EM_DIAGRAM):   origchar = character_value;
38733      end;
MPRINT(EM_DIAGRAM):   end;
38734      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38735      output;
MPRINT(EM_DIAGRAM):   output;
38736      end;
MPRINT(EM_DIAGRAM):   end;
38737      else do;
MPRINT(EM_DIAGRAM):   else do;
38738      if missing(character_value) then do;
MPRINT(EM_DIAGRAM):   if missing(character_value) then do;
38739      numeric_value = round(numeric_value, 0.0001);
MPRINT(EM_DIAGRAM):   numeric_value = round(numeric_value, 0.0001);
38740      abovetext = ">= "||strip(NUMERIC_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(NUMERIC_VALUE);
38741      origval = numeric_value;
MPRINT(EM_DIAGRAM):   origval = numeric_value;
38742      end;
MPRINT(EM_DIAGRAM):   end;
38743      else do;
MPRINT(EM_DIAGRAM):   else do;
38744      abovetext = ">= "||strip(CHARACTER_VALUE);
MPRINT(EM_DIAGRAM):   abovetext = ">= "||strip(CHARACTER_VALUE);
38745      origval = character_value;
MPRINT(EM_DIAGRAM):   origval = character_value;
38746      end;
MPRINT(EM_DIAGRAM):   end;
38747      branch = branch + 1;
MPRINT(EM_DIAGRAM):   branch = branch + 1;
38748      output;
MPRINT(EM_DIAGRAM):   output;
38749      end;
MPRINT(EM_DIAGRAM):   end;
38750      end;
MPRINT(EM_DIAGRAM):   end;
38751      end;
MPRINT(EM_DIAGRAM):   end;
38752      else do;
MPRINT(EM_DIAGRAM):   else do;
38753      if first.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value then do;
38754      flag = 0;
MPRINT(EM_DIAGRAM):   flag = 0;
38755      abovetext = CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   abovetext = CHARACTER_VALUE;
38756      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
38757      if first.numeric_value AND last.numeric_value then do;
MPRINT(EM_DIAGRAM):   if first.numeric_value AND last.numeric_value then do;
38758      output;
MPRINT(EM_DIAGRAM):   output;
38759      end;
MPRINT(EM_DIAGRAM):   end;
38760      end;
MPRINT(EM_DIAGRAM):   end;
38761      else if last.numeric_value then do;
MPRINT(EM_DIAGRAM):   else if last.numeric_value then do;
38762      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
38763      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
38764      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
38765      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
38766      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
38767      end;
MPRINT(EM_DIAGRAM):   end;
38768      else do;
MPRINT(EM_DIAGRAM):   else do;
38769      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
38770      flag = 1;
MPRINT(EM_DIAGRAM):   flag = 1;
38771      end;
MPRINT(EM_DIAGRAM):   end;
38772      end;
MPRINT(EM_DIAGRAM):   end;
38773      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
38774      output;
MPRINT(EM_DIAGRAM):   output;
38775      end;
MPRINT(EM_DIAGRAM):   end;
38776      else do;
MPRINT(EM_DIAGRAM):   else do;
38777      if flag=0 then do;
MPRINT(EM_DIAGRAM):   if flag=0 then do;
38778      tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   tempstring = strip(abovetext)||", "||CHARACTER_VALUE;
38779      length = length(strip(tempstring));
MPRINT(EM_DIAGRAM):   length = length(strip(tempstring));
38780      if length < 32 then do;
MPRINT(EM_DIAGRAM):   if length < 32 then do;
38781      abovetext = strip(tempstring);
MPRINT(EM_DIAGRAM):   abovetext = strip(tempstring);
38782      end;
MPRINT(EM_DIAGRAM):   end;
38783      else do;
MPRINT(EM_DIAGRAM):   else do;
38784      abovetext = strip(abovetext)||", ...";
MPRINT(EM_DIAGRAM):   abovetext = strip(abovetext)||", ...";
38785      flag=1;
MPRINT(EM_DIAGRAM):   flag=1;
38786      end;
MPRINT(EM_DIAGRAM):   end;
38787      end;
MPRINT(EM_DIAGRAM):   end;
38788      branch = numeric_value;
MPRINT(EM_DIAGRAM):   branch = numeric_value;
38789      end;
MPRINT(EM_DIAGRAM):   end;
38790      end;
MPRINT(EM_DIAGRAM):   end;
38791      keep parent branch abovetext;
MPRINT(EM_DIAGRAM):   keep parent branch abovetext;
38792      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      38665:25   38680:26   38694:24   38694:47   38703:26   38714:26   38727:24   38727:47   38740:26
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      38745:11
NOTE: There were 49 observations read from the data set WORK.TEMPOUTRULES.
NOTE: The data set WORK.TEMPABOVE has 64 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38793      /* MIssing value to abovetext */
38794      data tempmissing;
MPRINT(EM_DIAGRAM):   data tempmissing;
38795      set WORK.OUTRULES_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTRULES_TREE_0JY2IB5;
38796      if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
MPRINT(EM_DIAGRAM):   if ((ROLE="PRIMARY") AND (STAT in ("MISSING")));
38797      rename node=parent numeric_value=branch character_value=misschar;
MPRINT(EM_DIAGRAM):   rename node=parent numeric_value=branch character_value=misschar;
38798      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1229 observations read from the data set WORK.OUTRULES_TREE_0JY2IB5.
NOTE: The data set WORK.TEMPMISSING has 32 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
38799      proc sort data=work.tempabove;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempabove;
38800      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
38801      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK.TEMPABOVE.
NOTE: The data set WORK.TEMPABOVE has 64 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.00 seconds
      cpu time            0.01 seconds
 
 
38802      proc sort data=EMWS2.Clus2_OUTNODES out=tempoutnodes;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_OUTNODES out=tempoutnodes;
38803      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
38804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_OUTNODES.
NOTE: The data set WORK.TEMPOUTNODES has 65 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
38805      proc sort data=tempmissing;
MPRINT(EM_DIAGRAM):   proc sort data=tempmissing;
38806      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
38807      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.TEMPMISSING has 32 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.03 seconds
 
 
38808      data WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_outnodes;
38809      merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
MPRINT(EM_DIAGRAM):   merge work.tempabove tempoutNodes(drop=abovetext ) tempmissing(in=_a);
38810      by parent branch;
MPRINT(EM_DIAGRAM):   by parent branch;
38811      length traintotal validtotal 8;
MPRINT(EM_DIAGRAM):   length traintotal validtotal 8;
38812      retain traintotal validtotal;
MPRINT(EM_DIAGRAM):   retain traintotal validtotal;
38813      if _a then do;
MPRINT(EM_DIAGRAM):   if _a then do;
38814      if ^MISSING(abovetext) then do;
MPRINT(EM_DIAGRAM):   if ^MISSING(abovetext) then do;
38815      abovetext= strip(abovetext)||" %sysfunc(sasmsg(sashelp.dmine, tree_ormiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext= strip(abovetext)||" Or Missing";
38816      end;
MPRINT(EM_DIAGRAM):   end;
38817      else do;
MPRINT(EM_DIAGRAM):   else do;
38818      abovetext = " %sysfunc(sasmsg(sashelp.dmine, tree_missonly_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   abovetext = " Missing Values Only";
38819      end;
MPRINT(EM_DIAGRAM):   end;
38820      end;
MPRINT(EM_DIAGRAM):   end;
38821      if MISSING(abovetext) then abovetext="%sysfunc(sasmsg(sashelp.dmine, tree_nonmiss_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   if MISSING(abovetext) then abovetext="Non-Missing Values";
38822      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
38823      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
38824      validtotal=VN;
MPRINT(EM_DIAGRAM):   validtotal=VN;
38825      end;
MPRINT(EM_DIAGRAM):   end;
38826      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
38827      drop role rank stat misschar belowtext;
MPRINT(EM_DIAGRAM):   drop role rank stat misschar belowtext;
38828      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VN is uninitialized.
NOTE: There were 64 observations read from the data set WORK.TEMPABOVE.
NOTE: There were 65 observations read from the data set WORK.TEMPOUTNODES.
NOTE: There were 32 observations read from the data set WORK.TEMPMISSING.
NOTE: The data set WORK.CLUS2_OUTNODES has 65 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
38829      proc sort data=WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_outnodes;
38830      by node;
MPRINT(EM_DIAGRAM):   by node;
38831      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: The data set WORK.CLUS2_OUTNODES has 65 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38832      proc sort data=tempbelow;
MPRINT(EM_DIAGRAM):   proc sort data=tempbelow;
38833      by node;
MPRINT(EM_DIAGRAM):   by node;
38834      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38835      data WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   data WORK.Clus2_outnodes;
38836      merge WORK.Clus2_outnodes tempbelow;
MPRINT(EM_DIAGRAM):   merge WORK.Clus2_outnodes tempbelow;
38837      by node;
MPRINT(EM_DIAGRAM):   by node;
38838      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: There were 32 observations read from the data set WORK.TEMPBELOW.
NOTE: The data set WORK.CLUS2_OUTNODES has 65 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS2.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS2.VARSEL_TRAIN.
NOTE: View EMWS2.EM_CLUS2.VIEW used (Total process time):
      real time           2.08 seconds
      cpu time            2.03 seconds
 
NOTE: There were 247875 observations read from the data set EMWS2.CLUS2_TRAIN.
38839      data tempoutstats;
MPRINT(EM_DIAGRAM):    data tempoutstats;
38840      set WORK.OUTSTATS_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_0JY2IB5;
38841      length tarlevel $8;
MPRINT(EM_DIAGRAM):   length tarlevel $8;
38842      tarlevel ="NOMINAL";
MPRINT(EM_DIAGRAM):   tarlevel ="NOMINAL";
38843      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.OUTSTATS_TREE_0JY2IB5.
NOTE: The data set WORK.TEMPOUTSTATS has 260 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38844      data EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS2.Clus2_TREE_PLOT;
38845      length NODETEXT TEXTALL $800 N NODECOLOR 8;
MPRINT(EM_DIAGRAM):   length NODETEXT TEXTALL $800 N NODECOLOR 8;
38846      set WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_outnodes;
38847      label parent = "%sysfunc(sasmsg(sashelp.dmine, rpt_parentID_vlabel, noquote))" depth = "%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, noquote))" belowtext= "%sysfunc(sasmsg(sashelp.dmine, rpt_belowtext_vlabel, noquote))" abovetext =
38848         "%sysfunc(sasmsg(sashelp.dmine, rpt_abovetext_vlabel, noquote))" linkwidth = "%sysfunc(sasmsg(sashelp.dmine, rpt_linkwidth_vlabel, noquote))" nodetext = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodetext_vlabel, noquote))" textall =
38849         "%sysfunc(sasmsg(sashelp.dmine, rpt_textall_vlabel, noquote))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainn_vlabel, noquote))" nodecolor = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodecolor_vlabel, noquote))" node =
38850         "%sysfunc(sasmsg(sashelp.dmine, rpt_node_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label parent = "Parent Id" depth = "Depth" belowtext= "Below Text" abovetext = "Above Text" linkwidth = "Link Width" nodetext = "Node Text" textall = "All Text" N = "Train: Number of Observations" nodecolor = "Node Color" node =
"Node";
38851      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR;
38852      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TEXTALL is uninitialized.
NOTE: Variable NODECOLOR is uninitialized.
NOTE: There were 65 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.06 seconds
 
 
38853      proc sort data=EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_TREE_PLOT;
38854      by node;
MPRINT(EM_DIAGRAM):   by node;
38855      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
 
 
38856      proc sort data=tempoutstats;
MPRINT(EM_DIAGRAM):   proc sort data=tempoutstats;
38857      by node;
MPRINT(EM_DIAGRAM):   by node;
38858      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set WORK.TEMPOUTSTATS has 260 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38859      data EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):    data EMWS2.Clus2_TREE_PLOT;
38860      merge EMWS2.Clus2_TREE_PLOT tempoutstats;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus2_TREE_PLOT tempoutstats;
38861      length text $800 _RASE_ P__SEGMENT_1 8;
MPRINT(EM_DIAGRAM):   length text $800 _RASE_ P__SEGMENT_1 8;
38862      retain P__SEGMENT_1 eventlevel;
MPRINT(EM_DIAGRAM):   retain P__SEGMENT_1 eventlevel;
38863      by node;
MPRINT(EM_DIAGRAM):   by node;
38864      if statname='N' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='N' then N=statvalue;
38865      if statname='NPRIORS' then N=statvalue;
MPRINT(EM_DIAGRAM):   if statname='NPRIORS' then N=statvalue;
38866      if statname='PREDICTION' then eventlevel=category;
MPRINT(EM_DIAGRAM):   if statname='PREDICTION' then eventlevel=category;
38867      _RASE_ = .;
MPRINT(EM_DIAGRAM):   _RASE_ = .;
38868      if tarlevel ^= 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if tarlevel ^= 'INTERVAL' then do;
38869      if STATNAME = 'PROBABILITY' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PROBABILITY' then do;
38870      if CATEGORY=EVENTLEVEL then do;
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL then do;
38871      nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   nodetext = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
38872      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
38873      P__SEGMENT_1 = round(STATVALUE, .01);
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = round(STATVALUE, .01);
38874      end;
MPRINT(EM_DIAGRAM):   end;
38875      else do;
MPRINT(EM_DIAGRAM):   else do;
38876      text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
MPRINT(EM_DIAGRAM):   text = right(put(strip(CATEGORY)||':', $12.))|| right(put(STATVALUE, percent13.1));
38877      end;
MPRINT(EM_DIAGRAM):   end;
38878      textall = strip(textall)||'0A'x||strip( text);
MPRINT(EM_DIAGRAM):   textall = strip(textall)||'0A'x||strip( text);
38879      end;
MPRINT(EM_DIAGRAM):   end;
38880      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
38881      nodetext = trim(nodetext)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext = trim(nodetext)||'0A'x||" Count:"|| put(N, 13.);
38882      textall = trim(textall)||'0A'x||" %sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   textall = trim(textall)||'0A'x||" Count:"|| put(N, 13.);
38883      output EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS2.Clus2_TREE_PLOT;
38884      end;
MPRINT(EM_DIAGRAM):   end;
38885      end;
MPRINT(EM_DIAGRAM):   end;
38886      else do;
MPRINT(EM_DIAGRAM):   else do;
38887      if statname='RASE' then _RASE_=statvalue;
MPRINT(EM_DIAGRAM):   if statname='RASE' then _RASE_=statvalue;
38888      label _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trase_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _RASE_ = "Train: Root Average Square Error";
38889      if STATNAME = 'PREDICTION' then do;
MPRINT(EM_DIAGRAM):   if STATNAME = 'PREDICTION' then do;
38890      nodetext= "%sysfunc(sasmsg(sashelp.dmine, rpt_average_vlabel, noquote))"|| put(STATVALUE, 13.4)||'0A'x|| "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, noquote )):"|| put(N, 13.);
MPRINT(EM_DIAGRAM):   nodetext= "Average"|| put(STATVALUE, 13.4)||'0A'x|| "Count:"|| put(N, 13.);
38891      textall = nodetext;
MPRINT(EM_DIAGRAM):   textall = nodetext;
38892      P__SEGMENT_1 = STATVALUE;
MPRINT(EM_DIAGRAM):   P__SEGMENT_1 = STATVALUE;
38893      ;
MPRINT(EM_DIAGRAM):   ;
38894      ;
MPRINT(EM_DIAGRAM):   ;
38895      end;
MPRINT(EM_DIAGRAM):   end;
38896      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
38897      output EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   output EMWS2.Clus2_TREE_PLOT;
38898      end;
MPRINT(EM_DIAGRAM):   end;
38899      ;
MPRINT(EM_DIAGRAM):   ;
38900      end;
MPRINT(EM_DIAGRAM):   end;
38901      label P__SEGMENT_1 = "%sysfunc(sasmsg(sashelp.dmine, rpt_predictedvar_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label P__SEGMENT_1 = "Predicted Variable";
38902      keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   keep NODE PARENT DEPTH BELOWTEXT ABOVETEXT LINKWIDTH NODETEXT TEXTALL N NODECOLOR _RASE_ P__SEGMENT_1;
38903      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: There were 260 observations read from the data set WORK.TEMPOUTSTATS.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
 
38904      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
38905      set WORK.OUTSTATS_TREE_0JY2IB5;
MPRINT(EM_DIAGRAM):   set WORK.OUTSTATS_TREE_0JY2IB5;
38906      retain eventlevel;
MPRINT(EM_DIAGRAM):   retain eventlevel;
38907      if STATNAME='PREDICTION' then eventlevel=CATEGORY;
MPRINT(EM_DIAGRAM):   if STATNAME='PREDICTION' then eventlevel=CATEGORY;
38908      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.OUTSTATS_TREE_0JY2IB5.
NOTE: The data set WORK.TEMPCOLOR has 260 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
38909      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
38910      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
38911      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
38912      if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
MPRINT(EM_DIAGRAM):   if CATEGORY=EVENTLEVEL AND STATNAME="PROBABILITY";
38913      end;
MPRINT(EM_DIAGRAM):   end;
38914      else do;
MPRINT(EM_DIAGRAM):   else do;
38915      if STATNAME="PREDICTION";
MPRINT(EM_DIAGRAM):   if STATNAME="PREDICTION";
38916      end;
MPRINT(EM_DIAGRAM):   end;
38917      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 260 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 65 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38918      data tempcolor;
MPRINT(EM_DIAGRAM):   data tempcolor;
38919      set tempcolor;
MPRINT(EM_DIAGRAM):   set tempcolor;
38920      length nodecolor 8;
MPRINT(EM_DIAGRAM):   length nodecolor 8;
38921      if 'NOMINAL' ne 'INTERVAL' then do;
MPRINT(EM_DIAGRAM):   if 'NOMINAL' ne 'INTERVAL' then do;
38922      nodecolor = round(100*(STATVALUE), .01);
MPRINT(EM_DIAGRAM):   nodecolor = round(100*(STATVALUE), .01);
38923      end;
MPRINT(EM_DIAGRAM):   end;
38924      else do;
MPRINT(EM_DIAGRAM):   else do;
38925      nodecolor=round(statvalue, .01);
MPRINT(EM_DIAGRAM):   nodecolor=round(statvalue, .01);
38926      end;
MPRINT(EM_DIAGRAM):   end;
38927      keep node nodecolor;
MPRINT(EM_DIAGRAM):   keep node nodecolor;
38928      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38929      proc sort data=EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_TREE_PLOT;
38930      by node;
MPRINT(EM_DIAGRAM):   by node;
38931      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.15 seconds
      cpu time            0.06 seconds
 
 
38932      proc sort data=tempcolor;
MPRINT(EM_DIAGRAM):   proc sort data=tempcolor;
38933      by node;
MPRINT(EM_DIAGRAM):   by node;
38934      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set WORK.TEMPCOLOR has 65 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38935      data EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_TREE_PLOT;
38936      merge EMWS2.Clus2_TREE_PLOT tempcolor;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus2_TREE_PLOT tempcolor;
38937      by node;
MPRINT(EM_DIAGRAM):   by node;
38938      length traintotal 8;
MPRINT(EM_DIAGRAM):   length traintotal 8;
38939      retain traintotal;
MPRINT(EM_DIAGRAM):   retain traintotal;
38940      label traintotal = "%sysfunc(sasmsg(sashelp.dmine,  rpt_traintotal_vlabel, noquote))";
MPRINT(EM_DIAGRAM):   label traintotal = "Train Total";
38941      if node=1 then do;
MPRINT(EM_DIAGRAM):   if node=1 then do;
38942      traintotal = N;
MPRINT(EM_DIAGRAM):   traintotal = N;
38943      end;
MPRINT(EM_DIAGRAM):   end;
38944      if NODE eq . then delete;
MPRINT(EM_DIAGRAM):   if NODE eq . then delete;
38945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: There were 65 observations read from the data set WORK.TEMPCOLOR.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.04 seconds
 
 
38946      data EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_TREE_PLOT;
38947      set EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_TREE_PLOT;
38948      textall = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel, noquote, )):"|| put(Node, 13.)||'0A'x||trim(textall);
MPRINT(EM_DIAGRAM):   textall = "Node Id:"|| put(Node, 13.)||'0A'x||trim(textall);
38949      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.01 seconds
 
 
38950      data tempout;
MPRINT(EM_DIAGRAM):   data tempout;
38951      set WORK.Clus2_outnodes;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_outnodes;
38952      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.CLUS2_OUTNODES.
NOTE: The data set WORK.TEMPOUT has 65 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38953      proc sort data=tempout;
MPRINT(EM_DIAGRAM):   proc sort data=tempout;
38954      by descending P__SEGMENT_1;
MPRINT(EM_DIAGRAM):   by descending P__SEGMENT_1;
38955      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TEMPOUT has 65 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
38956      data tree_temp;
MPRINT(EM_DIAGRAM):   data tree_temp;
38957      set tempout;
MPRINT(EM_DIAGRAM):   set tempout;
38958      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
38959      label index="%sysfunc(sasmsg(sashelp.dmine, rpt_leafindex_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index= "Leaf Index";
38960      label percevent_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_perc_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percevent_train = "Percent Cases";
38961      label perc_train = "%sysfunc(sasmsg(sashelp.dmine, rpt_percevent_train_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label perc_train = "Event Percentage";
38962      label tprob="%sysfunc(sasmsg(sashelp.dmine, rpt_prob_vlabel  , NOQUOTE, %nrbquote()))";
MPRINT(EM_DIAGRAM):   label tprob= "Training Percent ";
38963      tprob = round(P__SEGMENT_1, .01);
MPRINT(EM_DIAGRAM):   tprob = round(P__SEGMENT_1, .01);
38964      percevent_train = round ( tprob*100, .01);
MPRINT(EM_DIAGRAM):   percevent_train = round ( tprob*100, .01);
38965      *perc_train =round( ( N / traintotal)*100, .001);
MPRINT(EM_DIAGRAM):   *perc_train =round( ( N / traintotal)*100, .001);
38966      perc_train =round( ( N / traintotal), .01);
MPRINT(EM_DIAGRAM):   perc_train =round( ( N / traintotal), .01);
38967      if missing(perc_train) then perc_train = round( linkwidth*100, .001);
MPRINT(EM_DIAGRAM):   if missing(perc_train) then perc_train = round( linkwidth*100, .001);
38968      index = _n_;
MPRINT(EM_DIAGRAM):   index = _n_;
38969      keep NODE index tprob perc_train percevent_train
38970      ;
MPRINT(EM_DIAGRAM):   keep NODE index tprob perc_train percevent_train ;
38971      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK.TEMPOUT.
NOTE: The data set WORK.TREE_TEMP has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
38972      proc sort data=tree_temp;
MPRINT(EM_DIAGRAM):   proc sort data=tree_temp;
38973      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
38974      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set WORK.TREE_TEMP has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
38975      proc sort data=EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_TREE_PLOT;
38976      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
38977      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
 
 
38978      data EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_TREE_PLOT;
38979      merge EMWS2.Clus2_TREE_PLOT tree_temp;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus2_TREE_PLOT tree_temp;
38980      by NODE;
MPRINT(EM_DIAGRAM):   by NODE;
38981      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: There were 33 observations read from the data set WORK.TREE_TEMP.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.09 seconds
 
 
38982      proc sort data=EMWS2.Clus2_TREE_PLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_TREE_PLOT;
38983      by node index;
MPRINT(EM_DIAGRAM):   by node index;
38984      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set EMWS2.CLUS2_TREE_PLOT.
NOTE: The data set EMWS2.CLUS2_TREE_PLOT has 65 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
ERROR: Invalid file, \\uisnutvdiprof1a\redirected$\bkris2\Documents\ZetaProject\ZetaExploratoryAnalysis\Workspaces\EMWS2.
38985      title9 ' ';
MPRINT(EM_DIAGRAM):    title9 ' ';
38986      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_VariableImportance_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Importance";
38987      proc print data=EMWS2.Clus2_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Clus2_OUTIMPORT(where=(IMPORTANCE>0)) noobs label;
38988      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.CLUS2_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
38989      title10;
MPRINT(EM_DIAGRAM):   title10;
38990      data WORK.M1IBIKEW;
MPRINT(EM_DIAGRAM):    data WORK.M1IBIKEW;
38991      set WORK.M1IBIKEW;
MPRINT(EM_DIAGRAM):   set WORK.M1IBIKEW;
38992      if role eq 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role eq 'REJECTED' then role = 'INPUT';
38993      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1IBIKEW.
NOTE: The data set WORK.M1IBIKEW has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
38994      proc sort data=EMWS2.Clus2_OUTIMPORT out=WORK.Clus2_GRAPHVARS(keep=NAME);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Clus2_OUTIMPORT out=WORK.Clus2_GRAPHVARS(keep=NAME);
38995      where IMPORTANCE>0;
MPRINT(EM_DIAGRAM):   where IMPORTANCE>0;
38996      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
38997      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.CLUS2_OUTIMPORT.
      WHERE IMPORTANCE>0;
NOTE: The data set WORK.CLUS2_GRAPHVARS has 21 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
38998      proc sort data = WORK.M1IBIKEW;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.M1IBIKEW;
38999      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39000      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1IBIKEW.
NOTE: The data set WORK.M1IBIKEW has 21 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39001      data WORK.M1IBIKEW;
MPRINT(EM_DIAGRAM):   data WORK.M1IBIKEW;
39002      merge WORK.M1IBIKEW WORK.Clus2_GRAPHVARS(in=_b_);
MPRINT(EM_DIAGRAM):   merge WORK.M1IBIKEW WORK.Clus2_GRAPHVARS(in=_b_);
39003      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39004      if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
MPRINT(EM_DIAGRAM):   if _b_ or ROLE = "FREQ" or REPORT="Y" then output;
39005      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1IBIKEW.
NOTE: There were 21 observations read from the data set WORK.CLUS2_GRAPHVARS.
NOTE: The data set WORK.M1IBIKEW has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39006      data WORK.M1IBIKEW;
MPRINT(EM_DIAGRAM):    data WORK.M1IBIKEW;
39007      set WORK.M1IBIKEW end=_eof_ nobs=_nobs_;
MPRINT(EM_DIAGRAM):   set WORK.M1IBIKEW end=_eof_ nobs=_nobs_;
39008      output;
MPRINT(EM_DIAGRAM):   output;
39009      if _eof_ then do;
MPRINT(EM_DIAGRAM):   if _eof_ then do;
39010      name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
39011      ROLE = 'BY';
MPRINT(EM_DIAGRAM):   ROLE = 'BY';
39012      LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
39013      LABEL = 'Segment Variable';
MPRINT(EM_DIAGRAM):   LABEL = 'Segment Variable';
39014      TYPE = 'N';
MPRINT(EM_DIAGRAM):   TYPE = 'N';
39015      FORMAT = '';
MPRINT(EM_DIAGRAM):   FORMAT = '';
39016      INFORMAT = '';
MPRINT(EM_DIAGRAM):   INFORMAT = '';
39017      output;
MPRINT(EM_DIAGRAM):   output;
39018      end;
MPRINT(EM_DIAGRAM):   end;
39019      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.M1IBIKEW.
NOTE: The data set WORK.M1IBIKEW has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39020      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
39021      * Clus2: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   * Clus2: STDIZE Variables Macro ;
39022      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
39023      %macro stdizevar;
39024          Age BMI
39025      %mend stdizevar;
39026      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39027      * Clus2: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Clus2: Computing Summary Statistics;
39028      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39029      proc stdize
39030      data = EMWS2.Clus2_TRAIN
39031      out=_null_
39032      outstat=WORK.Clus2_STAT
39033      add=0 fuzz=1E-14 initial=MAD
39034      vardef=df
39035      method=STD
39036      mult=1
39037      pctlmtd=ORD_STAT pctldef=2
39038      pctlpts=(
39039      0
39040      100
39041      )
39042      ;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS2.Clus2_TRAIN out=_null_ outstat=WORK.Clus2_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 100 ) ;
MPRINT(EM_DIAGRAM):   var
39043      var %stdizevar;
MPRINT(STDIZEVAR):   Age BMI
MPRINT(EM_DIAGRAM):  ;
39044      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS2.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View EMWS2.CLUS2_TRAIN.VIEW used (Total process time):
      real time           2.49 seconds
      cpu time            2.46 seconds
 
NOTE: There were 247875 observations read from the data set EMWS2.VARSEL_TRAIN.
NOTE: There were 247875 observations read from the data set EMWS2.CLUS2_TRAIN.
NOTE: The data set WORK.CLUS2_STAT has 10 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           2.56 seconds
      cpu time            2.48 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39045      quit;
 
39046      data WORK.Clus2_MINMAX;
MPRINT(EM_DIAGRAM):    data WORK.Clus2_MINMAX;
39047      set WORK.Clus2_STAT;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_STAT;
39048      where _TYPE_ in('P0','P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('P0','P100');
39049      if _TYPE_='P0' then _TYPE_='MIN';
MPRINT(EM_DIAGRAM):   if _TYPE_='P0' then _TYPE_='MIN';
39050      else if _TYPE_='P100' then _TYPE_='MAX';
MPRINT(EM_DIAGRAM):   else if _TYPE_='P100' then _TYPE_='MAX';
39051      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS2_STAT.
      WHERE _TYPE_ in ('P0', 'P100');
NOTE: The data set WORK.CLUS2_MINMAX has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.01 seconds
 
 
39052      proc transpose data=WORK.Clus2_MINMAX out=WORK.Clus2_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Clus2_MINMAX out=WORK.Clus2_MINMAX(drop=_LABEL_ rename=(_NAME_=_VARIABLE_));
39053      id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
39054      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 2 observations read from the data set WORK.CLUS2_MINMAX.
NOTE: The data set WORK.CLUS2_MINMAX has 2 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
39055      data WORK.Clus2_UGRID;
MPRINT(EM_DIAGRAM):    data WORK.Clus2_UGRID;
39056      set WORK.Clus2_MINMAX;
MPRINT(EM_DIAGRAM):   set WORK.Clus2_MINMAX;
39057      B1 = MIN + (1-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B1 = MIN + (1-1)*(MAX-MIN)/8;
39058      B2 = MIN + (2-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B2 = MIN + (2-1)*(MAX-MIN)/8;
39059      B3 = MIN + (3-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B3 = MIN + (3-1)*(MAX-MIN)/8;
39060      B4 = MIN + (4-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B4 = MIN + (4-1)*(MAX-MIN)/8;
39061      B5 = MIN + (5-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B5 = MIN + (5-1)*(MAX-MIN)/8;
39062      B6 = MIN + (6-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B6 = MIN + (6-1)*(MAX-MIN)/8;
39063      B7 = MIN + (7-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B7 = MIN + (7-1)*(MAX-MIN)/8;
39064      B8 = MIN + (8-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B8 = MIN + (8-1)*(MAX-MIN)/8;
39065      B9 = MIN + (9-1)*(MAX-MIN)/8;
MPRINT(EM_DIAGRAM):   B9 = MIN + (9-1)*(MAX-MIN)/8;
39066      drop MIN MAX;
MPRINT(EM_DIAGRAM):   drop MIN MAX;
39067      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.CLUS2_MINMAX.
NOTE: The data set WORK.CLUS2_UGRID has 2 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
39068      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
39069      * Clus2: Creating formats for binning interval variables;
MPRINT(EM_DIAGRAM):   * Clus2: Creating formats for binning interval variables;
39070      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39071      proc format;
MPRINT(EM_DIAGRAM):   proc format;
39072      value F1_
39073      1-2.5 = "1:2.5"
39074      2.5-4 = "2.5:4"
39075      4-5.5 = "4:5.5"
39076      5.5-7 = "5.5:7"
39077      7-8.5 = "7:8.5"
39078      8.5-10 = "8.5:10"
39079      10-11.5 = "10:11.5"
39080      11.5-13 = "11.5:13"
39081      ;
MPRINT(EM_DIAGRAM):   value F1_ 1-2.5 = "1:2.5" 2.5-4 = "2.5:4" 4-5.5 = "4:5.5" 5.5-7 = "5.5:7" 7-8.5 = "7:8.5" 8.5-10 = "8.5:10" 10-11.5 = "10:11.5" 11.5-13 = "11.5:13" ;
NOTE: Format F1_ has been output.
39082      value F2_
39083      12-16 = "12:16"
39084      16-20 = "16:20"
39085      20-24 = "20:24"
39086      24-28 = "24:28"
39087      28-32 = "28:32"
39088      32-36 = "32:36"
39089      36-40 = "36:40"
39090      40-44 = "40:44"
39091      ;
MPRINT(EM_DIAGRAM):   value F2_ 12-16 = "12:16" 16-20 = "16:20" 20-24 = "20:24" 24-28 = "24:28" 28-32 = "28:32" 32-36 = "32:36" 36-40 = "36:40" 40-44 = "40:44" ;
NOTE: Format F2_ has been output.
MPRINT(EM_DIAGRAM):   run;
39092      run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
39093      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
39094      ods output crosstabfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output crosstabfreqs=WORK.TEMPFREQ;
39095      proc freq data = EMWS2.Clus2_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.Clus2_TRAIN order=formatted addnames;
39096      table Age * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Age * _SEGMENT_ / missing;
39097      table AnyHealthcare * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table AnyHealthcare * _SEGMENT_ / missing;
39098      table BMI * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table BMI * _SEGMENT_ / missing;
39099      table CholCheck * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table CholCheck * _SEGMENT_ / missing;
39100      table DiffWalk * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table DiffWalk * _SEGMENT_ / missing;
39101      table Education * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Education * _SEGMENT_ / missing;
39102      table Fruits * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Fruits * _SEGMENT_ / missing;
39103      table GenHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table GenHlth * _SEGMENT_ / missing;
39104      table HeartDiseaseorAttack * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HeartDiseaseorAttack * _SEGMENT_ / missing;
39105      table HighBP * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HighBP * _SEGMENT_ / missing;
39106      table HighChol * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HighChol * _SEGMENT_ / missing;
39107      table HvyAlcoholConsump * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table HvyAlcoholConsump * _SEGMENT_ / missing;
39108      table Income * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Income * _SEGMENT_ / missing;
39109      table MentHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table MentHlth * _SEGMENT_ / missing;
39110      table NoDocbcCost * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table NoDocbcCost * _SEGMENT_ / missing;
39111      table PhysActivity * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PhysActivity * _SEGMENT_ / missing;
39112      table PhysHlth * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table PhysHlth * _SEGMENT_ / missing;
39113      table Sex * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Sex * _SEGMENT_ / missing;
39114      table Smoker * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Smoker * _SEGMENT_ / missing;
39115      table Stroke * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Stroke * _SEGMENT_ / missing;
39116      table Veggies * _SEGMENT_ / missing;
MPRINT(EM_DIAGRAM):   table Veggies * _SEGMENT_ / missing;
39117      format AGE F1_.;
MPRINT(EM_DIAGRAM):   format AGE F1_.;
39118      format BMI F2_.;
MPRINT(EM_DIAGRAM):   format BMI F2_.;
39119      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 250716 observations read from the data set ZETADATA.ZETADIABITIES_TRAIN.
NOTE: There were 250716 observations read from the data set EMWS2.IDS_DATA.
NOTE: There were 247875 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View EMWS2.CLUS2_TRAIN.VIEW used (Total process time):
      real time           3.64 seconds
      cpu time            3.10 seconds
 
NOTE: There were 247875 observations read from the data set EMWS2.VARSEL_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 435 observations and 32 variables.
NOTE: There were 247875 observations read from the data set EMWS2.CLUS2_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           3.80 seconds
      cpu time            3.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
39120      quit;
39121      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
39122      data EMWS2.Clus2_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data EMWS2.Clus2_PROFILE(keep=_VARIABLE_ _SEGMENT_ TYPE COUNT PERCENT _X_ _XLABEL_);
39123      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" _SEGMENT_ = "Segment Variable" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
39124         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
39125         "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" _SEGMENT_ = "Segment Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
39126      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
39127      varnum = varnum(dsid, 'ROWVARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'ROWVARIABLE');
39128      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
39129      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
39130      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
39131      bynum = varnum(dsid, "_SEGMENT_");
MPRINT(EM_DIAGRAM):   bynum = varnum(dsid, "_SEGMENT_");
39132      length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
MPRINT(EM_DIAGRAM):   length varformat _VARIABLE_ $32 _XLABEL_ $32 TYPE $1;
39133      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
39134      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
39135      percent = getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent = getvarn(dsid, pvarnum);
39136      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
39137      varblnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   varblnum = varnum(dsid, _VARIABLE_);
39138      _SEGMENT_ = getvarn(dsid, bynum);
MPRINT(EM_DIAGRAM):   _SEGMENT_ = getvarn(dsid, bynum);
39139      type = vartype(dsid, varblnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, varblnum);
39140      varformat = varfmt(dsid, varblnum);
MPRINT(EM_DIAGRAM):   varformat = varfmt(dsid, varblnum);
39141      if varformat eq '' then varformat = 'best12.';
MPRINT(EM_DIAGRAM):   if varformat eq '' then varformat = 'best12.';
39142      _X_=.;
MPRINT(EM_DIAGRAM):   _X_=.;
39143      if type = 'N' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
39144      _X_ = getvarn(dsid, varblnum);
MPRINT(EM_DIAGRAM):   _X_ = getvarn(dsid, varblnum);
39145      _XLABEL_ = left(putn(_X_, varformat));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(putn(_X_, varformat));
39146      end;
MPRINT(EM_DIAGRAM):   end;
39147      else _XLABEL_ = getvarc(dsid, varblnum);
MPRINT(EM_DIAGRAM):   else _XLABEL_ = getvarc(dsid, varblnum);
39148      if getvarc(dsid, typenum) = '11' then output;
MPRINT(EM_DIAGRAM):   if getvarc(dsid, typenum) = '11' then output;
39149      end;
MPRINT(EM_DIAGRAM):   end;
39150      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
39151      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.09 seconds
 
 
39152      proc sort data=EMWS2.Clus2_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_PROFILE NOTHREADS;
39153      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
39154      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
 
 
39155      proc means data=EMWS2.Clus2_PROFILE noprint missing NWAY;
MPRINT(EM_DIAGRAM):   proc means data=EMWS2.Clus2_PROFILE noprint missing NWAY;
39156      class _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   class _VARIABLE_ _SEGMENT_;
39157      var COUNT;
MPRINT(EM_DIAGRAM):   var COUNT;
39158      output out=WORK.Clus2_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
MPRINT(EM_DIAGRAM):   output out=WORK.Clus2_STATCOUNT(keep=_SEGMENT_ _VARIABLE_ SUM) SUM=SUM;
39159      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: The data set WORK.CLUS2_STATCOUNT has 42 observations and 3 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
39160      proc sort data=WORK.Clus2_STATCOUNT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus2_STATCOUNT NOTHREADS;
39161      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
39162      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK.CLUS2_STATCOUNT.
NOTE: The data set WORK.CLUS2_STATCOUNT has 42 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39163      data EMWS2.Clus2_PROFILE(drop=SUM);
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_PROFILE(drop=SUM);
39164      label BYPERCENT= "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE, _SEGMENT_))";
MPRINT(EM_DIAGRAM):   label BYPERCENT= "Percent";
39165      merge EMWS2.Clus2_PROFILE WORK.Clus2_STATCOUNT;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus2_PROFILE WORK.Clus2_STATCOUNT;
39166      by _VARIABLE_ _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_ _SEGMENT_;
39167      if SUM ne . then BYPERCENT = 100*COUNT/SUM;
MPRINT(EM_DIAGRAM):   if SUM ne . then BYPERCENT = 100*COUNT/SUM;
39168      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: There were 42 observations read from the data set WORK.CLUS2_STATCOUNT.
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
39169      proc sort data=EMWS2.Clus2_PROFILE NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Clus2_PROFILE NOTHREADS;
39170      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
39171      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.16 seconds
      cpu time            0.04 seconds
 
 
39172      proc sort data=WORK.M1IBIKEW;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1IBIKEW;
39173      by Name;
MPRINT(EM_DIAGRAM):   by Name;
39174      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK.M1IBIKEW.
NOTE: The data set WORK.M1IBIKEW has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39175      data EMWS2.Clus2_PROFILE;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_PROFILE;
39176      merge EMWS2.Clus2_PROFILE(in=_a) WORK.M1IBIKEW(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus2_PROFILE(in=_a) WORK.M1IBIKEW(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
39177      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
39178      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
39179      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
39180      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
39181      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: There were 22 observations read from the data set WORK.M1IBIKEW.
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.09 seconds
 
 
39182      proc sort data=EMWS2.Clus2_PROFILE;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Clus2_PROFILE;
39183      by _SEGMENT_ _VARIABLE_ _X_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_ _X_;
39184      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.06 seconds
 
 
39185      data EMWS2.Clus2_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_PROFILE(rename=(_VARIABLE_=Variable _X_=NumericValue _XLABEL_=FmtValue));
39186      set EMWS2.Clus2_PROFILE;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_PROFILE;
39187      retain orderedValue 0;
MPRINT(EM_DIAGRAM):   retain orderedValue 0;
39188      label OrderedValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_OrderedValue_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedValue = "Ordered Values";
39189      by _SEGMENT_ _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_ _VARIABLE_;
39190      if first._variable_ then orderedValue=1;
MPRINT(EM_DIAGRAM):   if first._variable_ then orderedValue=1;
39191      else orderedValue+1;
MPRINT(EM_DIAGRAM):   else orderedValue+1;
39192      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 248 observations read from the data set EMWS2.CLUS2_PROFILE.
NOTE: The data set EMWS2.CLUS2_PROFILE has 248 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
39193      data WORK.Clus2_temp;
MPRINT(EM_DIAGRAM):    data WORK.Clus2_temp;
39194      set EMWS2.Clus2_OUTMEAN;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_OUTMEAN;
39195      _idvar_=left(put(_SEGMENT_,4.));
MPRINT(EM_DIAGRAM):   _idvar_=left(put(_SEGMENT_,4.));
39196      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS2_OUTMEAN.
NOTE: The data set WORK.CLUS2_TEMP has 2 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
39197      proc distance data=WORK.Clus2_temp out=EMWS2.Clus2_DISTANCE method=l(2) shape=square;
MPRINT(EM_DIAGRAM):   proc distance data=WORK.Clus2_temp out=EMWS2.Clus2_DISTANCE method=l(2) shape=square;
39198      id _idvar_;
MPRINT(EM_DIAGRAM):   id _idvar_;
39199      var interval(%dmvqvars);
MPRINT(EM_DIAGRAM):   var interval(
MPRINT(DMVQVARS):  Age BMI AnyHealthcare0 AnyHealthcare1 CholCheck0 CholCheck1 DiffWalk0 DiffWalk1 Fruits0 Fruits1 HeartDiseaseorAttack0 HeartDiseaseorAttack1 HighBP0 HighBP1 HighChol0 HighChol1 HvyAlcoholConsump0 HvyAlcoholConsump1 NoDocbcCost0
NoDocbcCost1 PhysActivity0 PhysActivity1 Sex0 Sex1 Smoker0 Smoker1 Stroke0 Stroke1 Veggies0 Veggies1 T_Education T_GenHlth T_Income T_MentHlth T_PhysHlth
MPRINT(EM_DIAGRAM):  );
39200      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.CLUS2_DISTANCE has 2 observations and 3 variables.
NOTE: PROCEDURE DISTANCE used (Total process time):
      real time           0.17 seconds
      cpu time            0.09 seconds
 
 
39201      proc datasets lib=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS2 nolist;
39202      modify Clus2_DISTANCE;
MPRINT(EM_DIAGRAM):   modify Clus2_DISTANCE;
39203      rename _idvar_=_SEGMENT_;
MPRINT(EM_DIAGRAM):   rename _idvar_=_SEGMENT_;
NOTE: Renaming variable _idvar_ to _SEGMENT_.
MPRINT(EM_DIAGRAM):   run;
39204      run;
 
NOTE: MODIFY was successful for EMWS2.CLUS2_DISTANCE.DATA.
39205      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.60 seconds
      cpu time            0.36 seconds
 
 
39206      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
39207      * Clus2: Creating data set for Input Mean report;
MPRINT(EM_DIAGRAM):   * Clus2: Creating data set for Input Mean report;
39208      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39209      data temp(drop=_type_ over_all);
MPRINT(EM_DIAGRAM):   data temp(drop=_type_ over_all);
39210      set EMWS2.Clus2_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_OUTSTAT;
39211      where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
MPRINT(EM_DIAGRAM):   where _type_ in('DMDB_MEAN', 'CLUS_MEAN');
39212      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.CLUS2_OUTSTAT.
      WHERE _type_ in ('CLUS_MEAN', 'DMDB_MEAN');
NOTE: The data set WORK.TEMP has 3 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39213      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
39214      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
39215      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 3 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39216      proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
MPRINT(EM_DIAGRAM):   proc stdize data=temp out=stdtemp pctlpts=0 100 outstat=stat;
39217      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
39218      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.STDTEMP has 3 observations and 36 variables.
NOTE: The data set WORK.STAT has 10 observations and 36 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
39219      proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
MPRINT(EM_DIAGRAM):   proc transpose data=stat out=tstat(rename=(COL1=MEAN COL2=STD COL3=MIN COL4=MAX));
39220      where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
MPRINT(EM_DIAGRAM):   where _type_ in ('LOCATION', 'SCALE','P0', 'P100');
39221      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.STAT.
      WHERE _type_ in ('LOCATION', 'P0', 'P100', 'SCALE');
NOTE: The data set WORK.TSTAT has 35 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
39222      data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
MPRINT(EM_DIAGRAM):   data tstat( rename=(_NAME_=NAME) keep=_NAME_ cv stdmin stdmax);
39223      set tstat;
MPRINT(EM_DIAGRAM):   set tstat;
39224      if std ^in (0, .) then do;
MPRINT(EM_DIAGRAM):   if std ^in (0, .) then do;
39225      stdmin = abs((min-mean)/std);
MPRINT(EM_DIAGRAM):   stdmin = abs((min-mean)/std);
39226      stdmax = abs((max-mean)/std);
MPRINT(EM_DIAGRAM):   stdmax = abs((max-mean)/std);
39227      end;
MPRINT(EM_DIAGRAM):   end;
39228      if mean ^in(0, .) then cv = std/mean;
MPRINT(EM_DIAGRAM):   if mean ^in(0, .) then cv = std/mean;
39229      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 35 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
39230      proc sort data=tstat;
MPRINT(EM_DIAGRAM):   proc sort data=tstat;
39231      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39232      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTAT has 35 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
39233      proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
MPRINT(EM_DIAGRAM):   proc transpose data=stdtemp out=tstdtemp(rename=(_NAME_=NAME _LABEL_=LABEL COL1=MEAN));
39234      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
39235      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.STDTEMP.
NOTE: The data set WORK.TSTDTEMP has 105 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
39236      proc sort data=tstdtemp;
MPRINT(EM_DIAGRAM):   proc sort data=tstdtemp;
39237      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39238      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set WORK.TSTDTEMP has 105 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
39239      data tstdtemp;
MPRINT(EM_DIAGRAM):   data tstdtemp;
39240      merge tstdtemp tstat;
MPRINT(EM_DIAGRAM):   merge tstdtemp tstat;
39241      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39242      STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
MPRINT(EM_DIAGRAM):   STDMEAN = (MEAN + stdmin)/(stdmin + stdmax);
39243      drop stdmin stdmax mean;
MPRINT(EM_DIAGRAM):   drop stdmin stdmax mean;
39244      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set WORK.TSTDTEMP.
NOTE: There were 35 observations read from the data set WORK.TSTAT.
NOTE: The data set WORK.TSTDTEMP has 105 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39245      proc transpose data=EMWS2.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS2.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
39246      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
39247      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
39248      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
39249      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.CLUS2_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
39250      proc sort data=tempVar;
MPRINT(EM_DIAGRAM):   proc sort data=tempVar;
39251      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39252      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39253      data EMWS2.Clus2_INPUTMEAN(rename=(NAME=VARIABLE));
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_INPUTMEAN(rename=(NAME=VARIABLE));
39254      Length _SEGMENT_CHAR_ $7;
MPRINT(EM_DIAGRAM):   Length _SEGMENT_CHAR_ $7;
39255      label _SEGMENT_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentName_vlabel,  NOQUOTE))" _SEGMENT_CHAR_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentId_vlabel,    NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))"
39255    !  INPUT =
39256         "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel,        NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_label_vlabel,        NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,           NOQUOTE))" STDMEAN =
39257         "%sysfunc(sasmsg(sashelp.dmine, rpt_normmean_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = "Segment Name" _SEGMENT_CHAR_ = "Segment Id" NAME = "Variable" INPUT = "Input" LABEL = "Label" CV = "Coefficient of Variation" STDMEAN = "Normalized Mean";
39258      merge tempvar tstdtemp;
MPRINT(EM_DIAGRAM):   merge tempvar tstdtemp;
39259      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
39260      if LABEL='' then LABEL=NAME;
MPRINT(EM_DIAGRAM):   if LABEL='' then LABEL=NAME;
39261      _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
MPRINT(EM_DIAGRAM):   _SEGMENT_CHAR_ = strip(put(_SEGMENT_, best.));
39262      if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = . then _SEGMENT_CHAR_='Overall';
39263      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: There were 105 observations read from the data set WORK.TSTDTEMP.
NOTE: The data set EMWS2.CLUS2_INPUTMEAN has 105 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.06 seconds
 
 
39264      proc sort data=EMWS2.Clus2_INPUTMEAN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Clus2_INPUTMEAN;
39265      by descending cv;
MPRINT(EM_DIAGRAM):   by descending cv;
39266      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 105 observations read from the data set EMWS2.CLUS2_INPUTMEAN.
NOTE: The data set EMWS2.CLUS2_INPUTMEAN has 105 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
 
 
39267      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
39268      * Clus2: Determining the important variables;
MPRINT(EM_DIAGRAM):   * Clus2: Determining the important variables;
39269      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
39270      %let _nobs = 0;
39271      data keepvars(rename=(NAME=INPUT));
MPRINT(EM_DIAGRAM):    data keepvars(rename=(NAME=INPUT));
39272      set EMWS2.Clus2_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_OUTIMPORT(where=(IMPORTANCE>0.5)) end=eof;
39273      if eof then call symput('_nobs', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_nobs', strip(put(_N_, best.)));
39274      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.CLUS2_OUTIMPORT.
      WHERE IMPORTANCE>0.5;
NOTE: The data set WORK.KEEPVARS has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39275      proc transpose data=EMWS2.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS2.Clus2_OUTVAR out=tempVar(drop=_LABEL_ rename=( _NAME_=NAME VARIABLE=INPUT));
39276      var Age--T_PhysHlth;
MPRINT(EM_DIAGRAM):   var Age--T_PhysHlth;
39277      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
39278      where _type_ = 'VARIABLE';
MPRINT(EM_DIAGRAM):   where _type_ = 'VARIABLE';
39279      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.CLUS2_OUTVAR.
      WHERE _type_='VARIABLE';
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
39280      proc sort data=keepvars;
MPRINT(EM_DIAGRAM):   proc sort data=keepvars;
39281      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
39282      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.KEEPVARS has 7 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39283      proc sort data=tempvar;
MPRINT(EM_DIAGRAM):   proc sort data=tempvar;
39284      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
39285      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: The data set WORK.TEMPVAR has 35 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
39286      data vars;
MPRINT(EM_DIAGRAM):   data vars;
39287      merge tempvar keepvars(in=b);
MPRINT(EM_DIAGRAM):   merge tempvar keepvars(in=b);
39288      by INPUT;
MPRINT(EM_DIAGRAM):   by INPUT;
39289      if b then output;
MPRINT(EM_DIAGRAM):   if b then output;
39290      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUT by input data sets. This might cause unexpected results.
NOTE: There were 35 observations read from the data set WORK.TEMPVAR.
NOTE: There were 7 observations read from the data set WORK.KEEPVARS.
NOTE: The data set WORK.VARS has 10 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
39291      proc sort data=vars;
MPRINT(EM_DIAGRAM):   proc sort data=vars;
39292      by descending importance;
MPRINT(EM_DIAGRAM):   by descending importance;
39293      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.VARS.
NOTE: The data set WORK.VARS has 10 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
39294      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
39295      set vars;
MPRINT(EM_DIAGRAM):   set vars;
39296      if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('CLUS_PROFVARS', strip(NAME));
39297      else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
MPRINT(EM_DIAGRAM):   else call symput('CLUS_PROFVARS',symget('CLUS_PROFVARS')!!' '!!strip(NAME));
39298      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * mergeVarMeansandClusLabel;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39299      *------------------------------------------------------------*;
39300      * mergeVarMeansandClusLabel;
39301      *------------------------------------------------------------*;
39302      data temp(keep=_SEGMENT_ &CLUS_PROFVARS);
MPRINT(EM_DIAGRAM):   data temp(keep=_SEGMENT_ T_GenHlth T_PhysHlth DiffWalk0 DiffWalk1 Stroke0 Stroke1 T_Income BMI HeartDiseaseorAttack0 HeartDiseaseorAttack1);
39303      length _SEGMENT_ &CLUS_PROFVARS 8;
MPRINT(EM_DIAGRAM):   length _SEGMENT_ T_GenHlth T_PhysHlth DiffWalk0 DiffWalk1 Stroke0 Stroke1 T_Income BMI HeartDiseaseorAttack0 HeartDiseaseorAttack1 8;
39304      set EMWS2.Clus2_OUTSTAT;
MPRINT(EM_DIAGRAM):   set EMWS2.Clus2_OUTSTAT;
39305      where _type_ ='CLUS_MEAN';
MPRINT(EM_DIAGRAM):   where _type_ ='CLUS_MEAN';
39306      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS2_OUTSTAT.
      WHERE _type_='CLUS_MEAN';
NOTE: The data set WORK.TEMP has 2 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39307      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
39308      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
39309      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 2 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
39310      data EMWS2.Clus2_LABEL;
MPRINT(EM_DIAGRAM):   data EMWS2.Clus2_LABEL;
39311      merge EMWS2.Clus2_LABEL(keep=_SEGMENT_ LABEL) temp;
MPRINT(EM_DIAGRAM):   merge EMWS2.Clus2_LABEL(keep=_SEGMENT_ LABEL) temp;
39312      by _SEGMENT_;
MPRINT(EM_DIAGRAM):   by _SEGMENT_;
39313      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.CLUS2_LABEL.
NOTE: There were 2 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS2.CLUS2_LABEL has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
