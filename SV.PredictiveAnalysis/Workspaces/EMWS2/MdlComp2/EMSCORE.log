MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:47:40" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 04, 2024
Time:                01:47:40
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KH6E7A "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KH6E7A new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
192026     /* Generate assessment metadata, which will be used to generate assessment data step */
192027     /* code, such as retrieving names of temporary variables and summary variables,      */
192028     /* labels, etc.  It is used in almost all the assessment computations such as lift,  */
192029     /* roc, index, scoreDist and could be thought as a global variable in assessment     */
192030     /* computation.                                                                      */
192031     data work.ASSESS_2DXDMZB_assessMeta_N7nr_u;
MPRINT(EM_DIAGRAM):    data work.ASSESS_2DXDMZB_assessMeta_N7nr_u;
192032     length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32
192032   ! RESULT_MAX_LABEL
192033        $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX 
$32 RESULT_MAX_LABEL $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
192034     VARIABLE = "Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   VARIABLE = "Diabetes_Prediction";
192035     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
192036     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192037     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192038     LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
192039     PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
192040     MEASUREMENT = "NOMINAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "NOMINAL";
192041     LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
192042     GEN_VAR_IN_TEMP_DATA = "Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "Diabetes_Prediction";
192043     RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
192044     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
192045     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
192046     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
192047     MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
192048     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
192049     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
192050     MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
192051     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
192052     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
192053     TEMPORARY_VARIABLE = "Diabetes_Predict_bMLqxSRrthpYCna";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "Diabetes_Predict_bMLqxSRrthpYCna";
192054     output;
MPRINT(EM_DIAGRAM):   output;
192055     VARIABLE = "F_Diabetes_Predi_PREDIABETES";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Diabetes_Predi_PREDIABETES";
192056     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192057     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192058     PARENT = "F_Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   PARENT = "F_Diabetes_Prediction";
192059     LEVEL = "PREDIABETES";
MPRINT(EM_DIAGRAM):   LEVEL = "PREDIABETES";
192060     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
192061     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
192062     LAST_LEVEL = "DIABETES";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "DIABETES";
192063     GEN_VAR_IN_TEMP_DATA = "F_Diabetes_Predi_xqWySay3lfn2MBG";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Diabetes_Predi_xqWySay3lfn2MBG";
192064     RESULT_MEAN = "F_Diabetes_mean_NjAE4CqIY35tM5w";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Diabetes_mean_NjAE4CqIY35tM5w";
192065     /* adjust for tied cases */
192066     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
192067     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
192068     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
192069     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
192070     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
192071     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
192072     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
192073     TEMPORARY_VARIABLE = "F_Diabetes_Predi_4i_zFFsBe92jzwT";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Diabetes_Predi_4i_zFFsBe92jzwT";
192074     output;
MPRINT(EM_DIAGRAM):   output;
192075     VARIABLE = "F_Diabetes_Predi_NO_DIABETES";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Diabetes_Predi_NO_DIABETES";
192076     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192077     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192078     PARENT = "F_Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   PARENT = "F_Diabetes_Prediction";
192079     LEVEL = "NO DIABETES";
MPRINT(EM_DIAGRAM):   LEVEL = "NO DIABETES";
192080     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
192081     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
192082     LAST_LEVEL = "DIABETES";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "DIABETES";
192083     GEN_VAR_IN_TEMP_DATA = "F_Diabetes_Predi_VRh4dNCcpzNmZrJ";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Diabetes_Predi_VRh4dNCcpzNmZrJ";
192084     RESULT_MEAN = "F_Diabetes_mean_SoaQ0pbEW9tQ6wm";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Diabetes_mean_SoaQ0pbEW9tQ6wm";
192085     /* adjust for tied cases */
192086     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
192087     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
192088     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
192089     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
192090     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
192091     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
192092     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
192093     TEMPORARY_VARIABLE = "F_Diabetes_Predi_W2jUSD3hChpt4vd";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Diabetes_Predi_W2jUSD3hChpt4vd";
192094     output;
MPRINT(EM_DIAGRAM):   output;
192095     VARIABLE = "F_Diabetes_Prediction_DIABETES";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Diabetes_Prediction_DIABETES";
192096     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192097     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192098     PARENT = "F_Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   PARENT = "F_Diabetes_Prediction";
192099     LEVEL = "DIABETES";
MPRINT(EM_DIAGRAM):   LEVEL = "DIABETES";
192100     PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
192101     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
192102     LAST_LEVEL = "DIABETES";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "DIABETES";
192103     GEN_VAR_IN_TEMP_DATA = "F_Diabetes_Predi_Ocy9XFAe1NguCiE";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Diabetes_Predi_Ocy9XFAe1NguCiE";
192104     RESULT_MEAN = "F_Diabetes_mean_9vL4OapeOt0awhM";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Diabetes_mean_9vL4OapeOt0awhM";
192105     /* adjust for tied cases */
192106     RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
192107     RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
192108     RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
192109     RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
192110     RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
192111     RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
192112     RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
192113     TEMPORARY_VARIABLE = "F_Diabetes_Predi_zx8gh9hXv8Qfaxt";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Diabetes_Predi_zx8gh9hXv8Qfaxt";
192114     output;
MPRINT(EM_DIAGRAM):   output;
192115     VARIABLE = "P_Diabetes_Predictionprediabetes";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_Diabetes_Predictionprediabetes";
192116     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192117     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192118     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
192119     LEVEL = "PREDIABETES";
MPRINT(EM_DIAGRAM):   LEVEL = "PREDIABETES";
192120     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
192121     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
192122     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
192123     GEN_VAR_IN_TEMP_DATA = "P_Diabetes_Predictionprediabetes";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_Diabetes_Predictionprediabetes";
192124     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
192125     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
192126     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
192127     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
192128     MIN_ADJUSTED = "P_Diabet_minAdjusted_MBl41nx9Z";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diabet_minAdjusted_MBl41nx9Z";
192129     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
192130     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
192131     MAX_ADJUSTED = "P_Diabet_maxAdjusted_G0PgIsSnO";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diabet_maxAdjusted_G0PgIsSnO";
192132     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
192133     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
192134     TEMPORARY_VARIABLE = "P_Diabetes_Predi_VElUq2uKm6w_Fzb";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_Diabetes_Predi_VElUq2uKm6w_Fzb";
192135     output;
MPRINT(EM_DIAGRAM):   output;
192136     VARIABLE = "P_Diabetes_Predictionno_diabetes";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_Diabetes_Predictionno_diabetes";
192137     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192138     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192139     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
192140     LEVEL = "NO DIABETES";
MPRINT(EM_DIAGRAM):   LEVEL = "NO DIABETES";
192141     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
192142     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
192143     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
192144     GEN_VAR_IN_TEMP_DATA = "P_Diabetes_Predictionno_diabetes";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_Diabetes_Predictionno_diabetes";
192145     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
192146     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
192147     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
192148     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
192149     MIN_ADJUSTED = "P_Diabet_minAdjusted_XB6nfGGqQ";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diabet_minAdjusted_XB6nfGGqQ";
192150     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
192151     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
192152     MAX_ADJUSTED = "P_Diabet_maxAdjusted_cOOF_XF24";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diabet_maxAdjusted_cOOF_XF24";
192153     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
192154     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
192155     TEMPORARY_VARIABLE = "P_Diabetes_Predi_g_DhLCvM8zHLd88";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_Diabetes_Predi_g_DhLCvM8zHLd88";
192156     output;
MPRINT(EM_DIAGRAM):   output;
192157     VARIABLE = "P_Diabetes_Predictiondiabetes";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_Diabetes_Predictiondiabetes";
192158     FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
192159     TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
192160     PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
192161     LEVEL = "DIABETES";
MPRINT(EM_DIAGRAM):   LEVEL = "DIABETES";
192162     PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
192163     MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
192164     LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
192165     GEN_VAR_IN_TEMP_DATA = "P_Diabetes_Predictiondiabetes";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_Diabetes_Predictiondiabetes";
192166     RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
192167     RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
192168     RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
192169     RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
192170     MIN_ADJUSTED = "P_Diabet_minAdjusted_843ft9cE9";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diabet_minAdjusted_843ft9cE9";
192171     RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
192172     RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
192173     MAX_ADJUSTED = "P_Diabet_maxAdjusted_nKRGv8lRw";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diabet_maxAdjusted_nKRGv8lRw";
192174     RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
192175     RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
192176     TEMPORARY_VARIABLE = "P_Diabetes_Predi_VoCP1TIF7ql0CZd";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_Diabetes_Predi_VoCP1TIF7ql0CZd";
192177     output;
MPRINT(EM_DIAGRAM):   output;
192178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_2DXDMZB_ASSESSMETA_N7NR_U has 7 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

192179     /* Generate temporary dataset and obtain summary statistics such as total number of   */
192180     /* obserations, frequency of target.  However, summary statistics for class reporting */
192181     /* variabels are not computed here since if there exist class reporting variables,    */
192182     /* then PROC DMDB will be called. And there is no need to compute interval reporting  */
192183     /* summary statisitcs, if any.                                                        */
192184     data work.ASSESS_2DXDMZB_normSD_UM5P3r(drop=
192185     _numberOfObservation_
192186     _levelFrequency_1
192187     _levelFrequency_2
192188     _levelFrequency_3
192189     )
192190     work.ASSESS_2DXDMZB_meansAndTi_CPK7yl (keep=
192191     _numberOfObservation_
192192     _levelFrequency_1
192193     _levelFrequency_2
192194     _levelFrequency_3
192195     );
MPRINT(EM_DIAGRAM):    data work.ASSESS_2DXDMZB_normSD_UM5P3r(drop= _numberOfObservation_ _levelFrequency_1 _levelFrequency_2 _levelFrequency_3 ) work.ASSESS_2DXDMZB_meansAndTi_CPK7yl (keep= _numberOfObservation_ _levelFrequency_1 _levelFrequency_2 
_levelFrequency_3 );
192196     set EMWS2.Reg2_TRAIN(
192197     where=(
192198     (Diabetes_Prediction ^= ' ')
192199     )
192200     ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_TRAIN( where=( (Diabetes_Prediction ^= ' ') ) ) end=_lastObservation_;
192201     keep frequency_e70FMb;
MPRINT(EM_DIAGRAM):   keep frequency_e70FMb;
192202     frequency_e70FMb = 1;
MPRINT(EM_DIAGRAM):   frequency_e70FMb = 1;
192203     keep I_Diabetes_Prediction F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   keep I_Diabetes_Prediction F_Diabetes_Prediction;
192204     keep F_Diabetes_Predi_xqWySay3lfn2MBG;
MPRINT(EM_DIAGRAM):   keep F_Diabetes_Predi_xqWySay3lfn2MBG;
192205     if (F_Diabetes_Prediction = 'PREDIABETES') then do;
MPRINT(EM_DIAGRAM):   if (F_Diabetes_Prediction = 'PREDIABETES') then do;
192206     F_Diabetes_Predi_xqWySay3lfn2MBG = 1;
MPRINT(EM_DIAGRAM):   F_Diabetes_Predi_xqWySay3lfn2MBG = 1;
192207     end;
MPRINT(EM_DIAGRAM):   end;
192208     else do;
MPRINT(EM_DIAGRAM):   else do;
192209     F_Diabetes_Predi_xqWySay3lfn2MBG = 0;
MPRINT(EM_DIAGRAM):   F_Diabetes_Predi_xqWySay3lfn2MBG = 0;
192210     end;
MPRINT(EM_DIAGRAM):   end;
192211     keep F_Diabetes_Predi_VRh4dNCcpzNmZrJ;
MPRINT(EM_DIAGRAM):   keep F_Diabetes_Predi_VRh4dNCcpzNmZrJ;
192212     if (F_Diabetes_Prediction = 'NO DIABETES') then do;
MPRINT(EM_DIAGRAM):   if (F_Diabetes_Prediction = 'NO DIABETES') then do;
192213     F_Diabetes_Predi_VRh4dNCcpzNmZrJ = 1;
MPRINT(EM_DIAGRAM):   F_Diabetes_Predi_VRh4dNCcpzNmZrJ = 1;
192214     end;
MPRINT(EM_DIAGRAM):   end;
192215     else do;
MPRINT(EM_DIAGRAM):   else do;
192216     F_Diabetes_Predi_VRh4dNCcpzNmZrJ = 0;
MPRINT(EM_DIAGRAM):   F_Diabetes_Predi_VRh4dNCcpzNmZrJ = 0;
192217     end;
MPRINT(EM_DIAGRAM):   end;
192218     keep F_Diabetes_Predi_Ocy9XFAe1NguCiE;
MPRINT(EM_DIAGRAM):   keep F_Diabetes_Predi_Ocy9XFAe1NguCiE;
192219     if (F_Diabetes_Prediction = 'DIABETES') then do;
MPRINT(EM_DIAGRAM):   if (F_Diabetes_Prediction = 'DIABETES') then do;
192220     F_Diabetes_Predi_Ocy9XFAe1NguCiE = 1;
MPRINT(EM_DIAGRAM):   F_Diabetes_Predi_Ocy9XFAe1NguCiE = 1;
192221     end;
MPRINT(EM_DIAGRAM):   end;
192222     else do;
MPRINT(EM_DIAGRAM):   else do;
192223     F_Diabetes_Predi_Ocy9XFAe1NguCiE = 0;
MPRINT(EM_DIAGRAM):   F_Diabetes_Predi_Ocy9XFAe1NguCiE = 0;
192224     end;
MPRINT(EM_DIAGRAM):   end;
192225     keep P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   keep P_Diabetes_Predictionprediabetes;
192226     keep P_Diabetes_Predictionno_diabetes;
MPRINT(EM_DIAGRAM):   keep P_Diabetes_Predictionno_diabetes;
192227     keep P_Diabetes_Predictiondiabetes;
MPRINT(EM_DIAGRAM):   keep P_Diabetes_Predictiondiabetes;
192228     output work.ASSESS_2DXDMZB_normSD_UM5P3r;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2DXDMZB_normSD_UM5P3r;
192229     keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
192230     retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
192231     _numberOfObservation_ + frequency_e70FMb;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_e70FMb;
192232     keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
192233     retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
192234     if (F_Diabetes_Prediction = 'PREDIABETES') then do;
MPRINT(EM_DIAGRAM):   if (F_Diabetes_Prediction = 'PREDIABETES') then do;
192235     _levelFrequency_1 + frequency_e70FMb;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_e70FMb;
192236     end;
MPRINT(EM_DIAGRAM):   end;
192237     keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
192238     retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
192239     if (F_Diabetes_Prediction = 'NO DIABETES') then do;
MPRINT(EM_DIAGRAM):   if (F_Diabetes_Prediction = 'NO DIABETES') then do;
192240     _levelFrequency_2 + frequency_e70FMb;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_e70FMb;
192241     end;
MPRINT(EM_DIAGRAM):   end;
192242     keep _levelFrequency_3;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_3;
192243     retain _levelFrequency_3 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_3 0;
192244     if (F_Diabetes_Prediction = 'DIABETES') then do;
MPRINT(EM_DIAGRAM):   if (F_Diabetes_Prediction = 'DIABETES') then do;
192245     _levelFrequency_3 + frequency_e70FMb;
MPRINT(EM_DIAGRAM):   _levelFrequency_3 + frequency_e70FMb;
192246     end;
MPRINT(EM_DIAGRAM):   end;
192247     if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
192248     output work.ASSESS_2DXDMZB_meansAndTi_CPK7yl;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2DXDMZB_meansAndTi_CPK7yl;
192249     end;
MPRINT(EM_DIAGRAM):   end;
192250     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.48 seconds
      cpu time            0.43 seconds
      
NOTE: There were 80227 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 80227 observations read from the data set EMWS2.REG2_TRAIN.
      WHERE Diabetes_Prediction not = ' ';
NOTE: The data set WORK.ASSESS_2DXDMZB_NORMSD_UM5P3R has 80227 observations and 9 variables.
NOTE: The data set WORK.ASSESS_2DXDMZB_MEANSANDTI_CPK7YL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.50 seconds
      cpu time            0.46 seconds
      

192251     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
192252     set EMWS2.MdlComp2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp2_EMRANK;
192253     where MODEL = "Reg2" and TARGET = "Diabetes_Prediction" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Reg2" and TARGET = "Diabetes_Prediction" and dataRole="TRAIN";
192254     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS2.MDLCOMP2_EMRANK.
      WHERE (MODEL='Reg2') and (TARGET='Diabetes_Prediction') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

192255     data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
192256     do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
192257     DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
192258     output;
MPRINT(EM_DIAGRAM):   output;
192259     end;
MPRINT(EM_DIAGRAM):   end;
192260     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

192261     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
192262     merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
192263     by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
192264     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

192265     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
192266     set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
192267     retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
192268     retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
192269     keep event;
MPRINT(EM_DIAGRAM):   keep event;
192270     keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
192271     if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
192272     bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
192273     _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
192274     if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
192275     /* tied */
192276     _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
192277     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
192278     end;
MPRINT(EM_DIAGRAM):   end;
192279     else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
192280     /* next tied */
192281     _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
192282     ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ ));
192283     end;
MPRINT(EM_DIAGRAM):   end;
192284     output;
MPRINT(EM_DIAGRAM):   output;
192285     *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
192286     * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
192287     *end;
MPRINT(EM_DIAGRAM):   *end;
192288     if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
192289     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
192290     end;
MPRINT(EM_DIAGRAM):   end;
192291     else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
192292     if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
192293     _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
192294     end;
MPRINT(EM_DIAGRAM):   end;
192295     end;
MPRINT(EM_DIAGRAM):   end;
192296     bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
192297     /* correct the previous change */
192298     end;
MPRINT(EM_DIAGRAM):   end;
192299     if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
192300     _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
192301     output;
MPRINT(EM_DIAGRAM):   output;
192302     end;
MPRINT(EM_DIAGRAM):   end;
192303     _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
192304     _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
192305     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

192306     data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
192307     set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
192308     by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
192309     retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
192310     if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
192311     _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
192312     end;
MPRINT(EM_DIAGRAM):   end;
192313     if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
192314     _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
192315     output;
MPRINT(EM_DIAGRAM):   output;
192316     end;
MPRINT(EM_DIAGRAM):   end;
192317     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

192318     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp2: Scoring REG2_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192319     *------------------------------------------------------------*;
192320     * MdlComp2: Scoring REG2_TRAIN data;
192321     *------------------------------------------------------------*;
192322     data EMWS2.MdlComp2_TRAIN
192323     / view=EMWS2.MdlComp2_TRAIN
192324     ;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp2_TRAIN / view=EMWS2.MdlComp2_TRAIN ;
192325     set EMWS2.Reg2_TRAIN
192326     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_TRAIN ;
192327     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas.
192328    +if (P_Diabetes_Predictionprediabetes ge 0.04536516928817) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.04536516928817) then do;
192329    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
192330    +end;
MPRINT(EM_DIAGRAM):   end;
192331    +else
192332    +if (P_Diabetes_Predictionprediabetes ge 0.03788551413796) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.03788551413796) then do;
192333    +b_Diabetes_Prediction = 2;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 2;
192334    +end;
MPRINT(EM_DIAGRAM):   end;
192335    +else
192336    +if (P_Diabetes_Predictionprediabetes ge 0.03321753605607) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.03321753605607) then do;
192337    +b_Diabetes_Prediction = 3;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 3;
192338    +end;
MPRINT(EM_DIAGRAM):   end;
192339    +else
192340    +if (P_Diabetes_Predictionprediabetes ge 0.02951026464783) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02951026464783) then do;
192341    +b_Diabetes_Prediction = 4;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 4;
192342    +end;
MPRINT(EM_DIAGRAM):   end;
192343    +else
192344    +if (P_Diabetes_Predictionprediabetes ge 0.02649902889289) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02649902889289) then do;
192345    +b_Diabetes_Prediction = 5;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 5;
192346    +end;
MPRINT(EM_DIAGRAM):   end;
192347    +else
192348    +if (P_Diabetes_Predictionprediabetes ge 0.0236496236538) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.0236496236538) then do;
192349    +b_Diabetes_Prediction = 6;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 6;
192350    +end;
MPRINT(EM_DIAGRAM):   end;
192351    +else
192352    +if (P_Diabetes_Predictionprediabetes ge 0.02109034399547) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02109034399547) then do;
192353    +b_Diabetes_Prediction = 7;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 7;
192354    +end;
MPRINT(EM_DIAGRAM):   end;
192355    +else
192356    +if (P_Diabetes_Predictionprediabetes ge 0.01878018732862) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01878018732862) then do;
192357    +b_Diabetes_Prediction = 8;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 8;
192358    +end;
MPRINT(EM_DIAGRAM):   end;
192359    +else
192360    +if (P_Diabetes_Predictionprediabetes ge 0.01667797185903) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01667797185903) then do;
192361    +b_Diabetes_Prediction = 9;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 9;
192362    +end;
MPRINT(EM_DIAGRAM):   end;
192363    +else
192364    +if (P_Diabetes_Predictionprediabetes ge 0.01466656239623) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01466656239623) then do;
192365    +b_Diabetes_Prediction = 10;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 10;
192366    +end;
MPRINT(EM_DIAGRAM):   end;
192367    +else
192368    +if (P_Diabetes_Predictionprediabetes ge 0.01284796654384) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01284796654384) then do;
192369    +b_Diabetes_Prediction = 11;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 11;
192370    +end;
MPRINT(EM_DIAGRAM):   end;
192371    +else
192372    +if (P_Diabetes_Predictionprediabetes ge 0.01115798113147) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01115798113147) then do;
192373    +b_Diabetes_Prediction = 12;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 12;
192374    +end;
MPRINT(EM_DIAGRAM):   end;
192375    +else
192376    +if (P_Diabetes_Predictionprediabetes ge 0.00962748123041) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00962748123041) then do;
192377    +b_Diabetes_Prediction = 13;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 13;
192378    +end;
MPRINT(EM_DIAGRAM):   end;
192379    +else
192380    +if (P_Diabetes_Predictionprediabetes ge 0.00820041155822) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00820041155822) then do;
192381    +b_Diabetes_Prediction = 14;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 14;
192382    +end;
MPRINT(EM_DIAGRAM):   end;
192383    +else
192384    +if (P_Diabetes_Predictionprediabetes ge 0.00689726474763) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00689726474763) then do;
192385    +b_Diabetes_Prediction = 15;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 15;
192386    +end;
MPRINT(EM_DIAGRAM):   end;
192387    +else
192388    +if (P_Diabetes_Predictionprediabetes ge 0.00571859844928) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00571859844928) then do;
192389    +b_Diabetes_Prediction = 16;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 16;
192390    +end;
MPRINT(EM_DIAGRAM):   end;
192391    +else
192392    +if (P_Diabetes_Predictionprediabetes ge 0.00464200898549) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00464200898549) then do;
192393    +b_Diabetes_Prediction = 17;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 17;
192394    +end;
MPRINT(EM_DIAGRAM):   end;
192395    +else
192396    +if (P_Diabetes_Predictionprediabetes ge 0.00365624487722) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00365624487722) then do;
192397    +b_Diabetes_Prediction = 18;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 18;
192398    +end;
MPRINT(EM_DIAGRAM):   end;
192399    +else
192400    +if (P_Diabetes_Predictionprediabetes ge 0.002655763078) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.002655763078) then do;
192401    +b_Diabetes_Prediction = 19;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 19;
192402    +end;
MPRINT(EM_DIAGRAM):   end;
192403    +else
192404    +do;
MPRINT(EM_DIAGRAM):   else do;
192405    +b_Diabetes_Prediction = 20;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 20;
192406    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
192407     run;

NOTE: DATA STEP view saved on file EMWS2.MDLCOMP2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
192408     quit;
192409     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
192410     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp2: Scoring REG2_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192411     *------------------------------------------------------------*;
192412     * MdlComp2: Scoring REG2_VALIDATE data;
192413     *------------------------------------------------------------*;
192414     data EMWS2.MdlComp2_VALIDATE
192415     / view=EMWS2.MdlComp2_VALIDATE
192416     ;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp2_VALIDATE / view=EMWS2.MdlComp2_VALIDATE ;
192417     set EMWS2.Reg2_VALIDATE
192418     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_VALIDATE ;
192419     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas.
192420    +if (P_Diabetes_Predictionprediabetes ge 0.04536516928817) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.04536516928817) then do;
192421    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
192422    +end;
MPRINT(EM_DIAGRAM):   end;
192423    +else
192424    +if (P_Diabetes_Predictionprediabetes ge 0.03788551413796) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.03788551413796) then do;
192425    +b_Diabetes_Prediction = 2;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 2;
192426    +end;
MPRINT(EM_DIAGRAM):   end;
192427    +else
192428    +if (P_Diabetes_Predictionprediabetes ge 0.03321753605607) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.03321753605607) then do;
192429    +b_Diabetes_Prediction = 3;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 3;
192430    +end;
MPRINT(EM_DIAGRAM):   end;
192431    +else
192432    +if (P_Diabetes_Predictionprediabetes ge 0.02951026464783) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02951026464783) then do;
192433    +b_Diabetes_Prediction = 4;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 4;
192434    +end;
MPRINT(EM_DIAGRAM):   end;
192435    +else
192436    +if (P_Diabetes_Predictionprediabetes ge 0.02649902889289) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02649902889289) then do;
192437    +b_Diabetes_Prediction = 5;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 5;
192438    +end;
MPRINT(EM_DIAGRAM):   end;
192439    +else
192440    +if (P_Diabetes_Predictionprediabetes ge 0.0236496236538) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.0236496236538) then do;
192441    +b_Diabetes_Prediction = 6;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 6;
192442    +end;
MPRINT(EM_DIAGRAM):   end;
192443    +else
192444    +if (P_Diabetes_Predictionprediabetes ge 0.02109034399547) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02109034399547) then do;
192445    +b_Diabetes_Prediction = 7;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 7;
192446    +end;
MPRINT(EM_DIAGRAM):   end;
192447    +else
192448    +if (P_Diabetes_Predictionprediabetes ge 0.01878018732862) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01878018732862) then do;
192449    +b_Diabetes_Prediction = 8;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 8;
192450    +end;
MPRINT(EM_DIAGRAM):   end;
192451    +else
192452    +if (P_Diabetes_Predictionprediabetes ge 0.01667797185903) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01667797185903) then do;
192453    +b_Diabetes_Prediction = 9;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 9;
192454    +end;
MPRINT(EM_DIAGRAM):   end;
192455    +else
192456    +if (P_Diabetes_Predictionprediabetes ge 0.01466656239623) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01466656239623) then do;
192457    +b_Diabetes_Prediction = 10;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 10;
192458    +end;
MPRINT(EM_DIAGRAM):   end;
192459    +else
192460    +if (P_Diabetes_Predictionprediabetes ge 0.01284796654384) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01284796654384) then do;
192461    +b_Diabetes_Prediction = 11;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 11;
192462    +end;
MPRINT(EM_DIAGRAM):   end;
192463    +else
192464    +if (P_Diabetes_Predictionprediabetes ge 0.01115798113147) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01115798113147) then do;
192465    +b_Diabetes_Prediction = 12;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 12;
192466    +end;
MPRINT(EM_DIAGRAM):   end;
192467    +else
192468    +if (P_Diabetes_Predictionprediabetes ge 0.00962748123041) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00962748123041) then do;
192469    +b_Diabetes_Prediction = 13;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 13;
192470    +end;
MPRINT(EM_DIAGRAM):   end;
192471    +else
192472    +if (P_Diabetes_Predictionprediabetes ge 0.00820041155822) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00820041155822) then do;
192473    +b_Diabetes_Prediction = 14;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 14;
192474    +end;
MPRINT(EM_DIAGRAM):   end;
192475    +else
192476    +if (P_Diabetes_Predictionprediabetes ge 0.00689726474763) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00689726474763) then do;
192477    +b_Diabetes_Prediction = 15;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 15;
192478    +end;
MPRINT(EM_DIAGRAM):   end;
192479    +else
192480    +if (P_Diabetes_Predictionprediabetes ge 0.00571859844928) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00571859844928) then do;
192481    +b_Diabetes_Prediction = 16;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 16;
192482    +end;
MPRINT(EM_DIAGRAM):   end;
192483    +else
192484    +if (P_Diabetes_Predictionprediabetes ge 0.00464200898549) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00464200898549) then do;
192485    +b_Diabetes_Prediction = 17;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 17;
192486    +end;
MPRINT(EM_DIAGRAM):   end;
192487    +else
192488    +if (P_Diabetes_Predictionprediabetes ge 0.00365624487722) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00365624487722) then do;
192489    +b_Diabetes_Prediction = 18;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 18;
192490    +end;
MPRINT(EM_DIAGRAM):   end;
192491    +else
192492    +if (P_Diabetes_Predictionprediabetes ge 0.002655763078) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.002655763078) then do;
192493    +b_Diabetes_Prediction = 19;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 19;
192494    +end;
MPRINT(EM_DIAGRAM):   end;
192495    +else
192496    +do;
MPRINT(EM_DIAGRAM):   else do;
192497    +b_Diabetes_Prediction = 20;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 20;
192498    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
192499     run;

NOTE: DATA STEP view saved on file EMWS2.MDLCOMP2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.REG2_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.12 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_DIAGRAM):   quit;
192500     quit;
192501     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
192502     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp2: Scoring REG2_TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192503     *------------------------------------------------------------*;
192504     * MdlComp2: Scoring REG2_TEST data;
192505     *------------------------------------------------------------*;
192506     data EMWS2.MdlComp2_TEST
192507     / view=EMWS2.MdlComp2_TEST
192508     ;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp2_TEST / view=EMWS2.MdlComp2_TEST ;
192509     set EMWS2.Reg2_TEST
192510     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_TEST ;
192511     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMFLOWSCORE.sas.
192512    +if (P_Diabetes_Predictionprediabetes ge 0.04536516928817) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.04536516928817) then do;
192513    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
192514    +end;
MPRINT(EM_DIAGRAM):   end;
192515    +else
192516    +if (P_Diabetes_Predictionprediabetes ge 0.03788551413796) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.03788551413796) then do;
192517    +b_Diabetes_Prediction = 2;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 2;
192518    +end;
MPRINT(EM_DIAGRAM):   end;
192519    +else
192520    +if (P_Diabetes_Predictionprediabetes ge 0.03321753605607) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.03321753605607) then do;
192521    +b_Diabetes_Prediction = 3;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 3;
192522    +end;
MPRINT(EM_DIAGRAM):   end;
192523    +else
192524    +if (P_Diabetes_Predictionprediabetes ge 0.02951026464783) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02951026464783) then do;
192525    +b_Diabetes_Prediction = 4;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 4;
192526    +end;
MPRINT(EM_DIAGRAM):   end;
192527    +else
192528    +if (P_Diabetes_Predictionprediabetes ge 0.02649902889289) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02649902889289) then do;
192529    +b_Diabetes_Prediction = 5;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 5;
192530    +end;
MPRINT(EM_DIAGRAM):   end;
192531    +else
192532    +if (P_Diabetes_Predictionprediabetes ge 0.0236496236538) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.0236496236538) then do;
192533    +b_Diabetes_Prediction = 6;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 6;
192534    +end;
MPRINT(EM_DIAGRAM):   end;
192535    +else
192536    +if (P_Diabetes_Predictionprediabetes ge 0.02109034399547) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02109034399547) then do;
192537    +b_Diabetes_Prediction = 7;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 7;
192538    +end;
MPRINT(EM_DIAGRAM):   end;
192539    +else
192540    +if (P_Diabetes_Predictionprediabetes ge 0.01878018732862) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01878018732862) then do;
192541    +b_Diabetes_Prediction = 8;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 8;
192542    +end;
MPRINT(EM_DIAGRAM):   end;
192543    +else
192544    +if (P_Diabetes_Predictionprediabetes ge 0.01667797185903) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01667797185903) then do;
192545    +b_Diabetes_Prediction = 9;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 9;
192546    +end;
MPRINT(EM_DIAGRAM):   end;
192547    +else
192548    +if (P_Diabetes_Predictionprediabetes ge 0.01466656239623) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01466656239623) then do;
192549    +b_Diabetes_Prediction = 10;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 10;
192550    +end;
MPRINT(EM_DIAGRAM):   end;
192551    +else
192552    +if (P_Diabetes_Predictionprediabetes ge 0.01284796654384) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01284796654384) then do;
192553    +b_Diabetes_Prediction = 11;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 11;
192554    +end;
MPRINT(EM_DIAGRAM):   end;
192555    +else
192556    +if (P_Diabetes_Predictionprediabetes ge 0.01115798113147) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.01115798113147) then do;
192557    +b_Diabetes_Prediction = 12;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 12;
192558    +end;
MPRINT(EM_DIAGRAM):   end;
192559    +else
192560    +if (P_Diabetes_Predictionprediabetes ge 0.00962748123041) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00962748123041) then do;
192561    +b_Diabetes_Prediction = 13;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 13;
192562    +end;
MPRINT(EM_DIAGRAM):   end;
192563    +else
192564    +if (P_Diabetes_Predictionprediabetes ge 0.00820041155822) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00820041155822) then do;
192565    +b_Diabetes_Prediction = 14;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 14;
192566    +end;
MPRINT(EM_DIAGRAM):   end;
192567    +else
192568    +if (P_Diabetes_Predictionprediabetes ge 0.00689726474763) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00689726474763) then do;
192569    +b_Diabetes_Prediction = 15;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 15;
192570    +end;
MPRINT(EM_DIAGRAM):   end;
192571    +else
192572    +if (P_Diabetes_Predictionprediabetes ge 0.00571859844928) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00571859844928) then do;
192573    +b_Diabetes_Prediction = 16;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 16;
192574    +end;
MPRINT(EM_DIAGRAM):   end;
192575    +else
192576    +if (P_Diabetes_Predictionprediabetes ge 0.00464200898549) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00464200898549) then do;
192577    +b_Diabetes_Prediction = 17;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 17;
192578    +end;
MPRINT(EM_DIAGRAM):   end;
192579    +else
192580    +if (P_Diabetes_Predictionprediabetes ge 0.00365624487722) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.00365624487722) then do;
192581    +b_Diabetes_Prediction = 18;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 18;
192582    +end;
MPRINT(EM_DIAGRAM):   end;
192583    +else
192584    +if (P_Diabetes_Predictionprediabetes ge 0.002655763078) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.002655763078) then do;
192585    +b_Diabetes_Prediction = 19;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 19;
192586    +end;
MPRINT(EM_DIAGRAM):   end;
192587    +else
192588    +do;
MPRINT(EM_DIAGRAM):   else do;
192589    +b_Diabetes_Prediction = 20;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 20;
192590    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
192591     run;

NOTE: DATA STEP view saved on file EMWS2.MDLCOMP2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.REG2_TEST.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
192592     quit;
192593     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
192594     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
192595     * MdlComp2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp2: Computing metadata for TRAIN data;
192596     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.MdlComp2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.MdlComp2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.MdlComp2_TRAIN out=WORK.M1VLL5W9 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VLL5W9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VLL5W9(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VLL5W9;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1VLL5W9;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3VVTIZ_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1063BN8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VVTIZ_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Reg2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Reg2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp2";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS2.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
      
NOTE: View EMWS2.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      
NOTE: View EMWS2.MDLCOMP2_TEST.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
