*------------------------------------------------------------*
User:                shre2
Date:                March 04, 2024
Time:                01:51:52
Site:                70080107
Platform:            X64_10PRO
Maintenance Release: 9.04.01M7P080520
EM Version:          15.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:50:03" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                March 04, 2024
Time:                01:50:03
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1R2RS5Y "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1R2RS5Y new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:50:03" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                shre2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080107";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M7P080520";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:50:04" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                shre2";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
221391     proc freq data=EMWS2.Report_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Report_VariableSet noprint;
221392     table ROLE*LEVEL/out=WORK.ReportMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ReportMETA;
221393     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS2.REPORT_VARIABLESET.
NOTE: The data set WORK.REPORTMETA has 15 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
221394     proc print data=WORK.ReportMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ReportMETA label noobs;
221395     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
221396     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
221397     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
221398     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
221399     run;
 
NOTE: There were 15 observations read from the data set WORK.REPORTMETA.
NOTE: The PROCEDURE PRINT printed page 171.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221400     title10;
MPRINT(EM_DIAGRAM):   title10;
221401     %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'SV.PredictiveAnalysis';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'SV.Prediction';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Tree4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;
MPRINT(HPDM_ISGRID):  ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221783     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
221784     * Report: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Report: Generation of macros and macro variables;
221785     * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
221786     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
221787     %let EMEXCEPTIONSTRING=;
221788     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
221789     * TRAIN: Report;
MPRINT(EM_DIAGRAM):   * TRAIN: Report;
221790     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221791     %let EM_ACTION = TRAIN;
221792     %let syscc = 0;
221793     %macro main;
221794
221795       filename temp catalog 'sashelp.emutil.reporter_macros.source';
221796       %include temp;
221797       filename temp;
221798
221799       %setProperties;
221800
221801       %if %upcase(&EM_ACTION) = CREATE %then %do;
221802         filename temp catalog 'sashelp.emutil.reporter_create.source';
221803         %include temp;
221804         filename temp;
221805
221806         %create;
221807       %end;
221808
221809        %else
221810        %if %upcase(&EM_ACTION) = TRAIN %then %do;
221811
221812            filename temp catalog 'sashelp.emutil.reporter_train.source';
221813            %include temp;
221814            filename temp;
221815            %train;
221816        %end;
221817
221818        %doendm:
221819     %mend main;
221820
221821     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_MACROS.SOURCE.
221824    +%macro SetProperties;
221826    +     /* reporting options */
221827    +     %em_checkmacro(name=EM_PROPERTY_FORMAT,         value=PDF , global=Y);
221828    +     %em_checkmacro(name=EM_PROPERTY_NODES ,         value=PATH, global=Y);
221829    +     %em_checkmacro(name=EM_PROPERTY_STYLE ,         value=DEFAULT, global=Y);
221830    +     %em_checkmacro(name=EM_PROPERTY_SHOWALL,        value=N, global=Y);
221832    +     %em_checkmacro(name=EM_PROPERTY_SUMMARIZATION,  value=Y, global=Y);
221833    +     %em_checkmacro(name=EM_PROPERTY_VARRANKING,     value=Y, global=Y);
221834    +     %em_checkmacro(name=EM_PROPERTY_CLASSIFICATION, value=Y, global=Y);
221835    +     %em_checkmacro(name=EM_PROPERTY_CROSSTABS,      value=Y, global=Y);
221836    +     %em_checkmacro(name=EM_PROPERTY_LIFTCHART,      value=Y, global=Y);
221837    +     %em_checkmacro(name=EM_PROPERTY_FITSTAT,        value=Y, global=Y);
221838    +     %em_checkmacro(name=EM_PROPERTY_COMPAREMDL,     value=Y, global=Y);
221840    +     %em_checkmacro(name=EM_PROPERTY_BASICOUTPUT,    value=N, global=Y);
221842    +    %em_checkmacro(name=EM_PROPERTY_textfont,   value=Arial, global=Y);
221843    +    %em_checkmacro(name=EM_PROPERTY_headersize, value=8, global=Y);
221844    +    %em_checkmacro(name=EM_PROPERTY_textsize,   value=6, global=Y);
221845    +    %em_checkmacro(name=EM_PROPERTY_titlesize,  value=10, global=Y);
221847    +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TRAIN.SOURCE.
221848    +
221849    +%macro train();
221850    +
221851    +    filename temp catalog 'sashelp.emutil.reporter_trainmacros.source'; %include temp; filename temp;
221852    +    filename temp catalog 'sashelp.emrpm.em_modelprops.source';         %include temp; filename temp;
221853    +
221854    +    /* Initialize property macro variables */
221855    +    %SetProperties;
221856    +
221857    +    /* if pdf or rtf files exist, delete these prior to recreating report */
221858    +    %EM_GETNAME(key=REPORT, type=FILE, extension=pdf);
221859    +    filename pdffile "&EM_USER_REPORT";
221860    +    %if %sysfunc(fexist(pdffile)) %then %do;
221861    +        %let rc = %sysfunc(fdelete(pdffile));
221862    +    %end;
221863    +    filename pdffile;
221864    +
221865    +    %EM_GETNAME(key=REPORT, type=FILE, extension=rtf);
221866    +    filename rtffile "&EM_USER_REPORT";
221867    +    %if %sysfunc(fexist(rtffile)) %then %do;
221868    +        %let rc = %sysfunc(fdelete(rtffile));
221869    +    %end;
221870    +    filename rtffile;
221871    +
221872    +    /* create report */
221873    +
221874    +    %EM_REPORT_CREATE(
221875    +        path        = &EM_NODEDIR,
221876    +        lib         = &EM_LIB,
221877    +        startnodeid = &EM_NODEID,
221878    +        showall     = &EM_PROPERTY_SHOWALL,
221879    +        nodes       = &EM_PROPERTY_NODES,
221880    +        format      = &EM_PROPERTY_FORMAT,
221881    +        style       = &EM_PROPERTY_STYLE
221882    +    );
221883    +
221884    +    %if &EMEXCEPTIONSTRING ne %then %do; %goto doendm; %end;
221885    +
221886    +    %EM_REPORT_RESULTS(
221887    +        path        = &EM_NODEDIR,
221888    +        lib         = &EM_LIB,
221889    +        startnodeid = &EM_NODEID,
221890    +        showall     = &EM_PROPERTY_SHOWALL,
221891    +        nodes       = &EM_PROPERTY_NODES,
221892    +        format      = &EM_PROPERTY_FORMAT,
221893    +        style       = &EM_PROPERTY_STYLE
221894    +    );
221895    +
221896    +    %doendm:
221897    +
221898    +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emutil.reporter_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TRAINMACROS.SOURCE.
221899    +/*---------------------------------------------------------*/
221900    + *  EM_REPORT_CREATE;
MPRINT(TRAIN):   * EM_REPORT_CREATE;
221901    + *   all work needed to start the documents;
MPRINT(TRAIN):   * all work needed to start the documents;
221902    + *  - identify directory location;
MPRINT(TRAIN):   * - identify directory location;
221903    + *  - clear directory of em report files;
MPRINT(TRAIN):   * - clear directory of em report files;
221904    + *  - initialize document options;
MPRINT(TRAIN):   * - initialize document options;
221905    + *  - setup ODS system;
MPRINT(TRAIN):   * - setup ODS system;
221906    +/*---------------------------------------------------------*/
221907    +%macro EM_REPORT_CREATE(
221908    +    path=,             /*-- output location             ---*/
221909    +    lib=,              /*-- em workspace library        ---*/
221910    +    startnodeid=,      /*-- starting nodeid             ---*/
221911    +    showall=,          /*-- show all content Y or N     ---*/
221912    +    nodes=,            /*-- nodes to generate report on ---*/
221913    +    format=,           /*-- format for generated report ---*/
221914    +    style=             /*--- style for ODS statement    ---*/
221915    +) ;
221917    +    filename temp catalog 'sashelp.emutil.reporter_plotmacros.source';      %include temp; filename temp;
221918    +    filename temp catalog 'sashelp.emutil.reporter_printmacros.source';     %include temp; filename temp;
221919    +    filename temp catalog 'sashelp.emutil.reporter_rpmmacros.source';       %include temp; filename temp;
221920    +    filename temp catalog 'sashelp.emutil.em_gettrainpath.source' ;         %include temp; filename temp;
221921    +    filename temp catalog 'sashelp.emutil.reporter_tagset_template.source'; %include temp; filename temp;
221923    +    /*--- 1. set global parameters ---*/
221925    +    %GLOBAL EM_REPORT_PATH    ; %let EM_REPORT_PATH    = &PATH ;
221926    +    %GLOBAL EM_REPORT_SHOWALL ; %let EM_REPORT_SHOWALL = %upcase(&showall) ;
221927    +    %GLOBAL EM_REPORT_LIB     ; %let EM_REPORT_LIB     = &lib;
221928    +    %GLOBAL EM_REPORT_NODES   ; %let EM_REPORT_NODES   = &nodes;
221929    +    %GLOBAL EM_REPORT_FORMAT  ; %let EM_REPORT_FORMAT  = &format;
221930    +    %GLOBAL EM_REPORT_SYTLE   ; %let EM_REPORT_STYLE   = &style;
221932    +    /*--- 2. set global constants ---*/
221934    +    %GLOBAL EM_REPORT_GDEVICE;
221935    +    %GLOBAL EM_REPORT_PRINT_MAXVARS;
221936    +    %GLOBAL EM_REPORT_TEXT_FONT;
221937    +    %GLOBAL EM_REPORT_TEXT_SIZE;
221938    +    %GLOBAL EM_REPORT_TITLE_SIZE;
221939    +    %GLOBAL EM_REPORT_HEADER_SIZE;
221940    +    %GLOBAL EM_REPORT_NODE_FONT;
221941    +    %GLOBAL EM_REPORT_TITLE;
221942    +    %GLOBAL EM_REPORT_FOOTNOTE1;
221943    +    %GLOBAL EM_REPORT_FOOTNOTE2;
221945    +    %global EM_REPORT_SUPPRESS_DATE; %let EM_REPORT_SUPPRESS_DATE =;
221947    +    %global RPM_REPORT_MODELNODE RPM_REPORT_SCORENODE RPM_REPORT_MDLCOMP RPM_REPORT_VALIDSUMMARY;
221949    +    %if "&EM_REPORT_GDEVICE"       eq ""  %then %let EM_REPORT_GDEVICE = GIF;
221950    +    %if "&EM_REPORT_PRINT_MAXVARS" eq ""  %then %let EM_REPORT_PRINT_MAXVARS= 40;
221951    +    %if "&EM_REPORT_TEXT_FONT"     eq ""  %then %do;
221952    +        %let EM_REPORT_TEXT_FONT= %sysfunc(getlocale(FTITLE, &EM_PROPERTY_TEXTFONT));
221953    +        %let EM_REPORT_TEXT_FONT= %sysfunc(tranwrd(&EM_REPORT_TEXT_FONT,%str(<ttf>),%str()));
221954    +    %end;
221955    +    %if "&EM_REPORT_NODE_FONT"     eq ""  %then %do;
221956    +        %let EM_REPORT_NODE_FONT = %sysfunc(getlocale(FTITLE, SIMPLEX)) ;
221957    +        %let EM_REPORT_NODE_FONT = %sysfunc(tranwrd(&EM_REPORT_NODE_FONT,%str(<ttf>),%str()));
221958    +    %end;
221959    +    %if "&EM_REPORT_HEADER_SIZE"   eq ""  %then %let EM_REPORT_HEADER_SIZE = &EM_PROPERTY_HEADERSIZE;
221960    +    %if "&EM_REPORT_TEXT_SIZE"     eq ""  %then %let EM_REPORT_TEXT_SIZE   = &EM_PROPERTY_TEXTSIZE;
221961    +    %if "&EM_REPORT_TITLE_SIZE"    eq ""  %then %let EM_REPORT_TITLE_SIZE  = &EM_PROPERTY_TITLESIZE;
221963    +    /*--- 3. text for title statements ---*/
221965    +    %global EM_REPORT_PROJECT_TEXT ; %let EM_REPORT_PROJECT_TEXT= %superq(EM_PROJECTNAME);
221966    +    %global EM_REPORT_DIAGRAM_TEXT ; %let EM_REPORT_DIAGRAM_TEXT= %superq(EM_WSNAME);
221968    +    %EM_REPORT_NODE_TEXT(&startnodeid) ;
221970    +    /*--- 4. create output filename ---*/
221972    +    %EM_REGISTER(key=REPORT, type=FILE, extension=&EM_REPORT_FORMAT);
221974    +    /*--- 5. Allways get the path for showing the score code --*/
221976    +    %let FLOW= ;            /*--- ignore for now ---*/
221977    +    %let PUBLISH=;          /*--- ignore for now ---*/
221978    +    %let EM_LIB=&lib ;      /*--- used by the macro */
221980    +    %if &EM_REPORT_NODES ne SUMMARY %then %do;
221981    +        %EM_PATH(nodeid=&startnodeid, outds=emreportpath, nodes=&EM_REPORT_NODES);
221982    +    %end;
221983    +    %else %do;
221984    +        %EM_PATH(nodeid=&startnodeid, outds=emreportpath, nodes=PATH);
221985    +    %end;
221987    +    data emreportpath;
221988    +        set emreportpath;
221989    +        rename nodelabel=nodeid;
221990    +        nodeIndex = _n_;
221991    +    run;
221993    +    /*--- 6. create new tagset templates needed for tree, icicle and pie charts */
221995    +    *** create new style template to address fonts in ods text;
221997    +    ods path(prepend) work.templat(update);
221998    +    proc template ;
221999    +        define style styles.em_style / store=work.templat;
222000    +        parent= styles.&EM_REPORT_STYLE;
222002    +            style usertext from usertext /
222003    +                foreground=black font_size=&EM_REPORT_TITLE_SIZE pt font_face="&EM_REPORT_TEXT_FONT" font_weight=bold
222004    +            ;
222005    +            style systemtitle from systemtitle /
222006    +              color=colors("systitlefg") backgroundcolor=colors("systitlebg")
222007    +              fontsize=&EM_REPORT_TITLE_SIZE pt font_face="&EM_REPORT_TEXT_FONT" font_weight=bold
222008    +            ;
222009    +            style systemfooter from systemfooter /
222010    +              color=colors("systitlefg") backgroundcolor=colors("systitlebg")
222011    +              font_face="&EM_REPORT_TEXT_FONT"
222012    +            ;
222013    +            style GraphFonts from GraphFonts /
222014    +                'GraphTitleFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
222015    +                'GraphTitle1Font'   = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
222016    +                'GraphLabelFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_HEADER_SIZE pt)
222017    +                'GraphFootnoteFont' = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222018    +                'GraphValueFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222019    +                'GraphDataFont'     = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222020    +            ;
222021    +            style Fonts from Fonts/
222022    +                'TitleFont'           = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
222023    +                'TitleFont2'          = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
222024    +                'StrongFont'          = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222025    +                'EmphasisFont'        = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222026    +                'headingFont'         = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222027    +                'headingEmphasisFont' = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222028    +                'FixedEmphasisFont'   = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222029    +                'FixedStrongFont'     = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222030    +                'FixedHeadingFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222031    +                'FixedFont'           = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222032    +                'BatchFixedFont'      = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222033    +                'docFont'             = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
222034    +            ;
222035    +            style GraphTitleText from GraphTitleText / font_face="&EM_REPORT_TEXT_FONT";
222036    +            style data           from data           / font_size=&EM_REPORT_TEXT_SIZE pt;
222037    +            style header         from header         / font_size=&EM_REPORT_HEADER_SIZE pt;
222038    +            style rowheader      from header;
222039    +        end;
222040    +    run; quit;
222042    +    /*--- 7. start report / destination configurations ---*/
222044    +    *** options for page layout;
222045    +    options nodate nocenter number ls=97 ;
222047    +    *** get file name;
222048    +    %EM_GETNAME(key=REPORT, type=FILE, extension=&EM_REPORT_FORMAT);
222049    +    %let file = &EM_USER_REPORT;
222051    +    *** turn off LISTING and turn on the specified destination;
222052    +    ods listing close;
222053    +    ods graphics / height=4.5in;
222054    +    ods &EM_REPORT_FORMAT file="&file" style=styles.em_style
222055    +        %if &EM_REPORT_FORMAT eq PDF %then %do; startpage=NO uniform NOTOC %end;
222056    +        %if &EM_REPORT_FORMAT eq RTF %then %do; startpage=NEVER BODYTITLE  %end;
222057    +    ;
222059    +    *** titles and footnotes;
222060    +    ods &EM_REPORT_FORMAT text=" ";
222061    +    %if "&EM_REPORT_TITLE" ne "" %then %do;
222062    +        ods &EM_REPORT_FORMAT text="&EM_REPORT_TITLE";
222063    +    %end;
222064    +    %else %do;
222065    +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))";
222066    +    %end;
222068    +    %if "&EM_REPORT_FOOTNOTE1" ne "" %then %do; footnote1 "&EM_REPORT_FOOTNOTE1"; %end;
222069    +    %if "&EM_REPORT_FOOTNOTE2" ne "" %then %do; footnote2 "&EM_REPORT_FOOTNOTE2"; %end;
222071    +    /*--- 8. verify that valid flow exists for SUMMARY (RPM) report ---*/
222072    +    /*--- if not, SUMMARY style report can not be generated and PATH report will be done instead ---*/
222074    +    %EM_REPORT_validSummaryPath(startNodeID = &startNodeID);
222076    +    %if ((&EM_REPORT_NODES eq SUMMARY ) AND(&RPM_REPORT_VALIDSUMMARY eq 1))%then %do;
222077    +        %local hprpm_hpassess;
222078    +        %let   hprpm_hpassess = &em_lib..&RPM_REPORT_MODELNODE._hpassess;
222079    +        %if %sysfunc(exist(&hprpm_hpassess)) %then %do;
222080    +            filename temp catalog 'sashelp.hpdm.hpdm_scorecard.source'; %include temp; filename temp;
222081    +            %EM_REPORT_SUMMARY(runHP=1);
222082    +        %end;
222083    +        %else %do;
222084    +            %EM_REPORT_SUMMARY(runHP=0);
222085    +        %end;
222086    +        %goto create_endline;
222087    +    %end;
222088    +    %else %do;
222089    +        %if &EM_REPORT_NODES eq SUMMARY %then %let EM_REPORT_NODES= PATH;
222090    +    %end;
222092    +    /*--- 9. output report information (header of the report)---*/
222094    +    ods proclabel "%sysfunc(sasmsg(sashelp.dmine, rpt_reportinfo_title, NOQUOTE))";
222095    +    data _null_;
222096    +        call symput('report_date', %nrbquote(strip(put(date(),     NLDATE.))));
222097    +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
222098    +    run;
222100    +    data _null_;
222101    +        file print ;
222102    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
222103    +        %if ((&EM_REPORT_SUPPRESS_DATE eq ) OR (%index(&EM_REPORT_SUPPRESS_DATE, Y) < 1)) %then %do;
222104    +            put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
222105    +        %end;
222106    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
222107    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
222108    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
222109    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
222110    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
222111    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &EM_REPORT_showall))" /;
222112    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
222113    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &EM_REPORT_STYLE))" /;
222114    +    run ;
222116    +    /*--- 10. generate the workspace plot ---*/
222118    +    %em_report_workspace_xml;
222119    +    %em_getname(key=PFD, type=FILE, extension=XML);
222120    +    %em_report_makeds(&EM_USER_PFD, xmldata);
222121    +    %em_report_workspace_render;
222123    +    /*--- 11. identify the nodes to report                                  ---*/
222124    +    /*--- merged and modified from three previous macros:                   ---*/
222125    +    /*--- EM_REPORT_PATH, EM_REPORT_PREDECESORS EM_REPORT_PREDECESORS_COUNT ---*/
222127    +    %global EM_REPORT_NODENUM EM_REPORT_NODELIST;
222128    +    %let EM_REPORT_NODENUM = 0;
222130    +    %if &EM_REPORT_NODES eq PATH or &EM_REPORT_NODES eq ALL
222131    +    %then %do;
222132    +        %if %sysfunc(exist(emreportpath)) %then %do;
222133    +            proc sql noprint;
222134    +                select count(*) into :EM_REPORT_NODENUM
222135    +                    from emreportpath where nodeID ne " ";
222136    +                %if &EM_REPORT_NODENUM gt 0 %then %do;
222137    +                    select strip(nodeID) into :EM_REPORT_NODELIST separated by ' '
222138    +                        from emreportpath where nodeID ne " " order by nodeIndex;
222139    +                %end;
222140    +            quit;
222141    +        %end;
222142    +    %end;
222143    +    %else %if &EM_REPORT_NODES eq PREDECESSOR
222144    +    %then %do ;
222145    +        proc sql noprint;
222146    +            select count(*) into :EM_REPORT_NODENUM
222147    +                from &EM_REPORT_LIB..em_dgraph where upcase(strip(to)) eq upcase(strip("&startnodeid"));
222148    +            %if &EM_REPORT_NODENUM gt 0 %then %do;
222149    +                select strip(from) into :EM_REPORT_NODELIST separated by ' '
222150    +                    from &EM_REPORT_LIB..em_dgraph where upcase(strip(to)) eq upcase(strip("&startnodeid"));
222151    +            %end;
222152    +        quit;
222153    +    %end;
222154    +    %else %if &EM_REPORT_NODES eq 0 %then %do;
222155    +        %let EM_REPORT_NODENUM = 1;
222156    +        %let EM_REPORT_NODELIST = &startnodeid;
222157    +    %end;
222159    +    %if &EM_REPORT_NODENUM gt 0 %then %do;
222160    +        %do n = 1 %to &EM_REPORT_NODENUM;
222161    +            %EM_REPORT_NODE(nodeid=%scan(&EM_REPORT_NODELIST,&n,' '));
222162    +        %end;
222163    +    %end;
222165    +    /*--- 12. close report and ODS destinations---*/
222167    +    %create_endline:;
222169    +    data _NULL_ ;
222170    +        file print;
222171    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_endreport_note, NOQUOTE))" ;
222172    +    run;
222174    +    title1; title2; title3 ;
222175    +    %if "&EM_REPORT_FOOTNOTE1" ne "" %then %do; footnote1; %end;
222176    +    %if "&EM_REPORT_FOOTNOTE2" ne "" %then %do; footnote2; %end;
222177    +    ods graphics / reset=height;
222178    +    ods listing;
222179    +    ods &EM_REPORT_FORMAT close;
222181    +%mend EM_REPORT_CREATE ;
222183    +/*---------------------------------------------------------*/
222184    + * EM_REPORT_NODE ;
MPRINT(TRAIN):   * EM_REPORT_NODE ;
222185    + *     create a report for a node on an EM diagram ;
MPRINT(TRAIN):   * create a report for a node on an EM diagram ;
222186    +/*---------------------------------------------------------*/
222187    +%macro EM_REPORT_NODE(nodeid=) ;
222189    +    %if not %sysfunc(exist(&em_report_lib..&nodeid._emreport))
222190    +    %then %do ;
222191    +        %put NOTE: Node report data set (&em_report_lib..&nodeid._emreport) is not defined.;
222192    +        %goto node_skip;
222193    +    %end ;
222195    +    /*--- 1. set global parameters ---*/
222197    +    %global EM_REPORT_NODEID EM_REPORT_KEY_WHERECLAUSE
222198    +            EM_REPORT_TTL1 EM_REPORT_TTL2 EM_REPORT_TTL3
222199    +    ;
222200    +    %let EM_REPORT_NODEID= &nodeid ;
222202    +    /*--- 2. preparations: Node Text; Path; Notes; Num of Prev. Nodes ---*/
222204    +    /* 2.1 get node text;*/
222205    +    %EM_REPORT_NODE_TEXT(&nodeid) ;
222207    +    /* 2.2 get the em path to this node;*/
222208    +    %EM_gettrainpath(nodeid=&nodeid,outpath=_tmp_emrnp);
222210    +    %if %sysfunc(exist(_tmp_emrnp))
222211    +    %then %do;
222212    +        data _null_;
222213    +            set _tmp_emrnp end=eof ;
222214    +            length path $1000 ;
222215    +            retain path ' ';
222216    +            if _n_ eq 1
222217    +                then path = strip(nodelabel) ;
222218    +                else path = strip(path) !! " => " !! strip(nodelabel);
222219    +            if eof then call symput('print_path', strip(path));
222220    +        run;
222221    +    %end ;
222222    +    %else %do;
222223    +        %let print_path= Unknown;
222224    +    %end ;
222226    +    /* 2.3 retrieve location of notes file;*/
222227    +    %let temp = %nrbquote(%sysfunc(pathname(&EM_REPORT_LIB)));
222228    +    %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
222229    +    %let file = EMNOTES.txt;
222230    +    %let notesfile = %nrbquote(&path&em_dsep&nodeid&em_dsep&file);
222232    +    /* 2.4 predecessor node counts */
222233    +    proc sql noprint;
222234    +        select count(*) into :EM_REPORT_PREDECESSORS_COUNT
222235    +            from &EM_REPORT_LIB..EM_DGRAPH where upcase(strip(to)) eq upcase(strip("&nodeid"));
222236    +    quit;
222238    +    %if ((&EM_REPORT_PREDECESSORS_COUNT eq 0) or (&EM_REPORT_NODES eq 0) or (&EM_REPORT_NODES eq PREDECESSOR))
222239    +        %then %let varlist=1;
222240    +        %else %let varlist=0;
222242    +    %if %substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq MDLCOMP
222243    +        %then %let varlist = 0;
222245    +    /*--- 3. beginning section of a node report ---*/
222247    +    /* 3.1 force page break at the beginning of each node */
222249    +    /* sample output of a beginning section
222250    +        -----------------------------------
222251    +        -  SAS Enterprise Miner Report    -
222252    +        -                                 -
222253    +        -  Node=Regression                -
222254    +        -  Summary                        -
222255    +        -                                 -
222256    +        -  Node id = Reg                  -
222257    +        -  Node label = Regression        -
222258    +        -  Meta Path = Ids => Part => Reg -
222259    +        -  Notes =                        -
222260    +        -----------------------------------*/
222262    +    ods &EM_REPORT_FORMAT startpage=now;
222264    +    ods &EM_REPORT_FORMAT text=" ";
222265    +    %if "&EM_REPORT_TITLE" ne ""
222266    +        %then %do; ods &EM_REPORT_FORMAT text= "&EM_REPORT_TITLE"; %end;
222267    +        %else %do; ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
222269    +    ods &EM_REPORT_FORMAT text=" ";
222270    +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
222271    +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_summary_title, NOQUOTE))";
222273    +    data _null_ ;
222274    +        file print;
222275    +        put " ";
222276    +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnodeid_vlabel,   NOQUOTE, &nodeid));                         put "&note";
222277    +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnodelbl_vlabel,  NOQUOTE, %nrbquote(&em_report_node_text))); put "&note";
222278    +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptmetapath_vlabel, NOQUOTE, &print_path));                     put "&note";
222279    +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnotes_vlabel,    NOQUOTE));                                  put "&note";
222280    +        put " ";
222281    +    run;
222283    +    %if "&notesfile" ne "" %then %do;
222284    +        filename x "&notesfile" encoding='utf-8' NOBOM;
222285    +        data _null_;
222286    +            length string $1000;
222287    +            file PRINT;
222288    +            fid = fopen('x');
222289    +            do while (^fread(fid));
222290    +                rc= fget(fid, string, frlen(fid));
222291    +                string = tranwrd(string, "'", "''");
222292    +                if string eq '' then string = ' ';
222293    +                put string;
222294    +            end;
222295    +            fid = fclose(fid);
222296    +            put " ";
222297    +        run;
222298    +        filename x;
222299    +    %end;
222301    +    /*--- 4. property table of a node report ---*/
222302    +    %EM_REPORT_PROPERTIES(catalog=&em_report_lib..&nodeid, dsname=properties);
222304    +    /*--- 5. datasource table of a node report ---*/
222305    +    %if &varlist eq 1 and %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTMETADEFAULT)) %then %do;
222306    +        %EM_REPORT_DATASOURCE;
222307    +    %end;
222309    +    /*--- 6. varlist table of a node report ---*/
222310    +    %EM_REPORT_VARS(varlist=&varlist) ;
222312    +    /* --- 7. the itemized output of EMREPORT TLFs ---*/
222314    +    /* 7.1 get number of items */
222315    +    proc sql noprint;
222316    +        select max(ID) into: numitems from &em_report_lib..&nodeid._emreport;
222317    +    quit;
222319    +    /* 7.2 define and initialize global KEYs */
222320    +    proc sql noprint;
222321    +        select count(distinct key) into :allnumkeys
222322    +            from &em_report_lib..&nodeid._emreport;
222323    +        select distinct key into :allnamekey1-:allnamekey%left(&allnumkeys)
222324    +            from &em_report_lib..&nodeid._emreport;
222325    +    quit;
222327    +    %do i = 1 %to &allnumkeys;
222328    +        %global EM_REPORT_KEY_&&&allnamekey&i;
222329    +        %let EM_REPORT_KEY_&&&allnamekey&i = ;
222330    +    %end;
222331    +    %global EM_REPORT_KEY_YREF EM_REPORT_KEY_XREF EM_REPORT_KEY_Y EM_REPORT_KEY_Y2 EM_REPORT_KEY_X
222332    +            EM_REPORT_KEY_LATTICEY EM_REPORT_KEY_LATTICEX EM_REPORT_KEY_WHERE EM_REPORT_KEY_SUBGROUP
222333    +            EM_REPORT_KEY_FREQUENCY EM_REPORT_KEY_GROUP EM_REPORT_KEY_Y2REF EM_REPORT_KEY_LATTICETYPE
222334    +            EM_REPORT_KEY_ORIENTATION
222335    +    ;
222336    +    %let EM_REPORT_KEY_AUTODISPLAY = N;
222337    +    %let EM_REPORT_KEY_XREF        = ;
222338    +    %let EM_REPORT_KEY_YREF        = ;
222339    +    %let EM_REPORT_KEY_Y2REF       = ;
222340    +    %let EM_REPORT_KEY_X           = ;
222341    +    %let EM_REPORT_KEY_Y           = ;
222342    +    %let EM_REPORT_KEY_Y2          = ;
222343    +    %let EM_REPORT_KEY_LATTICEX    = ;
222344    +    %let EM_REPORT_KEY_LATTICEY    = ;
222345    +    %let EM_REPORT_KEY_WHERE       = ;
222346    +    %let EM_REPORT_KEY_SUBGROUP    = ;
222347    +    %let EM_REPORT_KEY_FREQUENCY   = ;
222348    +    %let EM_REPORT_KEY_GROUP       = ;
222349    +    %let EM_REPORT_KEY_LATTICETYPE = ;
222350    +    %let EM_REPORT_KEY_ORIENTATION = ;
222352    +    /* 7.3 loop over items in the EM_REPORT dataset */
222354    +    %do index = 1 %to &numitems ;
222356    +        /* 7.3.1 initialize all key macro variables for each item */
222358    +        %do i = 1 %to &allnumkeys;
222359    +            %let EM_REPORT_KEY_&&&allnamekey&i = ;
222360    +        %end;
222361    +        %let EM_REPORT_KEY_AUTODISPLAY = N;
222362    +        %let EM_REPORT_KEY_WHERE       = ;
222363    +        %let EM_REPORT_KEY_WHERECLAUSE = ;
222364    +        %let EM_REPORT_TTL1            = ;
222365    +        %let EM_REPORT_TTL2            = ;
222366    +        %let EM_REPORT_TTL3            = ;
222367    +        %let EM_REPORT_KEY_XREF        = ;
222368    +        %let EM_REPORT_KEY_YREF        = ;
222369    +        %let EM_REPORT_KEY_Y2REF       = ;
222370    +        %let EM_REPORT_KEY_X           = ;
222371    +        %let EM_REPORT_KEY_Y           = ;
222372    +        %let EM_REPORT_KEY_Y2          = ;
222373    +        %let EM_REPORT_KEY_LATTICEX    = ;
222374    +        %let EM_REPORT_KEY_LATTICEY    = ;
222375    +        %let EM_REPORT_KEY_SUBGROUP    = ;
222376    +        %let EM_REPORT_KEY_FREQUENCY   = ;
222377    +        %let EM_REPORT_KEY_GROUP       = ;
222378    +        %let EM_REPORT_KEY_LATTICETYPE = ;
222379    +        %let EM_REPORT_KEY_ORIENTATION = ;
222381    +        %let item_skip_code = 1;
222383    +        data _null_;
222384    +            set &em_report_lib..&nodeid._emreport(where=(id eq &index));
222385    +            call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
222386    +        run;
222388    +        %if "&EM_REPORT_KEY_VIEWTYPE" eq "MULTIPLESCATTER"
222389    +            %then %let EM_REPORT_KEY_VIEWTYPE = SCATTER;
222391    +        /* special treatment for EM_REPORT_KEY_Y in overlaid line plot */
222392    +        %if "&EM_REPORT_KEY_VIEWTYPE" eq "PLOT" or "&EM_REPORT_KEY_VIEWTYPE" eq "SCATTER"
222393    +            or "&EM_REPORT_KEY_VIEWTYPE" eq "LINEPLOT"
222394    +            or "&EM_REPORT_KEY_LATTICETYPE" eq "LINEPLOT" or "&EM_REPORT_KEY_LATTICETYPE" eq "PLOT"
222395    +        %then %do;
222396    +            proc sql noprint;
222397    +                select distinct value into :EM_REPORT_KEY_Y separated by ' '
222398    +                    from &em_report_lib..&nodeid._emreport(where=(id eq &index))
222399    +                    where upcase(key) eq "Y";
222400    +            quit;
222401    +        %end;
222403    +        %put ==&INDEX : Viewtype = &EM_REPORT_KEY_VIEWTYPE &EM_REPORT_KEY_DESCRIPTION ;
222405    +        /* 7.3.2 set EM_REPORT_KEY_WHERE as EM_REPORT_KEY_WHERECLAUSE */
222407    +        %if "&EM_REPORT_KEY_WHERECLAUSE" ne "" and "&EM_REPORT_KEY_WHERE" eq ""
222408    +        %then %do;
222409    +            %let EM_REPORT_KEY_WHERE = %str(&EM_REPORT_KEY_WHERECLAUSE);
222410    +        %end;
222411    +        %else %if "&EM_REPORT_KEY_WHERECLAUSE" eq "" and "&EM_REPORT_KEY_WHERE" ne ""
222412    +        %then %do;
222413    +            %let EM_REPORT_KEY_WHERE = %str(&EM_REPORT_KEY_WHERE);
222414    +        %end;
222415    +        %else %do;
222416    +            %let EM_REPORT_KEY_WHERE = ;
222417    +        %end;
222419    +        %if "&EM_REPORT_KEY_WHERE" ne "" %then %do;
222420    +            %let EM_REPORT_KEY_WHERECLAUSE = %str((where=(&EM_REPORT_KEY_WHERE)));
222421    +        %end;
222423    +        /* 7.3.3 skip this TLF item if the source data set does not exist */
222424    +        %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_KEY_FILE)) %then %do;
222425    +            %let item_skip_code = 0;
222426    +        %end;
222428    +        /* 7.3.4 skip the TLF item as documented in the previous version of the macro */
222429    +        /*       or just print the TLF item as documented, or use special macros      */
222431    +        data _null_;
222432    +            format type $100. desc $200.;
222433    +            type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
222434    +            desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
222436    +            if  (type in ('SCATTER')   and desc in ('STATPLOT' 'RULEPATHITEM' 'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN'))
222437    +             or (type in ('PLOT')      and desc in ('SEASON' 'TREND' 'CORRSTAT' 'DECOMP'))
222438    +             or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP'))
222439    +             or (type in ('BAR')       and desc in ('VIP' 'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT'))
222440    +             or (type in ('LATTICE')   and desc in ('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT'))
222441    +                then call symput('item_skip_code','2');
222443    +            /* ASSESSRANKGRID : content handled in %EM_REPORT_PLOT - from old macro comments*/
222444    +            /* CORRPLOT: empty macro report_corrplot in old macro */
222446    +            if  (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR'))
222447    +             or (type in ('BAR')       and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT'))
222448    +             or (type in ('LATTICE')   and desc in ('CHIPLOT' 'WORTH'))
222449    +                then call symput('item_skip_code','3');
222451    +            if (type in ('PLOT')    and desc in ('ASSESSRANKOVERLAY'))
222452    +                then call symput('item_skip_code','4');
222453    +            if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY'))
222454    +                then call symput('item_skip_code','5');
222456    +            if (type in ('PLOT') and desc in ('EVENTPLOT'))
222457    +                then call symput('item_skip_code','6');
222459    +            if (type in ('LATTICE') and desc in ('CLASSSTAT'))
222460    +                then call symput('EM_REPORT_KEY_VIEWTYPE','DATA');
222462    +            if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST'))
222463    +                then call symput('item_skip_code','7');
222464    +            if (type in ('LATTICE') and desc in ('SCOREDIST'))
222465    +                then call symput('item_skip_code','8');
222466    +            if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY'))
222467    +                then call symput('item_skip_code','9');
222469    +            if (type in ('PLOT') and desc in ('HPDMASSESS'))
222470    +                then call symput('item_skip_code','10');
222472    +            if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 'TSDISTANCEMAP'))
222473    +                then call symput('item_skip_code','11');
222475    +        run;
222477    +        /* 7.3.5 */
222479    +        %EM_REPORT_GTT;
222481    +        /********** actions by item_skip_code ***********************************/
222483    +        %if &item_skip_code eq 2 %then %do;
222484    +            /* TLF is skipped for these types of reports */
222485    +        %end;
222486    +        %else
222487    +        %if &item_skip_code eq 3 %then %do;
222488    +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
222489    +                /* just a print */
222490    +                title1 "&EM_REPORT_TTL1";
222491    +                title2 "&EM_REPORT_TTL2";
222492    +                title3 "&EM_REPORT_TTL3";
222493    +                ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE))";
222494    +                proc print data=&EM_REPORT_LIB..&EM_REPORT_KEY_FILE noobs label contents='';
222495    +                run;
222496    +            %end;
222497    +        %end;
222498    +        %else
222499    +        %if &item_skip_code eq 4 %then %do;
222500    +            %EM_REPORT_EMRANK(pdat=&em_report_lib..&EM_REPORT_KEY_FILE,lattice=no);
222501    +        %end;
222502    +        %else
222503    +        %if &item_skip_code eq 5 %then %do;
222504    +            %EM_REPORT_EMRANK(pdat=&em_report_lib..&EM_REPORT_KEY_FILE,lattice=yes);
222505    +        %end;
222506    +        %else
222507    +        %if &item_skip_code eq 6 %then %do;
222508    +            %EM_REPORT_EVENTPLOT;
222509    +        %end;
222510    +        %else
222511    +        %if &item_skip_code eq 7 %then %do;
222512    +            %if %substr(%upcase(%sysfunc(strip(&nodeid))),1,7) ne MDLCOMP or &EM_REPORT_NODES eq PREDECESSOR %then %do;
222513    +                %EM_REPORT_SCOREDIST;
222514    +            %end;
222515    +        %end;
222516    +        %else
222517    +        %if &item_skip_code eq 8 %then %do;
222518    +            %EM_REPORT_SCOREDIST2;
222519    +        %end;
222520    +        %else
222521    +        %if &item_skip_code eq 9 %then %do;
222522    +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
222523    +                %EM_REPORT_CLASSIFYTAB;
222524    +            %end;
222525    +        %end;
222526    +        %else
222527    +        %if &item_skip_code eq 10 %then %do;
222528    +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
222529    +                %EM_REPORT_HPDMASSESS;
222530    +            %end;
222531    +        %end;
222532    +        %else
222533    +        %if &item_skip_code eq 11 %then %do;
222534    +                %EM_REPORT_HEATMAPTEMPLATE;
222535    +        %end;
222538    +        %else
222540    +        %if &item_skip_code eq 1 %then %do;
222542    +            /*--- process the viewtypes ---*/
222543    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "PLOT"           %then %do; %EM_REPORT_SGPLOT(type=PLOT);     %end;
222544    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "LINEPLOT"       %then %do; %EM_REPORT_SGPLOT(type=LINEPLOT); %end;
222545    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "SCATTER"        %then %do; %EM_REPORT_SGPLOT(type=SCATTER);  %end;
222546    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "BAR"            %then %do; %EM_REPORT_SGPLOT(type=BARPLOT);  %end;
222547    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "HISTOGRAM"      %then %do; %EM_REPORT_SGPLOT(type=HISTOGRAM);%end;
222548    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "PIE"            %then %do; %EM_REPORT_SGSILK(type=PIE);      %end;
222549    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DTREE"          %then %do; %EM_REPORT_SGSILK(type=DTREE);    %end;
222550    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "ICICLE"         %then %do; %EM_REPORT_SGSILK(type=ICICLE);   %end;
222551    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DENDROGRAM"     %then %do; %EM_REPORT_DENDROGRAM;            %end;
222552    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "ITERATIONPLOT"  %then %do; %EM_REPORT_ITERATIONPLOT;         %end;
222553    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DATA"           %then %do; %EM_REPORT_DATA(maxobs=100);      %end;
222554    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "MULTIPLEY2PLOT" %then %do; %EM_REPORT_MULTIPLY2PLOT;         %end;
222556    +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "LATTICE" %then %do;
222557    +                ods graphics / height=9in;
222558    +                %EM_REPORT_LATTICE;
222559    +                ods graphics / height=4.5in;
222560    +            %end;
222561    +        %end;
222563    +        title1; title2; title3; title4; title5;
222564    +    %end;
222566    +%node_skip:
222568    +%mend EM_REPORT_NODE;
222570    +/*---------------------------------------------------------*/
222571    +/*---- create xml file containing pfd information      ----*/
222572    +/*---------------------------------------------------------*/
222573    +%macro em_report_workspace_xml();
222575    +    %global EM_REPORT_LIB;
222577    +    %EM_REGISTER(key=PFD, type=FILE, extension=XML);
222578    +    %EM_GETNAME(key=PFD,  type=FILE, extension=XML);
222580    +    filename x "&EM_USER_PFD" encoding="utf-8" NOBOM;
222582    +    /* Node information */
222583    +    data _null_;
222584    +        file x;
222585    +        set &EM_REPORT_LIB..EM_NODEID;
222586    +        length string $400;
222588    +        /* check for invalid characters in the node label */
222589    +        label = tranwrd(label, %nrstr("&"), %nrstr("&amp;"));
222590    +        label = tranwrd(label, %nrstr("<"), %nrstr("&lt;"));
222591    +        label = tranwrd(label, %nrstr(">"), %nrstr("&gt;"));
222592    +        label = tranwrd(label, %nrstr("'"), %nrstr("&#39;"));
222593    +        label = tranwrd(label, %nrstr('"'), %nrstr('&quot;'));
222595    +        string = cats('<PFDNode x="',X,'" y="',Y,'" id="',NODEID,'" title="',LABEL,'"></PFDNode>');
222596    +        put string;
222597    +    run;
222599    +    /* Link information */
222600    +    data _null_;
222601    +        file x mod;
222602    +        set &EM_REPORT_LIB..EM_DGRAPH(where=(TO ne ""));
222603    +        length string $400;
222605    +        string = cats("<PFDLink id='",_N_,"' fromId='",FROM,"' toId='",TO,"'></PFDLink>");
222606    +        put string;
222607    +    run;
222609    +    filename x;
222611    +%mend em_report_workspace_xml;
222613    +/*---------------------------------------------------------*/
222614    +/* "chop" xml definitions, wrapping if over 256 bytes      */
222615    +/*---------------------------------------------------------*/
222616    +%macro em_report_makeds(XMLfile,outds);
222618    +    %local rc fileref fid max reclen;
222619    +    %let fileref=xmlref;
222620    +    %if %sysfunc(fexist(xmlref)) %then %put ERROR: Fileref XMLREF in use.;
222621    +    %else %do;
222622    +      %let rc=%sysfunc(filename(fileref,&XMLfile,,encoding='utf-8')));
222623    +      %if %sysfunc(fileref(xmlref)) ne 0 %then %put %sysfunc(sysmsg());
222624    +      %else %do;
222625    +        %let fid=%sysfunc(fopen(xmlref,i,5000,v));
222626    +        %let max=0;
222627    +         %if %sysfunc(fread(&fid)) = 0 %then %do;
222628    +            %let reclen=%sysfunc(frlen(&fid));
222629    +            %let max=&reclen;
222630    +            %do %while(%sysfunc(fread(&fid)) = 0);
222631    +               %let reclen=%sysfunc(frlen(&fid));
222632    +               %if &reclen > &max %then %let max=&reclen;
222633    +            %end;
222634    +        %end;
222635    +        %let rc=%sysfunc(fclose(&fid));
222637    +        data &outds(keep=PFDItemList);
222638    +          infile xmlref recfm=v  lrecl=&max  length=len;
222639    +          length PFDItemList $256;
222640    +          input record $varying5000. len;
222641    +          recordNum+1;
222642    +          do start=1 to len by 256 ;
222643    +             end=start+256;
222644    +             *put recordNum= start= end=;
222645    +             PFDItemList=substr(record,start,end);
222646    +             output;
222647    +          end;
222648    +        run;
222649    +        %let rc=%sysfunc(filename(fileref));
222650    +      %end;
222651    +    %end;
222652    +%mend em_report_makeds;
222654    +/*---------------------------------------------------------*/
222655    +/* render a workspace plot in the ODS destination          */
222656    +/*---------------------------------------------------------*/
222657    +%macro em_report_workspace_render;
222659    +     /*--- determine if flow was run in batch (ie all x/y coordinates are -1) ---*/
222660    +     %let runBatch = 0;
222661    +     data temp;
222662    +        set &EM_REPORT_LIB..EM_NODEID;
222663    +        if X = -1 AND Y= - 1 then delete;
222664    +     run;
222665    +     %let dsid = %sysfunc(open(work.temp));
222666    +     %let nobs = %sysfunc(ATTRN(&dsid, NOBS));
222667    +     %if &dsid %then %let dsid = %sysfunc(close(&dsid));
222669    +     %if &nobs le 1 %then %let runBatch = 1;
222671    +      title1; title2; title3;
222673    +      %let temp = %nrbquote(%sysfunc(PATHNAME(&em_report_lib)));
222674    +      %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
222675    +      %let view = view.xml;
222676    +      %let viewfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&view);
222677    +      %let datax = data.xml;
222678    +      %let dataxfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&datax);
222680    +      /* make sgDataModel*/
222681    +      ods &EM_REPORT_FORMAT exclude SGRENDER; /* disable sgrender output to PDF */
222682    +      ods tagsets.gtl file="&viewfile" data="&dataxfile" encoding="utf-8" style=styles.em_style;
222683    +      proc sgrender data=work.xmldata template=dataonly;
222684    +          dynamic var1="PFDItemList";
222685    +      run;
222687    +      /* pfd event code */
222688    +      %if "&EM_REPORT_TITLE" ne "" %then %do;
222689    +          ods tagsets.gtl event=LayoutRegion(start)
222690    +              options(title ="&EM_REPORT_TITLE"
222691    +                      title2="%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))");
222692    +      %end;
222693    +      %else %do;
222694    +          ods tagsets.gtl event=LayoutRegion(start)
222695    +              options(title ="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"
222696    +                      title2="%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))");
222697    +      %end;
222699    +      %if &runBatch ne 1 %then %do;
222700    +          ods tagsets.gtl event=PFD options(pfditems="PFDItemList" id="pfdView1");
222701    +          ods tagsets.gtl event=LayoutRegion(finish);
222702    +          ods tagsets.gtl close;
222703    +          ods &EM_REPORT_FORMAT select ALL ; /* re-enable sgrender output */
222704    +          ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))";
222705    +          proc sgsilk viewxml="&viewfile" dataxml="&dataxfile"; run;
222706    +      %end;
222707    +      title1; title2; title3;
222709    +%mend em_report_workspace_render;
222712    +%macro EM_REPORT_RESULTS(
222713    +    path=,              /*-- output location             ---*/
222714    +    lib=,               /*-- em workspace library        ---*/
222715    +    startnodeid=,       /*-- starting nodeid             ---*/
222716    +    showall=,           /*-- show all content Y or N     ---*/
222717    +    nodes=,             /*-- nodes to generate report on ---*/
222718    +    format=,            /*-- format for generated report ---*/
222719    +    style=              /*--- style for ODS statement    ---*/
222720    +) ;
222722    +    data _null_ ;
222723    +        call symput('report_date', strip(put(date(),     NLDATE.)));
222724    +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
222725    +    run;
222727    +    data _null_;
222728    +        file print ;
222729    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
222730    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
222731    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
222732    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
222733    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
222734    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
222735    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
222736    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &EM_REPORT_SHOWALL))" / ;
222737    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
222738    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_graphics_note, NOQUOTE, &EM_REPORT_GDEVICE))" ;
222739    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &STYLE))" / ;
222740    +    run ;
222742    +    /* add report view to results */
222743    +    %EM_GETNAME(key=REPORT, type=FILE, extension=&FORMAT);
222744    +    %EM_REPORT(KEY=REPORT, BLOCK=MODEL, VIEWTYPE = FILEVIEWER, autodisplay=Y, DESCRIPTION=CUSTOM);
222746    +%mend;
222748    +%macro EM_REPORT_CREATERESULTS();
222750    +    %EM_GETNAME(key=ODSRESULTS, type=FILE, extension=htm, folder=ODS);
222751    +    filename x "&EM_FILE_ODSRESULTS" nobom;
222753    +    ods listing close;
222754    +    ods html3 file=X encoding = "utf-8" style=styles.em_style;
222755    +    ods html3 text=" ";
222756    +    %if "&EM_REPORT_TITLE" ne "" %then %do;
222757    +        ods html3 text="&EM_REPORT_TITLE";
222758    +    %end;
222759    +    %else %do;
222760    +        ods html3 text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))";
222761    +    %end;
222763    +    data _null_ ;
222764    +        call symput('report_date', strip(put(date(),     NLDATE.)));
222765    +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
222766    +    run;
222768    +    data _null_;
222769    +        file print ;
222770    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
222771    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
222772    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
222773    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
222774    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
222775    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
222776    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
222777    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &showall))" / ;
222778    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
222779    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_graphics_note, NOQUOTE, &EM_REPORT_GDEVICE))" ;
222780    +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &EM_REPORT_STYLE))" / ;
222781    +    run ;
222783    +    filename x;
222784    +    ods listing;
222785    +    ods html3 close;
222787    +    %EM_REPORT(KEY=ODSRESULTS, BLOCK=MODEL, VIEWTYPE = HTMLVIEW);
222789    +%mend EM_REPORT_CREATERESULTS;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emrpm.em_modelprops.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMRPM.EM_MODELPROPS.SOURCE.
222790    +%macro em_modelprops(dgmid=, modelid=, output=%nrbquote(work.properties));
222791    +  %global mdl_emwsid mdl_modelid;
222792    +  %do;
222793    +     %let mdl_emwsid  = &dgmid;
222794    +     %let mdl_modelid = &modelid;
222795    +     %let mdl_output  = &output;
222796    +
222797    +     dm "afa c=sashelp.emrpm.modelprops.scl";
222798    +  %end;
222799    +%mend em_modelprops;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename pdffile "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\REPORT.pdf";
MPRINT(TRAIN):   filename pdffile;
NOTE: Fileref PDFFILE has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename rtffile "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\REPORT.rtf";
MPRINT(TRAIN):   filename rtffile;
NOTE: Fileref RTFFILE has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_plotmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_PLOTMACROS.SOURCE.
222800    +/*---------------------------------------------------------*/
222801    + * Utility functions:;
MPRINT(EM_REPORT_CREATE):   * Utility functions:;
222802    +/*---------------------------------------------------------*/
222804    +%macro EM_REPORT_GTT();
222806    +    %global EM_REPORT_TTL1 EM_REPORT_TTL2 EM_REPORT_TTL3 EM_REPORT_TITLE EM_REPORT_NODE_TEXT EM_REPORT_KEY_description;
222808    +    %if "&EM_REPORT_TITLE" ne "" %then %do;
222809    +        %let EM_REPORT_ttl1 = &EM_REPORT_TITLE;
222810    +    %end;
222811    +    %else %do;
222812    +        %let EM_REPORT_ttl1 = %sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE));
222813    +    %end;
222815    +    %let EM_REPORT_ttl2 = %sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)));
222817    +    %let msg0 = views_descriptions_&em_report_key_description;
222818    +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
222819    +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
222820    +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
222821    +    %end;
222822    +    %else %do;
222823    +        %let msg2=views_descriptions_&em_report_key_description;
222824    +    %end;
222826    +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&msg0))"
222827    +    %then %do;
222828    +        %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
222829    +    %end;
222830    +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&msg0))"
222831    +    %then %do;
222832    +        %if %sysfunc(exist(sashelp.tmine)) %then %do;
222833    +            %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
222834    +        %end;
222835    +    %end;
222836    +    %else %do;
222837    +        %let EM_REPORT_ttl3 = &em_report_key_description;
222838    +    %end;
222840    +    /*--- special labels ---*/
222842    +    %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS"
222843    +    %then %do;
222844    +       %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.dmine, rpt_regressionmod_title, NOQUOTE));
222845    +    %end;
222847    +%mend;
222849    +/*---------------------------------------------------------*/
222850    +* Plots created by SGPLOT: LINEPLOT, SCATTER, PLOT, BAR;
MPRINT(EM_REPORT_CREATE):   * Plots created by SGPLOT: LINEPLOT, SCATTER, PLOT, BAR;
222851    +/*---------------------------------------------------------*/
222853    +%macro EM_REPORT_SGPLOT(type=);
222855    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
222857    +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
222859    +    /*--- EM_REPORT_SGPLOT 1. identify the plot statement ---*/
222861    +    %let axisstmt = xaxis;
222863    +    %if &type eq LINEPLOT   %then %let plotstmt = series;
222864    +    %if &type eq PLOT       %then %let plotstmt = series;
222865    +    %if &type eq SCATTER    %then %let plotstmt = scatter;
222866    +    %if &type eq BARPLOT    %then %let plotstmt = vbar;
222867    +    %if &type eq HISTOGRAM  %then %let plotstmt = histogram;
222869    +    %if "&plotstmt" eq "vbar" and "%upcase(&EM_REPORT_KEY_ORIENTATION)" eq "HORIZONTAL"
222870    +    %then %do;
222871    +        %let plotstmt = hbar;
222872    +        %let axisstmt = yaxis;
222873    +    %end;
222874    +    /*--- EM_REPORT_SGPLOT 2. options for plot statements ---*/
222876    +    %let plotopt = ;
222878    +    %if &type eq LINEPLOT %then %do;
222879    +        %if "&EM_REPORT_KEY_GROUP" ne "" %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
222880    +    %end;
222881    +    %else %if &type eq PLOT %then %do;
222882    +        %if "&EM_REPORT_KEY_GROUP" ne "" %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
222883    +    %end;
222884    +    %else %if &type eq SCATTER %then %do;
222885    +        %if "&EM_REPORT_KEY_GROUP" ne ""     %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
222886    +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt freq=&EM_REPORT_KEY_FREQUENCY);
222887    +        %let plotopt = %str(&plotopt markerattrs=(symbol=squarefilled));
222888    +    %end;
222889    +    %else %if &type eq BARPLOT %then %do;
222890    +        %let plotopt = missing;
222891    +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt response=&EM_REPORT_KEY_FREQUENCY);
222892    +        %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_SUBGROUP);
222893    +        %else %if "&EM_REPORT_KEY_GROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_GROUP);
222894    +    %end;
222895    +    %else %if &type eq HISTOGRAM %then %do;
222896    +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt freq=&EM_REPORT_KEY_FREQUENCY);
222897    +        %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_SUBGROUP);
222898    +/*        %if "&EM_REPORT_KEY_Y" ne ""         %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_Y);*/
222899    +    %end;
222901    +    %if "&plotopt" ne "" %then %let plotopt = %str(/ &plotopt);
222903    +    /*--- EM_REPORT_SGPLOT 3. handle _ANYNUMERIC_ or BYSET---*/
222905    +    %if &type eq PLOT and "&EM_REPORT_KEY_Y" eq "_ANYNUMERIC_" %then %do;
222907    +         proc contents data=&pdat out=_rptsgplot_temp(keep=name type) noprint;
222908    +         run;
222910    +         /*** For _ANYNUMERIC_, get the first numeric variable that is not X ***/
222911    +         data _null_;
222912    +            set _rptsgplot_temp(where=(type eq 1 and upcase(name) ne "%upcase(&EM_REPORT_KEY_X)"));
222913    +            if _n_=1 then call symput("EM_REPORT_KEY_Y", strip(name));
222914    +         run;
222915    +    %end;
222917    +    /*--- EM_REPORT_SGPLOT 4. call SGPLOT ---*/
222919    +    ods graphics / discretemax=5000;
222921    +    proc sgplot data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
222923    +        %if "&EM_REPORT_KEY_Y" ne "" and "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
222924    +            %let i = 1;
222925    +            %do %while ("%scan(&EM_REPORT_KEY_Y,&i,' ')" ne "");
222926    +                %let thisY=%scan(&EM_REPORT_KEY_Y,&i,' ');
222927    +                %let i = %eval(&i+1);
222928    +                &plotstmt
222929    +                    x = &EM_REPORT_KEY_X  y = &thisY  &plotopt
222930    +                ;
222931    +            %end;
222932    +        %end;
222933    +        %if "&EM_REPORT_KEY_Y2" ne "" and "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
222934    +            &plotstmt
222935    +                x = &EM_REPORT_KEY_X  y = &EM_REPORT_KEY_Y2  &plotopt
222936    +            ;
222937    +        %end;
222938    +        %if "&type" eq "BARPLOT" %then %do;
222939    +            &plotstmt
222940    +                &EM_REPORT_KEY_X &plotopt;
222941    +            &axisstmt
222942    +                type=discrete /* discreteorder=data */
222943    +                %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do; display=(NOVALUES NOTICKS) %end;
222944    +            ;
222945    +        %end;
222946    +        %if "&type" eq "HISTOGRAM" and "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do;
222947    +            &plotstmt
222948    +                &EM_REPORT_KEY_X &plotopt;
222949    +            &axisstmt
222950    +                %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do; display=(NOVALUES NOTICKS) %end;
222951    +            ;
222952    +        %end;
222953    +        %if "&type" eq "HISTOGRAM" and "&EM_REPORT_KEY_FREQUENCY" eq "" %then %do;
222954    +            &plotstmt &EM_REPORT_KEY_X;
222955    +        %end;
222956    +        %if "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
222957    +            %if "&EM_REPORT_KEY_YREF" ne "" %then %do; refline &EM_REPORT_KEY_YREF / axis = y; %end;
222958    +            %if "&EM_REPORT_KEY_XREF" ne "" %then %do; refline &EM_REPORT_KEY_XREF / axis = x; %end;
222959    +        %end;
222961    +        keylegend;
222962    +    run; quit;
222964    +    %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do;
222965    +        %EM_REPORT_makeMultiColumn(dat=&pdat.&EM_REPORT_KEY_WHERECLAUSE, vars=effectnum variable classlevel coefficient tvalue pvalue, split=2);
222966    +    %end;
222968    +    ods graphics / discretemax=100;
222969    +    title1; title2; title3;
222971    +%mend EM_REPORT_SGPLOT;
222973    +/*---------------------------------------------------------*/
222974    +* Plots rendered by SGSILK: DTREE, ICICLE, PIE;
MPRINT(EM_REPORT_CREATE):   * Plots rendered by SGSILK: DTREE, ICICLE, PIE;
222975    +/*---------------------------------------------------------*/
222977    +%macro EM_REPORT_SGSILK(type=);
222979    +    %local temp path view datax viewfile dataxfile;
222980    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
222982    +    /*--- EM_REPORT_SGSILK 1. define the XML files for view and data ---*/
222984    +    %let temp      = %nrbquote(%sysfunc(PATHNAME(&EM_REPORT_LIB)));
222985    +    %let path      = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
222986    +    %let view      = view.xml;
222987    +    %let datax     = data.xml;
222988    +    %let viewfile  = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&view);
222989    +    %let dataxfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&datax);
222991    +    /*--- EM_REPORT_SGSILK 2. Call SGRENGER and setup GTL tagsets---*/
222993    +    ods &EM_REPORT_FORMAT exclude SGRENDER; /* disable sgrender output to PDF */
222994    +    ods tagsets.gtl file="&viewfile" data="&dataxfile" encoding="utf-8" style=styles.em_style;
222996    +    %if &type eq DTREE %then %do;   /****** DTREE ******/
222998    +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
222999    +            dynamic var1 = "&EM_REPORT_KEY_ID";
223000    +            dynamic var2 = "&EM_REPORT_KEY_PARENT";
223001    +            dynamic var3 = "&EM_REPORT_KEY_NODETEXT";
223002    +            dynamic var4 = "&EM_REPORT_KEY_NODECOLOR";
223003    +            dynamic var5 = "&EM_REPORT_KEY_ABOVETEXT";
223004    +            dynamic var6 = "&EM_REPORT_KEY_BELOWTEXT";
223005    +            dynamic var7 = "&EM_REPORT_KEY_LINKWIDTH";
223006    +        run;
223008    +        ods tagsets.gtl event=LayoutRegion(start)
223009    +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
223011    +        ods tagsets.gtl event=DecisionTree
223012    +            options( id        = "&EM_REPORT_KEY_ID"
223013    +                     parent    = "&EM_REPORT_KEY_PARENT"
223014    +                     nodetext  = "&EM_REPORT_KEY_NODETEXT"
223015    +                     abovetext = "&EM_REPORT_KEY_ABOVETEXT"
223016    +                     belowtext = "&EM_REPORT_KEY_BELOWTEXT"
223017    +                     linkwidth = "&EM_REPORT_KEY_LINKWIDTH"
223018    +                     nodecolor = "&EM_REPORT_KEY_NODECOLOR" );
223020    +    %end;
223021    +    %else %if &type eq ICICLE %then %do;      /****** ICICLE ******/
223023    +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
223024    +            dynamic var1="&EM_REPORT_KEY_ID";
223025    +            dynamic var2="&EM_REPORT_KEY_PARENT";
223026    +            dynamic var3="&EM_REPORT_KEY_NODECOLOR";
223027    +            dynamic var4="&EM_REPORT_KEY_NODESIZE";
223028    +        run;
223030    +        ods tagsets.gtl event=LayoutRegion(start)
223031    +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
223033    +        ods tagsets.gtl event=Icicle
223034    +            options( id        = "&EM_REPORT_KEY_ID"
223035    +                     parent    = "&EM_REPORT_KEY_PARENT"
223036    +                     nodecolor = "&EM_REPORT_KEY_NODECOLOR"
223037    +                     nodesize  = "&EM_REPORT_KEY_NODESIZE" );
223039    +    %end;
223040    +    %else %if &type eq PIE %then %do;      /****** PIE ******/
223042    +      proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
223043    +          dynamic var1="&EM_REPORT_KEY_X"
223044    +                  var2=
223045    +                       %if &EM_REPORT_KEY_Y NE %str() %then "&EM_REPORT_KEY_Y" ;
223046    +                       %else "&EM_REPORT_KEY_FREQUENCY";
223047    +               ;
223048    +      run;
223049    +      quit;
223051    +      ods tagsets.gtl event=LayoutRegion(start)
223052    +          options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
223054    +      ods tagsets.gtl event=Pie
223055    +          options( category = "&EM_REPORT_KEY_X"
223056    +                   response =
223057    +                             %if &EM_REPORT_KEY_Y NE %str() %then "&EM_REPORT_KEY_Y" ;
223058    +                             %else "&EM_REPORT_KEY_FREQUENCY";
223059    +                   pielabeldisplay = "1"         );
223062    +    %end;
223064    +    ods tagsets.gtl event=LayoutRegion(finish);
223065    +    ods tagsets.gtl close;
223067    +    /*--- EM_REPORT_SGSILK 3. Call SGSILK to render the graph---*/
223069    +    ods &EM_REPORT_FORMAT select ALL; /* re-enable sgrender output */
223070    +    proc sgsilk viewxml="&viewfile" dataxml="&dataxfile"; run;
223071    +    title1; title2; title3;
223072    +%mend;
223074    +/*---------------------------------------------------------*/
223075    +* DENDROGRAM <- PROC TREE;
MPRINT(EM_REPORT_CREATE):   * DENDROGRAM <- PROC TREE;
223076    +/*---------------------------------------------------------*/
223078    +%macro EM_REPORT_DENDROGRAM() ;
223080    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223082    +    *goptions device=&EM_REPORT_GDEVICE ;
223083    +    goptions reset=all device=&EM_REPORT_GDEVICE;
223085    +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223087    +    axis1 minor=none label=(height = &EM_REPORT_TEXT_SIZE pt ) ;
223088    +    axis2 minor=none label=(height = &EM_REPORT_TEXT_SIZE pt angle=90 ) ;
223090    +    ods &EM_REPORT_FORMAT select ALL; /* re-enable sgrender output */
223092    +    proc tree data=&pdat.&EM_REPORT_KEY_WHERECLAUSE horizontal haxis=axis1 vaxis=axis2;
223093    +        height &EM_REPORT_KEY_HEIGHT;
223094    +        name   &EM_REPORT_KEY_NAME;
223095    +        parent &EM_REPORT_KEY_PARENT;
223096    +    run; quit;
223098    +    title1; title2; title3 ;
223099    +    axis1; axis2;
223101    +%mend EM_REPORT_DENDROGRAM;
223103    +/*---------------------------------------------------------*/
223104    +* EVENTPLOT <- SGSCATTER;
MPRINT(EM_REPORT_CREATE):   * EVENTPLOT <- SGSCATTER;
223105    +/*---------------------------------------------------------*/
223107    +%macro EM_REPORT_EVENTPLOT();
223109    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223111    +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223113    +    proc sgscatter data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
223114    +        plot (_cumulative_event_count_ _marginal_event_rate_ _event_count_ _cumulative_event_rate_)
223115    +            * _cutoff_score_ / group=datarole join=() markerattrs=(size=0) grid;
223116    +    run; quit;
223118    +    title1; title2; title3 ;
223120    +%mend EM_REPORT_EVENTPLOT;
223122    +/*---------------------------------------------------------*/
223123    + * EM_REPORT_ITERATIONPLOT ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_ITERATIONPLOT ;
223124    + * create plots of iterations: neural, stepwise, tree, etc..;
MPRINT(EM_REPORT_CREATE):   * create plots of iterations: neural, stepwise, tree, etc..;
223125    +/*---------------------------------------------------------*/
223127    +%macro EM_REPORT_ITERATIONPLOT();
223129    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223130    +    %let X    = &EM_REPORT_KEY_X;
223132    +    title1 "&EM_REPORT_TTL1";
223133    +    title2 "&EM_REPORT_TTL2";
223134    +    title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_mdliterationplot_title, NOQUOTE))";
223136    +    %local _misc_ _vmisc_ _ase_ _vase_ ;
223137    +    data _null_ ;
223138    +        set &pdat(obs=2) end=eof;
223139    +        if eof then do ;
223140    +            call symput('_ase_',_ase_);
223141    +            call symput('_vase_',_vase_);
223142    +            call symput('_misc_',_misc_);
223143    +            call symput('_vmisc_',_vmisc_);
223144    +        end;
223145    +    run;
223147    +    %let dsid = %sysfunc(open(&pdat));
223148    +    %if &dsid %then %do;
223149    +        %let _ase_ = %sysfunc(VARNUM(&dsid, _ase_));
223150    +        %let _vase_ = %sysfunc(VARNUM(&dsid, _vase_));
223151    +        %let _misc_ = %sysfunc(VARNUM(&dsid, _misc_));
223152    +        %let _vmisc_ = %sysfunc(VARNUM(&dsid, _vmisc_));
223153    +    %end;
223154    +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
223156    +    %if "&_ase_"   eq "." %then %let _ase_   = 0;
223157    +    %if "&_vase_"  eq "." %then %let _vase_  = 0;
223158    +    %if "&_misc_"  eq "." %then %let _misc_  = 0;
223159    +    %if "&_vmisc_" eq "." %then %let _vmisc_ = 0;
223161    +    %put &_ase_ &_vase_ &_misc_ &_vmisc_;
223163    +    %if &_vmisc_ ne 0 %then %do;
223164    +        proc sql noprint;
223165    +            select count(*) into :nonMiss_vmisc from &pdat where _vmisc_ ne .;
223166    +        quit;
223167    +    %end;
223168    +    %else %do;
223169    +        %let nonMiss_vmisc = 0;
223170    +    %end;
223172    +    ods path(prepend) work.templat(update);
223173    +    proc template;
223174    +        define statgraph em.IterationPlot / store=work.templat;
223175    +            begingraph;
223176    +                entrytitle "&EM_REPORT_TTL1";
223177    +                entrytitle "&EM_REPORT_TTL2";
223178    +                entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_mdliterationplot_title, NOQUOTE))";
223180    +              layout lattice / order=columnmajor rows=1 rowdatarange=data columngutter=10;
223182    +                %if &_ase_ ne 0 or &_vase_ ne 0 %then %do;
223183    +                    layout overlay / cycleattrs=true
223184    +                        xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel, NOQUOTE))")
223185    +                        yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, stat_ase_vlabel, NOQUOTE))");
223186    +                        %if &_ase_ ne 0 %then %do ;
223187    +                            seriesplot x=&X y=_ASE_ /  markerattrs=(size=0) display=all name='train'
223188    +                                legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_roletrain_value, NOQUOTE))";
223189    +                        %end;
223190    +                        %if &_vase_  ne 0 %then %do ;
223191    +                            seriesplot x=&X y=_VASE_ /  markerattrs=(size=0) display=all name='validate'
223192    +                                legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rolevalidate_value, NOQUOTE))";
223193    +                        %end;
223194    +                        %if "&EM_REPORT_KEY_XREF" ne "" %then %do; referenceline x=&EM_REPORT_KEY_XREF; %end;
223195    +                    endlayout;
223196    +                %end;
223198    +                %if &_misc_ ne 0 or ( &_vmisc_ ne 0 and &nonMiss_vmisc ne 0) %then %do;
223199    +                    layout overlay / cycleattrs=true
223200    +                        xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel, NOQUOTE))")
223201    +                        yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_vlabel, NOQUOTE))");
223202    +                        %if &_misc_ ne 0 %then %do;
223203    +                            seriesplot x=&X y=_MISC_ /  markerattrs=(size=0) display=all;
223204    +                        %end;
223205    +                        %if &_vmisc_  ne 0 %then %do ;
223206    +                            seriesplot x=&X y=_VMISC_ /  markerattrs=(size=0) display=all;
223207    +                        %end;
223208    +                        %if "&EM_REPORT_KEY_XREF" ne "" %then %do; referenceline x=&EM_REPORT_KEY_XREF; %end;
223209    +                    endlayout;
223210    +                %end;
223212    +                sidebar /  align=bottom;
223213    +                    layout overlay;
223214    +                        discretelegend 'train' 'validate' / down=1 order=columnmajor;
223215    +                    endlayout;
223216    +                endsidebar;
223217    +              endlayout;
223218    +            endgraph;
223219    +        end;
223220    +    run;
223222    +    proc sort data=&pdat.&EM_REPORT_KEY_WHERECLAUSE out=_tmprpt_iterdat;
223223    +        by &X;
223224    +    run;
223226    +    proc sgrender data=_tmprpt_iterdat template='em.IterationPlot';
223227    +    run;
223228    +    title1; title2; title3;
223230    +    proc delete data=_tmprpt_iterdat; run;
223232    +%mend  EM_REPORT_ITERATIONPLOT;
223234    +/* for hpdmassess */
223236    +%macro EM_REPORT_HPDMASSESS();
223238    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223240    +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223242    +    /*--- EM_REPORT_HPDMASSESS 1. idenfity the variables     ---*/
223244    +    %let dsid = %sysfunc(open(&pdat));
223245    +    %if &dsid %then %do;
223246    +        %let lift     = %sysfunc(VARNUM(&dsid, lift));
223247    +        %let c_lift   = %sysfunc(VARNUM(&dsid, c_lift));
223248    +        %let mean1    = %sysfunc(VARNUM(&dsid, target_mean));
223249    +        %let mean2    = %sysfunc(VARNUM(&dsid, predicted_mean));
223250    +        %let datarole = %sysfunc(VARNUM(&dsid, &EM_REPORT_KEY_GROUP));
223251    +    %end;
223252    +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
223254    +    %if "&lift"     eq "."  %then %let lift     = 0;
223255    +    %if "&c_lift"   eq "."  %then %let c_lift   = 0;
223256    +    %if "&mean1"    eq "."  %then %let mean1   = 0;
223257    +    %if "&mean2"    eq "."  %then %let mean2   = 0;
223258    +    %if "&datarole" eq "."  %then %let datarole = 0;
223260    +    %put &lift &c_lift &mean1 &mean2 &datarole;
223262    +    %if &lift ne 0 and &c_lift ne 0 %then %do;
223263    +        %let hpdm_plot = 1;
223264    +        %let hpdm_var1 = lift;
223265    +        %let hpdm_var2 = c_lift;
223266    +        %let hpdm_lbl1 = assmt_lift_vlabel;
223267    +        %let hpdm_lbl2 = assmt_liftc_vlabel;
223268    +    %end;
223269    +    %else
223270    +    %if &mean1 ne 0 and &mean2 ne 0
223271    +    %then %do;
223272    +        %let hpdm_plot = 1;
223273    +        %let hpdm_var1 = target_mean;
223274    +        %let hpdm_var2 = predicted_mean;
223275    +        %let hpdm_lbl1 = rpt_rpttargetmean_vlabel;
223276    +        %let hpdm_lbl2 = rpt_rptpredmean_vlabel;
223277    +    %end;
223278    +    %else %do;
223279    +        %let hpdm_plot = 0;
223280    +        %let hpdm_var1 = ;
223281    +        %let hpdm_var2 = ;
223282    +        %let hpdm_lbl1 = ;
223283    +        %let hpdm_lbl2 = ;
223284    +    %end;
223285    +    /*--- EM_REPORT_HPDMASSESS 2. call SGPANEL                ---*/
223287    +    %if &hpdm_plot eq 1 %then %do;
223288    +        ods path(prepend) work.templat(update);
223289    +        proc template;
223290    +            define statgraph em.hpdmassess / store=work.templat;
223291    +                begingraph;
223292    +                    entrytitle "&EM_REPORT_TTL1";
223293    +                    entrytitle "&EM_REPORT_TTL2";
223294    +                    entrytitle "&EM_REPORT_TTL3";
223296    +                    layout lattice / order=columnmajor rows=1 rowdatarange=data columngutter=10;
223298    +                        %if &datarole ne 0 %then %do;
223299    +                            layout overlay / cycleattrs=true
223300    +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
223301    +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))")
223302    +                            ;
223303    +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var1 / name='var1' markerattrs=(size=0) display=all group=&EM_REPORT_KEY_GROUP;
223304    +                            endlayout;
223305    +                            layout overlay / cycleattrs=true
223306    +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
223307    +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl2, NOQUOTE))")
223308    +                            ;
223309    +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var2 /  markerattrs=(size=0) display=all group=&EM_REPORT_KEY_GROUP;
223310    +                            endlayout;
223311    +                            sidebar /  align = bottom;
223312    +                                layout overlay;
223313    +                                    discretelegend 'var1' / down=1 order=columnmajor;
223314    +                                endlayout;
223315    +                            endsidebar;
223316    +                        %end;
223317    +                        %else %do;
223318    +                            layout overlay / cycleattrs=true
223319    +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
223320    +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))")
223321    +                            ;
223322    +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var1 /  markerattrs=(size=0) display=all name='var1'
223323    +                                    legendlabel="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))";
223324    +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var2 /  markerattrs=(size=0) display=all name='var2'
223325    +                                    legendlabel="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl2, NOQUOTE))";
223326    +                            endlayout;
223327    +                            sidebar /  align=bottom;
223328    +                                layout overlay;
223329    +                                    discretelegend 'var1' 'var2' / down=1 order=columnmajor;
223330    +                                endlayout;
223331    +                            endsidebar;
223332    +                        %end;
223333    +                    endlayout;
223334    +                endgraph;
223335    +            end;
223336    +        run;
223338    +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template='em.hpdmassess'; run;
223339    +    %end;
223341    +    title1; title2; title3;
223343    +%mend EM_REPORT_HPDMASSESS;
223345    +/* for heatmap version of histograms */
223347    +%macro EM_REPORT_HEATMAPTEMPLATE();
223349    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223351    +    %if "&EM_REPORT_KEY_FREQUENCY" ne "" "&EM_REPORT_KEY_X" ne "" "&EM_REPORT_KEY_Y" ne "" %then %do;
223353    +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223355    +        proc template;
223356    +        define statgraph heatmap;
223357    +        begingraph;
223358    +        entrytitle "&EM_REPORT_TTL1";
223359    +        entrytitle "&EM_REPORT_TTL2";
223360    +        entrytitle "&EM_REPORT_TTL3";
223361    +        layout overlay;
223362    +        heatmapparm x=&EM_REPORT_KEY_X y=&EM_REPORT_KEY_Y colorresponse=&EM_REPORT_KEY_FREQUENCY / name="map" display=all;
223363    +          continuouslegend "map";
223364    +        endlayout;
223365    +        endgraph;
223366    +        end;
223368    +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=heatmap; run;
223370    +    %end;
223372    +    title1; title2; title3;
223374    +%mend EM_REPORT_HEATMAPTEMPLATE;
223377    +/* for assessment plot */
223379    +%macro EM_REPORT_EMRANK(pdat=, lattice=no) ;
223381    +    data _tmp_dat;
223382    +        set &pdat.&EM_REPORT_KEY_WHERECLAUSE;
223383    +    run;
223384    +    %let pdat = _tmp_dat;
223386    +    %let varList = GAIN CAPC LIFTC RESPC _MEANP_ _MINP_ _MAXP_;
223387    +    %let varNum = 7;
223388    +    %let modelVar = model;
223389    +    %do k = 1 %to &varNum;
223390    +        %let thisVar = %scan(&varList,&k,' ');
223391    +        %let var_&thisVar = ;
223392    +    %end;
223394    +/*-----------------------------------------------------------------------------*/
223396    +    proc contents data=&pdat out=_tmp_content(keep=name) noprint;
223397    +    run;
223399    +    %let is_cat = 0;
223400    +    %let has_loop = 0;
223401    +    %let has_where = 0;
223403    +    data _null_;
223404    +        set _tmp_content;
223405    +        name=strip(upcase(name));
223406    +        format _tmp_list $500.;
223407    +        _tmp_list = symget('varList');
223409    +        do k = 1 to &varNum;
223410    +            if name eq scan(_tmp_list,k,' ') then call symput(cats('var_',name),name);
223411    +        end;
223413    +        if name eq '_LOOP_'  then call symput('has_loop','1');
223414    +        if name eq '_WHERE_' then call symput('has_where','1');
223415    +        if name eq 'GAIN'    then call symput('is_cat','1');
223416    +    run;
223418    +    %if &has_loop eq 1 %then %do;
223419    +        %if &has_where eq 1 %then %do;
223420    +            proc sql noprint;
223421    +                select count(*) into :nn1 from &pdat;
223422    +                select count(*) into :nn2 from &pdat where _where_ is missing;
223423    +            quit;
223424    +            %if &nn1 ne &nn2
223425    +                %then %let modelvar = _where_;
223426    +                %else %let modelvar = ;
223427    +        %end;
223428    +        %else %do;
223429    +            %let modelvar = ;
223430    +        %end;
223431    +    %end;
223433    +/*-----------------------------------------------------------------------------*/
223435    +    %if "&lattice" eq "yes" %then %do ;
223437    +        proc sql noprint;
223438    +            select count(distinct datarole)  into :ndataroles from &pdat;
223439    +            select distinct datarole into :drole1-:drole%left(&ndataroles) from &pdat;
223440    +        quit;
223442    +        %do d =1 %to &ndataroles;
223444    +            proc sort data=&pdat(where=(datarole eq "&&&drole&d")) out=_tmp_emrp;
223445    +                by &modelvar decile;
223446    +            run;
223448    +            title1 "&EM_REPORT_TTL1";
223449    +            title2 "&EM_REPORT_TTL2";
223450    +            title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_multiplemdlassess_title, NOQUOTE, &&&drole&d))";
223451    +            %if "&EM_REPORT_KEY_WHERE" ne " " %then %do;
223452    +                title4 "&EM_REPORT_KEY_WHERE";
223453    +            %end;
223455    +            proc sgscatter data=_tmp_emrp;
223456    +                plot
223457    +                    %if &is_cat eq 1 %then %do;
223458    +                        (&var_gain &var_liftc &var_capc &var__meanp_) * decile
223459    +                    %end;
223460    +                    %else %do;
223461    +                        (&var__meanp_ &var__minp_ &var__maxp_) * decile
223462    +                    %end;
223463    +                    / %if &modelvar ne %then %do; group=&modelvar %end;
223464    +                        join=() markerattrs=(size=0) grid
223465    +                ;
223466    +            run; quit;
223467    +            title1; title2; title3; title4;
223468    +        %end;
223469    +    %end;
223470    +    %else %do;
223472    +        proc sort data=&pdat out=_tmp_emrp;
223473    +            by target datarole;
223474    +        run;
223476    +        title1 "&EM_REPORT_TTL1";
223477    +        title2 "&EM_REPORT_TTL2";
223478    +        title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_singlemdlassess_title, NOQUOTE, &em_report_key_where))";
223480    +        %if &is_cat eq 1 %then %do;
223481    +            %if "&var_gain" ne " " %then %do;
223482    +                proc sgpanel data=_tmp_emrp;
223483    +                    panelby datarole;
223484    +                    series x=decile y=gain; series x=decile y=basegain; series x=decile y=bestgain;
223485    +                    rowaxis grid; colaxis grid;
223486    +                run; quit;
223487    +            %end;
223488    +            %if "&var_liftc" ne " " %then %do;
223489    +                proc sgpanel data=_tmp_emrp;
223490    +                    panelby datarole;
223491    +                    series x=decile y=liftc; series x=decile y=baseliftc; series x=decile y=bestliftc;
223492    +                    rowaxis grid; colaxis grid;
223493    +                run; quit;
223494    +            %end;
223495    +            %if "&var_capc" ne " " %then %do;
223496    +                proc sgpanel data=_tmp_emrp;
223497    +                    panelby datarole;
223498    +                    series x=decile y=capc; series x=decile y=basecapc; series x=decile y=bestcapc;
223499    +                    rowaxis grid; colaxis grid;
223500    +                run; quit;
223501    +            %end;
223502    +        %end;
223503    +        %else %do;
223504    +            %if "&var__meanp_" ne " " %then %do ;
223505    +                proc sgpanel data=_tmp_emrp;
223506    +                    panelby datarole;
223507    +                    series x=decile y=_meanp_; series x=decile y=_targetmean_;
223508    +                    rowaxis grid; colaxis grid;
223509    +                run; quit;
223510    +            %end;
223511    +            %if "&var__minp_" ne " " %then %do ;
223512    +                proc sgpanel data=_tmp_emrp;
223513    +                    panelby datarole;
223514    +                    series x=decile y=_minp_; series x=decile y=_targetmin_;
223515    +                    rowaxis grid; colaxis grid;
223516    +                run; quit;
223517    +            %end;
223518    +            %if "&var__maxp_" ne " " %then %do ;
223519    +                proc sgpanel data=_tmp_emrp;
223520    +                    panelby datarole;
223521    +                    series x=decile y=_maxp_; series x=decile y=_targetmax_;
223522    +                    rowaxis grid; colaxis grid;
223523    +                run; quit;
223524    +            %end;
223525    +        %end;
223527    +        title1; title2; title3;
223528    +    %end;
223530    +%mend;
223533    +%macro EM_REPORT_LATTICE();
223535    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223537    +    %let numx = 1;
223538    +    %let numy = 1;
223540    +    proc sql noprint;
223541    +        %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do;
223542    +            select count(distinct &EM_REPORT_KEY_LATTICEX) into :numx from &pdat.&EM_REPORT_KEY_WHERECLAUSE;
223543    +        %end;
223544    +        %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do;
223545    +            select count(distinct &EM_REPORT_KEY_LATTICEY) into :numy from &pdat.&EM_REPORT_KEY_WHERECLAUSE;
223546    +        %end;
223547    +    quit;
223549    +    %let numrows=&numy;
223550    +    %let numcols=&numx;
223551    +    %let totalnum = %eval(&numx * &numy);
223553    +    %if &totalnum gt 6 %then %do;
223554    +        %if &totalnum le 18 %then %let numcols=3;
223555    +        %else %if &totalnum le 24 %then %let numcols=4;
223556    +        %else %if &totalnum le 30 %then %let numcols=5;
223557    +        %else %let numcols=3;
223558    +    %end;
223560    +    %if &totalnum gt 6 %then %do;
223561    +        %let numrows  = %sysevalf(&totalnum / &numcols);
223562    +        %let numrows  = %sysfunc(ceil(&numrows));
223563    +        %if &numrows ge 6 %then %let numrows=6;
223564    +    %end;
223566    +    %if (("&EM_REPORT_KEY_LATTICETYPE" eq "BAR") OR ("&EM_REPORT_KEY_LATTICETYPE" eq "HISTOGRAM"))
223567    +    %then %do;
223569    +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223570    +        %if "&em_report_key_whereclause" ne "" %then %do ;
223571    +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, &em_report_key_where))";
223572    +        %end;
223574    +        proc sgpanel data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
223575    +            panelby
223576    +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
223577    +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
223578    +              /
223579    +                %if &totalnum ge 5 %then %do; columns=&numcols rows=&numrows /*novarname*/ %end;
223580    +                uniscale=column
223581    +            ;
223582    +            /* originally using frequency so keeping this here; */
223583    +            /* eventrate plot in binning sets y var as response so added y as well */
223585    +            %if "&EM_REPORT_KEY_LATTICETYPE" eq "HISTOGRAM" %then %do;
223586    +                %if "&EM_REPORT_KEY_FREQUENCY" eq "" %then %do;
223587    +                    histogram &EM_REPORT_KEY_X;
223588    +                %end;
223589    +                %else %do;
223590    +                    histogram &EM_REPORT_KEY_X / freq = &EM_REPORT_KEY_FREQUENCY;
223591    +                %end;
223592    +            %end;
223593    +            %else %do;
223594    +                %if "%upcase(&EM_REPORT_KEY_ORIENTATION)" eq "HORIZONTAL"
223595    +                %then %do; hbar %end;
223596    +                %else %do; vbar %end;
223597    +                    &EM_REPORT_KEY_X /
223598    +                    %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do; response=&EM_REPORT_KEY_FREQUENCY %end;
223599    +                    %if "&EM_REPORT_KEY_Y" ne ""         %then %do; response=&EM_REPORT_KEY_Y         %end;
223600    +                    %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %do; group=&EM_REPORT_KEY_SUBGROUP     %end;
223601    +                        %else %if "&EM_REPORT_KEY_GROUP" ne ""  %then %do; group=&EM_REPORT_KEY_GROUP %end;
223602    +                ;
223603    +            %end;
223604    +            colaxis grid fitpolicy=rotatethin /* discreteorder=data */;
223605    +            rowaxis grid ;
223606    +        run; quit;
223608    +        /* special treatments */
223609    +        %if "&EM_REPORT_KEY_DESCRIPTION" eq "EVENTRATE" %then %do ;
223610    +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
223612    +                %let wtevexist=0;
223613    +                %let dsid = %sysfunc(open(work.pdl));
223614    +                %if &dsid %then %do;
223615    +                    %let wtevexist = %sysfunc(VARNUM(&dsid, wtev));
223616    +                %end;
223617    +                %if &dsid %then %let dsid = %sysfunc(close(&dsid));
223619    +                %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
223621    +                proc print data=&pdat.&EM_REPORT_KEY_WHERECLAUSE noobs label contents='';
223622    +                    var display_var _label_ _group_ role eventRate
223623    +                        %if &wtevexist ne 0 %then %do; wtev %end;;
223624    +                run;
223625    +            %end;
223626    +        %end;
223627    +    %end;
223628    +    %else %if (("&EM_REPORT_KEY_LATTICETYPE" eq "LINEPLOT") or ("&EM_REPORT_KEY_LATTICETYPE" eq "PLOT")) %then %do;
223630    +        proc sort data=&pdat.&EM_REPORT_KEY_WHERECLAUSE out=_tmp_pdl;
223631    +            by
223632    +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
223633    +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
223634    +            ;
223635    +        run;
223637    +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223638    +        %if "&em_report_key_whereclause" ne "" %then %do ;
223639    +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, &em_report_key_where))";
223640    +        %end;
223642    +        proc sgpanel data=_tmp_pdl;
223643    +            panelby
223644    +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
223645    +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
223646    +              /
223647    +                %if &totalnum ge 5 %then %do; columns=&numcols rows=&numrows /*novarname*/ %end;
223648    +                uniscale=column
223649    +            ;
223650    +            %let i = 1;
223651    +            %do %while ("%scan(&EM_REPORT_KEY_Y,&i,' ')" ne "");
223652    +                %let thisY=%scan(&EM_REPORT_KEY_Y,&i,' ');
223653    +                %let i = %eval(&i+1);
223654    +                series x=&EM_REPORT_KEY_X y=&thisY
223655    +                    %if "&EM_REPORT_KEY_GROUP" ne "" %then %do; / group=&EM_REPORT_KEY_GROUP %end;
223656    +                ;
223657    +            %end;
223658    +            %if "&EM_REPORT_KEY_Y2" ne "" %then %do;
223659    +                series x=&EM_REPORT_KEY_X y=&EM_REPORT_KEY_Y2
223660    +                    %if "&EM_REPORT_KEY_GROUP" ne "" %then %do; / group=&EM_REPORT_KEY_GROUP %end;
223661    +                ;
223662    +            %end;
223663    +            %if "&EM_REPORT_KEY_YREF" ne "" %then %do; refline &EM_REPORT_KEY_YREF / axis = y; %end;
223664    +            %if "&EM_REPORT_KEY_XREF" ne "" %then %do; refline &EM_REPORT_KEY_XREF / axis = x; %end;
223665    +            colaxis grid fitpolicy=rotatethin;
223666    +            rowaxis grid;
223667    +        run; quit;
223668    +    %end;
223670    +%mend EM_REPORT_LATTICE;
223672    +/*---------------------------------------------------------*/
223673    + * EM_REPORT_SCOREDIST2 ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_SCOREDIST2 ;
223674    + *     Score Distribution 2;
MPRINT(EM_REPORT_CREATE):   * Score Distribution 2;
223675    +/*---------------------------------------------------------*/
223677    +%macro EM_REPORT_SCOREDIST2() ;
223679    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
223681    +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223683    +    proc sgpanel data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
223684    +        panelby
223685    +            %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
223686    +            %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
223687    +          / rows=1 uniscale=row layout=lattice
223688    +        ;
223689    +        vbar &EM_REPORT_KEY_X
223690    +            %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do; / response=count %end;
223691    +        ;
223692    +        colaxis fitpolicy=rotatethin;
223693    +    run; quit;
223695    +%mend EM_REPORT_SCOREDIST2;
223697    +/*---------------------------------------------------------*/
223698    + * EM_REPORT_SCOREDIST ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_SCOREDIST ;
223699    + *     Score Distribution ;
MPRINT(EM_REPORT_CREATE):   * Score Distribution ;
223700    +/*---------------------------------------------------------*/
223702    +%macro EM_REPORT_SG4SCOREDIST(y1=,y2=,str1=,str2=,rowstr=);
223703    +    proc sgpanel data=_tmpdat;
223704    +        panelby datarole;
223705    +        %if "&y1" ne " " %then %do;
223706    +            series x=score y=&y1 / legendlabel="%sysfunc(sasmsg(sashelp.dmine, &str1, NOQUOTE))";
223707    +        %end;
223708    +        %if "&y2" ne " " %then %do;
223709    +            series x=score y=&y2 / legendlabel="%sysfunc(sasmsg(sashelp.dmine, &str2, NOQUOTE))";
223710    +        %end;
223711    +        rowaxis grid label="%sysfunc(sasmsg(sashelp.dmine, &rowstr, NOQUOTE))";
223712    +        colaxis grid;
223713    +    run; quit;
223714    +%mend;
223716    +%macro EM_REPORT_SCOREDIST(data=) ;
223718    +    data _tmp_scoredist;
223719    +        set &EM_REPORT_LIB..&EM_REPORT_KEY_FILE.&EM_REPORT_KEY_WHERECLAUSE;
223720    +    run;
223722    +    proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum name) noprint;
223723    +    run;
223725    +    /*--------------------------------------------------------------------------*/
223727    +    %let var_targetMean = ;
223728    +    %let var_targetMax = ;
223729    +    %let var_targetMin = ;
223730    +    %let is_cat = 0;
223731    +    %let modeldescnum = 0;
223732    +    %let loopnum = 0;
223733    +    %let has_where = 0;
223734    +    %let has_target = 0;
223736    +    data _null_;
223737    +        set _tmp_content;
223738    +        name=strip(upcase(name));
223739    +        if name eq 'MODELDESCRIPTION'   then call symput('modeldescnum',  put(varnum,6.));
223740    +        if name eq '_LOOP_'             then call symput('loopnum',       put(varnum,6.));
223741    +        if name eq '_WHERE_'            then call symput('has_where',     '1');
223742    +        if name eq '_TARGET_'           then call symput('has_target',    '1');
223743    +        if name eq '_TARGETMEAN_'       then call symput('var_targetMean',name);
223744    +        if name eq '_TARGETMAX_'        then call symput('var_targetMax', name);
223745    +        if name eq '_TARGETMIN_'        then call symput('var_targetMin', name);
223746    +        if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat',        '1');
223747    +    run;
223749    +    /*--------------------------------------------------------------------------*/
223751    +    %if (&modeldescnum eq 0) and (&loopnum eq 0) %then %do;
223752    +        %let modelvar = ;
223753    +        %let nmodels = 1;
223754    +        %let modeldat1 = _tmp_scoredist;
223755    +    %end;
223756    +    %else %do;
223758    +        %if &loopnum gt 0
223759    +            %then %do;
223760    +                proc sql noprint;
223761    +                    select count(*) into :nn1 from _tmp_scoredist;
223762    +                    select count(*) into :nn2 from _tmp_scoredist where _where_ is missing;
223763    +                quit;
223764    +                %if &nn1 ne &nn2
223765    +                    %then %let modelvar = _where_;
223766    +                    %else %let modelvar = target;
223767    +            %end;
223768    +            %else %let modelvar = model;
223770    +        %let nmodels = 1;
223771    +        proc sql noprint;
223772    +            select count(distinct &modelvar) into :nmodels from _tmp_scoredist;
223773    +            select distinct &modelvar into :cond1-:cond%left(&nmodels) from _tmp_scoredist;
223774    +        quit;
223776    +        %do d = 1 %to &nmodels;
223777    +            %let modeldat&d = %str(_tmp_scoredist(where=(&modelvar eq "&&&cond&d")));
223778    +        %end;
223779    +    %end;
223781    +    /* --- loop through all models or _where_ for plots---*/
223783    +    %do d = 1 %to &nmodels;
223785    +        proc sort data=&&&modeldat&d out=_tmpdat;
223786    +            by &modelvar target datarole;
223787    +        run;
223789    +        title1 "&EM_REPORT_TTL1";
223790    +        title2 "&EM_REPORT_TTL2";
223791    +        title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistsingle_title, NOQUOTE, &em_report_key_where))";
223792    +        %if &nmodels gt 1 %then %do; title4 "&&&cond&d"; %end;
223794    +        %if &is_cat eq 1 %then %do;
223795    +            %EM_REPORT_SG4SCOREDIST(y1=percentageofevents, y2=percentageofnonevents,
223796    +                str1=rpt_events_vlabel, str2=rpt_nonevents_vlabel, rowstr=assmt_percent_vlabel);
223797    +            %EM_REPORT_SG4SCOREDIST(y1=cumulativepercentageofevents, y2=cumulativepercentageofnonevents,
223798    +                str1=rpt_events_vlabel, str2=rpt_nonevents_vlabel, rowstr=assmt_percentC_vlabel);
223799    +        %end;
223800    +        %else %do;
223801    +            %EM_REPORT_SG4SCOREDIST(y1=_meanP_, y2=&var_targetMean,
223802    +                str1=rpt_predicted_vlabel, str2=rpt_target_vlabel, rowstr=rpt_mean_vlabel);
223803    +            %EM_REPORT_SG4SCOREDIST(y1=_meanP_, y2=&var_targetMax,
223804    +                str1=rpt_predicted_vlabel, str2=rpt_target_vlabel, rowstr=rpt_maximum_vlabel);
223805    +        %end;
223807    +        proc delete data=_tmpdat; run;
223808    +        title1; title2; title3; title4;
223809    +    %end;
223811    +    /* --- loop through all models or _where_ for prints ---*/
223813    +    %do d = 1 %to &nmodels;
223815    +        proc sort data=&&&modeldat&d out=_tmpdat;
223816    +            by &modelvar target datarole;
223817    +        run;
223819    +        title1; title2; title3;
223820    +        %EM_REPORT_TABLETEXT(subtitle=rpt_scoredistnone_title);
223822    +        %if &is_cat eq 1 %then %do;
223823    +            proc print data=_tmpdat noobs label contents='';
223824    +                by &modelvar target datarole;
223825    +                var p_label numberofevents percentageofevents percentageofnonevents
223826    +                    cumulativepercentageofevents cumulativepercentageofnonevents ;
223827    +            run;
223828    +        %end;
223829    +        %else %do;
223830    +            proc print data=_tmpdat noobs label contents='';
223831    +                by &modelvar target datarole;
223832    +                var p_label _meanP_ _maxP_ _minP_ &var_targetMean &var_targetMax &var_targetMin;
223833    +            run;
223834    +        %end;
223835    +    %end;
223837    +%mend EM_REPORT_SCOREDIST;
223840    +%macro EM_REPORT_MULTIPLY2PLOT;
223842    +    data _tmp_dat;
223843    +        set &EM_REPORT_LIB..&EM_REPORT_KEY_FILE.&EM_REPORT_KEY_WHERECLAUSE;
223844    +    run;
223846    +    proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
223847    +    run;
223849    +    %let has_datarole = 0;
223850    +    data _null_;
223851    +        set _tmp_content;
223852    +        name=strip(upcase(name));
223853    +        if name eq "DATEROLE" then call symput('has_datarole','1');
223854    +    run;
223856    +    %if &has_datarole eq 1 %then %do;
223857    +        proc sql noprint;
223858    +            select count(distinct datarole) into :ndataroles from _tmp_dat;
223859    +            select distinct datarole into :drole1-:drole%left(&ndataroles) from _tmp_dat;
223860    +        quit;
223861    +    %end;
223862    +    %else %do;
223863    +        %let ndataroles = 1;
223864    +    %end;
223866    +    %if &ndataroles gt 1 %then %do;
223867    +        %do d=1 %to &ndataroles ;
223869    +            proc sort data=_tmp_dat(where=(datarole eq "&&&drole&d")) out=_tmp_empd;
223870    +                by datarole &EM_REPORT_KEY_X;
223871    +            run;
223873    +            title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223874    +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitlethree_title, NOQUOTE, &&&drole&d))";
223876    +            proc sgplot data=_tmp_empd;
223877    +                series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y   ;
223878    +                series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y2 / y2axis ;
223879    +                %if "&EM_REPORT_KEY_YREF"  ne "" %then %do; refline &EM_REPORT_KEY_YREF  / axis = y;  %end;
223880    +                %if "&EM_REPORT_KEY_Y2REF" ne "" %then %do; refline &EM_REPORT_KEY_Y2REF / axis = y2; %end;
223881    +            run; quit;
223882    +        %end;
223883    +    %end;
223884    +    %else %do;
223885    +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
223886    +        proc sgplot data=_tmp_dat;
223887    +            series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y   ;
223888    +            series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y2 / y2axis ;
223889    +            %if "&EM_REPORT_KEY_YREF"  ne "" %then %do; refline &EM_REPORT_KEY_YREF  / axis = y;  %end;
223890    +            %if "&EM_REPORT_KEY_Y2REF" ne "" %then %do; refline &EM_REPORT_KEY_Y2REF / axis = y2; %end;
223891    +        run; quit;
223892    +    %end;
223894    +    title1; title2; title3; title4;
223896    +%mend EM_REPORT_MULTIPLY2PLOT;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_printmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_PRINTMACROS.SOURCE.
223897    +/*---------------------------------------------------------*/
223898    + * EM_REPORT_NODE_TEXT ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_NODE_TEXT ;
223899    + *      return the text label for a given node ;
MPRINT(EM_REPORT_CREATE):   * return the text label for a given node ;
223900    +/*---------------------------------------------------------*/
223902    +%macro EM_REPORT_NODE_TEXT(nodeid);
223903    +    %global EM_REPORT_NODE_TEXT ;
223904    +    %if not %sysfunc(exist(&em_report_lib..EM_NODEID)) %then %goto skip ;
223905    +    data _null_ ;
223906    +        set &em_report_lib..EM_NODEID ;
223907    +        where upcase(strip(nodeid)) eq upcase(strip("&nodeid")) ;
223908    +        call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
223909    +    run;
223910    +    %skip:
223911    +%mend EM_REPORT_NODE_TEXT;
223913    +/*---------------------------------------------------------*/
223914    + * EM_REPORT_TABLETEXT;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_TABLETEXT;
223915    + *      print the ods texts in front of a table;
MPRINT(EM_REPORT_CREATE):   * print the ods texts in front of a table;
223916    +/*---------------------------------------------------------*/
223918    +%macro EM_REPORT_TABLETEXT(subtitle=);
223919    +%if %substr(%upcase(%sysfunc(strip(&subtitle))), 1, 19) eq VIEWS_DESCRIPTIONS_ %then %do;
223920    +    ods &EM_REPORT_FORMAT text=" ";
223921    +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
223922    +    %let thisDVD = dmine;
223924    +    %let msg0 = views_descriptions_&em_report_key_description;
223925    +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
223926    +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
223927    +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
223928    +    %end;
223929    +    %else %do;
223930    +        %let msg2=views_descriptions_&em_report_key_description;
223931    +    %end;
223933    +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&msg0))"
223934    +    %then %do;
223935    +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE))";
223936    +    %end;
223937    +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&msg0))"
223938    +    %then %do;
223939    +        %if %sysfunc(exist(sashelp.tmine)) %then %do;
223940    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE))";
223941    +            %let thisDVD = tmine;
223942    +        %end;
223943    +    %end;
223944    +    %else %do;
223945    +        ods &EM_REPORT_FORMAT text="&em_report_key_description";
223946    +    %end;
223948    +    ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
223949    +%end;
223950    +%else %do;
223951    +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, &subtitle, NOQUOTE));
223952    +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
223953    +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, &subtitle, NOQUOTE));
223954    +    %end;
223955    +    %else %do;
223956    +        %let msg2=%sysfunc(sasmsg(sashelp.dmine, &subtitle, NOQUOTE));
223957    +    %end;
223959    +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&subtitle))"
223960    +    %then %do;
223961    +        %let thisDVD = dmine;
223962    +    %end;
223963    +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&subtitle))"
223964    +    %then %do;
223965    +        %let thisDVD = tmine;
223966    +    %end;
223967    +    %else %do;
223968    +        %let thisDVD = dmine;
223969    +    %end;
223971    +    ods &EM_REPORT_FORMAT text=" ";
223972    +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
223973    +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
223974    +    ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
223975    +%end;
223976    +%mend EM_REPORT_TABLETEXT;
223978    +/*---------------------------------------------------------*/
223979    + *  Print comparison of model fit stats;
MPRINT(EM_REPORT_CREATE):   * Print comparison of model fit stats;
223980    + *      used by EM_REPORT_DATA();
MPRINT(EM_REPORT_CREATE):   * used by EM_REPORT_DATA();
223981    +/*---------------------------------------------------------*/
223983    +%macro EM_REPORT_COMPAREFIT(data=) ;
223984    +    proc sort data=&data out=sd(drop=stat) ;
223985    +        by target datarole ;
223986    +    run ;
223987    +    %EM_REPORT_TABLETEXT(subtitle=rpt_modelfitcomparison_title);
223988    +    proc print data=sd noobs label contents='' ;
223989    +        by target datarole ;
223990    +        label label="%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, NOQUOTE))";
223991    +    run;
223992    +%mend EM_REPORT_COMPAREFIT;
223994    +/*---------------------------------------------------------*/
223995    + * EM_REPORT_CLASSIFYTABT;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_CLASSIFYTABT;
223996    + *      print the table in a lattice plot of classification charts;
MPRINT(EM_REPORT_CREATE):   * print the table in a lattice plot of classification charts;
223997    +/*---------------------------------------------------------*/
223999    +%macro EM_REPORT_CLASSIFYTAB();
224001    +    %if "&em_report_key_whereclause" eq "" %then %do ;
224002    +        %EM_REPORT_TABLETEXT(subtitle=rpt_eventclassification_title);
224003    +    %end; %else %do;
224004    +        ods &EM_REPORT_FORMAT text=" ";
224005    +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
224006    +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_eventclasswhere_title, NOQUOTE, &em_report_key_where))";
224007    +        ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.dmine, rpt_eventclasswhere_title, NOQUOTE, &em_report_key_where))";
224008    +    %end;
224010    +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
224012    +    proc print data=&pdat.&EM_REPORT_KEY_WHERECLAUSE noobs label contents='';
224013    +        label CORRECTTEXT= "%sysfunc(sasmsg(sashelp.dmine, rpt_state_vlabel, NOQUOTE))" percent="%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE))" ;
224014    +        by target datarole ;
224015    +        var from into correcttext count percent ;
224016    +    run;
224018    +%mend EM_REPORT_CLASSIFYTAB;
224020    +/*---------------------------------------------------------*/
224021    + * EM_REPORT_PROPERTIES;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_PROPERTIES;
224022    + *     print the properties table;
MPRINT(EM_REPORT_CREATE):   * print the properties table;
224023    +/*---------------------------------------------------------*/
224025    +%macro EM_REPORT_PROPERTIES(catalog=, dsname=work.properties);
224026    +    %if %sysfunc(cexist(&catalog)) %then %do;
224027    +        proc display cat=sashelp.emutil.prop2Ds.scl;
224028    +        run;
224029    +        %EM_REPORT_TABLETEXT(subtitle=rpt_props_title);
224030    +        %EM_REPORT_makeMultiColumn(dat=work.properties, vars=name value default, split=3);
224031    +        proc delete data=work.properties; run; quit;
224032    +    %end;
224033    +%mend EM_REPORT_PROPERTIES;
224035    +/*---------------------------------------------------------*/
224036    + * EM_REPORT_DATASOURCE ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_DATASOURCE ;
224037    + *     Report on data set starting a flow ;
MPRINT(EM_REPORT_CREATE):   * Report on data set starting a flow ;
224038    +/*--------------------------------------------------------*/
224039    +%macro EM_REPORT_DATASOURCE();
224041    +    proc transpose data=&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTMETADEFAULT out=temp_source;
224042    +        var _all_;
224043    +        format crdate NLDATM24.0 modate NLDATM24.0;
224044    +    run;
224046    +    /* prepare the data source table */
224047    +    data temp_source;
224048    +        set temp_source;
224049    +        rename col1 = value;
224050    +        col1 = right(col1);
224051    +        format label $64.;
224052    +        label
224053    +            col1  = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel, NOQUOTE))"
224054    +            label = "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel, NOQUOTE))"
224055    +        ;
224056    +        *** get the localized label column;
224057    +        _name_=upcase(_name_) ;
224058    +        if _name_ eq "MEMNAME"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_dataname_vlabel, NOQUOTE))" ;
224059    +        if _name_ eq "MEMTYPE"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datatype_vlabel, NOQUOTE))" ;
224060    +        if _name_ eq "MEMLABEL"        then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datalabel_vlabel, NOQUOTE))" ;
224061    +        if _name_ eq "TYPEMEM"         then delete ;
224062    +        if _name_ eq "ENGINE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_engine_vlabel, NOQUOTE))" ;
224063    +        if _name_ eq "CRDATE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_crdate_vlabel, NOQUOTE))" ;
224064    +        if _name_ eq "MODATE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datemode_vlabel, NOQUOTE))" ;
224065    +        if _name_ eq "NOBS"            then label="%sysfunc(sasmsg(sashelp.dmine, rpt_numrows_vlabel, NOQUOTE))" ;
224066    +        if _name_ eq "NCOLS"           then label="%sysfunc(sasmsg(sashelp.dmine, rpt_numcols_vlabel, NOQUOTE))" ;
224067    +        if _name_ eq "NBYTES"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datasize_vlabel, NOQUOTE))" ;
224068    +        if _name_ eq "ROLE"            then label="%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" ;
224069    +        if _name_ eq "USEEXTERNALDATA" then delete ;
224070    +        if _name_ eq "SAMPLINGRATE"    then delete ;
224071    +        if _name_ eq "SEGMENT"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_segment_vlabel, NOQUOTE))" ;
224072    +        if _name_ eq "LIBNAME"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datalib_vlabel, NOQUOTE))" ;
224073    +    run;
224075    +    %EM_REPORT_TABLETEXT(subtitle=rpt_dataattributes_title);
224076    +    %EM_REPORT_makeMultiColumn(dat=temp_source, vars=label value, split=3);
224077    +    proc delete data=temp_source; run; quit;
224079    +%mend EM_REPORT_DATASOURCE ;
224081    +*---------------------------------------------------------*/
224082    + *  a utility macro for split table into multiple columns ;
MPRINT(EM_REPORT_CREATE):   *---------------------------------------------------------*/ * a utility macro for split table into multiple columns ;
224083    +/*---------------------------------------------------------*/
224085    +%macro em_report_makeMultiColumn(dat=,vars=,split=2);
224087    +    %let vars = %upcase(&vars);
224089    +    /*--- check if the variable existing in the table ---*/
224090    +    proc contents data=&dat out=_tmpms_content(keep=name) noprint;
224091    +    run;
224093    +    %let k = 1;
224094    +    %let vars2 = ;
224095    +    %do %while("%scan(&vars,&k,' ')" ne "");
224096    +        data _null_;
224097    +            set _tmpms_content;
224098    +            name=strip(upcase(name));
224099    +            if name eq "%scan(&vars,&k,' ')"
224100    +                then call symput('vars2',catx(' ',symget('vars2'),name));
224101    +        run;
224102    +        %let k = %eval(&k+1);
224103    +    %end;
224105    +    /*--- count the valid variables ---*/
224106    +    %let k = 1;
224107    +    %do %while("%scan(&vars2,&k,' ')" ne "");
224108    +        %let var&k = %scan(&vars2,&k,' ');
224109    +        %let k = %eval(&k+1);
224110    +    %end;
224111    +    %let numvars = %eval(&k-1);
224113    +    /* --- split the table ---*/
224114    +    %let dsid = %sysfunc(open(&dat));
224115    +    %let numobs = %sysfunc(attrn(&dsid, NOBS));
224116    +    %let numrows = %sysfunc(round(%sysevalf(&numobs/&split)));
224117    +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
224119    +    data %do d = 1 %to &split; _tmpms_dat&d.(rename=(%do k = 1 %to &numvars; &&&var&k=&&&var&k..&d %end;)) %end;;
224120    +        set &dat;
224121    +        keep &vars2 numrow;
224122    +        %do d = 1 %to &split;
224123    +            if _n_ gt %eval(&numrows*(&d-1)) and _n_ le %eval(&numrows*&d)
224124    +                then do; numrow = _n_-&numrows*(&d-1); output _tmpms_dat&d; end;
224125    +        %end;
224126    +    run;
224128    +    %do d = 1 %to &split;
224129    +        proc sort data=_tmpms_dat&d; by numrow; run;
224130    +    %end;
224132    +    /*--- merge and print ---*/
224133    +    data _tmpms_alldat;
224134    +        merge %do d = 1 %to &split; _tmpms_dat&d %end;;
224135    +        by numrow;
224136    +    run;
224138    +    proc print data=_tmpms_alldat noobs label contents='';
224139    +        var %do d = 1 %to &split; %do k = 1 %to &numvars; &&&var&k..&d %end; %end;;
224140    +    run;
224142    +    proc datasets lib=work nolist;
224143    +        delete _tmpms_:;
224144    +    run; quit;
224146    +%mend em_report_makeMultiColumn;
224148    +*---------------------------------------------------------*/
224149    + *  basic print a data table ;
MPRINT(EM_REPORT_CREATE):   *---------------------------------------------------------*/ * basic print a data table ;
224150    +/*---------------------------------------------------------*/
224151    +%macro EM_REPORT_DATA(maxobs=100);
224153    +%local pd desc ;
224154    +%let pd=&em_report_lib..&EM_REPORT_KEY_FILE ;
224155    +%IF not %SYSFUNC(EXIST(&pd)) %then %goto skip;
224157    +%if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
224159    +    %let desc= %upcase(&em_report_key_description) ;
224161    +    %if "&desc" eq "VARIABLES" %then %do;
224162    +        /*--- NOOP: handled globally by EM_REPORT_NODE --*/
224163    +        %goto skip ;
224164    +    %end;
224165    +    %else %if (("&desc" eq "ITEMS") OR ("&desc" eq "OUTAOV16") OR ("&desc" eq "OUTGINT") OR ("&desc" eq "OUTGVAR")
224166    +              OR ("&desc" eq "HISTWEIGHT") OR ("&desc" eq "EMSTAT")) %then %do;;
224167    +        %goto skip;
224168    +    %end;
224169    +    %if (("&desc" eq "SAMPLE") AND (%substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq GRFEXPL)) %then %do;;
224170    +        %goto skip;
224171    +    %end;
224172    +    %else %if "&desc" eq "MODELDIAGNOSTICS" %then %do;
224174    +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
224176    +        proc sort data=&pd(obs=&maxobs) out=_pd; by datarole; run;
224178    +        proc print data=_pd noobs label contents='';
224179    +            by datarole;
224180    +            var cutoff sensitivity_tpr specificity_tnr one_specificity_fpr precision_event
224181    +                precision_non_event ovl_class_rate precision_overall;
224182    +        run;
224184    +        proc delete data=_pd; run; quit;
224185    +    %end;
224186    +    %else
224187    +    %if "&desc" eq "REPORTFITSTAT" %then %do ;
224189    +        /*--- should switch to proc tabulate ---*/
224190    +        /*--- often there is only one value of the by variable 'target', but there may be several ---*/
224191    +        data pd; set &pd ;
224192    +            where train ne . ;
224193    +            label _NOBS_  = "%sysfunc(sasmsg(sashelp.dmine, stat_nobs_vlabel, NOQUOTE))"
224194    +                  _MISC_  = "%sysfunc(sasmsg(sashelp.dmine, stat_misc_vlabel, NOQUOTE))"
224195    +                  _MAX_   = "%sysfunc(sasmsg(sashelp.dmine, stat_max_vlabel, NOQUOTE))"
224196    +                  _SSE_   = "%sysfunc(sasmsg(sashelp.dmine, stat_sse_vlabel, NOQUOTE))"
224197    +                  _ASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_ase, NOQUOTE))"
224198    +                  _RASE_  = "%sysfunc(sasmsg(sashelp.dmine, stat_rase_vlabel, NOQUOTE))"
224199    +                  _DIV_   = "%sysfunc(sasmsg(sashelp.dmine, stat_div_vlabel, NOQUOTE))"
224200    +                  _DFT_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, NOQUOTE))"
224201    +                  _AIC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_aic, NOQUOTE))"
224202    +                  _MSE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_mse, NOQUOTE))"
224203    +                  _RMSE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rmse, NOQUOTE))"
224204    +                  _AVERR_ = "%sysfunc(sasmsg(sashelp.dmine, stat_averr_vlabel, NOQUOTE))"
224205    +                  _DFE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfe, NOQUOTE))"
224206    +                  _DFM_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfm, NOQUOTE))"
224207    +                  _ERR_   = "%sysfunc(sasmsg(sashelp.dmine, stat_err_vlabel, NOQUOTE))"
224208    +                  _FPE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_fpe, NOQUOTE))"
224209    +                  _NW_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_nw, NOQUOTE))"
224210    +                  _RFPE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rfpe, NOQUOTE))"
224211    +                  _SBC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sbc, NOQUOTE))"
224212    +            ;
224213    +            drop stat ;
224214    +        run;
224216    +        %EM_REPORT_TABLETEXT(subtitle=rpt_modelfitstat_title);
224218    +        proc sort data=pd;
224219    +            by target targetlabel;
224220    +        proc print data=pd noobs label contents='';
224221    +            label label="%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_statlabel, NOQUOTE))" ;
224222    +            by target targetlabel;
224223    +        run;
224225    +    %end ;
224226    +    %else %if "&desc" eq "CLUSMEAN" %then %do;
224228    +        /* determine number of segments to process */
224229    +        %let dsid = %sysfunc(open(&pd));
224230    +        %if &dsid %then %do;
224231    +            %let numseg = %sysfunc(ATTRN(&dsid, NOBS));
224232    +        %end;
224233    +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
224235    +        /* transpose data to have a row per segment value */
224236    +        proc transpose data=&pd out=clusmean name=VARIABLE;
224237    +        run;
224239    +        data clusmean;
224240    +            set clusmean;
224241    +            label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
224242    +                %do i=1 %to &numseg;
224243    +                    %let colname = COL&i;
224244    +                    &colname = "%sysfunc(sasmsg(sashelp.dmine, rpt_segcolname_vlabel, NOQUOTE, &i))"
224245    +                %end;
224246    +            ;
224247    +            if missing(_LABEL_) then _LABEL_ = VARIABLE;
224248    +            if VARIABLE="_SEGMENT_" then delete;
224249    +            drop VARIABLE;
224250    +       run;
224252    +       %EM_REPORT_TABLETEXT(subtitle=rpt_meanstats_title);
224253    +       proc print data=clusmean noobs label contents='' ;  run ;
224255    +    %end;
224256    +    %else %if "&desc" eq "COMPAREFIT" %then %do;
224258    +        %EM_REPORT_COMPAREFIT(data=&pd);
224260    +    %end;
224261    +    %else %if "&desc" eq "FITSTAT" %then %do;
224263    +        /*** only print the fitstat table for MDLCOMP nodes ***/
224264    +        %if %substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq MDLCOMP %then %do;
224266    +            data _null_ ;
224267    +                set &pd (obs=2) end=eof ;
224268    +                if eof then do ;
224269    +                    call symput("_misc_"      , strip(put(_misc_,best.))) ;
224270    +                    call symput("_vmisc_"     , strip(put(_vmisc_,best.))) ;
224271    +                    call symput("_aur_"       , strip(put(_aur_, best.)));
224272    +                    call symput("_gini_"      , strip(put(_gini_, best.)));
224273    +                end;
224274    +            run;
224276    +            %let loopflag  = 0; %let validflag = 0;
224277    +            %let ASEflag   = 0; %let VASEflag  = 0; %let MISCflag  = 0; %let VMISCflag = 0;
224278    +            %let KSflag    = 0; %let VKSflag   = 0; %let AURflag   = 0; %let GINIflag  = 0;
224279    +            %let dsid = %sysfunc(open(&pd));
224280    +            %if &dsid %then %do;
224281    +                %let loopflag  = %sysfunc(VARNUM(&dsid, _LOOP_));
224282    +                %let validflag = %sysfunc(VARNUM(&dsid, VKS));
224283    +                %let ASEflag   = %sysfunc(VARNUM(&dsid, _ASE_));
224284    +                %let MISCflag  = %sysfunc(VARNUM(&dsid, _MISC_));
224285    +                %let KSflag    = %sysfunc(VARNUM(&dsid, KS));
224286    +                %let VASEflag  = %sysfunc(VARNUM(&dsid, _VASE_));
224287    +                %let VMISCflag = %sysfunc(VARNUM(&dsid, _VMISC_));
224288    +                %let VKSflag   = %sysfunc(VARNUM(&dsid, VKS));
224289    +                %let AURflag   = %sysfunc(VARNUM(&dsid, _AUR_));
224290    +                %let GINIflag  = %sysfunc(VARNUM(&dsid, _GINI_));
224291    +            %end;
224292    +            %if &dsid %then %let dsid=%sysfunc(close(&dsid));
224294    +            %EM_REPORT_TABLETEXT(subtitle=rpt_fittable_title);
224296    +            proc print data=&pd(obs=&maxobs) noobs label contents='';
224297    +                id
224298    +                    %if &loopflag ne 0 %then %do; _LOOP_ _WHERE_ %end;
224299    +                    USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_
224300    +                ;
224301    +                var
224302    +                %if &validflag ne 0 %then %do;
224303    +                    %if &ASEflag ne 0                         %then %do; _ASE_   %end;
224304    +                    %if &MISCflag ne 0  and "&_misc_" ne "."  %then %do; _MISC_  %end;
224305    +                    %if &KSflag ne 0                          %then %do; KS      %end;
224306    +                    %if &VASEflag ne 0                        %then %do; _VASE_  %end;
224307    +                    %if &VMISCflag ne 0 and "&_vmisc_" ne "." %then %do; _VMISC_ %end;
224308    +                    %if &VKSflag ne 0                         %then %do; VKS     %end;
224309    +                %end;
224310    +                %else %do;
224311    +                    %if &ASEflag ne 0                         %then %do; _ASE_   %end;
224312    +                    %if &MISCflag ne 0  and "&_misc_" ne "."  %then %do; _MISC_  %end;
224313    +                    %if &KSflag ne 0                          %then %do; KS      %end;
224314    +                    %if &AURflag ne 0   and "&_aur_" ne "."   %then %do; _AUR_  %end;
224315    +                    %if &GINIflag ne 0  and "&_gini_" ne "."  %then %do; _GINI_  %end;
224316    +                %end;
224317    +               ;
224318    +            run;
224319    +        %end;
224320    +        %else %do;
224321    +            %goto skip;
224322    +        %end;
224323    +    %end;
224324    +    %else %if "&desc" eq "RULETABLE" %then %do;
224326    +        %let dsid = %sysfunc(open(&pd));
224327    +        %let printflag = 0;
224328    +        %if &dsid %then %do;
224329    +          %let printflag = %sysfunc(VARNUM(&dsid, EXP_CONF));
224330    +          %let lhandflag = %sysfunc(VARNUM(&dsid, _lhand));
224331    +          %let rhandflag = %sysfunc(VARNUM(&dsid, _rhand));
224332    +        %end;
224333    +        %if &dsid %then %let dsid=%sysfunc(close(&dsid));
224335    +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
224337    +        proc print data=&pd(obs=&maxobs) noobs label contents='';
224338    +            %if &printflag ne 0 %then %do;
224339    +                var rule exp_conf support lift count
224340    +                %if &lhandflag ne 0 %then %do; _lhand %end;
224341    +                %if &rhandflag ne 0 %then %do; _rhand %end;
224342    +                ;
224343    +            %end;
224344    +            %else %do;
224345    +                var rule conf support count
224346    +                %if &lhandflag ne 0 %then %do; _lhand %end;
224347    +                %if &rhandflag ne 0 %then %do; _rhand %end;
224348    +                ;
224349    +            %end;
224350    +        run;
224351    +    %end;
224352    +    %else %do ;
224353    +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
224354    +        proc print data=&pd(obs=&maxobs) noobs label contents=''; run ;
224355    +    %end ;
224356    +    %end;
224357    +%skip:
224358    +%mend EM_REPORT_DATA;
224360    +/*---------------------------------------------------------*/
224361    + * EM_REPORT_VARS ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_VARS ;
224362    + * EM_REPORT_VARS_FLIP ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_VARS_FLIP ;
224363    + *     Report on variables used by the node ;
MPRINT(EM_REPORT_CREATE):   * Report on variables used by the node ;
224364    +/*---------------------------------------------------------*/
224365    +%macro EM_REPORT_VARS_FLIP(data=,out=);
224367    +    proc sort data=&data;
224368    +        by descending role level name;
224369    +    run;
224371    +    data &out(keep=role level count names ) ;
224372    +        length role level $16 ;
224373    +        set &data end=eof ;
224374    +        length xrole role $32 count 8 names $200 ;
224375    +        krole= strip(role) !!' * ' !! strip(level) ;
224376    +        retain xrole ; if _n_ eq 1 then xrole=krole ;
224377    +        retain names ; if _n_ eq 1 then names=name ;
224378    +        retain count 0 ending 0 ;
224379    +        count+1 ;
224380    +        role=scan(xrole,1,'*') ;
224381    +        level=scan(xrole,2,'*') ;
224382    +        if xrole ne krole then do ;
224383    +            count=count-1 ;
224384    +            put _n_ "OUTPUT;" ;
224385    +            output ;
224386    +            xrole=krole ; names= strip(name) ;
224387    +            count=1  ; ending=0 ;
224388    +        end ;
224389    +        else if _n_ gt 1 then do ;
224390    +            if length(names) + length(name) lt 196 then
224391    +                names= strip(names) !! ' '  !! strip(name) ;
224392    +            else
224393    +            if not ending then do ;
224394    +                names= strip(names) !! ' ...' ;
224395    +                ending=1 ;
224396    +            end;
224397    +        end;
224398    +        role=scan(xrole,1,'*') ;
224399    +        level=scan(xrole,2,'*') ;
224400    +        if eof and count gt 0 then output ;
224401    +        label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE)) "
224402    +              names = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
224403    +              level = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
224404    +              role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))";
224405    +    run ;
224406    +%mend EM_REPORT_VARS_FLIP ;
224408    +%macro EM_REPORT_VARS(varlist=0);
224410    +    %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE))
224411    +        %then %goto skip ;
224413    +    proc sql noprint;
224414    +        select count(*) into :tmp_numvar from &EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE;
224415    +    quit;
224417    +    %if &tmp_numvar lt 1 %then %goto skip;
224418    +/*--- 1. get minimal set of vars -----------------------------------------*/
224420    +    data _tmpvl_pdv(drop=use newuse count) ;
224421    +        set &EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE end=eof;
224422    +        length use newuse $1;
224423    +        label
224424    +            name   = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
224425    +            level  = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
224426    +            role   = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
224427    +            length = "%sysfunc(sasmsg(sashelp.dmine, meta_length_vlabel, NOQUOTE))"
224428    +        ;
224429    +        if use eq "" then use="Y";
224430    +        newuse=use;
224431    +        if use eq "D" then do;
224432    +            if role="REJECT" then newuse="N";
224433    +            else if role="INPUT"    then newuse="Y";
224434    +            else if role="CROSSID"  then newuse="Y";
224435    +            else if role="TEXT"     then newuse="Y";
224436    +        end ;
224437    +        if newuse eq "Y" then do ;
224438    +            count+1 ;
224439    +            output;
224440    +        end;
224441    +        if eof then call symput("varcount",put(count,6.)) ;
224442    +    run;
224444    +    proc sort data=_tmpvl_pdv; by name; run ;
224446    +/*--- 2. Summarize the variables -----------------------------------------*/
224448    +    %if &varlist ne 1 or &varcount gt &EM_REPORT_PRINT_MAXVARS %then %do;
224450    +        /* why not update pdv here? mxx */
224451    +        %EM_REPORT_VARS_FLIP(data=_tmpvl_pdv,out=_tmpvl_pds);
224452    +        %EM_REPORT_TABLETEXT(subtitle=rpt_varsummary_title);
224453    +        proc print data=_tmpvl_pds noobs label contents=''; run;
224455    +    %end;
224456    +    %else %do;
224458    +        %if %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._variableset)) %then %do;
224459    +            proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._variableset out=_tmpvl_vs;
224460    +                by name;
224461    +            data _tmpvl_pdv;
224462    +                update _tmpvl_pdv _tmpvl_vs;
224463    +                by name;
224464    +                label
224465    +                    type    = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel, NOQUOTE))"
224466    +                    format  = "%sysfunc(sasmsg(sashelp.dmine, meta_format_vlabel, NOQUOTE))"
224467    +                    creator = "%sysfunc(sasmsg(sashelp.dmine, meta_creator_vlabel, NOQUOTE))"
224468    +                    family  = "%sysfunc(sasmsg(sashelp.dmine, rpt_family_vlabel, NOQUOTE))"
224469    +                    label   = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))"
224470    +                ;
224471    +            run;
224472    +        %end;
224474    +        %EM_REPORT_TABLETEXT(subtitle=rpt_varlist_title);
224475    +        proc print data=_tmpvl_pdv noobs label contents='';
224476    +            var name label role level type length format creator;
224477    +        run;
224478    +    %end;
224480    +/*--- 3. for SVM node with EMSTAT table ----------------------------------*/
224482    +    %let emstat_exist = 0;
224483    +    %if %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._emstat)) %then %do;
224484    +        proc sql noprint;
224485    +            select count(*) into :emstat_use from &em_report_lib..&nodeid._emreport
224486    +                where key="DESCRIPTION" and value="EMSTAT" ;
224487    +        quit;
224488    +        %if &emstat_use gt 0 %then %let emstat_exist = 1;
224489    +    %end;
224491    +    %if &emstat_exist eq 1 %then %do;
224493    +        /* check newname column */
224494    +        %let newname_exist = 0;
224495    +        %let newobs = 0;
224496    +        %let tsdsid = %sysfunc(open(work.pdv));
224497    +        %if &tsdsid %then %do;
224498    +            %let tsobs = %sysfunc(ATTRN(&tsdsid, NOBS));
224499    +            %let newobs = %sysfunc(varnum(&tsdsid, NEWNAME));
224500    +            %if &tsobs > 0 AND  &newobs > 0 %then %let newname_exist =1;
224501    +        %end;
224502    +        %if &tsdsid %then %let tsdsid = %sysfunc(close(&tsdsid));
224504    +        %if &newname_exist eq 1 %then %do;
224505    +            data _tmpvl_pdv; set _tmpvl_pdv(drop=name); run;
224506    +            proc sort data=_tmpvl_pdv(rename=(newname=NAME)); by name; run;
224507    +        %end;
224508    +        %else %do;
224509    +            proc sort data=_tmpvl_pdv; by name; run;
224510    +        %end;
224512    +        proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._VARIABLESET out=_tmpvl_v; by name; run;
224514    +        data _tmpvl_pdv ;
224515    +            update _tmpvl_pdv _tmpvl_v;
224516    +            by name;
224517    +            label label="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
224518    +        run;
224520    +        proc sort data=_tmpvl_pdv; by name; run;
224521    +        proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._EMSTAT out=_tmpvl_tempsort; by name; run;
224523    +        data _tmpvl_pdv;
224524    +            merge _tmpvl_pdv(keep=name label role level type length format creator family) _tmpvl_tempsort;
224525    +            by name;
224526    +            label type    = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel, NOQUOTE))"
224527    +                  format  = "%sysfunc(sasmsg(sashelp.dmine, meta_format_vlabel, NOQUOTE))"
224528    +                  creator = "%sysfunc(sasmsg(sashelp.dmine, meta_creator_vlabel, NOQUOTE))"
224529    +                  family  = "%sysfunc(sasmsg(sashelp.dmine, rpt_family_vlabel, NOQUOTE))";
224530    +        run;
224532    +        proc sort data=_tmpvl_pdv; by descending role name; run;
224534    +        %EM_REPORT_TABLETEXT(subtitle=rpt_variable_interval_title);
224535    +        proc print data=_tmpvl_pdv(where=(LEVEL="INTERVAL")) noobs label contents='';
224536    +            var name label role level type length format creator pctmiss min max mean std skewness kurtosis;
224537    +        run;
224539    +        %EM_REPORT_TABLETEXT(subtitle=rpt_variable_class_title);
224540    +        proc print data=_tmpvl_pdv(where=(LEVEL^="INTERVAL")) noobs label contents='';
224541    +            var name label role level type length format creator nlevel pctmiss;
224542    +        run;
224543    +    %end;
224545    +/*--- 4. now get vars created by this node -------------------------------*/
224547    +    %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._CMETA_TRAIN))
224548    +        %then %goto skip;
224550    +    %let pdvxnum = 0;
224552    +    data _tmpvl_pdvx;
224553    +        set &EM_REPORT_LIB..&EM_REPORT_NODEID._CMETA_TRAIN end=eof ;
224554    +        where upcase(creator) eq "&EM_REPORT_NODEID" ;
224555    +        if eof then call symput('pdvxnum',put(_N_,6.));
224556    +        label
224557    +            name   = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
224558    +            label  = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))"
224559    +            role   = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
224560    +            level  = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
224561    +            type   = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel, NOQUOTE))"
224562    +            length = "%sysfunc(sasmsg(sashelp.dmine, meta_length_vlabel, NOQUOTE))";
224563    +    run;
224565    +    %if pdvxnum gt 0 %then %do;
224566    +        %if &varlist ne 1 or &pdvxnum gt &EM_REPORT_PRINT_MAXVARS %then %do ;
224568    +            %EM_REPORT_VARS_FLIP(data=_tmpvl_pdvx,out=_tmpvl_pdvxp) ;
224570    +            proc sql noprint;
224571    +                select count(*) into :nobs from _tmpvl_pdvxp;
224572    +            quit;
224574    +            %if &nobs > 0 %then %do;
224575    +                %EM_REPORT_TABLETEXT(subtitle=rpt_createvarsummary_title);
224576    +                proc print data=_tmpvl_pdvxp noobs label contents=''; run ;
224577    +            %end;
224578    +        %end;
224579    +        %else %do ;
224581    +            %EM_REPORT_TABLETEXT(subtitle=rpt_createvarslist_title);
224582    +            proc print data=_tmpvl_pdvx noobs label contents='';
224583    +                var name label role type length ;
224584    +            run;
224585    +        %end;
224586    +    %end;
224588    +/*------------------------------------------------------------------------*/
224590    +    proc datasets lib=work nolist;
224591    +        delete _tmpvl_:;
224592    +    run; quit;
224593    +    %skip:
224595    +%mend EM_REPORT_VARS;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_rpmmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_RPMMACROS.SOURCE.
224597    +%macro EM_REPORT_validSummaryPath(startNodeID =);
224598    +/*--- purpose: detect whether a flow is valid as a summary path ---*/
224600    +    %global EM_REPORT_NODES EM_REPORT_LIB RPM_REPORT_MODELNODE  RPM_REPORT_SCORENODE RPM_REPORT_MDLCOMP RPM_REPORT_VALIDSUMMARY;
224601    +    %local prednode em_report_mdlOutfit;
224602    +    %let RPM_REPORT_MODELNODE    = ;
224603    +    %let RPM_REPORT_SCORENODE    = ;
224604    +    %let RPM_REPORT_MDLCOMP      = ;
224605    +    %let RPM_REPORT_VALIDSUMMARY = 0;
224607    +    %if &EM_REPORT_NODES eq SUMMARY %then %do;
224609    +        %let predNode=;
224610    +        data _null_ ;
224611    +            set &EM_REPORT_LIB..em_dgraph(where=(to="&startNodeID"));
224612    +            call symput('predNode', strip(from));
224613    +        run;
224614    +        %let predNode = &predNode;
224616    +        /* if predecessor [to Reporter node] is MDLCOMP, RPM report is valid                           [MDLCOMP->Reporter]*/
224617    +        /* or if predecessor is SCORE and MODEL node is fed into score, RPM report is valid            [Score->Model->Reporter]*/
224618    +        /* or if MDLCOMP to SCORE to REPORTER, RPM report is valid, commented xxm                      [MDLCOMP->Score->Reporter]*/
224619    +        /* or if predecessor is MODEL node, RPM report is valid                                        ["model"->Reporter]*/
224620    +        /* or MDLCOMP->SCORE->CODEXPT->Reporter is valid*/
224622    +        %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
224623    +            %let RPM_REPORT_MDLCOMP = &predNode;
224624    +            %let RPM_REPORT_VALIDSUMMARY=1;
224625    +            data _null_;
224626    +                set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
224627    +                call symput('RPM_REPORT_MODELNODE',strip(model));
224628    +            run;
224629    +        %end;
224630    +        %else %if %upcase(%substr(&prednode,1,5)) eq SCORE %then %do;
224631    +            %let RPM_REPORT_SCORENODE = &prednode;
224632    +            %let prednode = ;
224633    +            data _null_ ;
224634    +                set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCORENODE"));
224635    +                call symput('predNode', strip(from));
224636    +            run;
224637    +            %let predNode = &predNode;
224639    +            %if &prednode ne %then %do;
224640    +                %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
224641    +                    %let RPM_REPORT_MDLCOMP = &prednode;
224642    +                    %let RPM_REPORT_VALIDSUMMARY=1;
224643    +                    data _null_;
224644    +                        set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
224645    +                        call symput('RPM_REPORT_MODELNODE',strip(model));
224646    +                    run;
224647    +                %end;
224648    +                %else %do;
224649    +                    %let em_report_mdlOutfit = &EM_REPORT_LIB..&prednode._emoutfit;
224650    +                    %if %sysfunc(exist(&em_report_mdlOutfit))
224651    +                    %then %do;
224652    +                        %let RPM_REPORT_MODELNODE = &prednode;
224653    +                        %let RPM_REPORT_VALIDSUMMARY=1;
224654    +                    %end;
224655    +                %end;
224656    +            %end;
224657    +        %end;
224658    +        %else %if %upcase(%substr(&prednode,1,7)) eq CODEXPT %then %do;
224659    +            %let RPM_REPORT_SCOREXPTNODE = &prednode;
224660    +            %let prednode = ;
224661    +            data _null_ ;
224662    +                set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCOREXPTNODE"));
224663    +                call symput('predNode', strip(from));
224664    +            run;
224665    +/*            %let predNode = &predNode;*/
224667    +            %if &prednode ne %then %do;
224668    +                %if %upcase(%substr(&prednode,1,5)) eq SCORE %then %do;
224669    +                    %let RPM_REPORT_SCORENODE = &prednode;
224670    +                    %let prednode = ;
224671    +                    data _null_ ;
224672    +                        set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCORENODE"));
224673    +                        call symput('predNode', strip(from));
224674    +                    run;
224675    +/*                    %let predNode = &predNode; */
224677    +                    %if &prednode ne %then %do;
224678    +                        %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
224679    +                            %let RPM_REPORT_MDLCOMP = &prednode;
224680    +                            %let RPM_REPORT_VALIDSUMMARY=1;
224681    +                            data _null_;
224682    +                                set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
224683    +                                call symput('RPM_REPORT_MODELNODE',strip(model));
224684    +                            run;
224685    +                        %end;
224686    +                    %end;
224687    +                %end;
224688    +            %end;
224689    +        %end;
224690    +        %else %do;
224691    +            %let em_report_mdlOutfit = &em_lib..&prednode._emoutfit;
224692    +            %if %sysfunc(exist(&em_report_mdlOutfit))
224693    +            %then %do;
224694    +                %let RPM_REPORT_MODELNODE = &prednode;
224695    +                %let RPM_REPORT_VALIDSUMMARY=1;
224696    +            %end;
224697    +        %end;
224698    +    %end;
224700    +    %let RPM_REPORT_MODELNODE = &RPM_REPORT_MODELNODE;
224701    +    %let RPM_REPORT_SCORENODE = &RPM_REPORT_SCORENODE;
224702    +    %let RPM_REPORT_MDLCOMP   = &RPM_REPORT_MDLCOMP;
224704    +%mend EM_REPORT_validSummaryPath;
224706    +%macro em_report_summary(runHP=0);
224708    +%global EM_REPORT_SUMMARY_TARGET RPM_REPORT_MDLCOMP RPM_REPORT_MODELNODE;
224709    +%local  IDSNode freqvar;
224711    +%if not %sysfunc(exist(emreportpath)) %then %goto skip ;
224713    +/*--- RPM-1. Identify the modeling node -------------------------------------*/
224715    +%let em_report_modelID = ;
224716    +%let em_report_modeldesc= ;
224718    +%if &RPM_REPORT_MDLCOMP ne %then %do;
224719    +    %let em_report_mdloutfit = &em_lib..&RPM_REPORT_MDLCOMP._emoutfit;
224720    +    %if %sysfunc(exist(&em_report_mdloutfit)) %then %do;
224721    +        data _null_;
224722    +           set &em_lib..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
224723    +           call symput('em_report_modelID',   strip(model));
224724    +           call symput('em_report_modeldesc', strip(modeldescription));
224725    +        run;
224726    +    %end;
224727    +%end;
224728    +%else %if &RPM_REPORT_MODELNODE ne %then %do;
224729    +    %let em_report_mdloutfit = &em_lib..&RPM_REPORT_MODELNODE._emoutfit;
224730    +    %if %sysfunc(exist(&em_report_mdloutfit)) %then %do;
224731    +        %let em_report_modelID   = &RPM_REPORT_MODELNODE;
224732    +        %let em_report_modeldesc = ;
224733    +    %end;
224734    +%end;
224736    +/*--- RPM-2. Retrieve necessary information for the model--------------------*/
224738    +%if &em_report_modelId ne %then %do;
224740    +    /* RPM-2.1 save model information */
224742    +    %EM_GETNAME(key=MODELINFO, type=DATA);
224743    +    data &EM_USER_MODELINFO;
224744    +        format modelID $100. modeldesc $200.;
224745    +        modelid = "&em_report_modelID";
224746    +        modeldesc="&em_report_modeldesc";
224747    +    run;
224749    +    /* RPM-2.2 retrieve warning file if it exists */
224751    +    %let temp = %nrbquote(%sysfunc(PATHNAME(&em_report_lib)));
224752    +    %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
224753    +    %let file = EMWARN.sas;
224754    +    %let warnfile = %nrbquote(&path&em_dsep&em_report_modelId&em_dsep&file);
224756    +    %if "&warnfile" ne "" %then %do;
224757    +        filename x "&warnfile" encoding='utf-8' NOBOM;
224758    +        data _null_;
224759    +            length string $1000;
224760    +            file PRINT;
224761    +            fid = fopen('x');
224762    +            do while (^fread(fid));
224763    +                rc= fget(fid, string, frlen(fid));
224764    +                string = tranwrd(string, "'", "''");
224765    +                if string eq '' then string = ' ';
224766    +                put string;
224767    +            end;
224768    +            fid = fclose(fid);
224769    +            put " ";
224770    +        run;
224771    +        filename x;
224772    +    %end;
224774    +    /* RPM-2.3 retrieve ID nodeid */
224776    +    data _null_;
224777    +        set emreportpath(where=(substr(upcase(strip(nodeid)),1,3) eq "IDS"));
224778    +        call symput("idsnode",strip(nodeid)) ;
224779    +    run;
224781    +        data _null_;
224782    +        set emreportpath(where=(substr(upcase(strip(nodeid)),1,7) eq "FIMPORT"));
224783    +        call symput("idsnode",strip(nodeid)) ;
224784    +        run;
224786    +%let fimnode=;
224787    +%if "%substr(%upcase(%sysfunc(strip(&idsnode))),1,7)" eq "FIMPORT" %then %do;
224788    +    %let idscmeta = &em_lib..&idsnode._emtrainvariable;
224789    +    %let idstmeta = &em_lib..&idsnode._emtmetadefault;
224790    +    %let fimnode = &idsnode;
224791    +    %let idsnode = &em_report_modelID;
224792    +%end;
224793    +%else %do;
224794    +    %let idscmeta = &em_lib..&idsnode._emcmetadefault;
224795    +    %let idstmeta = &em_lib..&idsnode._emtmetadefault;
224796    +%end;
224798    +    %if %sysfunc(exist(&idstmeta)) %then %do;
224799    +        data _null_;
224800    +            set  &idstmeta;
224801    +            call symput('rpt_rpm_data',    strip(MEMNAME));
224802    +            call symput('rpt_rpm_datalib', strip(LIBNAME));
224803    +            call symput('rpt_rpm_nobs',    strip(NOBS));
224804    +            call symput('rpt_rpm_ncols',   strip(NCOLS));
224805    +        run;
224806    +    %end;
224808    +    /* RPM-2.4 retrieve name of target to use in presense of multiple targets */
224809    +    /* prefer to use the target given by &EM_REPORT_SUMMARY_TARGET        */
224810    +    /* otherwise the last target modelled (by name) will be used          */
224812    +    %let mdlTarget = ;
224814    +    %if "&EM_REPORT_SUMMARY_TARGET" ne "" %then %do;
224815    +        proc sql noprint;
224816    +            select count(*) into :tmpn
224817    +            from &em_lib..&em_report_modelid._variableset;
224818    +                where name eq "&EM_REPORT_SUMMARY_TARGET" and upcase(role) eq "TARGET";
224819    +        quit;
224820    +        %if &tmpn eq 1 %then %let mdlTarget = &EM_REPORT_SUMMARY_TARGET;
224821    +    %end;
224823    +    %if "&mdlTarget" eq "" %then %do;
224824    +        data _null_;
224825    +            set &em_lib..&em_report_modelid._variableset(where=(role="TARGET" and use="Y"));
224826    +            call symput('mdlTarget', strip(name));
224827    +        run;
224828    +    %end;
224830    +    /* RPM-2.5 retrieve name of decmeta from eminfo of the chosen model */
224832    +    data _null_;
224833    +        set &em_lib..&em_report_modelid._eminfo;
224834    +        if KEY="DECMETA" %if "&mdlTarget" ne "" %then %do; and target="&mdlTarget" %end;
224835    +            then  call symput('rpt_rpm_mdldecmeta', strip(data));
224836    +        if KEY="DECDATA" %if "&mdlTarget" ne "" %then %do; and target="&mdlTarget" %end;
224837    +            then  call symput('rpt_rpm_mdldecdata', strip(data));
224838    +    run;
224840    +    /* RPM-2.6 retrieve name of DECISION variable if it exists      */
224841    +    /*       - use this as target var for categorical target        */
224842    +    /*       - otherwise use INTO variable as class target var      */
224843    +    /* RPM-2.7 retrieve target event level, save TARGETINFO table   */
224844    +    /* RPM-2.8 retrieve name of the PREDICTED variable from decmeta */
224845    +    /*       - INTERVAL TARGET ONLY                                 */
224847    +    %let catTarget = ;
224849    +    data _null_;
224850    +        set &rpt_rpm_mdldecmeta;
224851    +        if _type_ eq "INTO"          then call symput('catTarget', strip(variable));
224852    +        if _type_ eq "MODELDECISION" then call symput('catTarget', strip(variable));
224854    +        if _type_ eq "TARGET" then do;
224855    +            call symput('rpt_rpm_eventlvl',    strip(event));
224856    +            call symput('rpt_rpm_targetName',  strip(variable));
224857    +            call symput('rpt_rpm_targetLevel', strip(level));
224858    +            call symput('rpt_rpm_targetLabel', strip(label));
224859    +        end;
224860    +    data _null_;
224861    +        set &rpt_rpm_mdldecmeta;
224862    +        %if "&rpt_rpm_targetLevel" eq "INTERVAL" %then %do;
224863    +            if _type_ eq "PREDICTED"
224864    +                then call symput('rpt_rpm_predvar', strip(variable));
224865    +        %end;
224866    +    run;
224868    +    %EM_GETNAME(key=TARGETINFO, type=DATA);
224869    +    data &EM_USER_TARGETINFO;
224870    +        set &rpt_rpm_mdldecmeta;
224871    +    run;
224873    +    /* RPM-2.9 retrieve freq variable name if it exists */
224875    +    %let freqvar=;
224876    +    data _null_;
224877    +        set &em_lib..&em_report_modelid._variableset(where=(role eq "FREQ"));
224878    +        call symput('freqvar', strip(name));
224879    +    run;
224881    +    /* RPM-2.10 retrieve listing of all inputs into the model */
224882    +    /*     process only when SCORENODE exists                 */
224884    +    %if &RPM_REPORT_SCORENODE ne %then %do;
224886    +        %EM_REGISTER(key=tempvar,  type=DATA);
224887    +        %EM_REGISTER(key=tempmeta, type=DATA);
224888    +        %EM_GETNAME( key=tempvar,  type=DATA);
224889    +        %EM_GETNAME( key=tempmeta, type=DATA);
224891    +        data &EM_USER_tempvar;
224892    +            %if %sysfunc(exist(&em_lib..&rpm_report_scorenode._eminputvars)) %then %do;
224893    +                set &em_lib..&rpm_report_scorenode._eminputvars(where=(scorevar="Y"));
224894    +            %end;
224895    +            %else %do;
224896    +                set &em_lib..&idsnode._variableset(where=(upcase(role)='INPUT') keep=role name);
224897    +            %end;
224898    +        run;
224900    +        proc sql noprint;
224901    +            select count(distinct name) into :n_svars from &EM_USER_tempvar;
224902    +        quit;
224904    +        proc sort data=&EM_USER_tempvar;       by name; run;
224906    +%if %sysfunc(exist(&idscmeta)) %then %do;
224907    +        proc sort data=&idscmeta out=tempmeta; by name; run;
224908    +        data &EM_USER_tempmeta;
224909    +            merge &EM_USER_tempvar(in=_a) tempmeta;
224910    +            by name;
224911    +            if _a;
224912    +        run;
224913    +%end;
224914    +%else %do;
224915    +        data &EM_USER_tempmeta;
224916    +            set &EM_USER_tempvar;
224917    +            by name;
224918    +        run;
224919    +%end;
224921    +        proc delete data=tempmeta; run;
224922    +    %end;
224924    +    /* RPM-2.11 is HPRPM or not */
224926    +    proc sql noprint;
224927    +        %if "&fimnode" ne "" %then %do;
224928    +            select count(*) into :rpt_rpm_isHP from &em_lib..&em_report_modelid._eminfo
224929    +        %end;
224930    +        %else %do;
224931    +            select count(*) into :rpt_rpm_isHP from &em_lib..&idsnode._eminfo
224932    +        %end;
224933    +                where upcase(key) eq 'HPDMSAMPLE';
224934    +    quit;
224936    +    %if &rpt_rpm_isHP ne 0 %then %let rpt_rpm_isHP = 1;
224938    +    /* RPM-2.12 determine if vvn variables are present in ids node */
224940    +    %let vvnflag = 0;
224941    +    %let cmdsid = %sysfunc(open(&idscmeta));
224942    +    %if &cmdsid %then %do;
224943    +        %let newnum = %sysfunc(varnum(&cmdsid, newname));
224944    +        %if &newnum gt 0 %then %let vvnflag = 1;
224945    +    %end;
224946    +    %if &cmdsid %then %let cmdsid = %sysfunc(close(&cmdsid));
224948    +    %if &vvnflag eq 0
224949    +        %then %let name_to_use = name;
224950    +        %else %let name_to_use = newname;
224952    +/* end of 2. Retrieve necessary information for the model */
224953    +%end;
224955    +/*******************************************************************************************/
224957    +%if &em_report_modelId ne  and %sysfunc(exist(&idstmeta)) %then %do;
224959    +    %if &EM_PROPERTY_SUMMARIZATION eq Y %then %do;
224961    +        %EM_GETNAME(key=DATASUM,   type=DATA);
224962    +        %EM_GETNAME(key=TARGETSUM, type=DATA);
224963    +        %EM_GETNAME(key=VARSUM,    type=DATA);
224964    +        %let rpt_rpm_eventlvl = %nrbquote(&rpt_rpm_eventlvl);
224966    +        /* RPM-3.1 - output data summary ------------------------------------------------------------------*/
224968    +        data &EM_USER_DATASUM;
224969    +            length stat $200 value $200;
224970    +            label stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))"
224971    +                  value = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
224973    +            stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptinputdatasource_vlabel, NOQUOTE))";
224974    +            value = "&rpt_rpm_datalib..&rpt_rpm_data";
224975    +            output;
224977    +            stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetvariable_vlabel, NOQUOTE))";
224978    +            %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
224979    +                value = "%nrbquote(&rpt_rpm_targetLabel)";
224980    +            %end;
224981    +            %else %do;
224982    +                value = "&rpt_rpm_targetName";
224983    +            %end;
224984    +            output;
224986    +            %if "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
224987    +                stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpteventlevel_vlabel, NOQUOTE))";
224988    +                value = "&rpt_rpm_eventlvl";
224989    +                output;
224990    +            %end;
224992    +            stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptobservations_vlabel, NOQUOTE))";
224993    +            value = "&rpt_rpm_nobs";
224994    +            output;
224996    +            stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptorigvars_vlabel, NOQUOTE))";
224997    +            value = "&rpt_rpm_ncols";
224998    +            output;
225000    +            %if &RPM_REPORT_SCORENODE ne %then %do;
225001    +                %if &n_svars ne %then %do;
225002    +                    stat="%sysfunc(sasmsg(sashelp.dmine, rpt_rptselectedvars_vlabel, NOQUOTE))";
225003    +                    value="&n_svars";
225004    +                    output;
225005    +                %end;
225006    +            %end;
225007    +        run;
225009    +        ods &EM_REPORT_FORMAT text=" ";
225010    +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelsummarization_title, NOQUOTE))";
225011    +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdata_title, NOQUOTE))";
225012    +        ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelsummarization_title, NOQUOTE)) %sysfunc(sasmsg(sashelp.dmine, rpt_rptdata_title, NOQUOTE))";
225014    +        proc print data=&EM_USER_DATASUM noobs label style=[outputwidth=50%]; run;
225016    +        /* RPM-3.2 - output target summary -----------------------------------------------------------------*/
225018    +       ods &EM_REPORT_FORMAT text=" ";
225019    +       %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
225020    +           ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
225021    +           ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
225022    +       %end;
225023    +       %else %do;
225024    +           ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, &rpt_rpm_targetName))";
225025    +           ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, &rpt_rpm_targetName))";
225026    +       %end;
225028    +        %if "&rpt_rpm_targetLevel" ne "INTERVAL"
225029    +        %then %do;
225030    +            /* target summary for for non-interval target */
225032    +            %let useD = N;
225033    +            data _null_;
225034    +                set &rpt_rpm_mdldecmeta(where=(_type_ in ('MATRIX'))) end=eof;
225035    +                if eof then call symput('useD', USE);
225036    +            run;
225038    +            %let useP = N;
225039    +            data _null_;
225040    +                set &rpt_rpm_mdldecmeta(where=(_type_ in ('DECPRIOR'))) end=eof;
225041    +                if eof then call symput('useP', USE);
225042    +            run;
225044    +            data &EM_USER_TARGETSUM;
225045    +                set &rpt_rpm_mdldecdata;
225046    +                trainPrior = trainPrior * 100;
225047    +                label
225048    +                    &rpt_rpm_targetName = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))"
225049    +                    count      = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, NOQUOTE))"
225050    +                    trainprior = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptdatapercentage_vlabel, NOQUOTE))"
225051    +                    decprior   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptadjustedperc_vlabel, NOQUOTE))";
225052    +                ;
225053    +                %if &useD eq Y and &useP eq Y %then %do; drop dataprior;          %end;
225054    +                %if &useD eq Y and &useP eq N %then %do; drop decprior dataprior; %end;
225055    +                %if &useD eq N and &useP eq Y %then %do; keep &rpt_rpm_targetName count trainprior decprior; %end;
225056    +                %if &useD eq N and &useP eq N %then %do; keep &rpt_rpm_targetName count trainprior;          %end;
225057    +            run;
225059    +            proc print data=&EM_USER_TARGETSUM noobs label style=[outputwidth=50%]; run;
225060    +        %end;
225061    +        %else %do;
225062    +            /* target summary for interval target */
225064    +            data _null_;
225065    +                %if "&fimnode" ne "" %then %do;
225066    +                    set  &idscmeta(where=(ROLE='TARGET'));
225067    +                %end;
225068    +                %else %do;
225069    +                    set  &em_lib..&idsnode._cmeta_data(where=(ROLE='TARGET'));
225070    +                %end;
225071    +                    call symput('rpt_rpm_ids_target',    strip(name));
225072    +            run;
225074    +            %if &rpt_rpm_isHP eq 1 %then %do;
225075    +                ods &EM_REPORT_FORMAT exclude all;
225076    +                ods listing;
225077    +                proc hpdmdb data=&em_lib..&idsnode._data varout=temp1;
225078    +                    var &rpt_rpm_ids_target;
225079    +                proc transpose data=temp1
225080    +                    out=&EM_USER_TARGETSUM(rename=(col1=&rpt_rpm_ids_target _name_=_stat_));
225081    +                    by name notsorted;
225082    +                    var n min max mean std;
225083    +                run;
225084    +                ods listing close;
225085    +                ods &EM_REPORT_FORMAT select all;
225086    +                proc delete data=temp1; run;
225087    +            %end;
225088    +            %else %do;
225089    +                %if "&fimnode" ne "" %then %do;
225090    +                    proc means data=&em_lib..&fimnode._data noprint;
225091    +                %end;
225092    +                %else %do;
225093    +                    proc means data=&em_lib..&idsnode._data noprint;
225094    +                %end;
225095    +                    var &rpt_rpm_ids_target;
225096    +                    output out=&EM_USER_TARGETSUM;
225097    +                run;
225099    +                data &EM_USER_TARGETSUM;
225100    +                    format _stat_ $50.;
225101    +                    set &EM_USER_TARGETSUM;
225102    +                    if strip(upcase(_stat_)) eq "MIN"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
225103    +                    if strip(upcase(_stat_)) eq "MAX"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
225104    +                    if strip(upcase(_stat_)) eq "N"    then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numObs_vlabel, NOQUOTE))";
225105    +                    if strip(upcase(_stat_)) eq "MEAN" then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel, NOQUOTE))";
225106    +                    if strip(upcase(_stat_)) eq "STD"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel, NOQUOTE))";
225107    +                run;
225108    +            %end;
225110    +            proc print data=&EM_USER_TARGETSUM noobs label style=[outputwidth=50%];
225111    +                var _stat_ &rpt_rpm_ids_target;
225112    +                label _stat_        = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
225113    +                &rpt_rpm_ids_target = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
225114    +            run;
225115    +        %end;
225117    +        /* RPM-3.3 - output variable summary ---------------------------------------------------------------*/
225119    +        %if &RPM_REPORT_SCORENODE ne %then %do;
225121    +            proc sql noprint;
225122    +                create table tempselected as
225123    +                    select a.*, b.name as selected
225124    +                    from &em_lib..&idsnode._variableset as a left join &EM_USER_tempmeta as b
225125    +                        on a.name eq b.name
225126    +                ;
225127    +                create table &EM_USER_VARSUM as
225128    +                    select role,level, count(distinct name) as count, sum(selected ne ' ') as sel_count
225129    +                    from tempselected
225130    +                    group by role, level
225131    +                    order by role, level
225132    +                ;
225133    +            quit;
225135    +            ods &EM_REPORT_FORMAT text=" ";
225136    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarsummary_title, NOQUOTE))";
225137    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarsummary_title, NOQUOTE))";
225139    +            data &EM_USER_VARSUM;
225140    +                format role $50. level $50.;
225141    +                set &EM_USER_VARSUM;
225143    +                role  = upcase(strip(role));
225144    +                level = upcase(strip(level));
225146    +                     if role eq 'ASSESS'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_assess_vlabel, NOQUOTE))";
225147    +                else if role eq 'COST'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_cost_vlabel, NOQUOTE))";
225148    +                else if role eq 'CENSOR'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_censor_vlabel, NOQUOTE))";
225149    +                else if role eq 'CROSSID'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_crossid_vlabel, NOQUOTE))";
225150    +                else if role eq 'FREQ'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_freq_vlabel, NOQUOTE))";
225151    +                else if role eq 'GROUP'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_group_vlabel, NOQUOTE))";
225152    +                else if role eq 'DECISION'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_decision_vlabel, NOQUOTE))";
225153    +                else if role eq 'CLASSIFICATION' then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_vlabel, NOQUOTE))";
225154    +                else if role eq 'KEY'            then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_key_vlabel, NOQUOTE))";
225155    +                else if role eq 'MISSING'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
225156    +                else if role eq 'PREDICT'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
225157    +                else if role eq 'REFERRER'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_referrer_vlabel, NOQUOTE))";
225158    +                else if role eq 'REJECTED'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_rejected_vlabel, NOQUOTE))";
225159    +                else if role eq 'SEGMENT'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_segment_vlabel, NOQUOTE))";
225160    +                else if role eq 'SEQUENCE'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_sequence_vlabel, NOQUOTE))";
225161    +                else if role eq 'TEXT'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_text_vlabel, NOQUOTE))";
225162    +                else if role eq 'TIMEID'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_timeid_vlabel, NOQUOTE))";
225163    +                else if role eq 'TRIAL'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_trial_vlabel, NOQUOTE))";
225164    +                else if role eq 'ID'             then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_id_vlabel, NOQUOTE))";
225165    +                else if role eq 'INPUT'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel, NOQUOTE))";
225166    +                else if role eq 'TARGET'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
225167    +                else if role eq 'TREATMENT'      then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_treatment_vlabel, NOQUOTE))";
225168    +                else if role eq 'RESIDUAL '      then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_residual_vlabel, NOQUOTE))";
225169    +                else if role eq 'LABEL'          then role= "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
225171    +                     if level eq 'INTERVAL'  then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_interval_vlabel , NOQUOTE))";
225172    +                else if level eq 'NOMINAL'   then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_nominal_vlabel , NOQUOTE))";
225173    +                else if level eq 'ORDINAL'   then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_ordinal_vlabel , NOQUOTE))";
225174    +                else if level eq 'BINARY'    then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_binary_vlabel , NOQUOTE))";
225175    +                else if level eq 'UNARY'     then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_unary_vlabel , NOQUOTE))";
225177    +                role  = strip(role);
225178    +                level = strip(level);
225179    +            run;
225181    +            proc print data=&EM_USER_VARSUM label noobs style=[outputwidth=50%];
225182    +                var role level count sel_count;
225183    +                label role      = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptrole_vlabel, NOQUOTE))"
225184    +                      level     = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptlevel_vlabel, NOQUOTE))"
225185    +                      count     = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptorigcount_vlabel, NOQUOTE))"
225186    +                      sel_count = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptselcount_vlabel, NOQUOTE))";
225187    +            run;
225189    +            proc delete data=tempselected; run;
225190    +        %end;
225191    +    %end;  /* end of --&EM_PROPERTY_SUMMARIZATION eq Y           --*/
225192    +/* three output in this section: datasum, targetsum, varsum      --*/
225193    +%end; /* end of &em_report_modelId ne - end of block 3.1,3.2,3.3 --*/
225196    +/***** RPM-4. varRank and Scorecard ************************************************************************/
225198    +%if &em_report_modelId ne  and %sysfunc(exist(&idstmeta)) and &RPM_REPORT_SCORENODE ne  %then %do;
225200    +    %EM_GETNAME(key=VARRANK,   type=DATA);
225201    +    %EM_GETNAME(key=SCORECARD, type=DATA);
225203    +    %if "&rpt_rpm_targetLevel" ne "INTERVAL"
225204    +        %then %let scorecard_target = &catTarget;
225205    +        %else %let scorecard_target = &rpt_rpm_predvar;
225207    +    %if &runHP eq 0 %then %do;
225209    +        %global EM_SUMMARY_REPORT_MAXOBS  EM_SUMMARY_REPORT_SAMPLEMETHOD ;
225211    +        %if &EM_SUMMARY_REPORT_MAXOBS ne  %then %do;
225212    +            %let maxobs = &EM_SUMMARY_REPORT_MAXOBS;
225213    +        %end;
225214    +        %else %do;
225215    +            %exploreObs(data=&em_lib..&em_report_modelid._train);
225216    +            %let maxobs = &_EXPLOREOBS_MAX;
225217    +        %end;
225219    +        %if "&EM_SUMMARY_REPORT_SAMPLEMETHOD" ne ""
225220    +            %then  %let sampleMethod = &EM_SUMMARY_REPORT_SAMPLEMETHOD;
225221    +            %else  %let sampleMethod = RANDOM;
225223    +        %exploreSample(
225224    +            data     = &em_lib..&em_report_modelid._train,
225225    +            seed     = 12345,
225226    +            output   = &em_report_modelid._trainsample,
225227    +            method   = &sampleMethod,
225228    +            size     = &maxobs,
225229    +            sizetype = obs,
225230    +            metaData = &em_lib..&em_report_modelid._cmeta_train
225231    +        );
225233    +         proc delete data = &EM_USER_ScoreCard;
225234    +         run;
225236    +        %em_reporter_scorecard(
225237    +            indata        = %str(&em_report_modelid._trainsample),
225238    +            indata2       = %str(&em_lib..&em_report_modelid._train),
225239    +            inVariableSet = &EM_USER_tempmeta,
225240    +            name          = &name_to_use,
225241    +            libname       = work,
225242    +            crosstab      = &EM_PROPERTY_CROSSTABS,
225243    +            targetVar     = &scorecard_target,
225244    +            targetVar2    = &rpt_rpm_targetName,
225245    +            targetLevel   = &rpt_rpm_targetLevel,
225246    +            freqVar       = &freqVar,
225247    +            outVarRank    = &EM_USER_VarRank,
225248    +            outScoreCard  = &EM_USER_ScoreCard
225249    +        );
225251    +        proc sort data=&em_lib..&idsnode._variableset
225252    +            out=templabel(keep=&name_to_use label %if &vvnflag eq 1 %then %do; name %end;);
225253    +            by &name_to_use;
225254    +        run;
225256    +        %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 %then %do;
225258    +            proc sort data=&EM_USER_ScoreCard;
225259    +                by displayVar;
225260    +            data &EM_USER_ScoreCard;
225261    +                merge &EM_USER_ScoreCard(in=_a) templabel(rename=(&name_to_use=displayVar label=emrpmtmp_lbael));
225262    +                by displayVar;
225263    +                if _a;
225264    +                %if &vvnflag eq 1 %then %do;
225265    +                    if ^missing(name)  then displayvar=name;
225266    +                %end;
225267    +                if ^missing(emrpmtmp_lbael) then displayvar=emrpmtmp_lbael;
225268    +                drop emrpmtmp_lbael name;
225269    +            run;
225271    +        %end;
225273    +        %if %sysfunc(exist(&EM_USER_VarRank)) ne 0 %then %do;
225275    +            proc sort data=&EM_USER_VarRank;
225276    +                by variable;
225277    +            data &EM_USER_VarRank;
225278    +                merge &EM_USER_VarRank(in=_a) templabel(rename=(&name_to_use=variable));
225279    +                by variable;
225280    +                if _a;
225281    +                if missing(label) then do;
225282    +                    label = variable;
225283    +                    %if &vvnflag eq 1 %then %do;
225284    +                        if ^missing(name) then label=name;
225285    +                    %end;
225286    +                end;
225287    +            proc sort data=&EM_USER_VarRank;
225288    +                by descending rank;
225289    +            run;
225291    +        %end;
225293    +        %if %sysfunc(exist(&EM_USER_VarRank)) ne 0 and &EM_PROPERTY_VARRANKING eq Y %then %do;
225294    +            /* generate gtable like listing of variable importance */
225295    +            ods path(prepend) work.templat(update);
225296    +            proc template;
225297    +                define statgraph Rules / store=work.templat ;
225298    +                    begingraph / designheight=470px;
225299    +                        %if "&EM_REPORT_TITLE" ne ""
225300    +                            %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
225301    +                            %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
225302    +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
225303    +                        layout lattice / columns=2 rowdatarange=union columnweights=(0.9 0.1) columngutter=0;
225304    +                            rowaxes; rowaxis; endrowaxes;
225305    +                            layout overlay / xaxisopts=(display=(line));
225306    +                                barchart x=label y=worth / orient=horizontal;
225307    +                            endlayout;
225308    +                        endlayout;
225309    +                    endgraph;
225310    +                end;
225311    +            run;
225312    +            proc sgrender data=&EM_USER_VARRANK template=Rules; run;
225313    +        %end;
225314    +    %end;
225315    +    %else %do;
225317    +        %if &rpt_rpm_isHP eq 1
225318    +            %then %let scorecard_lib = &rpt_rpm_datalib;
225319    +            %else %let scorecard_lib = work;
225321    +        ods &EM_REPORT_FORMAT exclude all;
225322    +        ods listing;
225323    +        %hpdm_scorecard(
225324    +            indata        = %str(&em_lib..&em_report_modelID._train),
225325    +            inVariableSet = &EM_USER_tempmeta,
225326    +            name          = &name_to_use,
225327    +            libname       = &scorecard_lib,
225328    +            crosstab      = &EM_PROPERTY_CROSSTABS,
225329    +            targetVar     = &scorecard_target,
225330    +            targetVar2    = &rpt_rpm_targetName,
225331    +            targetLevel   = &rpt_rpm_targetLevel,
225332    +            freqVar       = &freqVar,
225333    +            outVarRank    = &EM_USER_VarRank,
225334    +            outScoreCard  = &EM_USER_ScoreCard
225335    +        );
225336    +        ods listing close;
225337    +        ods &EM_REPORT_FORMAT select all;
225339    +        /* 3.4 - Variable Ranking from PROC HPREDUCE */
225341    +        %if &EM_PROPERTY_VARRANKING eq Y %then %do;
225342    +            ods &EM_REPORT_FORMAT text=" ";
225343    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
225344    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
225345    +            proc print data=&EM_USER_VARRANK noobs;
225346    +                var number variable;
225347    +            run;
225348    +        %end;
225349    +    %end;
225350    + %end;
225353    +/* RPM-5. Cumulative Lift chart *********************************************************************/
225355    +%if &EM_PROPERTY_LIFTCHART eq Y %then %do;
225357    +    %let em_rank = &em_lib..%sysfunc(trim(&em_report_modelid))_emrank;
225359    +    %if %sysfunc(exist(&em_rank)) %then %do;
225361    +        %EM_GETNAME(key=LIFT, type=DATA);
225362    +        data &EM_USER_LIFT;
225363    +            set &em_rank end=eof;
225364    +            if eof then call symput("_tarexists_", strip(target));
225366    +                 if upcase(strip(datarole)) eq 'TRAIN'    then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_roletrain_value,    NOQUOTE))";
225367    +            else if upcase(strip(datarole)) eq 'RAW'      then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_roleraw_value,      NOQUOTE))";
225368    +            else if upcase(strip(datarole)) eq 'VALIDATE' then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_rolevalidate_value, NOQUOTE))";
225369    +            datarole = strip(datarole);
225370    +        run;
225372    +        %let em_class=&em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
225374    +        %if (%sysfunc(exist(&em_class)) and "&rpt_rpm_targetLevel" ne "INTERVAL" )
225375    +        %then %do;
225376    +            %let this_title = rpt_rptcumliftchart_title;
225377    +            %let this_plotY = liftc;
225378    +        %end;
225379    +        %else %do;
225380    +            %let this_title = rpt_rptmeanpredresp_title;
225381    +            %let this_plotY = _MEANP_;
225382    +        %end;
225384    +        ods path(prepend) work.templat(update);
225385    +        proc template;
225386    +            define statgraph liftplot / store=work.templat;
225387    +                begingraph / designheight=470px;
225388    +                    %if "&EM_REPORT_TITLE" ne ""
225389    +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
225390    +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
225391    +                    entrytitle "%sysfunc(sasmsg(sashelp.dmine, &this_title, NOQUOTE))";
225392    +                    layout overlay;
225393    +                        seriesplot x=decile y=&this_plotY
225394    +                            / group =datarole lineattrs=(pattern=solid) name='lift';
225395    +                        discretelegend 'lift' ;
225396    +                    endlayout;
225397    +                endgraph;
225398    +            end;
225399    +        run;
225401    +        proc sgrender data=&EM_USER_LIFT
225402    +            %if "&_tarexists_" ne "." %then %do; (where=(target="&rpt_rpm_targetName")) %end;
225403    +            template=liftplot;
225404    +        run;
225405    +    %end;
225406    +%end;
225408    +/* RPM-6. Cumulative captured response chart *********************************************************/
225410    +%if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
225412    +    %EM_GETNAME(key=CAPRESPONSE, type=DATA);
225414    +    %let em_report_rank = &em_lib..%sysfunc(trim(&em_report_modelid))_emrank;
225416    +    %if %sysfunc(exist(&em_report_rank)) %then %do;
225418    +        %let em_report_class = &em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
225420    +        %if (%sysfunc(exist(&em_report_class)) and "&rpt_rpm_targetLevel" ne "INTERVAL" ) %then %do;
225422    +            /* generate % values and create categorical x values for plotting purposes */
225423    +            data &EM_USER_CAPRESPONSE;
225424    +                set &em_report_rank end=eof;
225425    +                length baseCat bestCat capCat decCat liftCat liftCCat $5;
225426    +                format basecapcp bestcapcp capcp decilep PERCENT6.0;
225427    +                basecapcp = basecapc / 100;  baseCat= put(basecapcp, PERCENT6.0 -L);
225428    +                bestcapcp = bestcapc / 100;  bestCat= put(bestcapcp, PERCENT6.0 -L);
225429    +                capcp     = capc / 100;      capCat = put(capcp, PERCENT6.0 -L);
225430    +                decilep   = decile / 100;    decCat = put(decilep, PERCENT6.0 -L);
225431    +                liftCat = lift;
225432    +                liftCCat= liftC;
225433    +                if eof then call symput("_tarexists_", strip(target));
225434    +            run;
225436    +            /* create template for Captured Response Plot */
225438    +            ods path(prepend) work.templat(update);
225439    +            proc template;
225440    +                define statgraph reg_emrank / store=work.templat;
225441    +                    begingraph / designheight=470px;
225442    +                    %if "&EM_REPORT_TITLE" ne ""
225443    +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
225444    +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
225445    +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelgains_title, NOQUOTE))";
225446    +                        layout overlay / cycleattrs=true xaxisopts=(display=(LINE)) yaxisopts=(label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumcaptresponse_vlabel, NOQUOTE))");
225447    +                            seriesplot x=deccat y=basecapcp / lineattrs=(pattern=solid) name='base'  legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbase_vlabel, NOQUOTE))";
225448    +                            seriesplot x=deccat y=bestcapcp / lineattrs=(pattern=solid) name='best'  legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbest_vlabel, NOQUOTE))";
225449    +                            seriesplot x=deccat y=capcp     / lineattrs=(pattern=solid) name='model' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
225450    +                            innermargin / align=bottom;
225451    +                                blockplot x=deccat block=liftCcat / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumlift_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225452    +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
225453    +                                blockplot x=deccat block=liftcat  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptlift_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225454    +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
225455    +                                blockplot x=deccat block=capcat   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225456    +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
225457    +                                blockplot x=deccat block=bestcat  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbest_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225458    +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata2 altfillattrs=graphdata2;
225459    +                                blockplot x=deccat block=deccat   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdecile_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225460    +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdatadefault altfillattrs=graphdatadefault;
225461    +                            endinnermargin;
225462    +                            * discretelegend "base" "best" "model" / across=1 location=inside halign=right valign=bottom;
225463    +                        endlayout;
225464    +                    endgraph;
225465    +                end;
225466    +            run;
225467    +        %end;
225468    +        %else %do;
225470    +            /* generate % values and create categorical x values for plotting purposes */
225471    +            data &EM_USER_CAPRESPONSE;
225472    +                set &em_report_rank end=eof;
225473    +                length decCat $5;
225474    +                format  decilep PERCENT6.0;
225475    +                decilep = decile / 100;
225476    +                decCat = put(decilep, PERCENT6.0 -L);
225477    +                if eof then call symput("_tarexists_", strip(target));
225478    +            run;
225480    +            /* create template for Captured Response Plot */
225481    +            ods path(prepend) work.templat(update);
225482    +            proc template;
225483    +                define statgraph reg_emrank / store=work.templat;
225484    +                    begingraph / designheight=470px ;
225485    +                    %if "&EM_REPORT_TITLE" ne ""
225486    +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
225487    +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
225488    +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelgainspred_title, NOQUOTE))";
225489    +                        layout overlay / cycleattrs=true xaxisopts=(display=(LINE)) yaxisopts=(label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredresp_vlabel, NOQUOTE))");
225490    +                            seriesplot x=deccat y=_meanp_ / lineattrs=(pattern=solid) name='mean' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel, NOQUOTE))";
225491    +                            seriesplot x=deccat y=_minp_ / lineattrs=(pattern=solid) name='min' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
225492    +                            seriesplot x=deccat y=_maxp_     / lineattrs=(pattern=solid) name='max' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
225493    +                            innermargin / align=bottom;
225494    +                                blockplot x=deccat block=_targetmean_  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmean_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225495    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
225496    +                                blockplot x=deccat block=_targetmin_   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmin_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225497    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
225498    +                                blockplot x=deccat block=_targetmax_   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmax_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225499    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
225500    +                                blockplot x=deccat block=_meanp_       / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmean_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225501    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
225502    +                                blockplot x=deccat block=_minp_        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmin_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225503    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
225504    +                                blockplot x=deccat block=_maxp_        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmax_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225505    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
225506    +                                blockplot x=deccat block=deccat        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdecile_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
225507    +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdatadefault altfillattrs=graphdatadefault;
225508    +                            endinnermargin;
225509    +                            * discretelegend "mean" "min" "max" / across=1 location=inside halign=left valign=bottom;
225510    +                        endlayout;
225511    +                    endgraph;
225512    +                end;
225513    +            run;
225514    +        %end;
225516    +        /* render plot */
225518    +        %let validflag=0;
225519    +        data tempvalid;
225520    +            set &EM_USER_CAPRESPONSE(where=(datarole="VALIDATE"));
225521    +        run;
225523    +        %let dsid = %sysfunc(open(work.tempvalid));
225524    +        %if &dsid %then %do;
225525    +            %let validobs = %sysfunc(attrn(&dsid, NOBS));
225526    +            %if &validobs gt 0 %then %let validflag = 1;
225527    +        %end;
225528    +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
225530    +        proc sgrender data=&EM_USER_CAPRESPONSE
225531    +            %if "&_tarexists_" ne "." %then %do; (where=(target="&rpt_rpm_targetName"))%end;
225532    +            template=reg_emrank;
225533    +            %if &validflag eq 1
225534    +                %then %do; where datarole="VALIDATE"; %end;
225535    +                %else %do; where datarole="TRAIN";    %end;
225536    +        run;
225537    +    %end;
225538    +%end;
225541    +/* RPM-7. ROC CHART ******************************************************************************************/
225543    +%if ((&RPM_REPORT_MDLCOMP ne ) or (&em_report_modelid ne )) and (&EM_PROPERTY_BASICOUTPUT eq Y) %then %do;
225545    +    %let em_report_roc = &em_lib..&RPM_REPORT_MDLCOMP._emroc;
225546    +    %let em_report_hpassess = &em_lib..%sysfunc(trim(&em_report_modelid))_hpassess;
225547    +    %let em_report_hpstats  = &em_lib..%sysfunc(trim(&em_report_modelid))_hpreportstats;
225549    +    %EM_GETNAME(key=ROC, type=DATA);
225550    +    %let plot_KS  = 0;
225551    +    %let plot_ROC = 0;
225552    +    %let train_X  = 0; %let train_Y  = 0; %let train_KS = 0;
225553    +    %let valid_X  = 0; %let valid_Y  = 0; %let valid_KS = 0;
225555    +    %if %sysfunc(exist(&em_report_roc)) %then %do;
225557    +        proc sql noprint;
225558    +            select count(*) into :validroc from &em_report_roc where datarole eq "VALIDATE";
225559    +        quit;
225561    +        /* make the ROC table */
225562    +        data &EM_USER_ROC;
225563    +            length group $32 diff 8;
225564    +            label group="&em_report_modeldesc %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
225565    +            set &em_report_roc;
225566    +            if strip(model)='_Baseline_'
225567    +                then group='Baseline';
225568    +                else group=Datarole;
225569    +            where (strip(model) ='_Baseline_' and DataRole='TRAIN') or (strip(model)= "&em_report_modelid" and DataRole in('TRAIN','VALIDATE'));
225570    +            diff = sensitivity-oneminusspecificity;
225571    +        run;
225573    +        /* get KS statistics */
225575    +        proc sql noprint;
225576    +            create table ks_stat as
225577    +                select distinct datarole, max(diff) as ks from &EM_USER_ROC group by datarole;
225578    +            select round(ks, 0.00001) into :train_ks
225579    +                from ks_stat where datarole eq 'TRAIN';
225580    +            select round(ks, 0.00001) into :valid_ks
225581    +                from ks_stat where datarole eq 'VALIDATE';
225582    +            select oneMinusSpecificity, sensitivity into :train_x, :train_y
225583    +                from &EM_USER_ROC where datarole eq 'TRAIN' and round(diff, 0.00001) eq &train_ks;
225584    +            select oneMinusSpecificity, sensitivity into :valid_x, :valid_y
225585    +                from &EM_USER_ROC where datarole eq 'VALIDATE' and round(diff, 0.00001) eq &valid_ks;
225586    +        quit;
225588    +        %let plot_KS = 1;
225589    +        %let plot_ROC = 1;
225590    +    %end;
225591    +    %else %if %sysfunc(exist(&em_report_hpassess)) and "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
225593    +        /* make the ROC table */
225595    +        proc sql noprint;
225596    +            select count(*) into :validroc from &em_report_hpassess where datarole eq "VALIDATE";
225597    +        quit;
225599    +        data &EM_USER_ROC;
225600    +            length group $32;
225601    +            group='Baseline';
225602    +            sensitivity = 0; oneminusspecificity = 0; output;
225603    +            sensitivity = 1; oneminusspecificity = 1; output;
225604    +        run;
225606    +        data &EM_USER_ROC;
225607    +            length group $32;
225608    +            set &em_report_hpassess(in=in1 rename=(one_minus_specificity=oneminusspecificity)) &EM_USER_ROC;
225609    +            if in1 then group=datarole;
225610    +            label group="&em_report_modeldesc %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
225611    +        run;
225613    +        /* get KS statistics */
225615    +        %if %sysfunc(exist(&em_report_hpstats)) %then %do;
225617    +             data _null_;
225618    +                set &em_report_hpstats;
225619    +                if upcase(stat) eq 'KSREF' then call symput('train_X', put(train,best24.));
225620    +                if upcase(stat) eq 'KSR'   then call symput('train_KS',round(train,0.00001));
225621    +                %if &validroc ge 1 %then %do;
225622    +                    if upcase(stat) eq 'KSREF' then call symput('valid_X', put(validate,best24.));
225623    +                    if upcase(stat) eq 'KSR'   then call symput('valid_KS',round(validate,0.00001));
225624    +                %end;
225625    +            run;
225627    +            data _null_;
225628    +                tmp=&train_X+&train_KS/100; call symput('train_Y',put(tmp,best24.));
225629    +                tmp=&valid_X+&valid_KS/100; call symput('valid_Y',put(tmp,best24.));
225630    +            run;
225632    +            %if &train_Y gt 0 %then %let plot_KS = 1;
225633    +            %let plot_ROC = 1;
225634    +        %end;
225635    +    %end;
225637    +    %if &plot_ROC eq 1 %then %do;
225639    +        /* add coordinates for ref lines */
225640    +        data refline;
225641    +            length oneminusspecificity sensitivity x y 8 datarole $8 group $32 text $60;
225642    +            %if &train_Y gt 0 %then %do;
225643    +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_Y; datarole='TRAIN'; group='TRAIN';
225644    +                text=""; x=.; y=.; output;
225645    +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_X; datarole='TRAIN'; group='TRAIN';
225646    +                text=catx(' = ',"%sysfunc(sasmsg(sashelp.dmine, rpt_trainks_vlabel, NOQUOTE))","&train_KS"); x=&TRAIN_X; y=&TRAIN_X - 0.05; output;
225647    +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_Y; datarole='TRAIN'; group='TRAIN';
225648    +                text=""; x=.; y=.; output;
225649    +            %end;
225650    +            %if &validroc ge 1 and &valid_Y gt 0 %then %do;
225651    +                oneminusspecificity=&VALID_X; sensitivity=&VALID_Y; datarole='VALIDATE'; group='VALIDATE';
225652    +                text=""; x=.; y=.; output;
225653    +                oneminusspecificity=&VALID_X; sensitivity=&VALID_X; datarole='VALIDATE'; group='VALIDATE';
225654    +                text=catx(' = ',"%sysfunc(sasmsg(sashelp.dmine, rpt_validks_vlabel, NOQUOTE))","&valid_KS"); x=&VALID_X; y=&VALID_X - 0.05; output;
225655    +                oneminusspecificity=&VALID_X; sensitivity=&VALID_Y; datarole='VALIDATE'; group='VALIDATE';
225656    +                text=""; x=.; y=.; output;
225657    +            %end;
225658    +        data &EM_USER_ROC;
225659    +           set &EM_USER_ROC refline;
225660    +           if group eq 'TRAIN'    then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel, NOQUOTE))";
225661    +           if group eq 'VALIDATE' then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel, NOQUOTE))";
225662    +           if group eq 'Baseline' then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_baselineroc_value, NOQUOTE))";
225663    +        run;
225665    +        /* plot ROC chart */
225666    +        ods path(prepend) work.templat(update);
225667    +        proc template;
225668    +            define statgraph rocplot / store=work.templat;
225669    +                begingraph / designheight=470px;
225670    +                    %if "&EM_REPORT_TITLE" ne ""
225671    +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
225672    +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
225673    +                    entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptroc_title, NOQUOTE))";
225674    +                    layout overlay;
225675    +                        seriesplot x=oneminusspecificity y=sensitivity / group =group lineattrs=(pattern=solid) name='series';
225676    +                        %if &plot_ks eq 1 %then %do;
225677    +                            scatterplot x=x y=y / group=group datalabel=text  datalabelattrs=(weight=bold) markerattrs=(size=0px);
225678    +                        %end;
225679    +                        discretelegend 'series' / title="&em_report_modeldesc  %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
225680    +                    endlayout;
225681    +                endgraph;
225682    +            end;
225683    +        run;
225685    +        proc sort data=&EM_USER_ROC; by group oneminusspecificity; run;
225686    +        proc sgrender data=&EM_USER_ROC template=rocplot; run;
225687    +        title1; title2;
225688    +    %end;
225689    +%end;
225691    +/* RPM-8. Scorecard *****************************************************************************************/
225693    +%if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
225695    +    %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 and &runHP eq 0 %then %do;
225697    +        %let ColPercNum = 0;
225698    +        %let sdsid = %sysfunc(open(&EM_USER_SCORECARD));
225699    +        %let colPercnum = %sysfunc(varnum(&sdsid, colPercent));
225700    +        %if &sdsid %then %let sdsid = %sysfunc(close(&sdsid));
225702    +        %let tmpstr1 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE));
225703    +        %let tmpstr2 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE));
225704    +        %let tmpstr3 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_singleN, NOQUOTE));
225706    +        %if &EM_PROPERTY_CROSSTABS eq Y and "&rpt_rpm_targetLevel" ne "INTERVAL" and &colPercnum gt 0
225707    +        %then %do;
225709    +            ods &EM_REPORT_FORMAT text=" ";
225710    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
225711    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
225713    +            proc tabulate data=&EM_USER_SCORECARD order=data noseps;
225714    +                class displayvar rowVariable varvalue &rpt_rpm_targetName / missing;
225715    +                var allfreq allPercent scorepoints colpercent frequency;
225716    +                keylabel sum=" ";
225717    +                table displayvar*varvalue,
225718    +                    (scorepoints="&tmpstr1" allfreq="&tmpstr2 &tmpstr3" allpercent="&tmpstr2 %" )
225719    +                    &rpt_rpm_targetName*(frequency="&tmpstr3" colPercent="%" )
225720    +                    / indent=3 rtspace=32 style=[outputwidth=100%];
225721    +            run; quit;
225722    +        %end;
225723    +        %else %do;
225725    +            ods &EM_REPORT_FORMAT text=" ";
225726    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
225727    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrmpscorecard_title, NOQUOTE))";
225729    +            proc tabulate data = &EM_USER_SCORECARD order=data noseps;
225730    +                class displayvar / missing;
225731    +                keylabel sum=" ";
225732    +                class varvalue / missing;
225733    +                var scorepoints;
225734    +                table displayvar*varvalue, (scorepoints="&tmpstr1")*sum
225735    +                    / misstext = " " indent = 3 rtspace=32;
225736    +            run; quit;
225737    +         %end;
225738    +    %end;
225741    +    %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 and &runHP eq 1 %then %do;
225743    +        %if &EM_PROPERTY_CROSSTABS eq Y and "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
225744    +            ods &EM_REPORT_FORMAT text=" ";
225745    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
225746    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
225747    +            proc tabulate data=&EM_USER_SCORECARD order=data noseps;
225748    +                class displayvar rowVariable displayLvl &rpt_rpm_targetName / MISSING;
225749    +                var allfreq allPercent scorepoints colpercent frequency;
225750    +                keylabel sum=" ";
225751    +                table displayvar * displayLvl, (scorepoints="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE))" allfreq="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE)) N"
225751   !+allpercent="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE)) %" )
225752    +                    &rpt_rpm_targetName*(frequency="N" colPercent="%" )
225753    +                    / indent=3 rtspace=32 style=[outputwidth=100%];
225754    +            run; quit;
225755    +        %end;
225756    +        %else %do;
225757    +            ods &EM_REPORT_FORMAT text=" ";
225758    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
225759    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
225760    +            proc tabulate data = &EM_USER_SCORECARD order=data noseps;
225761    +                class displayvar / MISSING;
225762    +                keylabel sum=" ";
225763    +                class displayLvl / missing;
225764    +                var SCOREPOINTS;
225765    +                table displayvar * displayLvl, (scorepoints="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE))")  * sum / misstext = " "
225766    +                      indent = 3 rtspace=32 style=[outputwidth=50%];
225767    +            run; quit;
225768    +        %end;
225769    +    %end;
225770    +%end;
225772    +%if &RPM_REPORT_SCORENODE ne %then %do;
225774    +    /* RPM-9. Classification matrix *********************************************************************/
225776    +    %if &EM_PROPERTY_CLASSIFICATION eq Y %then %do;
225778    +        %let em_report_class = &em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
225780    +        %if %sysfunc(exist(&em_report_class)) %then %do;
225782    +            %EM_GETNAME(key=MISCLASS, type=DATA);
225783    +            data &EM_USER_MISCLASS;
225784    +                set &em_report_class;
225785    +                where _TYPE_="PREDICTION" AND TARGET="&rpt_rpm_targetName";
225786    +            run;
225788    +            %let numobs=0;
225789    +            %let dsid = %sysfunc(open(&EM_USER_MISCLASS));
225790    +            %let numobs = %sysfunc(attrn(&dsid, NOBS));
225791    +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
225793    +            %if (%sysfunc(exist(&em_USER_MISCLASS)) and &numobs gt 0) %then %do;
225795    +                ods &EM_REPORT_FORMAT text=" ";
225796    +                %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
225797    +                    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
225798    +                    ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
225799    +                %end;
225800    +                %else %do;
225801    +                    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, &rpt_rpm_targetName))";
225802    +                    ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, &rpt_rpm_targetName))";
225803    +                %end;
225805    +                proc tabulate data=&EM_USER_MISCLASS order=data noseps;
225806    +                    keylabel sum=" ";
225807    +                    class from into datarole;
225808    +                    var pct_col;
225809    +                    table from , (datarole*into='Predicted') * pct_col="" / style=[outputwidth=50%];
225810    +                run; quit;
225811    +            %end;
225812    +        %end;
225813    +    %end;
225815    +    /* RPM-10. Fit Statistics **************************************************************************/
225817    +    %if &EM_PROPERTY_FITSTAT eq Y %then %do;
225819    +        %let fitdat1 =&em_lib..&RPM_REPORT_MDLCOMP._emreportfit;
225820    +        %let fitdat2 =&em_lib..&em_report_modelid._emreportfit;
225822    +        /* prefer to use HPREPORTSTATS table from the modeling nodel */
225824    +        %if %sysfunc(exist(&em_lib..&em_report_modelid._hpreportstats)) %then %do;
225826    +            %EM_GETNAME(key=REPORTFIT, type=DATA);
225828    +            data &EM_USER_REPORTFIT;
225829    +                set &em_lib..&em_report_modelid._hpreportstats;
225830    +            run;
225832    +            %let validfit=0;
225833    +            %let dsid = %sysfunc(open(&EM_USER_REPORTFIT));
225834    +            %if &dsid %then %do;
225835    +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
225836    +                %if &validnum %then %let validfit = 1;
225837    +            %end;
225838    +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
225840    +            ods &EM_REPORT_FORMAT text=" ";
225841    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
225842    +            ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
225844    +            proc print data=&EM_USER_REPORTFIT label noobs style=[outputwidth=50%];
225845    +                %if &validfit eq 1 %then %do;
225846    +                    var Label Train Validate;
225847    +                    format Train 12.4 Validate 12.4;
225848    +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
225849    +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))"
225850    +                        validate = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel , NOQUOTE))";
225851    +                %end;
225852    +                %else %do;
225853    +                    var Label Train;
225854    +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
225855    +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))";
225856    +                    format Train 12.4;
225857    +                %end;
225858    +            run;
225859    +        %end;
225860    +        %else %if %sysfunc(exist(&fitdat1)) or %sysfunc(exist(&fitdat2)) %then %do;
225862    +            %EM_GETNAME(key=REPORTFIT, type=DATA);
225864    +            data &EM_USER_REPORTFIT;
225865    +                length Label $40;
225866    +                label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))";
225867    +                %if %sysfunc(exist(&fitdat1)) eq 1
225868    +                    %then %do; set &fitdat1; %end;
225869    +                    %else %do; set &fitdat2.(rename=(stat=fitstat)); %end;
225871    +                if FitStat='_LIFT_'  then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptlift10_vlabel, NOQUOTE))";
225872    +                if FitStat='_LIFTC_' then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumlift10_vlabel, NOQUOTE))";
225873    +                if FitStat='_CAP_'  then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcaptresp10_vlabel, NOQUOTE))";
225874    +                if FitSTat='_CAPC_' then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumcaptresp10_vlabel, NOQUOTE))";
225875    +                if FitSTat='_NOBS_' then Label="%sysfunc(sasmsg(sashelp.dmine, stat_nobs_vlabel, NOQUOTE))";
225876    +                if FitSTat='_MISC_' then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_misc_vlabel, NOQUOTE))";
225877    +                if FitSTat='_MAX_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_max_vlabel, NOQUOTE))";
225878    +                if FitSTat='_SSE_'  then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_sse_vlabel, NOQUOTE))";
225879    +                if FitSTat='_ASE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_ase, NOQUOTE))";
225880    +                if FitSTat='_RASE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_rase_vlabel, NOQUOTE))";
225881    +                if FitSTat='_DIV_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_div_vlabel, NOQUOTE))";
225882    +                if FitSTat='_DFT_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, NOQUOTE))";
225883    +                if FitSTat='_AIC_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_aic, NOQUOTE))";
225884    +                if FitSTat='_MSE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_mse, NOQUOTE))";
225885    +                if FitSTat='_RMSE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rmse, NOQUOTE))";
225886    +                if FitSTat='_AVERR_' then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_averr_vlabel, NOQUOTE))";
225887    +                if FitSTat='_DFE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfe, NOQUOTE))";
225888    +                if FitSTat='_DFM_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfm, NOQUOTE))";
225889    +                if FitSTat='_ERR_'  then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_err_vlabel, NOQUOTE))";
225890    +                if FitSTat='_FPE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_fpe, NOQUOTE))";
225891    +                if FitSTat='_NW_'   then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_nw, NOQUOTE))";
225892    +                if FitSTat='_RFPE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rfpe, NOQUOTE))";
225893    +                if FitSTat='_SBC_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sbc, NOQUOTE))";
225894    +            run;
225896    +            %let validfit=0;
225897    +            %let dsid = %sysfunc(open(&EM_USER_REPORTFIT));
225898    +            %if &dsid %then %do;
225899    +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
225900    +                %if &validnum %then %let validfit = 1;
225901    +            %end;
225902    +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
225904    +            ods &EM_REPORT_FORMAT text=" ";
225905    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
225906    +            ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
225908    +            proc print data=
225909    +                %if %sysfunc(exist(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit)) eq 1
225910    +                %then %do;
225911    +                    &EM_USER_REPORTFIT(where=(MODEL="&em_report_modelId" AND TARGET="&rpt_rpm_targetName"))
225912    +                %end;
225913    +                %else %do;
225914    +                    &EM_USER_REPORTFIT(where=(TARGET="&rpt_rpm_targetName"))
225915    +                %end;
225916    +                label noobs style=[outputwidth=50%];
225917    +                %if &validfit eq 1 %then %do;
225918    +                    var Label Train Validate;
225919    +                    format Train 12.4 Validate 12.4;
225920    +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
225921    +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))"
225922    +                        validate = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel , NOQUOTE))"
225923    +                    ;
225924    +                %end;
225925    +                %else %do;
225926    +                    var Label Train;
225927    +                    format Train 12.4;
225928    +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
225929    +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))";
225930    +                %end;
225931    +                %if %sysfunc(exist(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit)) eq 1
225932    +                %then %do;
225933    +                    where FitStat in ('_NOBS_', '_MISC_', '_LOSS_', '_ALOSS_', '_ASE_', '_AUR_', '_GINI_', 'KS',
225934    +                                      '_KS_PROB_CUTOFF', '_LIFT_', '_LIFTC_', '_CAP_', '_CAPC_', '_AIC_', '_AVERR_',
225935    +                                      '_MAX_','_MSE_', '_RASE_', '_RMSE_', '_SBC_', '_SSE_') and TRAIN ne .;
225936    +                %end;
225937    +                %else %do;
225938    +                    where FitStat in ('_NOBS_', '_MISC_', '_LOSS_', '_ALOSS_', '_ASE_', '_AIC_', '_AVERR_', '_MAX_',
225939    +                                      '_MSE_', '_RASE_', '_RMSE_', '_SBC_', '_SSE_') and TRAIN ne .;
225940    +                %end;
225941    +            run;
225942    +        %end;
225943    +    %end;
225945    +    /* RPM-11. Model Comparison Table */
225947    +    %if &EM_PROPERTY_COMPAREMDL eq Y and RPM_REPORT_MDLCOMP ne %then %do;
225949    +        %EM_GETNAME(KEY=COMPAREMDL, TYPE=DATA);
225951    +        %let em_report_mdlOutfit = &em_lib..&RPM_REPORT_MDLCOMP._emoutfit;
225953    +        %if %sysfunc(exist(&em_report_mdlOutfit)) %then %do;
225955    +            /* determine model selection criterion - to included in print */
225956    +            %em_modelprops(dgmid=&em_lib, modelid=&RPM_REPORT_MDLCOMP, output=%nrbquote(work.modelprop));
225958    +            %let selectcrit = ;
225959    +            data _null_;
225960    +                set work.modelprop(where=(NAME="ModelCriteria")) end=eof;
225961    +                if eof then call symput('selectcrit', VALUE);
225962    +            run;
225964    +            %let selectstat=;
225965    +            %let choice = USE="Y";
225966    +            %let dsid = %sysfunc(open(&em_report_mdlOutfit(where=(&choice))));
225967    +            %if &dsid %then %do;
225968    +                %let obs = %sysfunc(fetchobs(&dsid, 1));
225969    +                %let selectstat = %sysfunc(VARNAME(&dsid, 6));
225970    +            %end;
225971    +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
225973    +            %let validflag=0;
225974    +            %let dsid = %sysfunc(open(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit));
225975    +            %if &dsid %then %do;
225976    +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
225977    +                %if &validnum %then %let validflag = 1;
225978    +            %end;
225979    +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
225981    +            data &EM_USER_COMPAREMDL;
225982    +                set &em_report_mdlOutfit;
225983    +                keep use model modelDescription &selectstat
225984    +                %if "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
225985    +                    %if &selectstat ne _LIFT_ %then %do; _LIFT_ %end;
225986    +                    %if &validflag eq 1 %then %do;
225987    +                        %if &selectstat ne _VLIFT_ %then %do; _VLIFT_ %end;
225988    +                    %end;
225989    +                    %if &selectstat ne _AIC_ %then %do; _AIC_  %end;
225990    +                %end;
225991    +                %else %do;
225992    +                    %if &selectstat ne _ASE_ %then %do; _ASE_ %end;
225993    +                    %if &validflag eq 1 %then %do;
225994    +                        %if &selectstat ne _VASE_ %then %do; _VASE_ %end;
225995    +                    %end;
225996    +                %end;
225997    +                ;
225998    +            run;
226000    +            ods &EM_REPORT_FORMAT text=" ";
226001    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcomparemdl_title, NOQUOTE, &selectcrit))";
226002    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcomparemdl_title, NOQUOTE, &selectcrit))";
226004    +            proc print data=&EM_USER_COMPAREMDL label noobs style=[outputwidth=50%]; run;
226005    +        %end;
226006    +    %end;
226008    +    /* RPM-12. Project Info */
226010    +    %if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
226012    +        %let pos = %index(&em_nodedir, Workspaces);
226013    +        %if &pos %then %do;
226015    +            %let projpath = %nrbquote(%sysfunc(trim(%sysfunc(substr(&em_nodedir, 1, %eval(&pos-2))))));
226016    +            %let reverse = %nrbquote(%sysfunc(reverse(&projpath)));
226017    +            %let pos2 = %index(&reverse, &em_dsep);
226018    +            %let len = %length(&projpath);
226019    +            %let projname = %nrbquote(%substr(&projpath, %eval(2+ &len-&pos2)));
226020    +            %let projname =%nrbquote(%sysfunc(tranwrd(%nrstr(&projname), %str(%"),"")));
226021    +            %let wsname  = %nrbquote(%sysfunc(tranwrd(%nrstr(&em_wsname), %str(%"),"")));
226023    +            %EM_GETNAME(key=PROJINFO, type=DATA);
226024    +            data &EM_USER_PROJINFO;
226025    +                length stat $200 value $200;
226026    +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))";
226027    +                value="&projname";
226028    +                output;
226030    +                stat="%sysfunc(sasmsg(sashelp.dmine, views_descriptions_diagram, NOQUOTE))";
226031    +                value="&wsname";
226032    +                output;
226034    +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpath_title, NOQUOTE))";
226035    +                value="&projpath";
226036    +                output;
226038    +                %let createTime = %sysfunc(left(%sysfunc(putn(%sysfunc(dateTime()), NLDATM24.0))));
226039    +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_crdate_vlabel, NOQUOTE))";
226040    +                value="&createTime";
226041    +                output;
226043    +                label stat="%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))"
226044    +                      value="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
226046    +            run;
226048    +            ods &EM_REPORT_FORMAT text=" ";
226049    +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptprojinfo_title, NOQUOTE))";
226050    +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptprojinfo_title, NOQUOTE))";
226052    +            proc print data=&EM_USER_PROJINFO noobs label style=[outputwidth=50%]; run;
226053    +        %end;
226054    +    %end;
226055    +%end;
226057    +%skip:
226059    +%mend em_report_summary;
226062    +%macro em_reporter_scorecard(
226063    +/**----------------------------------------------------------------------**/
226064    +/*  EM_REPORTER_SCORECARD                                                 */
226065    +/*    generate scorecard report for EM RPM flows. currently this is an    */
226066    +/*    interval macro for RPM and does not perform any argument checking.  */
226067    +/**----------------------------------------------------------------------**/
226068    +inData           = ,     /* input training data set                       */
226069    +inData2          = ,
226070    +inVariableSet    = ,     /* input variable metadata, must have the three  */
226071    +                         /* columns: level, role and &name                */
226072    +name             = name, /* variable name column in the metadata          */
226073    +libname          = work, /* libname to save the temporary binned data     */
226074    +crosstab         = Y,    /* create cross-tabulation or not. Default = Y   */
226075    +targetVar        = ,     /* target variable for regressions and scores    */
226076    +targetVar2       = ,     /* target variable for cross-tabulations         */
226077    +targetLevel      = ,     /* target level                                  */
226078    +freqVar          = ,     /* frequency variable                            */
226079    +outVarRank       = ,     /* output dataset for variable ranking (HPREDUCE)*/
226080    +outScorecard     =       /* output dataset for scorecard report           */
226081    +/**----------------------------------------------------------------------**/
226082    +/* Created: 08/20/2012, XXM                                               */
226083    +/**----------------------------------------------------------------------**/
226084    +);
226086    +/**--------------------------------------------------------------------------------------**/
226087    +/** 0. Configurations                                                                    **/
226088    +/**--------------------------------------------------------------------------------------**/
226090    +** get target level;
226091    +%let targetVar   = &targetVar;
226092    +%let targetVar2  = &targetVar2;
226093    +%let targetLevel = &targetLevel;
226095    +** check valid target name and level;    /* TBA */
226097    +** check VariableSet has LEVEL and NAME; /* TBA */
226099    +/**--------------------------------------------------------------------------------------**/
226100    +/** 1. Get the input variables from variable set                                         **/
226101    +/**--------------------------------------------------------------------------------------**/
226103    +%let nom_vars = ;
226104    +%let ord_vars = ;
226105    +%let int_vars = ;
226106    +%let n_nomvars = 0;
226107    +%let n_ordvars = 0;
226108    +%let n_intvars = 0;
226110    +data _null_;
226111    +    set &inVariableSet(where=(LEVEL in ('NOMINAL', 'BINARY') and upcase(&name) ne "&targetVar")) end=eof;
226112    +    call symput('nom_vars'!!strip(put(_N_,BEST.)), strip(&name));
226113    +    if eof then call symput('n_nomvars', strip(put(_N_,BEST.)));
226114    +data _null_;
226115    +    set &inVariableSet(where=(LEVEL='ORDINAL' and upcase(&name) ne "&targetVar")) end=eof;
226116    +    call symput('ord_vars'!!strip(put(_N_,BEST.)), strip(&name));
226117    +    if eof then call symput('n_ordvars', strip(put(_N_,BEST.)));
226118    +data _null_;
226119    +    set &inVariableSet(where=(LEVEL='INTERVAL' and upcase(&name) ne "&targetVar")) end=eof;
226120    +    call symput('int_vars'!!strip(put(_N_,BEST.)), strip(&name));
226121    +    if eof then call symput('n_intvars', strip(put(_N_,BEST.)));
226122    +run;
226124    +%let n_svars = %eval(&n_nomvars+&n_ordvars+&n_intvars);
226126    +%if ((&n_nomvars gt 0) OR (&n_ordvars gt 0) OR (&n_intvars gt 0)) %then %do;
226128    +    /**----------------------------------------------------------------------------------**/
226129    +    /** 2. PROC ARBOR                                                                    **/
226130    +    /**----------------------------------------------------------------------------------**/
226132    +    proc arbor data=&indata
226133    +        alpha=1 leafsize=5 mincatsize=5 maxbranch=8 maxdepth=1 NORULELIMIT
226134    +        maxrules=&n_svars maxsurrs=0 missing=USEINSEARCH exhaustive=5000
226135    +    ;
226136    +        %if &n_nomvars gt 0 %then %do;
226137    +            input %do i=1 %to &n_nomvars; &&nom_vars&i %end; / level = nominal;
226138    +        %end;
226139    +        %if &n_ordvars gt 0 %then %do;
226140    +            input %do i=1 %to &n_ordvars; &&ord_vars&i %end; / level = ordinal;
226141    +        %end;
226142    +        %if &n_intvars gt 0 %then %do;
226143    +            input %do i=1 %to &n_intvars; &&int_vars&i %end; / level = interval;
226144    +        %end;
226145    +        %if &freqvar ne %then %do; freq &freqvar; %end;
226146    +        target &targetVar / level=&targetLevel;
226147    +        save importance=importance rules=rules;
226148    +    run;
226150    +    /**----------------------------------------------------------------------------------**/
226151    +    /** 2. get VarRank output table                                                      **/
226152    +    /**----------------------------------------------------------------------------------**/
226154    +    /* keep only the top 50 input variables - based on rank */
226156    +    data &outVarRank(where=(rank le 50));
226157    +        length variable $32 worth 8;
226158    +        set rules;
226159    +        by rank;
226160    +        retain variable worth;
226161    +        label variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
226162    +        keep variable rank worth;
226164    +        if STAT="VARIABLE" then variable=Character_value;
226165    +        if STAT="WORTH" then worth=Numeric_value;
226166    +        if last.rank then output;
226167    +    run;
226169    +    data &outVarRank;
226170    +        set &outVarRank;
226171    +        if worth=. then do;
226172    +            worth = 0.00;
226173    +            rank  = _N_;
226174    +        end;
226175    +    run;
226177    +    /* selected interval and class input variables */
226178    +    proc sql noprint;
226179    +        create table tempclass(drop=&name) as
226180    +            select a.*, b.*  from &outVarRank as a left join &inVariableSet as b
226181    +                on upcase(a.variable) eq upcase(b.&name)
226182    +            where level ne "INTERVAL"
226183    +            order by a.variable
226184    +        ;
226185    +        create table tempinterval(drop=&name) as
226186    +            select a.*, b.*  from &outVarRank as a left join &inVariableSet as b
226187    +                on upcase(a.variable) eq upcase(b.&name)
226188    +            where level eq "INTERVAL"
226189    +            order by a.variable
226190    +        ;
226191    +    quit;
226193    +    /* create array of class variables names */
226194    +    %let class_vars=;
226195    +    %let n_classvars=0;
226196    +    data _null_;
226197    +        set tempclass end=eof;
226198    +        call symput('class_vars'!!strip(put(_N_,BEST.)), strip(variable));
226199    +        if eof then call symput('n_classvars', strip(put(_N_,BEST.)));
226200    +    run;
226202    +    /**----------------------------------------------------------------------------------**/
226203    +    /** 3. Get Bining information                                                        **/
226204    +    /**----------------------------------------------------------------------------------**/
226206    +    %let dsid = %sysfunc(open(work.rules));
226207    +    %let numobs = %sysfunc(attrn(&dsid, NOBS));
226208    +    %let numvars = %sysfunc(attrn(&dsid, NVARS));
226209    +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
226211    +    %if %sysfunc(exist(&outVarRank)) and (&numobs gt 0) and (&numvars gt 0) %then %do;
226213    +        data rules;
226214    +            set rules;
226215    +            where STAT in ('VARIABLE', 'INTERVAL', 'MISSING');
226216    +            numeric_value = round(numeric_value, 0.001);
226217    +        proc sort data=rules;
226218    +            by rank numeric_value;
226219    +        run;
226221    +        data binning_rules;
226222    +            length origVar $32;
226223    +            set rules;
226224    +            by rank;
226225    +            retain origVar oldLB;
226226    +            keep origVar LB UB;
226228    +            if STAT="VARIABLE" then origVar = Character_value;
226229    +            if first.rank then oldLB=.;
226230    +            if STAT="INTERVAL" then do;
226231    +                LB = oldLB;
226232    +                UB = Numeric_value;
226233    +                oldLB=UB;
226234    +                output;
226235    +            end;
226236    +            if last.rank then do;
226237    +                LB=oldLB;
226238    +                UB = .;
226239    +                output;
226240    +            end;
226241    +        run;
226243    +        /* names for binning */
226244    +        proc sql noprint;
226245    +            create table tempbinnames(drop=variable) as
226246    +                select distinct origVar, role from binning_rules as a inner join tempinterval as b
226247    +                  on a.OrigVar eq b.variable;
226248    +        quit;
226250    +        /* get name server */
226251    +        proc dmdb data=tempbinnames outtable=tempbinnames nameserver;
226252    +            names origVar;
226253    +            prefix BIN_;
226254    +        run;
226256    +        /* merge binned names back to temp */
226257    +        proc sql noprint;
226258    +            create table binning_rules_names as
226259    +                select a.*, b.bin as binVar from binning_rules as a right join tempbinnames as b
226260    +                    on a.origVar eq b.origVar
226261    +                order by a.origVar, a.LB, a.UB;
226262    +        quit;
226264    +        /* create array of bin variables names */
226265    +        %let bin_vars=;
226266    +        %let n_binvars=0;
226267    +        data _null_;
226268    +            set tempbinnames end=eof;
226269    +            call symput('bin_vars'!!strip(put(_N_,BEST.)), strip(bin));
226270    +            if eof then call symput('n_binvars', strip(put(_N_,BEST.)));
226271    +        run;
226273    +    /**----------------------------------------------------------------------------------**/
226274    +    /** 4. Bin the interval variables                                                    **/
226275    +    /**    note that binned is used for DMREG, binned_full is used for CROSSTAB          **/
226276    +    /**----------------------------------------------------------------------------------**/
226278    +    data binned;
226279    +        set &indata;
226281    +        %if &n_binvars gt 0 %then %do;
226282    +            length %do i=1 %to &n_binvars; &&bin_vars&i %end; $50;
226283    +        %end;
226285    +        %let dsid = %sysfunc(open(binning_rules_names));
226286    +        %if &dsid %then %do;
226287    +            %let orignum = %sysfunc(VARNUM(&dsid, origVar));
226288    +            %let binnum  = %sysfunc(VARNUM(&dsid, binVar));
226289    +            %let lbnum   = %sysfunc(VARNUM(&dsid, LB));
226290    +            %let ubnum   = %sysfunc(VARNUM(&dsid, UB));
226292    +            %let obs     = %sysfunc(fetch(&dsid));
226293    +            %do %while(&obs=0);
226294    +                %let origvar = %sysfunc(getvarc(&dsid, &orignum));
226295    +                %let binvar  = %sysfunc(getvarc(&dsid, &binnum));
226296    +                %let lb   = %sysfunc(getvarn(&dsid, &lbnum));
226297    +                %let ub   = %sysfunc(getvarn(&dsid, &ubnum));
226299    +                %if "&lb" eq "." AND "&ub" ne "." %then %do;
226300    +                    %let count = 1;
226301    +                    if &origvar < &ub then &binvar = "&count: low - &ub";
226302    +                %end;
226303    +                %else %if "&lb" ne "." AND "&ub" eq "." %then %do;
226304    +                    %let count = %eval(&count+1);
226305    +                    else if &origvar >= &lb then &binvar = "&count: &lb - high";
226306    +                %end;
226307    +                %else %if "&lb" eq "." AND "&ub" eq "." %then %do;
226308    +                    %let count = 1;
226309    +                    &binvar = "&count: low - high";
226310    +                %end;
226311    +                %else %do;
226312    +                    %let count = %eval(&count+1);
226313    +                    else if &origvar < &ub AND &origvar >= &lb then &binvar = "&count: &lb - &ub";
226314    +                %end;
226316    +                %let obs = %sysfunc(fetch(&dsid));
226317    +            %end;
226318    +        %end;
226319    +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
226320    +    run;
226322    +    data binned_full;
226323    +        set &indata2;
226325    +        %if &n_binvars gt 0 %then %do;
226326    +            length %do i=1 %to &n_binvars; &&bin_vars&i %end; $50;
226327    +        %end;
226329    +        %let dsid = %sysfunc(open(binning_rules_names));
226330    +        %if &dsid %then %do;
226331    +            %let orignum = %sysfunc(VARNUM(&dsid, origVar));
226332    +            %let binnum  = %sysfunc(VARNUM(&dsid, binVar));
226333    +            %let lbnum   = %sysfunc(VARNUM(&dsid, LB));
226334    +            %let ubnum   = %sysfunc(VARNUM(&dsid, UB));
226336    +            %let obs     = %sysfunc(fetch(&dsid));
226337    +            %do %while(&obs=0);
226338    +                %let origvar = %sysfunc(getvarc(&dsid, &orignum));
226339    +                %let binvar  = %sysfunc(getvarc(&dsid, &binnum));
226340    +                %let lb   = %sysfunc(getvarn(&dsid, &lbnum));
226341    +                %let ub   = %sysfunc(getvarn(&dsid, &ubnum));
226343    +                %if "&lb" eq "." AND "&ub" ne "." %then %do;
226344    +                    %let count = 1;
226345    +                    if &origvar < &ub then &binvar = "&count: low - &ub";
226346    +                %end;
226347    +                %else %if "&lb" ne "." AND "&ub" eq "." %then %do;
226348    +                    %let count = %eval(&count+1);
226349    +                    else if &origvar >= &lb then &binvar = "&count: &lb - high";
226350    +                %end;
226351    +                %else %if "&lb" eq "." AND "&ub" eq "." %then %do;
226352    +                    %let count = 1;
226353    +                    &binvar = "&count: low - high";
226354    +                %end;
226355    +                %else %do;
226356    +                    %let count = %eval(&count+1);
226357    +                    else if &origvar < &ub AND &origvar >= &lb then &binvar = "&count: &lb - &ub";
226358    +                %end;
226360    +                %let obs     = %sysfunc(fetch(&dsid));
226361    +            %end;
226362    +        %end;
226363    +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
226364    +    run;
226366    +    /**----------------------------------------------------------------------------------**/
226367    +    /** 5. Generate scores                                                               **/
226368    +    /**----------------------------------------------------------------------------------**/
226370    +    proc dmdb batch data=binned dmdbcat=score_dmdb maxlevel=513 classout=_classout;
226371    +        class
226372    +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
226373    +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
226374    +            %if "&targetLevel" ne "INTERVAL" %then %do; &targetVar %end;
226375    +        ;
226376    +        %if &freqvar ne %then %do; freq &freqvar; %end;
226377    +        %if "&targetLevel" eq  "INTERVAL" %then %do; var &targetVar; %end;
226378    +        target &targetVar;
226379    +    run; quit;
226381    +    proc dmreg data=binned dmdbcat=score_dmdb outest=coeff_est outterms=outterms noprint descending;
226382    +        class
226383    +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
226384    +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
226385    +            %if "&targetLevel" ne "INTERVAL" %then %do; &targetVar %end;
226386    +        ;
226387    +        %if &freqvar ne %then %do; freq &freqvar; %end;
226388    +        model &targetVar =
226389    +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
226390    +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
226391    +            / coding=glm
226392    +        ;
226393    +    run;
226397    +    proc sql noprint;
226398    +        create table _score_tmp1 as
226399    +            select *, min(coefficient) as min_est,
226400    +                case when calculated min_est = coefficient then 0
226401    +                     else coefficient-calculated min_est
226402    +                end as est1
226403    +            from outterms
226404    +            where variable ne 'Intercept'
226405    +            group by variable
226406    +        ;
226407    +        create table _score_tmp2 as
226408    +            select *, max(est1) as max_est1, count(*) as counter
226409    +            from _score_tmp1
226410    +            group by variable
226411    +        ;
226412    +%if "&fimnode" eq "" %then %do;
226413    +        create table _classout2(rename=(name=variable level=value)) as
226414    +            select a.*, b.format
226415    +                from _classout as a left join &inVariableSet(keep=&name format) as b
226416    +                on a.name eq b.&name
226417    +            order by a.name, a.level
226418    +        ;
226419    +%end;
226421    +        create table &outScorecard(rename=(classlevel=value)) as
226422    +            select *, sum(max_est1/counter) as sum_max,
226423    +                case when est1=max_est1 then 1 else 0 end as max_cat,
226424    +                round(1000*((est1) / calculated sum_max)) as score
226425    +            from _score_tmp2
226426    +            order by variable, classlevel
226427    +        ;
226429    +    quit;
226431    +    data &outScorecard;
226432    +%if "&fimnode" ne "" %then %do;
226433    +        set &outScorecard;
226434    +        by variable value;
226435    +%end;
226436    +%else %do;
226437    +        merge &outScorecard(in=_a) _classout2;
226438    +        by variable value;
226439    +        if _a;
226440    +%end;
226441    +        value = tranwrd(value, "'", "''");
226442    +        rename frequency   = AllFreq
226443    +               freqpercent = AllPercent;
226444    +        label  score       = "%sysfunc(sasmsg(sashelp.dmine, rpt_scorecardpoints_vlabel, NOQUOTE))"
226445    +               frequency   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numObs_vlabel, NOQUOTE))"
226446    +               freqpercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptperctobs_vlabel, NOQUOTE))";
226447    +    run;
226449    +    /* replace binned named with original var name instead */
226451    +    proc sort data=tempbinnames; by bin; run;
226453    +    data &outScorecard;
226454    +        merge &outScorecard(in=_a) tempbinnames(rename=(bin=variable origvar=displayVar)) ;
226455    +        by variable;
226456    +        if _a;
226457    +        if displayVar="" then displayVar=variable;
226458    +    run;
226460    +    /**----------------------------------------------------------------------------------**/
226461    +    /** 6. Generate crosstabs                                                            **/
226462    +    /**----------------------------------------------------------------------------------**/
226464    +    %if "&targetLevel" ne "INTERVAL" %then %do;
226466    +        ods &EM_REPORT_FORMAT exclude all;
226467    +        ods listing;
226469    +        data _null_;
226470    +            set &outScorecard end=eof;
226471    +            by variable;
226472    +            if _n_=1          then call execute("proc freq data=work.binned_full order=formatted addnames;");
226473    +            if first.variable then call execute("table "||variable||" * &targetVar2 / missing;");
226474    +            if eof then do;
226475    +                %if &freqvar ne %then %do; call execute("weight &freqvar;"); %end;
226476    +                call execute("ods output crosstabfreqs=tempfreq;");
226477    +                call execute("run;");
226478    +            end;
226479    +        run;
226481    +        data _null_;
226482    +            set &outScorecard end=eof;
226483    +            by variable value;
226485    +            if _n_=1 then do;
226486    +                call execute("data crosstabs;");
226487    +                call execute("  length varvalue $200 displayVar $32;");
226488    +                call execute("  set tempfreq(where=(_type_='11'));");
226489    +            end;
226491    +            if type="N" AND format eq "" then do;
226492    +                call execute("if "||Variable||" = "||value||" then do;");
226493    +            end;
226494    +            else do;
226495    +                if format ne ""
226496    +                    then call execute("%DMNORMCP(put("||variable||","||format||"), _normvar);");
226497    +                    else call execute("%DMNORMCP("||variable||", _normvar);");
226498    +                call execute("if strip(_normvar) = '"||strip(value)||"' then do;");
226499    +            end;
226501    +            call execute("  varvalue='"||strip(value)||"';");
226502    +            call execute("  scorepoints="||score||";");
226503    +            call execute("  allfreq="||allfreq||";");
226504    +            call execute("  allpercent="||allpercent||";");
226505    +            call execute("  displayVar='"||displayVar||"';");
226506    +            call execute("end;");
226508    +            if eof then call execute("run;");
226509    +        run;
226511    +        ods &EM_REPORT_FORMAT select all;
226512    +        ods listing close;
226514    +        proc sort data=crosstabs; by rowVariable varvalue; run;
226516    +        data &outScoreCard;
226517    +            set crosstabs;
226518    +            by rowVariable varvalue;
226519    +            if missing(scorepoints) then delete;
226520    +            if ^first.varvalue then do;
226521    +                 scorepoints=.;
226522    +                 allfreq=.;
226523    +                 allpercent=.;
226524    +            end;
226525    +            keep displayvar rowVariable varValue &targetVar2 scorepoints frequency colPercent allfreq allpercent ;
226526    +        run;
226527    +    %end;
226528    +    %else %do;
226529    +        data &outScoreCard;
226530    +            set &outScoreCard;
226531    +            rename value=varvalue score=scorepoints;
226532    +        run;
226533    +    %end;
226534    +%end;
226536    +/*    proc datasets lib=work nolist;*/
226537    +/*    run; quit;*/
226538    +%end;
226540    +%mend em_reporter_scorecard;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source' ;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
226541    +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
226542    +   proc display c=sashelp.emcore.pathscorecode.scl;
226543    +   run;
226544    +%mend EM_GETTRAINPATH;
226545    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_tagset_template.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TAGSET_TEMPLATE.SOURCE.
226546    +Ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_CREATE):   Ods path(prepend) work.templat(update);
226547    +
226548    +/* emgraph.tpl */
226549    +proc template;
MPRINT(EM_REPORT_CREATE):   proc template;
226550    +define tagset tagsets.gtl / store=work.templat;
MPRINT(EM_REPORT_CREATE):   define tagset tagsets.gtl / store=work.templat;
226551    +parent=tagsets.odsgraph;
MPRINT(EM_REPORT_CREATE):   parent=tagsets.odsgraph;
226552    +%let  map =<>%nrstr(&)%str(%')%str(%");
226553    +map="&map";
MPRINT(EM_REPORT_CREATE):   map="<>&'"";
226554    +mapsub = '/&lt;/&gt;/&amp;/&#39;/&quot;/';
MPRINT(EM_REPORT_CREATE):   mapsub = '/&lt;/&gt;/&amp;/&#39;/&quot;/';
226555    +nobreakspace = ' ' no_byte_order_mark = yes;
MPRINT(EM_REPORT_CREATE):   nobreakspace = ' ' no_byte_order_mark = yes;
226556    +split = '<br/>';
MPRINT(EM_REPORT_CREATE):   split = '<br/>';
226557    +output_type = 'xml';
MPRINT(EM_REPORT_CREATE):   output_type = 'xml';
226558    +indent=2;
MPRINT(EM_REPORT_CREATE):   indent=2;
226559    +
226560    +define event options_set;
MPRINT(EM_REPORT_CREATE):   define event options_set;
226561    +    do / if $options['X'];
MPRINT(EM_REPORT_CREATE):   do / if $options['X'];
226562    +         set $xvar $options['X'];
MPRINT(EM_REPORT_CREATE):   set $xvar $options['X'];
226563    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226564    +         unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
226565    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226566    +
226567    +    do / if $options['Y'];
MPRINT(EM_REPORT_CREATE):   do / if $options['Y'];
226568    +         set $yvar $options['Y'];
MPRINT(EM_REPORT_CREATE):   set $yvar $options['Y'];
226569    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226570    +         unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
226571    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226572    +
226573    +    do / if $options['CATEGORY'];
MPRINT(EM_REPORT_CREATE):   do / if $options['CATEGORY'];
226574    +         set $category $options['CATEGORY'];
MPRINT(EM_REPORT_CREATE):   set $category $options['CATEGORY'];
226575    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226576    +         unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
226577    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226578    +
226579    +    do / if $options['RESPONSE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['RESPONSE'];
226580    +         set $response $options['RESPONSE'];
MPRINT(EM_REPORT_CREATE):   set $response $options['RESPONSE'];
226581    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226582    +         unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
226583    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226584    +
226585    +    do / if $options['LIMITUPPER'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LIMITUPPER'];
226586    +         set $limitupper $options['LIMITUPPER'];
MPRINT(EM_REPORT_CREATE):   set $limitupper $options['LIMITUPPER'];
226587    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226588    +         unset $limitupper;
MPRINT(EM_REPORT_CREATE):   unset $limitupper;
226589    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226590    +
226591    +    do / if $options['LIMITLOWER'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LIMITLOWER'];
226592    +         set $limitlower $options['LIMITLOWER'];
MPRINT(EM_REPORT_CREATE):   set $limitlower $options['LIMITLOWER'];
226593    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226594    +         unset $limitlower;
MPRINT(EM_REPORT_CREATE):   unset $limitlower;
226595    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226596    +
226597    +    do / if $options['WIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['WIDTH'];
226598    +         set $graphwidth $options['WIDTH'];
MPRINT(EM_REPORT_CREATE):   set $graphwidth $options['WIDTH'];
226599    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226600    +         unset $graphwidth;
MPRINT(EM_REPORT_CREATE):   unset $graphwidth;
226601    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226602    +
226603    +    do / if $options['HEIGHT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['HEIGHT'];
226604    +         set $graphheight $options['HEIGHT'];
MPRINT(EM_REPORT_CREATE):   set $graphheight $options['HEIGHT'];
226605    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226606    +         unset $graphheight;
MPRINT(EM_REPORT_CREATE):   unset $graphheight;
226607    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226608    +
226609    +    do / if $options['ROWS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ROWS'];
226610    +         set $rows $options['ROWS'];
MPRINT(EM_REPORT_CREATE):   set $rows $options['ROWS'];
226611    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226612    +         unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
226613    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226614    +
226615    +    do / if $options['COLUMNS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLUMNS'];
226616    +         set $columns $options['COLUMNS'];
MPRINT(EM_REPORT_CREATE):   set $columns $options['COLUMNS'];
226617    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226618    +         unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
226619    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226620    +
226621    +    do / if $options['TITLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE'];
226622    +         set $title $options['TITLE'];
MPRINT(EM_REPORT_CREATE):   set $title $options['TITLE'];
226623    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226624    +         unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title;
226625    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226626    +
226627    +    do / if $options['TITLE2'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE2'];
226628    +         set $title2 $options['TITLE2'];
MPRINT(EM_REPORT_CREATE):   set $title2 $options['TITLE2'];
226629    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226630    +         unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title2;
226631    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226632    +
226633    +do / if $options['TITLE3'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE3'];
226634    +         set $title3 $options['TITLE3'];
MPRINT(EM_REPORT_CREATE):   set $title3 $options['TITLE3'];
The SAS System
 
226635    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226636    +         unset $title3;
MPRINT(EM_REPORT_CREATE):   unset $title3;
226637    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226638    +
226639    +do / if $options['TITLE4'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE4'];
226640    +         set $title4 $options['TITLE4'];
MPRINT(EM_REPORT_CREATE):   set $title4 $options['TITLE4'];
226641    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226642    +         unset $title4;
MPRINT(EM_REPORT_CREATE):   unset $title4;
226643    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226644    +
226645    +    do / if $options['ID'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ID'];
226646    +         set $id $options['ID'];
MPRINT(EM_REPORT_CREATE):   set $id $options['ID'];
226647    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226648    +         unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
226649    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226650    +
226651    +    do / if $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PARENT'];
226652    +         set $parent $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   set $parent $options['PARENT'];
226653    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226654    +         unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
226655    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226656    +
226657    +    do / if $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PARENT'];
226658    +         set $parent $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   set $parent $options['PARENT'];
226659    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226660    +         unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
226661    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226662    +
226663    +    do / if $options['ABOVETEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ABOVETEXT'];
226664    +         set $abovetext $options['ABOVETEXT'];
MPRINT(EM_REPORT_CREATE):   set $abovetext $options['ABOVETEXT'];
226665    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226666    +         unset $abovetext;
MPRINT(EM_REPORT_CREATE):   unset $abovetext;
226667    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226668    +
226669    +    do / if $options['BELOWTEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['BELOWTEXT'];
226670    +         set $belowtext $options['BELOWTEXT'];
MPRINT(EM_REPORT_CREATE):   set $belowtext $options['BELOWTEXT'];
226671    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226672    +         unset $belowtext;
MPRINT(EM_REPORT_CREATE):   unset $belowtext;
226673    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226674    +
226675    +    do / if $options['LINKWIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LINKWIDTH'];
226676    +         set $linkwidth $options['LINKWIDTH'];
MPRINT(EM_REPORT_CREATE):   set $linkwidth $options['LINKWIDTH'];
226677    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226678    +         unset $linkwidth;
MPRINT(EM_REPORT_CREATE):   unset $linkwidth;
226679    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226680    +
226681    +    do / if $options['NODECOLOR'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODECOLOR'];
226682    +         set $nodecolor $options['NODECOLOR'];
MPRINT(EM_REPORT_CREATE):   set $nodecolor $options['NODECOLOR'];
226683    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226684    +         unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
226685    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226686    +
226687    +    do / if $options['NODESIZE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODESIZE'];
226688    +         set $nodesize $options['NODESIZE'];
MPRINT(EM_REPORT_CREATE):   set $nodesize $options['NODESIZE'];
226689    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226690    +         unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
226691    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226692    +
226693    +    do / if $options['NODETEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODETEXT'];
226694    +         set $nodetext $options['NODETEXT'];
MPRINT(EM_REPORT_CREATE):   set $nodetext $options['NODETEXT'];
226695    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226696    +         unset $nodetext;
MPRINT(EM_REPORT_CREATE):   unset $nodetext;
226697    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226698    +
226699    +    do / if $options['PFDITEMS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PFDITEMS'];
226700    +         set $pfditems $options['PFDITEMS'];
MPRINT(EM_REPORT_CREATE):   set $pfditems $options['PFDITEMS'];
226701    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226702    +         unset $pfditems;
MPRINT(EM_REPORT_CREATE):   unset $pfditems;
226703    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226704    +
226705    +    do / if $options['GRIDSTYLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDSTYLE'];
226706    +         set $gridstyle $options['GRIDSTYLE'];
MPRINT(EM_REPORT_CREATE):   set $gridstyle $options['GRIDSTYLE'];
226707    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226708    +         unset $gridstyle;
MPRINT(EM_REPORT_CREATE):   unset $gridstyle;
226709    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226710    +
226711    +    do / if $options['GRIDHEIGHT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDHEIGHT'];
226712    +         set $gridheight $options['GRIDHEIGHT'];
MPRINT(EM_REPORT_CREATE):   set $gridheight $options['GRIDHEIGHT'];
226713    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226714    +         unset $gridheight;
MPRINT(EM_REPORT_CREATE):   unset $gridheight;
226715    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226716    +
226717    +    do / if $options['GRIDWIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDWIDTH'];
226718    +         set $gridwidth $options['GRIDWIDTH'];
MPRINT(EM_REPORT_CREATE):   set $gridwidth $options['GRIDWIDTH'];
226719    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226720    +         unset $gridwidth;
MPRINT(EM_REPORT_CREATE):   unset $gridwidth;
226721    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226722    +
226723    +    do / if $options['ISGRIDVISIBLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ISGRIDVISIBLE'];
226724    +         set $isGridVisible $options['ISGRIDVISIBLE'];
MPRINT(EM_REPORT_CREATE):   set $isGridVisible $options['ISGRIDVISIBLE'];
226725    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226726    +         unset $isGridVisible;
MPRINT(EM_REPORT_CREATE):   unset $isGridVisible;
226727    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226728    +
226729    +    do / if $options['LAYOUTACTIVATED'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LAYOUTACTIVATED'];
226730    +         set $layoutActivated $options['LAYOUTACTIVATED'];
MPRINT(EM_REPORT_CREATE):   set $layoutActivated $options['LAYOUTACTIVATED'];
226731    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226732    +         unset $layoutActivated;
MPRINT(EM_REPORT_CREATE):   unset $layoutActivated;
226733    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226734    +
226735    +    do / if $options['PIELABELDISPLAY'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PIELABELDISPLAY'];
226736    +         set $pieLabelDisplay $options['PIELABELDISPLAY'];
MPRINT(EM_REPORT_CREATE):   set $pieLabelDisplay $options['PIELABELDISPLAY'];
226737    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226738    +         unset $pieLabelDisplay;
MPRINT(EM_REPORT_CREATE):   unset $pieLabelDisplay;
226739    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226740    +
226741    +    do / if $options['COLORLIST'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLORLIST'];
226742    +         set $colorlist $options['COLORLIST'];
MPRINT(EM_REPORT_CREATE):   set $colorlist $options['COLORLIST'];
226743    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226744    +         unset $colorlist;
MPRINT(EM_REPORT_CREATE):   unset $colorlist;
226745    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226746    +
226747    +    do / if $options['COLORINDEX'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLORINDEX'];
226748    +         set $colorindex $options['COLORINDEX'];
MPRINT(EM_REPORT_CREATE):   set $colorindex $options['COLORINDEX'];
226749    +    else;
MPRINT(EM_REPORT_CREATE):   else;
226750    +         unset $colorindex;
MPRINT(EM_REPORT_CREATE):   unset $colorindex;
226751    +    done;
MPRINT(EM_REPORT_CREATE):   done;
226752    +
226753    +end;
MPRINT(EM_REPORT_CREATE):   end;
226754    +
226755    +define event doc;
MPRINT(EM_REPORT_CREATE):   define event doc;
226756    +   eval $silkindex 0;
MPRINT(EM_REPORT_CREATE):   eval $silkindex 0;
MPRINT(EM_REPORT_CREATE):   eval $level 0;
226757    +   eval $level 0;
226758    +end;
MPRINT(EM_REPORT_CREATE):   end;
226759    +
226760    +define event GraphStyle;
MPRINT(EM_REPORT_CREATE):   define event GraphStyle;
226761    +   pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226762    +   trigger StatXMLDecl;
MPRINT(EM_REPORT_CREATE):   trigger StatXMLDecl;
226763    +   put '<SASReport version="1.0" xmlns:style="http://www.sas.com/sasreportmodel/styles">' CR;
MPRINT(EM_REPORT_CREATE):   put '<SASReport version="1.0" xmlns:style="http://www.sas.com/sasreportmodel/styles">' CR;
226764    +   put '<style:Scheme name="StatGraphScheme" version="9.2">' CR;
MPRINT(EM_REPORT_CREATE):   put '<style:Scheme name="StatGraphScheme" version="9.2">' CR;
226765    +   trigger StatGraphScheme start;
MPRINT(EM_REPORT_CREATE):   trigger StatGraphScheme start;
226766    +   trigger StatDataDefaultScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatDataDefaultScheme;
226767    +   trigger StatTwoColorRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTwoColorRampScheme;
226768    +   trigger StatTwoColorAltRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTwoColorAltRampScheme;
226769    +   trigger StatThreeColorRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatThreeColorRampScheme;
226770    +   trigger StatThreeColorAltRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatThreeColorAltRampScheme;
226771    +   trigger StatAxisLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAxisLineScheme;
226772    +   trigger StatReferenceScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatReferenceScheme;
226773    +   trigger StatGridLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatGridLineScheme;
226774    +   trigger StatOutlineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatOutlineScheme;
226775    +   trigger StatBorderLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBorderLineScheme;
226776    +   trigger StatTitleTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTitleTextScheme;
226777    +   trigger StatFootnoteTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFootnoteTextScheme;
226778    +   trigger StatDataTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatDataTextScheme;
226779    +   trigger StatLabelTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatLabelTextScheme;
226780    +   trigger StatValueTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatValueTextScheme;
226781    +   trigger StatUnicodeTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatUnicodeTextScheme;
226782    +   trigger StatBackFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBackFillScheme;
226783    +   trigger StatWallFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatWallFillScheme;
226784    +   trigger StatFloorFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFloorFillScheme;
226785    +   trigger StatLegendFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatLegendFillScheme;
226786    +   trigger StatHeaderFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatHeaderFillScheme;
226787    +   trigger StatOutlierScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatOutlierScheme;
226788    +   trigger StatFitScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFitScheme;
226789    +   trigger StatFit2Scheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFit2Scheme;
226790    +   trigger StatPredictionScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatPredictionScheme;
226791    +   trigger StatConfidenceScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConfidenceScheme;
226792    +   trigger StatConfidence2Scheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConfidence2Scheme;
226793    +   trigger StatPredictionLimitsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatPredictionLimitsScheme;
226794    +   trigger StatErrorScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatErrorScheme;
226795    +   trigger StatBoxMedianScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxMedianScheme;
226796    +   trigger StatBoxMeanScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxMeanScheme;
226797    +   trigger StatBoxWhiskerScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxWhiskerScheme;
226798    +   trigger StatBoxScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxScheme;
226799    +   trigger StatHistogramScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatHistogramScheme;
226800    +   trigger StatBandScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBandScheme;
226801    +   trigger StatContourScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatContourScheme;
226802    +   trigger StatEllipseScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatEllipseScheme;
226803    +   trigger StatAnnoLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoLineScheme;
226804    +   trigger StatAnnoTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoTextScheme;
226805    +   trigger StatAnnoShapeScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoShapeScheme;
226806    +   trigger StatSelectionScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatSelectionScheme;
226807    +   trigger StatConnectLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConnectLineScheme;
226808    +   trigger StatMissingScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatMissingScheme;
226809    +   trigger StatControlLimitsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatControlLimitsScheme;
226810    +   trigger StatRunTestScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatRunTestScheme;
226811    +   trigger StatStarsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatStarsScheme;
226812    +   trigger StatClippingScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatClippingScheme;
226813    +   trigger StatBlockScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBlockScheme;
226814    +   trigger StatAltBlockScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAltBlockScheme;
226815    +   trigger GraphDataStyle1;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle1;
226816    +   trigger GraphDataStyle2 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle2 / if !$stopDataStyles;
226817    +   trigger GraphDataStyle3 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle3 / if !$stopDataStyles;
226818    +   trigger GraphDataStyle4 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle4 / if !$stopDataStyles;
226819    +   trigger GraphDataStyle5 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle5 / if !$stopDataStyles;
226820    +   trigger GraphDataStyle6 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle6 / if !$stopDataStyles;
226821    +   trigger GraphDataStyle7 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle7 / if !$stopDataStyles;
226822    +   trigger GraphDataStyle8 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle8 / if !$stopDataStyles;
226823    +   trigger GraphDataStyle9 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle9 / if !$stopDataStyles;
226824    +   trigger GraphDataStyle10 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle10 / if !$stopDataStyles;
226825    +   trigger GraphDataStyle11 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle11 / if !$stopDataStyles;
226826    +   trigger GraphDataStyle12 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle12 / if !$stopDataStyles;
226827    +   trigger GraphDataStyle13 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle13 / if !$stopDataStyles;
226828    +   trigger GraphDataStyle14 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle14 / if !$stopDataStyles;
226829    +   trigger GraphDataStyle15 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle15 / if !$stopDataStyles;
226830    +   trigger StatGraphScheme finish;
MPRINT(EM_REPORT_CREATE):   trigger StatGraphScheme finish;
226831    +   put '</style:Scheme>' CR;
MPRINT(EM_REPORT_CREATE):   put '</style:Scheme>' CR;
226832    +   unset $stopDataStyles;
MPRINT(EM_REPORT_CREATE):   unset $stopDataStyles;
226833    +end;
MPRINT(EM_REPORT_CREATE):   end;
226834    +
226835    +%macro dataStyleAttrs(index);
226836    +    do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
226837    +        set $stopDataStyles 'true';
226838    +        break;
226839    +    done;
226840    +    put '<style:Style context="GraphDataStyle' &index '"';
226841    +    putq " color=" COLOR;
226842    +    putq " altColor=" CONTRASTCOLOR;
226843    +    putq " fillColor=" COLOR;
226844    +    putq " textColor=" CONTRASTCOLOR;
226845    +    putq " lineStyle=" LINESTYLE;
226846    +    putq " lineColor=" CONTRASTCOLOR;
226847    +    putq " markerSymbol=" MARKERSYMBOL;
226848    +    putq " markerColor=" CONTRASTCOLOR;
226849    +    put "/>" NL;
226850    +%mend;
226851    +
226852    + define event GraphDataStyle1;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle1;
226853    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226854    +    style=GraphData1;
MPRINT(EM_REPORT_CREATE):   style=GraphData1;
226855    +    %dataStyleAttrs(1);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 1 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226856    + end;
MPRINT(EM_REPORT_CREATE):   end;
226857    + define event GraphDataStyle2;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle2;
226858    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226859    +    style=GraphData2;
MPRINT(EM_REPORT_CREATE):   style=GraphData2;
226860    +    %dataStyleAttrs(2);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 2 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226861    + end;
MPRINT(EM_REPORT_CREATE):   end;
226862    +define event GraphDataStyle3;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle3;
226863    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226864    +    style=GraphData3;
MPRINT(EM_REPORT_CREATE):   style=GraphData3;
226865    +    %dataStyleAttrs(3);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 3 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226866    + end;
MPRINT(EM_REPORT_CREATE):   end;
226867    + define event GraphDataStyle4;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle4;
226868    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226869    +    style=GraphData4;
MPRINT(EM_REPORT_CREATE):   style=GraphData4;
226870    +    %dataStyleAttrs(4);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 4 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226871    + end;
MPRINT(EM_REPORT_CREATE):   end;
226872    + define event GraphDataStyle5;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle5;
226873    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226874    +    style=GraphData5;
MPRINT(EM_REPORT_CREATE):   style=GraphData5;
226875    +    %dataStyleAttrs(5);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 5 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226876    + end;
MPRINT(EM_REPORT_CREATE):   end;
226877    + define event GraphDataStyle6;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle6;
226878    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226879    +    style=GraphData6;
MPRINT(EM_REPORT_CREATE):   style=GraphData6;
226880    +    %dataStyleAttrs(6);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 6 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226881    + end;
MPRINT(EM_REPORT_CREATE):   end;
226882    + define event GraphDataStyle7;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle7;
226883    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226884    +    style=GraphData7;
MPRINT(EM_REPORT_CREATE):   style=GraphData7;
226885    +    %dataStyleAttrs(7);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 7 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226886    + end;
MPRINT(EM_REPORT_CREATE):   end;
226887    + define event GraphDataStyle8;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle8;
226888    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226889    +    style=GraphData8;
MPRINT(EM_REPORT_CREATE):   style=GraphData8;
226890    +    %dataStyleAttrs(8);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 8 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226891    + end;
MPRINT(EM_REPORT_CREATE):   end;
226892    + define event GraphDataStyle9;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle9;
226893    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226894    +    style=GraphData9;
MPRINT(EM_REPORT_CREATE):   style=GraphData9;
226895    +    %dataStyleAttrs(9);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 9 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226896    + end;
MPRINT(EM_REPORT_CREATE):   end;
226897    + define event GraphDataStyle10;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle10;
226898    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226899    +    style=GraphData10;
MPRINT(EM_REPORT_CREATE):   style=GraphData10;
226900    +    %dataStyleAttrs(10);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 10 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226901    + end;
MPRINT(EM_REPORT_CREATE):   end;
226902    + define event GraphDataStyle11;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle11;
226903    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226904    +    style=GraphData11;
MPRINT(EM_REPORT_CREATE):   style=GraphData11;
226905    +    %dataStyleAttrs(11);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 11 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226906    + end;
MPRINT(EM_REPORT_CREATE):   end;
226907    + define event GraphDataStyle12;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle12;
226908    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226909    +    style=GraphData12;
MPRINT(EM_REPORT_CREATE):   style=GraphData12;
226910    +    %dataStyleAttrs(12);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 12 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226911    + end;
MPRINT(EM_REPORT_CREATE):   end;
226912    + define event GraphDataStyle13;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle13;
226913    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226914    +    style=GraphData13;
MPRINT(EM_REPORT_CREATE):   style=GraphData13;
226915    +    %dataStyleAttrs(13);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 13 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226916    + end;
MPRINT(EM_REPORT_CREATE):   end;
226917    + define event GraphDataStyle14;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle14;
226918    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226919    +    style=GraphData14;
MPRINT(EM_REPORT_CREATE):   style=GraphData14;
226920    +    %dataStyleAttrs(14);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 14 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226921    + end;
MPRINT(EM_REPORT_CREATE):   end;
226922    + define event GraphDataStyle15;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle15;
226923    +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
226924    +    style=GraphData15;
MPRINT(EM_REPORT_CREATE):   style=GraphData15;
226925    +    %dataStyleAttrs(15);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 15 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
226926    + end;
MPRINT(EM_REPORT_CREATE):   end;
226927    +
226928    +define event BeginGraph;
MPRINT(EM_REPORT_CREATE):   define event BeginGraph;
226929    +putlog "BeginGraph";
MPRINT(EM_REPORT_CREATE):   putlog "BeginGraph";
226930    +   trigger GraphStyle;
MPRINT(EM_REPORT_CREATE):   trigger GraphStyle;
226931    +   put '<View>' CR;
MPRINT(EM_REPORT_CREATE):   put '<View>' CR;
226932    +   put '<StatGraph';
MPRINT(EM_REPORT_CREATE):   put '<StatGraph';
226933    +   put ' version="9.2_S2DVR"';
MPRINT(EM_REPORT_CREATE):   put ' version="9.2_S2DVR"';
226934    +   putq " designHeight=" $graphheight;
MPRINT(EM_REPORT_CREATE):   putq " designHeight=" $graphheight;
226935    +   putq " designWidth=" $graphwidth;
MPRINT(EM_REPORT_CREATE):   putq " designWidth=" $graphwidth;
226936    +   put ' style:style="StatGraphStyle';
MPRINT(EM_REPORT_CREATE):   put ' style:style="StatGraphStyle';
226937    +   put anchor '"';
MPRINT(EM_REPORT_CREATE):   put anchor '"';
226938    +   put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
226939    +   set $graph_started "true";
MPRINT(EM_REPORT_CREATE):   set $graph_started "true";
226940    +   eval $level 0;
MPRINT(EM_REPORT_CREATE):   eval $level 0;
226941    +end;
MPRINT(EM_REPORT_CREATE):   end;
226942    +
226943    +define event LayoutOverlay;
MPRINT(EM_REPORT_CREATE):   define event LayoutOverlay;
226944    +   start:
226945    +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
226946    +      put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
226947    +      put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
226948    +      put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
226949    +      put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
226950    +      put '<LayoutOverlay>' CR;
MPRINT(EM_REPORT_CREATE):   put '<LayoutOverlay>' CR;
226951    +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title2;
226952    +      unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title3;
226953    +      unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title4;
226954    +      unset $title3;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutOverlay>' CR;
226955    +      unset $title4;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
226956    +   finish:
226957    +      put '</LayoutOverlay>' CR;
226958    +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
226959    +      trigger EndGraph / if $level=0;
226960    +end;
MPRINT(EM_REPORT_CREATE):   end;
226961    +
226962    +define event LayoutRegion;
MPRINT(EM_REPORT_CREATE):   define event LayoutRegion;
226963    +   start:
226964    +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
226965    +      put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
226966    +      put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
226967    +      put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
226968    +      put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
226969    +      put '<LayoutRegion>' CR;
MPRINT(EM_REPORT_CREATE):   put '<LayoutRegion>' CR;
226970    +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title2;
226971    +      unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title3;
226972    +      unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title4;
226973    +      unset $title3;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutRegion>' CR;
226974    +      unset $title4;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
226975    +   finish:
226976    +      put '</LayoutRegion>' CR;
226977    +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
226978    +      trigger EndGraph / if $level=0;
226979    +end;
MPRINT(EM_REPORT_CREATE):   end;
226980    +
226981    +define event LayoutLattice;
MPRINT(EM_REPORT_CREATE):   define event LayoutLattice;
226982    +   start:
226983    +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
226984    +      put '<LayoutLattice';
MPRINT(EM_REPORT_CREATE):   put '<LayoutLattice';
226985    +      putq " rows=" $rows;
MPRINT(EM_REPORT_CREATE):   putq " rows=" $rows;
226986    +      putq " columns=" $columns;
MPRINT(EM_REPORT_CREATE):   putq " columns=" $columns;
226987    +      put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
226988    +      unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
226989    +      unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
226990    +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutLattice>' CR;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
226991    +   finish:
226992    +      put '</LayoutLattice>' CR;
226993    +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
226994    +      trigger EndGraph / if $level=0;
226995    +end;
MPRINT(EM_REPORT_CREATE):   end;
226996    +
226997    +define event LayoutGridded;
MPRINT(EM_REPORT_CREATE):   define event LayoutGridded;
226998    +   start:
226999    +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
227000    +      put '<LayoutGridded';
MPRINT(EM_REPORT_CREATE):   put '<LayoutGridded';
227001    +      putq " rows=" $rows;
MPRINT(EM_REPORT_CREATE):   putq " rows=" $rows;
227002    +      putq " columns=" $columns;
MPRINT(EM_REPORT_CREATE):   putq " columns=" $columns;
227003    +      put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
227004    +      unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
227005    +      unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
227006    +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutGridded>' CR;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
227007    +   finish:
227008    +      put '</LayoutGridded>' CR;
227009    +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
227010    +      trigger EndGraph / if $level=0;
227011    +end;
MPRINT(EM_REPORT_CREATE):   end;
227012    +
227013    +define event EndGraph;
MPRINT(EM_REPORT_CREATE):   define event EndGraph;
227014    +   put '</StatGraph>' CR;
MPRINT(EM_REPORT_CREATE):   put '</StatGraph>' CR;
227015    +   put '</View>' CR;
MPRINT(EM_REPORT_CREATE):   put '</View>' CR;
227016    +   put "</SASReport>" CR;
MPRINT(EM_REPORT_CREATE):   put "</SASReport>" CR;
227017    +   unset $graph_started;
MPRINT(EM_REPORT_CREATE):   unset $graph_started;
227018    +end;
MPRINT(EM_REPORT_CREATE):   end;
227019    +
227020    +define event ScatterPlot;
MPRINT(EM_REPORT_CREATE):   define event ScatterPlot;
227021    +   put '<ScatterPlot';
MPRINT(EM_REPORT_CREATE):   put '<ScatterPlot';
227022    +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
227023    +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
227024    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227025    +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
227026    +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
227027    +end;
MPRINT(EM_REPORT_CREATE):   end;
227028    +
227029    +define event SeriesPlot;
MPRINT(EM_REPORT_CREATE):   define event SeriesPlot;
227030    +   put '<SeriesPlot';
MPRINT(EM_REPORT_CREATE):   put '<SeriesPlot';
227031    +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
227032    +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
227033    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227034    +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
227035    +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
227036    +end;
MPRINT(EM_REPORT_CREATE):   end;
227037    +
227038    +define event BandPlot;
MPRINT(EM_REPORT_CREATE):   define event BandPlot;
227039    +   put '<BandPlot';
MPRINT(EM_REPORT_CREATE):   put '<BandPlot';
227040    +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
227041    +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
227042    +   put ' limitUpper="StatGraphDataIDX#' $limitupper '"' / if $limitupper;
MPRINT(EM_REPORT_CREATE):   put ' limitUpper="StatGraphDataIDX#' $limitupper '"' / if $limitupper;
227043    +   put ' limitLower="StatGraphDataIDX#' $limitlower '"' / if $limitlower;
MPRINT(EM_REPORT_CREATE):   put ' limitLower="StatGraphDataIDX#' $limitlower '"' / if $limitlower;
227044    +   putq " lineAttrs=" $style;
MPRINT(EM_REPORT_CREATE):   putq " lineAttrs=" $style;
227045    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227046    +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
227047    +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
227048    +end;
MPRINT(EM_REPORT_CREATE):   end;
227049    +
227050    +define event Pie;
MPRINT(EM_REPORT_CREATE):   define event Pie;
227051    +   put '<Pie';
MPRINT(EM_REPORT_CREATE):   put '<Pie';
227052    +   put ' category="StatGraphDataIDX#' $category '"' / if $category;
MPRINT(EM_REPORT_CREATE):   put ' category="StatGraphDataIDX#' $category '"' / if $category;
227053    +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
227054    +   putq " pieLabelComponents=" $pieLabelDisplay;
MPRINT(EM_REPORT_CREATE):   putq " pieLabelComponents=" $pieLabelDisplay;
227055    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227056    +   unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
227057    +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
227058    +end;
MPRINT(EM_REPORT_CREATE):   end;
227059    +
227060    +define event Bar;
MPRINT(EM_REPORT_CREATE):   define event Bar;
227061    +   put '<Bar';
MPRINT(EM_REPORT_CREATE):   put '<Bar';
227062    +   put ' category="StatGraphDataIDX#' $category '"' / if $category;
MPRINT(EM_REPORT_CREATE):   put ' category="StatGraphDataIDX#' $category '"' / if $category;
227063    +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
227064    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227065    +   unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
227066    +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
227067    +end;
MPRINT(EM_REPORT_CREATE):   end;
227068    +
227069    +define event Histogram;
MPRINT(EM_REPORT_CREATE):   define event Histogram;
227070    +   put '<Histogram';
MPRINT(EM_REPORT_CREATE):   put '<Histogram';
227071    +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
227072    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227073    +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
227074    +end;
MPRINT(EM_REPORT_CREATE):   end;
227075    +
227076    +define event DecisionTree;
MPRINT(EM_REPORT_CREATE):   define event DecisionTree;
227077    +   put '<DecisionTree';
MPRINT(EM_REPORT_CREATE):   put '<DecisionTree';
227078    +   put ' id="StatGraphDataIDX#' $id '"' / if $id;
MPRINT(EM_REPORT_CREATE):   put ' id="StatGraphDataIDX#' $id '"' / if $id;
227079    +   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
MPRINT(EM_REPORT_CREATE):   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
227080    +   put ' aboveText="StatGraphDataIDX#' $abovetext '"' / if $abovetext;
MPRINT(EM_REPORT_CREATE):   put ' aboveText="StatGraphDataIDX#' $abovetext '"' / if $abovetext;
227081    +   put ' belowText="StatGraphDataIDX#' $belowtext '"' / if $belowtext;
MPRINT(EM_REPORT_CREATE):   put ' belowText="StatGraphDataIDX#' $belowtext '"' / if $belowtext;
227082    +   put ' linkWidth="StatGraphDataIDX#' $linkwidth '"' / if $linkwidth;
MPRINT(EM_REPORT_CREATE):   put ' linkWidth="StatGraphDataIDX#' $linkwidth '"' / if $linkwidth;
227083    +   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
MPRINT(EM_REPORT_CREATE):   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
227084    +   put ' nodeText="StatGraphDataIDX#' $nodetext '"' / if $nodetext;
MPRINT(EM_REPORT_CREATE):   put ' nodeText="StatGraphDataIDX#' $nodetext '"' / if $nodetext;
227085    +   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
MPRINT(EM_REPORT_CREATE):   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
227086    +   put ' fitToRegion="true"';
MPRINT(EM_REPORT_CREATE):   put ' fitToRegion="true"';
227087    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227088    +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
227089    +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
227090    +   unset $abovetext;
MPRINT(EM_REPORT_CREATE):   unset $abovetext;
227091    +   unset $belowtext;
MPRINT(EM_REPORT_CREATE):   unset $belowtext;
227092    +   unset $linkwidth;
MPRINT(EM_REPORT_CREATE):   unset $linkwidth;
227093    +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
227094    +   unset $nodetext;
MPRINT(EM_REPORT_CREATE):   unset $nodetext;
227095    +end;
MPRINT(EM_REPORT_CREATE):   end;
227096    +
227097    +define event Icicle;
MPRINT(EM_REPORT_CREATE):   define event Icicle;
227098    +   put '<Icicle';
MPRINT(EM_REPORT_CREATE):   put '<Icicle';
227099    +   put ' id="StatGraphDataIDX#' $id '"' / if $id;
MPRINT(EM_REPORT_CREATE):   put ' id="StatGraphDataIDX#' $id '"' / if $id;
227100    +   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
MPRINT(EM_REPORT_CREATE):   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
227101    +   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
MPRINT(EM_REPORT_CREATE):   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
227102    +   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
MPRINT(EM_REPORT_CREATE):   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
227103    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227104    +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
227105    +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
227106    +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
227107    +   unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
227108    +end;
MPRINT(EM_REPORT_CREATE):   end;
227109    +
227110    +define event PFD;
MPRINT(EM_REPORT_CREATE):   define event PFD;
227111    +   put '<PFD';
MPRINT(EM_REPORT_CREATE):   put '<PFD';
227112    +   putq " id=" $id / if $id;
MPRINT(EM_REPORT_CREATE):   putq " id=" $id / if $id;
227113    +   put ' pfditems="StatGraphDataIDX#' $pfdItems '"' / if $pfdItems;
MPRINT(EM_REPORT_CREATE):   put ' pfditems="StatGraphDataIDX#' $pfdItems '"' / if $pfdItems;
227114    +   putq " isGridVisible=" $isgridvisible / if $isgridvisible;
MPRINT(EM_REPORT_CREATE):   putq " isGridVisible=" $isgridvisible / if $isgridvisible;
227115    +   putq " gridHeight=" $gridheight / if $gridheight;
MPRINT(EM_REPORT_CREATE):   putq " gridHeight=" $gridheight / if $gridheight;
227116    +   putq " gridWidth=" $gridwidth / if $gridwidth;
MPRINT(EM_REPORT_CREATE):   putq " gridWidth=" $gridwidth / if $gridwidth;
227117    +   putq " gridStyle=" $gridstyle / if $gridstyle;
MPRINT(EM_REPORT_CREATE):   putq " gridStyle=" $gridstyle / if $gridstyle;
227118    +   putq " layoutActivated=" $layoutActivated / if $layoutActivated;
MPRINT(EM_REPORT_CREATE):   putq " layoutActivated=" $layoutActivated / if $layoutActivated;
227119    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227120    +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
227121    +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
227122    +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
227123    +   unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
227124    +end;
MPRINT(EM_REPORT_CREATE):   end;
227125    +
227126    +define event HeatMap;
MPRINT(EM_REPORT_CREATE):   define event HeatMap;
227127    +   trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   trigger BeginGraph / if !$graph_started;
227128    +   put '<HeatmapClassic';
MPRINT(EM_REPORT_CREATE):   put '<HeatmapClassic';
227129    +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
227130    +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
227131    +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
227132    +   putq ' colorList=' $colorlist / if $colorlist;
MPRINT(EM_REPORT_CREATE):   putq ' colorList=' $colorlist / if $colorlist;
227133    +   putq ' colorIndex=' $colorindex / if $colorindex;
MPRINT(EM_REPORT_CREATE):   putq ' colorIndex=' $colorindex / if $colorindex;
227134    +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
227135    +   trigger EndGraph / if $level=0;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
227136    +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $response;
227137    +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $colorlist;
227138    +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $colorindex;
227139    +   unset $colorlist;
227140    +   unset $colorindex;
227141    +end;
MPRINT(EM_REPORT_CREATE):   end;
227142    +
227143    +end;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: TAGSET 'Tagsets.Gtl' has been saved to: WORK.TEMPLAT
227144    +run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_CREATE):   run;
227145    +
227146    +
227147    +
227148    +
227149    +
227150    +
227151    +/* data_template.sas */
227152    +proc template;
MPRINT(EM_REPORT_CREATE):   proc template;
227153    +define statgraph dataonly / store=work.templat;
MPRINT(EM_REPORT_CREATE):   define statgraph dataonly / store=work.templat;
227154    +dynamic dummy1 dummy2 var1 var2 var3 var4 var5 var6 var7 var8 var9 var10;
MPRINT(EM_REPORT_CREATE):   dynamic dummy1 dummy2 var1 var2 var3 var4 var5 var6 var7 var8 var9 var10;
227155    +begingraph;
MPRINT(EM_REPORT_CREATE):   begingraph;
227156    +if (0)
227157    +layout overlay;
MPRINT(EM_REPORT_CREATE):   if (0) layout overlay;
227158    +   scatterplot x=dummy1 y=dummy2 /
227159    +      rolename=(a=var1 b=var2 c=var3 d=var4 e=var5 f=var6 g=var7 h=var8 i=var9 j=var10);
MPRINT(EM_REPORT_CREATE):   scatterplot x=dummy1 y=dummy2 / rolename=(a=var1 b=var2 c=var3 d=var4 e=var5 f=var6 g=var7 h=var8 i=var9 j=var10);
227160    +endlayout;
MPRINT(EM_REPORT_CREATE):   endlayout;
227161    +endif;
MPRINT(EM_REPORT_CREATE):   endif;
227162    +endgraph;
MPRINT(EM_REPORT_CREATE):   endgraph;
227163    +end;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: STATGRAPH 'Dataonly' has been saved to: WORK.TEMPLAT
227164    +run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_CREATE):   run;
227165    +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Report")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REPORT';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_CREATE):   ;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   length KEY $32 TYPE $10 FILE $200 FOLDER $32 EXTENSION $8 AUTODELETE $1 property $1 action $8 cas $1;
MPRINT(EM_REGISTER):   key = upcase("REPORT");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "REPORT";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "pdf";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   run;
 
NOTE: The data set WORK.EM_USER_KEY has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_PATH):   proc display c=sashelp.emutil.path.scl;
MPRINT(EM_PATH):   run;
 
227166     data emreportpath;
MPRINT(EM_PATH):   data emreportpath;
227167     length nodelabel $32 component $32;
MPRINT(EM_PATH):   length nodelabel $32 component $32;
227168     nodelabel="Ids3";
MPRINT(EM_PATH):   nodelabel="Ids3";
227169     component="DataSource";
MPRINT(EM_PATH):   component="DataSource";
227170     output;
MPRINT(EM_PATH):   output;
227171     nodelabel="Part";
MPRINT(EM_PATH):   nodelabel="Part";
227172     component="Partition";
MPRINT(EM_PATH):   component="Partition";
227173     output;
MPRINT(EM_PATH):   output;
227174     nodelabel="Reg";
MPRINT(EM_PATH):   nodelabel="Reg";
227175     component="Regression";
MPRINT(EM_PATH):   component="Regression";
227176     output;
MPRINT(EM_PATH):   output;
227177     nodelabel="Reg2";
MPRINT(EM_PATH):   nodelabel="Reg2";
227178     component="Regression";
MPRINT(EM_PATH):   component="Regression";
227179     output;
MPRINT(EM_PATH):   output;
227180     nodelabel="Reg3";
MPRINT(EM_PATH):   nodelabel="Reg3";
227181     component="Regression";
MPRINT(EM_PATH):   component="Regression";
227182     output;
MPRINT(EM_PATH):   output;
227183     nodelabel="Reg4";
MPRINT(EM_PATH):   nodelabel="Reg4";
227184     component="Regression";
MPRINT(EM_PATH):   component="Regression";
227185     output;
MPRINT(EM_PATH):   output;
227186     nodelabel="Tree";
MPRINT(EM_PATH):   nodelabel="Tree";
227187     component="DecisionTree";
MPRINT(EM_PATH):   component="DecisionTree";
227188     output;
MPRINT(EM_PATH):   output;
227189     nodelabel="Tree2";
MPRINT(EM_PATH):   nodelabel="Tree2";
227190     component="DecisionTree";
MPRINT(EM_PATH):   component="DecisionTree";
227191     output;
MPRINT(EM_PATH):   output;
227192     nodelabel="Tree3";
MPRINT(EM_PATH):   nodelabel="Tree3";
227193     component="DecisionTree";
MPRINT(EM_PATH):   component="DecisionTree";
227194     output;
MPRINT(EM_PATH):   output;
227195     nodelabel="Tree4";
MPRINT(EM_PATH):   nodelabel="Tree4";
227196     component="DecisionTree";
MPRINT(EM_PATH):   component="DecisionTree";
227197     output;
MPRINT(EM_PATH):   output;
227198     nodelabel="MdlComp2";
MPRINT(EM_PATH):   nodelabel="MdlComp2";
227199     component="ModelCompare";
MPRINT(EM_PATH):   component="ModelCompare";
227200     output;
MPRINT(EM_PATH):   output;
227201     nodelabel="MdlComp";
MPRINT(EM_PATH):   nodelabel="MdlComp";
227202     component="ModelCompare";
MPRINT(EM_PATH):   component="ModelCompare";
227203     output;
MPRINT(EM_PATH):   output;
227204     nodelabel="Ids4";
MPRINT(EM_PATH):   nodelabel="Ids4";
227205     component="DataSource";
MPRINT(EM_PATH):   component="DataSource";
227206     output;
MPRINT(EM_PATH):   output;
227207     nodelabel="MdlComp3";
MPRINT(EM_PATH):   nodelabel="MdlComp3";
227208     component="ModelCompare";
MPRINT(EM_PATH):   component="ModelCompare";
227209     output;
MPRINT(EM_PATH):   output;
227210     nodelabel="Score";
MPRINT(EM_PATH):   nodelabel="Score";
227211     component="Score";
MPRINT(EM_PATH):   component="Score";
227212     output;
MPRINT(EM_PATH):   output;
227213     run;
MPRINT(EM_PATH):   run;
 
NOTE: The data set WORK.EMREPORTPATH has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.22 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_PATH):
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   data emreportpath;
MPRINT(EM_REPORT_CREATE):   set emreportpath;
MPRINT(EM_REPORT_CREATE):   rename nodelabel=nodeid;
MPRINT(EM_REPORT_CREATE):   nodeIndex = _n_;
MPRINT(EM_REPORT_CREATE):   run;
 
NOTE: There were 15 observations read from the data set WORK.EMREPORTPATH.
NOTE: The data set WORK.EMREPORTPATH has 15 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_CREATE):   *** create new style template to address fonts in ods text;
MPRINT(EM_REPORT_CREATE):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_CREATE):   proc template ;
MPRINT(EM_REPORT_CREATE):   define style styles.em_style / store=work.templat;
MPRINT(EM_REPORT_CREATE):   parent= styles.LISTING;
MPRINT(EM_REPORT_CREATE):   style usertext from usertext / foreground=black font_size=10 pt font_face="Arial" font_weight=bold ;
MPRINT(EM_REPORT_CREATE):   style systemtitle from systemtitle / color=colors("systitlefg") backgroundcolor=colors("systitlebg") fontsize=10 pt font_face="Arial" font_weight=bold ;
MPRINT(EM_REPORT_CREATE):   style systemfooter from systemfooter / color=colors("systitlefg") backgroundcolor=colors("systitlebg") font_face="Arial" ;
MPRINT(EM_REPORT_CREATE):   style GraphFonts from GraphFonts / 'GraphTitleFont' = ("Arial", 10 pt) 'GraphTitle1Font' = ("Arial", 10 pt) 'GraphLabelFont' = ("Arial", 8 pt) 'GraphFootnoteFont' = ("Arial", 6 pt) 'GraphValueFont' = ("Arial", 6 pt)
'GraphDataFont' = ("Arial", 6 pt) ;
MPRINT(EM_REPORT_CREATE):   style Fonts from Fonts/ 'TitleFont' = ("Arial", 10 pt) 'TitleFont2' = ("Arial", 10 pt) 'StrongFont' = ("Arial", 6 pt) 'EmphasisFont' = ("Arial", 6 pt) 'headingFont' = ("Arial", 6 pt) 'headingEmphasisFont' = ("Arial", 6 pt)
'FixedEmphasisFont' = ("Arial", 6 pt) 'FixedStrongFont' = ("Arial", 6 pt) 'FixedHeadingFont' = ("Arial", 6 pt) 'FixedFont' = ("Arial", 6 pt) 'BatchFixedFont' = ("Arial", 6 pt) 'docFont' = ("Arial", 6 pt) ;
MPRINT(EM_REPORT_CREATE):   style GraphTitleText from GraphTitleText / font_face="Arial";
MPRINT(EM_REPORT_CREATE):   style data from data / font_size=6 pt;
MPRINT(EM_REPORT_CREATE):   style header from header / font_size=8 pt;
MPRINT(EM_REPORT_CREATE):   style rowheader from header;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: STYLE 'Styles.Em_style' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_CREATE):   run;
MPRINT(EM_REPORT_CREATE):   quit;
MPRINT(EM_REPORT_CREATE):   *** options for page layout;
MPRINT(EM_REPORT_CREATE):   options nodate nocenter number ls=97 ;
MPRINT(EM_REPORT_CREATE):   *** get file name;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   *** turn off LISTING and turn on the specified destination;
MPRINT(EM_REPORT_CREATE):   ods listing close;
MPRINT(EM_REPORT_CREATE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_CREATE):   ods PDF file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS
EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\REPORT.pdf" style=styles.em_style
startpage=NO uniform NOTOC ;
NOTE: Writing ODS PDF output to DISK destination
      "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\REPORT.pdf", printer "PDF".
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this
      session.
MPRINT(EM_REPORT_CREATE):   *** titles and footnotes;
MPRINT(EM_REPORT_CREATE):   ods PDF text=" ";
MPRINT(EM_REPORT_CREATE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   ods proclabel "Report Information";
MPRINT(EM_REPORT_CREATE):   data _null_;
MPRINT(EM_REPORT_CREATE):   call symput('report_date', strip(put(date(), NLDATE.)));
MPRINT(EM_REPORT_CREATE):   call symput('report_time', strip(put(datetime(), NLTIME.)));
MPRINT(EM_REPORT_CREATE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_CREATE):   data _null_;
MPRINT(EM_REPORT_CREATE):   file print ;
MPRINT(EM_REPORT_CREATE):   put "User       = shre2" ;
MPRINT(EM_REPORT_CREATE):   put "Date       = 01:50:07  March 04" ;
MPRINT(EM_REPORT_CREATE):   put "Project    = SV.PredictiveAnalysis " ;
MPRINT(EM_REPORT_CREATE):   put "Diagram    = SV.Prediction" / ;
MPRINT(EM_REPORT_CREATE):   put "Start Node = Report";
MPRINT(EM_REPORT_CREATE):   put "Node label = Reporter" ;
MPRINT(EM_REPORT_CREATE):   put "Nodes      = PATH" ;
MPRINT(EM_REPORT_CREATE):   put "Showall    = N" /;
MPRINT(EM_REPORT_CREATE):   put "Format     = PDF" ;
MPRINT(EM_REPORT_CREATE):   put "Style      = LISTING" /;
MPRINT(EM_REPORT_CREATE):   run ;
 
NOTE: 10 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   set WORK.EM_USER_KEY end=eof;
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   if eof then do;
MPRINT(EM_REGISTER):   key = upcase("PFD");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "PFD";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "xml";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   cas = "N";
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   end;
MPRINT(EM_REGISTER):   run;
 
NOTE: There were 1 observations read from the data set WORK.EM_USER_KEY.
NOTE: The data set WORK.EM_USER_KEY has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_WORKSPACE_XML):  ;
MPRINT(EM_REPORT_WORKSPACE_XML):  ;
MPRINT(EM_REPORT_WORKSPACE_XML):   filename x
"\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\PFD.xml" encoding="utf-8" NOBOM;
MPRINT(EM_REPORT_WORKSPACE_XML):   data _null_;
MPRINT(EM_REPORT_WORKSPACE_XML):   file x;
MPRINT(EM_REPORT_WORKSPACE_XML):   set EMWS2.EM_NODEID;
MPRINT(EM_REPORT_WORKSPACE_XML):   length string $400;
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "&", "&amp;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "<", "&lt;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, ">", "&gt;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "'", "&#39;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, '"', '&quot;');
MPRINT(EM_REPORT_WORKSPACE_XML):   string = cats('<PFDNode x="',X,'" y="',Y,'" id="',NODEID,'"
title="',LABEL,'"></PFDNode>');
MPRINT(EM_REPORT_WORKSPACE_XML):   put string;
MPRINT(EM_REPORT_WORKSPACE_XML):   run;
 
NOTE: The file X is:
 
      Filename=\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\PFD.xml,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=04Mar2024:01:50:07,
      Create Time=04Mar2024:01:50:07
 
NOTE: 17 records were written to the file X.
      The minimum record length was 61.
      The maximum record length was 83.
NOTE: There were 17 observations read from the data set EMWS2.EM_NODEID.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_WORKSPACE_XML):   data _null_;
MPRINT(EM_REPORT_WORKSPACE_XML):   file x mod;
MPRINT(EM_REPORT_WORKSPACE_XML):   set EMWS2.EM_DGRAPH(where=(TO ne ""));
MPRINT(EM_REPORT_WORKSPACE_XML):   length string $400;
MPRINT(EM_REPORT_WORKSPACE_XML):   string = cats("<PFDLink id='",_N_,"' fromId='",FROM,"'
toId='",TO,"'></PFDLink>");
MPRINT(EM_REPORT_WORKSPACE_XML):   put string;
MPRINT(EM_REPORT_WORKSPACE_XML):   run;
 
NOTE: The file X is:
 
      Filename=\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\PFD.xml,
      RECFM=V,LRECL=131068,File Size (bytes)=1245,
      Last Modified=04Mar2024:01:50:07,
      Create Time=04Mar2024:01:50:07
 
NOTE: 23 records were written to the file X.
      The minimum record length was 51.
      The maximum record length was 61.
NOTE: There were 23 observations read from the data set EMWS2.EM_DGRAPH.
      WHERE TO not = ' ';
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_WORKSPACE_XML):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_MAKEDS):   data xmldata(keep=PFDItemList);
MPRINT(EM_REPORT_MAKEDS):   infile xmlref recfm=v lrecl=83 length=len;
MPRINT(EM_REPORT_MAKEDS):   length PFDItemList $256;
MPRINT(EM_REPORT_MAKEDS):   input record $varying5000. len;
MPRINT(EM_REPORT_MAKEDS):   recordNum+1;
MPRINT(EM_REPORT_MAKEDS):   do start=1 to len by 256 ;
MPRINT(EM_REPORT_MAKEDS):   end=start+256;
MPRINT(EM_REPORT_MAKEDS):   *put recordNum= start= end=;
MPRINT(EM_REPORT_MAKEDS):   PFDItemList=substr(record,start,end);
MPRINT(EM_REPORT_MAKEDS):   output;
MPRINT(EM_REPORT_MAKEDS):   end;
MPRINT(EM_REPORT_MAKEDS):   run;
 
NOTE: The infile XMLREF is:
 
      Filename=\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\PFD.xml,
      RECFM=V,LRECL=332,File Size (bytes)=2560,
      Last Modified=04Mar2024:01:50:07,
      Create Time=04Mar2024:01:50:07
 
NOTE: 40 records were read from the infile XMLREF.
      The minimum record length was 51.
      The maximum record length was 83.
NOTE: The data set WORK.XMLDATA has 40 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   data temp;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   set EMWS2.EM_NODEID;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   if X = -1 AND Y= - 1 then delete;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.EM_NODEID.
NOTE: The data set WORK.TEMP has 17 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title1;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title2;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title3;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_WORKSPACE_RENDER):   proc sgrender data=work.xmldata template=dataonly;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   dynamic var1="PFDItemList";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 40 observations read from the data set WORK.XMLDATA.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.34 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=LayoutRegion(start) options(title
="SAS Enterprise Miner Report" title2="Process Flow Diagram");
BeginGraph
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=PFD options(pfditems="PFDItemList"
id="pfdView1");
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl close;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods PDF select ALL ;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods proclabel = "Process Flow Diagram";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           5.82 seconds
      cpu time            0.54 seconds
 
 
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title1;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title2;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title3;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   proc sql noprint;
MPRINT(EM_REPORT_CREATE):   select count(*) into :EM_REPORT_NODENUM from emreportpath where
nodeID ne " ";
MPRINT(EM_REPORT_CREATE):   select strip(nodeID) into :EM_REPORT_NODELIST separated by ' ' from
emreportpath where nodeID ne " " order by nodeIndex;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT
      clause.
MPRINT(EM_REPORT_CREATE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Ids3")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='IDS3';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
227214     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
227215     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
227215   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
227215   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
227216     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
227217     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
227218     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
227219     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
227220     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227221     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227222     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
227223     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227224     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227225     output;
MPRINT(EM_GETTRAINPATH):   output;
227226     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Ids3"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=CLEANZETADIABETES_TRAIN";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Ids3";
MPRINT(EM_REPORT_NODE):   put "Node label = CLEANZETADIABETES_TRAIN";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Ids3\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
227227     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227228     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227229     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227229   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
227229   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
227230     Name = 'DataSource';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSource';
227231     Value = "%nrbquote(cleanzetadiabetestrain)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "cleanzetadiabetestrain";
227232     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227233     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227234     Name = 'Scope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Scope';
227235     Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
227236     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227237     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227238     Name = 'Role';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Role';
227239     Value = "%nrbquote(RAW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RAW";
227240     Default = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TRAIN";
227241     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227242     Name = 'Library';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Library';
227243     Value = "%nrbquote(ZETADATA)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADATA";
227244     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227245     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227246     Name = 'Table';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Table';
227247     Value = "%nrbquote(CLEANZETADIABETES_TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CLEANZETADIABETES_TRAIN";
227248     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227249     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227250     Name = 'NCols';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NCols';
227251     Value = "%nrbquote(22)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "22";
227252     Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
227253     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227254     Name = 'NObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NObs';
227255     Value = "%nrbquote(200572)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "200572";
227256     Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
227257     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227258     Name = 'NBytes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NBytes';
227259     Value = "%nrbquote(37094400)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "37094400";
227260     Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
227261     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227262     Name = 'Segment';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Segment';
227263     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227264     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227265     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227266     Name = 'DataSourceRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSourceRole';
227267     Value = "%nrbquote(RAW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RAW";
227268     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227269     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227270     Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
227271     Value = "%nrbquote(VIEW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VIEW";
227272     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227273     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227274     Name = 'ComputeStatistics';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ComputeStatistics';
227275     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227276     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227277     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227278     Name = 'DataSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSelection';
227279     Value = "%nrbquote(DATASOURCE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATASOURCE";
227280     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227281     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227282     Name = 'NewTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewTable';
227283     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227284     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227285     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227286     Name = 'MetaAdvisor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MetaAdvisor';
227287     Value = "%nrbquote(BASIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BASIC";
227288     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227289     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227290     Name = 'ApplyIntervalLevelLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyIntervalLevelLowerLimit';
227291     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227292     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227293     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227294     Name = 'IntervalLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalLowerLimit';
227295     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
227296     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227297     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227298     Name = 'ApplyMaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxPercentMissing';
227299     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227300     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227301     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227302     Name = 'MaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxPercentMissing';
227303     Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
227304     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227305     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227306     Name = 'ApplyMaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxClassLevels';
227307     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227308     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227309     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227310     Name = 'MaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxClassLevels';
227311     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
227312     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227313     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227314     Name = 'IdentifyEmptyColumns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IdentifyEmptyColumns';
227315     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227316     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227317     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227318     Name = 'VariableValidation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VariableValidation';
227319     Value = "%nrbquote(STRICT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STRICT";
227320     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227321     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227322     Name = 'NewVariableRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewVariableRole';
227323     Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
227324     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227325     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227326     Name = 'DropMapVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DropMapVariables';
227327     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227328     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227329     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227330     Name = 'DsId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsId';
227331     Value = "%nrbquote(cleanzetadiabetestrain)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "cleanzetadiabetestrain";
227332     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227333     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227334     Name = 'DsSampleName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleName';
227335     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227336     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227337     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227338     Name = 'DsSampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSizeType';
227339     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227340     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227341     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227342     Name = 'DsSampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSize';
227343     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227344     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227345     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227346     Name = 'DsCreatedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreatedBy';
227347     Value = "%nrbquote(shre2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "shre2";
227348     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227349     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227350     Name = 'DsCreateDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreateDate';
227351     Value = "%nrbquote(2025129977.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2025129977.5";
227352     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227353     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227354     Name = 'DsModifiedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifiedBy';
227355     Value = "%nrbquote(shre2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "shre2";
227356     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227357     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227358     Name = 'DsModifyDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifyDate';
227359     Value = "%nrbquote(2025129977.8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2025129977.8";
227360     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227361     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227362     Name = 'DsScope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsScope';
227363     Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
227364     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227365     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227366     Name = 'Sample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sample';
227367     Value = "%nrbquote(D)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "D";
227368     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227369     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227370     Name = 'SampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeType';
227371     Value = "%nrbquote(PERCENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENT";
227372     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227373     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227374     Name = 'SampleSizePercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizePercent';
227375     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
227376     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227377     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227378     Name = 'SampleSizeObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeObs';
227379     Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
227380     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227381     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227382     Name = 'DBPassThrough';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DBPassThrough';
227383     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227384     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227385     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227386     Name = 'Description';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Description';
227387     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227388     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227389     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227390     Name = 'Data';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Data';
227391     Value = "%nrbquote(ZETADATA.CLEANZETADIABETES_TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADATA.CLEANZETADIABETES_TRAIN";
227392     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227393     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227394     Name = 'CMeta';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CMeta';
227395     Value = "%nrbquote(WORK.M12BVFD5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "WORK.M12BVFD5";
227396     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227397     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227398     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
227399     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
227400     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
227401     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227402     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
227403     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227404     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227404   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
227405     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
227406     Value = "DataSource";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DataSource";
227407     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
227408     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
227409     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227410     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
227411     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 43 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.34 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.46 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=CLEANZETADIABETES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=CLEANZETADIABETES_TRAIN Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 28 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 28 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 43 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 14 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.22 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc transpose data=EMWS2.Ids3_EMTMETADEFAULT out=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   var _all_;
MPRINT(EM_REPORT_DATASOURCE):   format crdate NLDATM24.0 modate NLDATM24.0;
MPRINT(EM_REPORT_DATASOURCE):   run;
 
NOTE: Numeric variables in the input data set will be converted to character in the output data
      set.
NOTE: There were 1 observations read from the data set EMWS2.IDS3_EMTMETADEFAULT.
NOTE: The data set WORK.TEMP_SOURCE has 15 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_DATASOURCE):   data temp_source;
MPRINT(EM_REPORT_DATASOURCE):   set temp_source;
MPRINT(EM_REPORT_DATASOURCE):   rename col1 = value;
MPRINT(EM_REPORT_DATASOURCE):   col1 = right(col1);
MPRINT(EM_REPORT_DATASOURCE):   format label $64.;
MPRINT(EM_REPORT_DATASOURCE):   label col1 = "Value" label = "Attribute" ;
MPRINT(EM_REPORT_DATASOURCE):   *** get the localized label column;
MPRINT(EM_REPORT_DATASOURCE):   _name_=upcase(_name_) ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMNAME" then label="Data Name" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMTYPE" then label="Data Type" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMLABEL" then label="Data Label" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "TYPEMEM" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ENGINE" then label="Engine" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "CRDATE" then label="Date Created" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MODATE" then label="Date Modified" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NOBS" then label="Number Rows" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NCOLS" then label="Number Columns" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NBYTES" then label="Data Size" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ROLE" then label="Role" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "USEEXTERNALDATA" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SAMPLINGRATE" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SEGMENT" then label="Segment" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "LIBNAME" then label="Data Library" ;
MPRINT(EM_REPORT_DATASOURCE):   run;
 
NOTE: There were 15 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK.TEMP_SOURCE has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=CLEANZETADIABETES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Data Attributes";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=CLEANZETADIABETES_TRAIN Data Attributes";
MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=temp_source
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "LABEL" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( LABEL=LABEL1 VALUE=VALUE1))
_tmpms_dat2(rename=( LABEL=LABEL2 VALUE=VALUE2)) _tmpms_dat3(rename=( LABEL=LABEL3
VALUE=VALUE3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set temp_source;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep LABEL VALUE numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 4 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 4 and _n_ le 8 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 8 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 12 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var LABEL1 VALUE1 LABEL2 VALUE2 LABEL3 VALUE3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc delete data=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   run;
 
NOTE: Deleting WORK.TEMP_SOURCE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_DATASOURCE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Ids3_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Ids3_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.IDS3_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=EMWS2.Ids3_variableset out=_tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;
 
NOTE: There were 22 observations read from the data set EMWS2.IDS3_VARIABLESET.
NOTE: The data set WORK._TMPVL_VS has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   update _tmpvl_pdv _tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   label type = "Type" format = "Format" creator = "Creator" family =
"Family" label = "Label" ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: There were 22 observations read from the data set WORK._TMPVL_VS.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=CLEANZETADIABETES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variables List";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=CLEANZETADIABETES_TRAIN Variables List";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pdv noobs label contents='';
MPRINT(EM_REPORT_VARS):   var name label role level type length format creator;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Ids3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Ids3_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey6
MPRINT(EM_REPORT_NODE):   from EMWS2.Ids3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids3_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS3_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==10 : Viewtype = DATA EMSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Part")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='PART';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
227412     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
227413     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
227413   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
227413   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
227414     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
227415     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
227416     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
227417     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
227418     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227419     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227420     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
227421     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227422     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227423     output;
MPRINT(EM_GETTRAINPATH):   output;
227424     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
227425     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
227426     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
227427     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
227428     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227429     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227430     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
227431     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227432     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227433     output;
MPRINT(EM_GETTRAINPATH):   output;
227434     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Part"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Data Partition";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Part";
MPRINT(EM_REPORT_NODE):   put "Node label = Data Partition";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Part\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
227435     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227436     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227437     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227437   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
227437   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
227438     Name = 'Method';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Method';
227439     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
227440     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227441     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227442     Name = 'TrainPct';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainPct';
227443     Value = "%nrbquote(40)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "40";
227444     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227445     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227446     Name = 'ValidatePct';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ValidatePct';
227447     Value = "%nrbquote(30)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "30";
227448     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227449     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227450     Name = 'TestPct';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TestPct';
227451     Value = "%nrbquote(30)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "30";
227452     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227453     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227454     Name = 'RandomSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandomSeed';
227455     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
227456     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227457     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227458     Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
227459     Value = "%nrbquote(DATA)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATA";
227460     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227461     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227462     Name = 'IntervalDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalDistribution';
227463     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227464     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227465     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227466     Name = 'ClassDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassDistribution';
227467     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227468     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227469     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227470     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
227471     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
227472     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
227473     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 8 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 8 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
227474     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
227475     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227476     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227476   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
227477     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
227478     Value = "Partition";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Partition";
227479     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
227480     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
227481     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227482     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
227483     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 8 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Data Partition";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Data Partition Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 3 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-3*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 3 and _n_ le 6 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-3*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 6 and _n_ le 9 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-3*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 3 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 3 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 3 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Part_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Part_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.PART_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Data Partition";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Data Partition Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Part_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Part" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.PART_CMETA_TRAIN.
      WHERE UPCASE(creator)='Part';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
NOTE: Deleting WORK._TMPVL_VS (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Part_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Part_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey11
MPRINT(EM_REPORT_NODE):   from EMWS2.Part_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA INTRVLSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Part_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.PART_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = LATTICE CLASSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Reg")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REG';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
227484     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
227485     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
227485   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
227485   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
227486     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
227487     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
227488     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
227489     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
227490     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227491     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227492     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
227493     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227494     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227495     output;
MPRINT(EM_GETTRAINPATH):   output;
227496     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
227497     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
227498     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
227499     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
227500     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227501     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227502     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
227503     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227504     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227505     output;
MPRINT(EM_GETTRAINPATH):   output;
227506     nodelabel="Reg";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg";
227507     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
227508     description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
227509     component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
227510     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
227511     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227512     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
227513     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227514     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227515     output;
MPRINT(EM_GETTRAINPATH):   output;
227516     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Reg"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Exhaustive Regression";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Reg";
MPRINT(EM_REPORT_NODE):   put "Node label = Exhaustive Regression";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Reg";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
227517     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227518     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227519     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227519   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
227519   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
227520     Name = 'MainEffect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MainEffect';
227521     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227522     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227523     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227524     Name = 'TwoFactor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TwoFactor';
227525     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227526     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227527     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227528     Name = 'Polynomial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Polynomial';
227529     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227530     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227531     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227532     Name = 'PolynomialDegree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PolynomialDegree';
227533     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
227534     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227535     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227536     Name = 'Terms';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Terms';
227537     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227538     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227539     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227540     Name = 'Error';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Error';
227541     Value = "%nrbquote(LOGISTIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGISTIC";
227542     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227543     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227544     Name = 'LinkFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LinkFunction';
227545     Value = "%nrbquote(LOGIT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGIT";
227546     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227547     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227548     Name = 'SuppressIntercept';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressIntercept';
227549     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227550     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227551     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227552     Name = 'InputCoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputCoding';
227553     Value = "%nrbquote(DEVIATION)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEVIATION";
227554     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227555     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227556     Name = 'MinResourceUse';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinResourceUse';
227557     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227558     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227559     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227560     Name = 'ModelSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelection';
227561     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
227562     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227563     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227564     Name = 'SelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriterion';
227565     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
227566     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227567     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227568     Name = 'SelectionDefault';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDefault';
227569     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227570     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227571     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227572     Name = 'Sequential';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sequential';
227573     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227574     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227575     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227576     Name = 'SlEntry';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlEntry';
227577     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
227578     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227579     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227580     Name = 'SlStay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlStay';
227581     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
227582     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227583     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227584     Name = 'Start';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Start';
227585     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227586     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227587     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227588     Name = 'Stop';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stop';
227589     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227590     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227591     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227592     Name = 'Force';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Force';
227593     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227594     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227595     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227596     Name = 'Hierarchy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hierarchy';
227597     Value = "%nrbquote(CLASS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CLASS";
227598     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227599     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227600     Name = 'Rule';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Rule';
227601     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
227602     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227603     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227604     Name = 'MaxStep';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxStep';
227605     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
227606     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227607     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227608     Name = 'StepOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StepOutput';
227609     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227610     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227611     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227612     Name = 'OptimizationTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OptimizationTechnique';
227613     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
227614     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227615     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227616     Name = 'ModelDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDefaults';
227617     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227618     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227619     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227620     Name = 'MaxIterations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIterations';
227621     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
227622     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227623     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227624     Name = 'MaxFunctionCalls';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxFunctionCalls';
227625     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
227626     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227627     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227628     Name = 'MaxCPUTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxCPUTime';
227629     Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
227630     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227631     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227632     Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
227633     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227634     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227635     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227636     Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
227637     Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
227638     Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
227639     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227640     Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
227641     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227642     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227643     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227644     Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
227645     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227646     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227647     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227648     Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
227649     Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
227650     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227651     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227652     Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
227653     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227654     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227655     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227656     Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
227657     Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
227658     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227659     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227660     Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
227661     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227662     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227663     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227664     Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
227665     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227666     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227667     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227668     Name = 'FConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTimes';
227669     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227670     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227671     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227672     Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
227673     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
227674     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227675     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227676     Name = 'GConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTimes';
227677     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227678     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227679     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227680     Name = 'ClParm';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClParm';
227681     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227682     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227683     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227684     Name = 'Covout';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Covout';
227685     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227686     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227687     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227688     Name = 'CovB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CovB';
227689     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227690     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227691     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227692     Name = 'CorB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CorB';
227693     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227694     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227695     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227696     Name = 'Simple';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Simple';
227697     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227698     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227699     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227700     Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
227701     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227702     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227703     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227704     Name = 'Details';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Details';
227705     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227706     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227707     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227708     Name = 'PrintDesignMatrix';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrintDesignMatrix';
227709     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227710     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227711     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227712     Name = 'SASSPDS';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SASSPDS';
227713     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227714     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227715     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227716     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
227717     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227718     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227719     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227720     Name = 'ExcludedVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ExcludedVariable';
227721     Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
227722     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227723     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227724     Name = 'Interactions';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Interactions';
227725     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227726     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227727     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227728     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
227729     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
227730     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
227731     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227732     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
227733     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227734     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227734   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
227735     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
227736     Value = "Regression";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Regression";
227737     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
227738     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
227739     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227740     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
227741     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 53 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Exhaustive Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Exhaustive Regression Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 36 and _n_ le 54 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 53 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 18 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Reg_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.REG_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Exhaustive Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Exhaustive Regression Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Reg" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG_CMETA_TRAIN.
      WHERE UPCASE(creator)='Reg';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Reg_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Reg_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey23
MPRINT(EM_REPORT_NODE):   from EMWS2.Reg_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Reg_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 20 observations read from the data set EMWS2.REG_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Exhaustive Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Exhaustive Regression Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = LATTICE REGEFFECTS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct TARGETLEVEL) into :numx from
EMWS2.Reg_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Exhaustive Regression";
MPRINT(EM_REPORT_LATTICE):   title3 "Regression Model Effects";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS2.Reg_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   panelby TARGETLEVEL / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar EFFECTNUM / response=ABSCOEFFICIENT group=SIGN ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           2.22 seconds
      cpu time            0.39 seconds
 
NOTE: Some of the tick values have been thinned.
NOTE: Some of the tick values have been thinned.
NOTE: There were 186 observations read from the data set EMWS2.REG_EFFECTS.
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 16 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==14 : Viewtype = LATTICE ESTIMATEGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg_emreport(where=(id eq 16)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Reg_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.REG_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Exhaustive Regression";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.70 seconds
      cpu time            0.25 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.52 seconds
      cpu time            0.25 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.58 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==18 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Reg_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 14 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Exhaustive Regression";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.50 seconds
      cpu time            0.25 seconds
 
NOTE: There were 14 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.49 seconds
      cpu time            0.25 seconds
 
NOTE: There were 14 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 14 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Exhaustive Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Exhaustive Regression Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Reg2")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REG2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
227742     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
227743     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
227743   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
227743   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
227744     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
227745     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
227746     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
227747     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
227748     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227749     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227750     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
227751     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227752     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227753     output;
MPRINT(EM_GETTRAINPATH):   output;
227754     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
227755     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
227756     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
227757     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
227758     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
227759     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227760     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
227761     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227762     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227763     output;
MPRINT(EM_GETTRAINPATH):   output;
227764     nodelabel="Reg2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg2";
227765     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
227766     description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
227767     component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
227768     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
227769     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
227770     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
227771     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
227772     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
227773     output;
MPRINT(EM_GETTRAINPATH):   output;
227774     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Reg2"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Forward Regression";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Reg2";
MPRINT(EM_REPORT_NODE):   put "Node label = Forward Regression";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Reg2";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg2\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
227775     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227776     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227777     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227777   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
227777   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
227778     Name = 'MainEffect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MainEffect';
227779     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227780     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227781     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227782     Name = 'TwoFactor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TwoFactor';
227783     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227784     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227785     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227786     Name = 'Polynomial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Polynomial';
227787     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227788     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227789     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227790     Name = 'PolynomialDegree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PolynomialDegree';
227791     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
227792     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227793     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227794     Name = 'Terms';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Terms';
227795     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227796     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227797     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227798     Name = 'Error';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Error';
227799     Value = "%nrbquote(LOGISTIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGISTIC";
227800     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227801     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227802     Name = 'LinkFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LinkFunction';
227803     Value = "%nrbquote(LOGIT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGIT";
227804     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227805     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227806     Name = 'SuppressIntercept';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressIntercept';
227807     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227808     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227809     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227810     Name = 'InputCoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputCoding';
227811     Value = "%nrbquote(DEVIATION)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEVIATION";
227812     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227813     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227814     Name = 'MinResourceUse';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinResourceUse';
227815     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227816     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227817     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227818     Name = 'ModelSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelection';
227819     Value = "%nrbquote(FORWARD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "FORWARD";
227820     Default = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "NONE";
227821     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227822     Name = 'SelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriterion';
227823     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
227824     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227825     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227826     Name = 'SelectionDefault';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDefault';
227827     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227828     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227829     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227830     Name = 'Sequential';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sequential';
227831     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227832     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227833     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227834     Name = 'SlEntry';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlEntry';
227835     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
227836     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227837     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227838     Name = 'SlStay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlStay';
227839     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
227840     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227841     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227842     Name = 'Start';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Start';
227843     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227844     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227845     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227846     Name = 'Stop';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stop';
227847     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227848     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227849     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227850     Name = 'Force';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Force';
227851     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227852     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227853     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227854     Name = 'Hierarchy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hierarchy';
227855     Value = "%nrbquote(CLASS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CLASS";
227856     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227857     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227858     Name = 'Rule';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Rule';
227859     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
227860     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227861     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227862     Name = 'MaxStep';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxStep';
227863     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
227864     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227865     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227866     Name = 'StepOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StepOutput';
227867     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227868     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227869     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227870     Name = 'OptimizationTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OptimizationTechnique';
227871     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
227872     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227873     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227874     Name = 'ModelDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDefaults';
227875     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227876     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227877     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227878     Name = 'MaxIterations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIterations';
227879     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
227880     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227881     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227882     Name = 'MaxFunctionCalls';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxFunctionCalls';
227883     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
227884     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227885     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227886     Name = 'MaxCPUTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxCPUTime';
227887     Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
227888     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227889     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227890     Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
227891     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
227892     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227893     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227894     Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
227895     Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
227896     Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
227897     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227898     Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
227899     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227900     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227901     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227902     Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
227903     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227904     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227905     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227906     Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
227907     Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
227908     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227909     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227910     Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
227911     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227912     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227913     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227914     Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
227915     Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
227916     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227917     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227918     Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
227919     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227920     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227921     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227922     Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
227923     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
227924     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227925     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227926     Name = 'FConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTimes';
227927     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227928     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227929     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227930     Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
227931     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
227932     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227933     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227934     Name = 'GConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTimes';
227935     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
227936     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227937     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227938     Name = 'ClParm';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClParm';
227939     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227940     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227941     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227942     Name = 'Covout';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Covout';
227943     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227944     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227945     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227946     Name = 'CovB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CovB';
227947     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227948     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227949     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227950     Name = 'CorB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CorB';
227951     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227952     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227953     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227954     Name = 'Simple';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Simple';
227955     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227956     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227957     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227958     Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
227959     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227960     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227961     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227962     Name = 'Details';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Details';
227963     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227964     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227965     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227966     Name = 'PrintDesignMatrix';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrintDesignMatrix';
227967     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227968     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227969     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227970     Name = 'SASSPDS';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SASSPDS';
227971     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227972     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227973     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227974     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
227975     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
227976     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227977     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227978     Name = 'ExcludedVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ExcludedVariable';
227979     Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
227980     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227981     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227982     Name = 'Interactions';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Interactions';
227983     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
227984     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
227985     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
227986     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
227987     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
227988     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
227989     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
227990     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
227991     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
227992     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
227992   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
227993     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
227994     Value = "Regression";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Regression";
227995     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
227996     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
227997     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
227998     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
227999     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 53 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Forward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Forward Regression Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 36 and _n_ le 54 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 53 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.19 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 18 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Reg2_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg2_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.REG2_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Forward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Forward Regression Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg2_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Reg2" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG2_CMETA_TRAIN.
      WHERE UPCASE(creator)='Reg2';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Reg2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Reg2_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey24
MPRINT(EM_REPORT_NODE):   from EMWS2.Reg2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Reg2_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 20 observations read from the data set EMWS2.REG2_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Forward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Forward Regression Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==13 : Viewtype = LATTICE REGEFFECTS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct TARGETLEVEL) into :numx from
EMWS2.Reg2_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Forward Regression";
MPRINT(EM_REPORT_LATTICE):   title3 "Regression Model Effects";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS2.Reg2_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   panelby TARGETLEVEL / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar EFFECTNUM / response=ABSCOEFFICIENT group=SIGN ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.59 seconds
      cpu time            0.34 seconds
 
NOTE: There were 56 observations read from the data set EMWS2.REG2_EFFECTS.
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 16 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==14 : Viewtype = LATTICE ESTIMATEGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 8 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = ITERATIONPLOT ITERPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=Forward Regression";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Reg2_EMESTIMATE(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.REG2_EMESTIMATE.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
192 211 210 222
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from
EMWS2.Reg2_EMESTIMATE where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=Forward Regression";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_ASE_ / markerattrs=(size=0)
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_VASE_ / markerattrs=(size=0)
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=14;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_MISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=14;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Reg2_EMESTIMATE out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _STEP_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 48 observations read from the data set EMWS2.REG2_EMESTIMATE.
NOTE: The data set WORK._TMPRPT_ITERDAT has 48 observations and 222 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 48 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.42 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg2_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Reg2_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.REG2_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Forward Regression";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.45 seconds
      cpu time            0.23 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.43 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.45 seconds
      cpu time            0.28 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg2_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg2_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG2_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg2_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Reg2_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.17 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Forward Regression";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.53 seconds
      cpu time            0.26 seconds
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.61 seconds
      cpu time            0.28 seconds
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Forward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Forward Regression Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Reg3")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REG3';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
228000     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
228001     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
228001   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
228001   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
228002     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
228003     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
228004     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
228005     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
228006     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228007     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228008     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228009     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228010     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228011     output;
MPRINT(EM_GETTRAINPATH):   output;
228012     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
228013     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
228014     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
228015     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
228016     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228017     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228018     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
228019     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228020     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228021     output;
MPRINT(EM_GETTRAINPATH):   output;
228022     nodelabel="Reg3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg3";
228023     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
228024     description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
228025     component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
228026     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
228027     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228028     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228029     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228030     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228031     output;
MPRINT(EM_GETTRAINPATH):   output;
228032     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.24 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Reg3"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Backward Regression";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Reg3";
MPRINT(EM_REPORT_NODE):   put "Node label = Backward Regression";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Reg3";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg3\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
228033     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228034     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228035     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228035   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
228035   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
228036     Name = 'MainEffect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MainEffect';
228037     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228038     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228039     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228040     Name = 'TwoFactor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TwoFactor';
228041     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228042     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228043     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228044     Name = 'Polynomial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Polynomial';
228045     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228046     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228047     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
18 The SAS System
 
228048     Name = 'PolynomialDegree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PolynomialDegree';
228049     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
228050     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228051     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228052     Name = 'Terms';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Terms';
228053     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228054     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228055     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228056     Name = 'Error';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Error';
228057     Value = "%nrbquote(LOGISTIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGISTIC";
228058     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228059     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228060     Name = 'LinkFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LinkFunction';
228061     Value = "%nrbquote(LOGIT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGIT";
228062     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228063     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228064     Name = 'SuppressIntercept';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressIntercept';
228065     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228066     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228067     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228068     Name = 'InputCoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputCoding';
228069     Value = "%nrbquote(DEVIATION)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEVIATION";
228070     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228071     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228072     Name = 'MinResourceUse';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinResourceUse';
228073     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228074     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228075     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228076     Name = 'ModelSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelection';
228077     Value = "%nrbquote(BACKWARD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BACKWARD";
228078     Default = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "NONE";
228079     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228080     Name = 'SelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriterion';
228081     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
228082     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228083     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228084     Name = 'SelectionDefault';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDefault';
228085     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228086     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228087     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228088     Name = 'Sequential';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sequential';
228089     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228090     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228091     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228092     Name = 'SlEntry';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlEntry';
228093     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
228094     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228095     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228096     Name = 'SlStay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlStay';
228097     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
228098     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228099     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228100     Name = 'Start';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Start';
228101     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228102     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228103     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228104     Name = 'Stop';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stop';
228105     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228106     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228107     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228108     Name = 'Force';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Force';
228109     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228110     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228111     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228112     Name = 'Hierarchy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hierarchy';
228113     Value = "%nrbquote(CLASS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CLASS";
228114     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228115     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228116     Name = 'Rule';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Rule';
228117     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
228118     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228119     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228120     Name = 'MaxStep';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxStep';
228121     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228122     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228123     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228124     Name = 'StepOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StepOutput';
228125     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228126     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228127     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228128     Name = 'OptimizationTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OptimizationTechnique';
228129     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
228130     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228131     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228132     Name = 'ModelDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDefaults';
228133     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228134     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228135     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228136     Name = 'MaxIterations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIterations';
228137     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228138     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228139     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228140     Name = 'MaxFunctionCalls';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxFunctionCalls';
228141     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228142     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228143     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228144     Name = 'MaxCPUTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxCPUTime';
228145     Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
228146     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228147     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228148     Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
228149     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228150     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228151     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228152     Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
228153     Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
228154     Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
228155     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228156     Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
228157     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228158     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228159     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228160     Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
228161     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228162     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228163     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228164     Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
228165     Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
228166     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228167     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228168     Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
228169     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228170     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228171     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228172     Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
228173     Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
228174     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228175     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228176     Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
228177     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228178     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228179     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228180     Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
228181     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228182     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228183     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228184     Name = 'FConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTimes';
228185     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228186     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228187     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228188     Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
228189     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
228190     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228191     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228192     Name = 'GConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTimes';
228193     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228194     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228195     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228196     Name = 'ClParm';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClParm';
228197     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228198     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228199     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228200     Name = 'Covout';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Covout';
228201     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228202     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228203     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228204     Name = 'CovB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CovB';
228205     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228206     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228207     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228208     Name = 'CorB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CorB';
228209     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228210     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228211     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228212     Name = 'Simple';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Simple';
228213     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228214     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228215     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228216     Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
228217     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228218     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228219     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228220     Name = 'Details';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Details';
228221     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228222     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228223     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228224     Name = 'PrintDesignMatrix';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrintDesignMatrix';
228225     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228226     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228227     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228228     Name = 'SASSPDS';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SASSPDS';
228229     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228230     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228231     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228232     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
228233     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228234     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228235     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228236     Name = 'ExcludedVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ExcludedVariable';
228237     Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
228238     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228239     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228240     Name = 'Interactions';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Interactions';
228241     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
228242     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228243     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228244     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
228245     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
228246     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
228247     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
228248     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
228249     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228250     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228250   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
228251     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
228252     Value = "Regression";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Regression";
228253     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
228254     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
228255     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228256     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
228257     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 53 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Backward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Backward Regression Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 36 and _n_ le 54 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 53 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.24 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 18 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Reg3_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg3_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.REG3_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Backward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Backward Regression Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg3_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Reg3" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG3_CMETA_TRAIN.
      WHERE UPCASE(creator)='Reg3';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Reg3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Reg3_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey24
MPRINT(EM_REPORT_NODE):   from EMWS2.Reg3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Reg3_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 20 observations read from the data set EMWS2.REG3_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Backward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Backward Regression Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = LATTICE REGEFFECTS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct TARGETLEVEL) into :numx from
EMWS2.Reg3_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Backward Regression";
MPRINT(EM_REPORT_LATTICE):   title3 "Regression Model Effects";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS2.Reg3_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   panelby TARGETLEVEL / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar EFFECTNUM / response=ABSCOEFFICIENT group=SIGN ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.53 seconds
      cpu time            0.32 seconds
 
NOTE: There were 56 observations read from the data set EMWS2.REG3_EFFECTS.
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 16 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==14 : Viewtype = LATTICE ESTIMATEGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 8 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==15 : Viewtype = ITERATIONPLOT ITERPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=Backward Regression";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Reg3_EMESTIMATE(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.REG3_EMESTIMATE.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
192 211 210 222
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from
EMWS2.Reg3_EMESTIMATE where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=Backward Regression";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_ASE_ / markerattrs=(size=0)
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_VASE_ / markerattrs=(size=0)
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=7;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_MISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=7;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Reg3_EMESTIMATE out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _STEP_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 27 observations read from the data set EMWS2.REG3_EMESTIMATE.
NOTE: The data set WORK._TMPRPT_ITERDAT has 27 observations and 222 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.35 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg3_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Reg3_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.REG3_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Backward Regression";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.40 seconds
      cpu time            0.25 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.42 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.48 seconds
      cpu time            0.28 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg3_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg3_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG3_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg3_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Reg3_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG3_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Backward Regression";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.43 seconds
      cpu time            0.24 seconds
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.42 seconds
      cpu time            0.28 seconds
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Backward Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Backward Regression Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Reg4")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REG4';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
228258     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
228259     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
228259   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
228259   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
228260     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
228261     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
228262     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
228263     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
228264     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228265     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228266     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228267     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228268     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228269     output;
MPRINT(EM_GETTRAINPATH):   output;
228270     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
228271     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
228272     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
228273     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
228274     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228275     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228276     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
228277     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228278     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228279     output;
MPRINT(EM_GETTRAINPATH):   output;
228280     nodelabel="Reg4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg4";
228281     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
228282     description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
228283     component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
228284     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
228285     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228286     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228287     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228288     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228289     output;
MPRINT(EM_GETTRAINPATH):   output;
228290     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Reg4"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Stepwise Regression";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Reg4";
MPRINT(EM_REPORT_NODE):   put "Node label = Stepwise Regression";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Reg4";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg4\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
228291     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228292     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228293     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228293   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
228293   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
228294     Name = 'MainEffect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MainEffect';
228295     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228296     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228297     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228298     Name = 'TwoFactor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TwoFactor';
228299     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228300     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228301     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228302     Name = 'Polynomial';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Polynomial';
228303     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228304     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228305     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228306     Name = 'PolynomialDegree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PolynomialDegree';
228307     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
228308     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228309     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228310     Name = 'Terms';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Terms';
228311     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228312     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228313     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228314     Name = 'Error';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Error';
228315     Value = "%nrbquote(LOGISTIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGISTIC";
228316     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228317     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228318     Name = 'LinkFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LinkFunction';
228319     Value = "%nrbquote(LOGIT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOGIT";
228320     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228321     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228322     Name = 'SuppressIntercept';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressIntercept';
228323     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228324     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228325     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228326     Name = 'InputCoding';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputCoding';
228327     Value = "%nrbquote(DEVIATION)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEVIATION";
228328     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228329     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228330     Name = 'MinResourceUse';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinResourceUse';
228331     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228332     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228333     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228334     Name = 'ModelSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelection';
228335     Value = "%nrbquote(STEPWISE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STEPWISE";
228336     Default = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "NONE";
228337     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228338     Name = 'SelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriterion';
228339     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
228340     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228341     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228342     Name = 'SelectionDefault';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDefault';
228343     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228344     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228345     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228346     Name = 'Sequential';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sequential';
228347     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228348     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228349     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228350     Name = 'SlEntry';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlEntry';
228351     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
228352     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228353     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228354     Name = 'SlStay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SlStay';
228355     Value = "%nrbquote(0.05)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.05";
228356     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228357     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228358     Name = 'Start';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Start';
228359     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228360     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228361     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228362     Name = 'Stop';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Stop';
228363     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228364     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228365     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228366     Name = 'Force';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Force';
228367     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228368     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228369     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228370     Name = 'Hierarchy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hierarchy';
228371     Value = "%nrbquote(CLASS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CLASS";
228372     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228373     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228374     Name = 'Rule';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Rule';
228375     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
228376     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228377     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228378     Name = 'MaxStep';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxStep';
228379     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228380     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228381     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228382     Name = 'StepOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StepOutput';
228383     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228384     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228385     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228386     Name = 'OptimizationTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OptimizationTechnique';
228387     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
228388     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228389     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228390     Name = 'ModelDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDefaults';
228391     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228392     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228393     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228394     Name = 'MaxIterations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxIterations';
228395     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228396     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228397     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228398     Name = 'MaxFunctionCalls';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxFunctionCalls';
228399     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228400     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228401     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228402     Name = 'MaxCPUTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxCPUTime';
228403     Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
228404     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228405     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228406     Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
228407     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228408     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228409     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228410     Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
228411     Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
228412     Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
228413     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228414     Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
228415     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228416     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228417     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228418     Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
228419     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228420     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228421     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228422     Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
228423     Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
228424     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228425     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228426     Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
228427     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228428     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228429     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228430     Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
228431     Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
228432     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228433     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228434     Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
228435     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228436     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228437     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228438     Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
228439     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228440     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228441     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228442     Name = 'FConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTimes';
228443     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228444     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228445     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228446     Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
228447     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
228448     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228449     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228450     Name = 'GConvTimes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTimes';
228451     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228452     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228453     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228454     Name = 'ClParm';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClParm';
228455     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228456     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228457     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228458     Name = 'Covout';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Covout';
228459     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228460     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228461     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228462     Name = 'CovB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CovB';
228463     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228464     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228465     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228466     Name = 'CorB';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CorB';
228467     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228468     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228469     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228470     Name = 'Simple';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Simple';
228471     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228472     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228473     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228474     Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
228475     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228476     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228477     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228478     Name = 'Details';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Details';
228479     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228480     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228481     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228482     Name = 'PrintDesignMatrix';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrintDesignMatrix';
228483     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228484     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228485     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228486     Name = 'SASSPDS';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SASSPDS';
228487     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228488     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228489     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228490     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
228491     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228492     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228493     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228494     Name = 'ExcludedVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ExcludedVariable';
228495     Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
228496     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228497     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228498     Name = 'Interactions';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Interactions';
228499     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
228500     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228501     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228502     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
228503     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
228504     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
228505     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 52 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
228506     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
228507     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228508     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228508   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
228509     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
228510     Value = "Regression";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Regression";
228511     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
228512     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
228513     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228514     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
228515     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 52 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 53 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Stepwise Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Stepwise Regression Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 36 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 36 and _n_ le 54 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-18*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 53 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 18 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 17 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 18 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 18 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Reg4_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg4_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.REG4_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Stepwise Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Stepwise Regression Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Reg4_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Reg4" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG4_CMETA_TRAIN.
      WHERE UPCASE(creator)='Reg4';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Reg4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Reg4_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey24
MPRINT(EM_REPORT_NODE):   from EMWS2.Reg4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Reg4_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 20 observations read from the data set EMWS2.REG4_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Stepwise Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Stepwise Regression Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 20 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==13 : Viewtype = LATTICE REGEFFECTS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct TARGETLEVEL) into :numx from
EMWS2.Reg4_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Stepwise Regression";
MPRINT(EM_REPORT_LATTICE):   title3 "Regression Model Effects";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS2.Reg4_EFFECTS;
MPRINT(EM_REPORT_LATTICE):   panelby TARGETLEVEL / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar EFFECTNUM / response=ABSCOEFFICIENT group=SIGN ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.58 seconds
      cpu time            0.35 seconds
 
NOTE: There were 56 observations read from the data set EMWS2.REG4_EFFECTS.
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 16 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==14 : Viewtype = LATTICE ESTIMATEGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 8 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = ITERATIONPLOT ITERPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=Stepwise Regression";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Reg4_EMESTIMATE(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.REG4_EMESTIMATE.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
192 211 210 222
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from
EMWS2.Reg4_EMESTIMATE where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=Stepwise Regression";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_ASE_ / markerattrs=(size=0)
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_VASE_ / markerattrs=(size=0)
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=14;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_MISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_STEP_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=14;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Reg4_EMESTIMATE out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _STEP_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 48 observations read from the data set EMWS2.REG4_EMESTIMATE.
NOTE: The data set WORK._TMPRPT_ITERDAT has 48 observations and 222 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 48 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.32 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg4_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Reg4_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.REG4_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Stepwise Regression";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.40 seconds
      cpu time            0.23 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.42 seconds
      cpu time            0.23 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.45 seconds
      cpu time            0.23 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg4_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Reg4_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.REG4_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Reg4_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Reg4_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG4_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Stepwise Regression";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.41 seconds
      cpu time            0.28 seconds
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.46 seconds
      cpu time            0.28 seconds
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Stepwise Regression";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Stepwise Regression Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Tree")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='TREE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
228516     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
228517     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
228517   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
228517   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
228518     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
228519     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
228520     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
228521     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
228522     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228523     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228524     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228525     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228526     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228527     output;
MPRINT(EM_GETTRAINPATH):   output;
228528     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
228529     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
228530     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
228531     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
228532     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228533     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228534     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
228535     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228536     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228537     output;
MPRINT(EM_GETTRAINPATH):   output;
228538     nodelabel="Tree";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree";
228539     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
228540     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
228541     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
228542     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
228543     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228544     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228545     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228546     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228547     output;
MPRINT(EM_GETTRAINPATH):   output;
228548     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Tree"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=RegTree B2D6";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Tree";
MPRINT(EM_REPORT_NODE):   put "Node label = RegTree B2D6";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
228549     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228550     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228551     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228551   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
228551   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
228552     Name = 'ToolType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ToolType';
228553     Value = "%nrbquote(MODEL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MODEL";
228554     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228555     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228556     Name = 'TrainMode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainMode';
228557     Value = "%nrbquote(BATCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BATCH";
228558     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228559     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228560     Name = 'ImportModel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportModel';
228561     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228562     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228563     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228564     Name = 'Freeze';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Freeze';
228565     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228566     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228567     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228568     Name = 'UseMultipleTarget';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseMultipleTarget';
228569     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228570     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228571     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228572     Name = 'Precision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Precision';
228573     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
228574     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228575     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228576     Name = 'IntervalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalCriterion';
228577     Value = "%nrbquote(PROBF)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBF";
228578     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228579     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228580     Name = 'NominalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalCriterion';
228581     Value = "%nrbquote(PROBCHISQ)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBCHISQ";
228582     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228583     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228584     Name = 'OrdinalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalCriterion';
228585     Value = "%nrbquote(ENTROPY)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ENTROPY";
228586     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228587     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228588     Name = 'SigLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SigLevel';
228589     Value = "%nrbquote(0.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.2";
228590     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228591     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228592     Name = 'Splitsize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Splitsize';
228593     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228594     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228595     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228596     Name = 'LeafSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LeafSize';
228597     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228598     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228599     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228600     Name = 'MinCatSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinCatSize';
228601     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228602     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228603     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228604     Name = 'Maxbranch';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxbranch';
228605     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
228606     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228607     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228608     Name = 'Maxdepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxdepth';
228609     Value = "%nrbquote(6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "6";
228610     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228611     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228612     Name = 'Nrules';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nrules';
228613     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228614     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228615     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228616     Name = 'Nsurrs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nsurrs';
228617     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228618     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228619     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228620     Name = 'MissingValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingValue';
228621     Value = "%nrbquote(USEINSEARCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "USEINSEARCH";
228622     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228623     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228624     Name = 'UseVarOnce';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseVarOnce';
228625     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228626     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228627     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228628     Name = 'SplitPrecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SplitPrecision';
228629     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
228630     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228631     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228632     Name = 'Subtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Subtree';
228633     Value = "%nrbquote(ASSESSMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ASSESSMENT";
228634     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228635     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228636     Name = 'NSubtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NSubtree';
228637     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228638     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228639     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228640     Name = 'AssessMeasure';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessMeasure';
228641     Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
228642     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228643     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228644     Name = 'AssessPercentage';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessPercentage';
228645     Value = "%nrbquote(0.25)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.25";
228646     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228647     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228648     Name = 'NodeSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeSample';
228649     Value = "%nrbquote(20000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20000";
228650     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228651     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228652     Name = 'Exhaustive';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Exhaustive';
228653     Value = "%nrbquote(5000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5000";
228654     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228655     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228656     Name = 'Kass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Kass';
228657     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228658     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228659     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228660     Name = 'KassApply';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'KassApply';
228661     Value = "%nrbquote(BEFORE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BEFORE";
228662     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228663     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228664     Name = 'Depth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Depth';
228665     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228666     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228667     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228668     Name = 'Inputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Inputs';
228669     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228670     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228671     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228672     Name = 'NumInputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumInputs';
228673     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228674     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228675     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228676     Name = 'VarSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VarSelection';
228677     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228678     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228679     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228680     Name = 'Leafid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Leafid';
228681     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228682     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228683     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228684     Name = 'NodeRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeRole';
228685     Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
228686     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228687     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228688     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
228689     Value = "%nrbquote(DISK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DISK";
228690     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228691     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228692     Name = 'CV';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CV';
228693     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228694     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228695     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228696     Name = 'CVNIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVNIter';
228697     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
228698     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228699     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228700     Name = 'CVRepeat';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVRepeat';
228701     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228702     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228703     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228704     Name = 'CVSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVSeed';
228705     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
228706     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228707     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228708     Name = 'ObsImportance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ObsImportance';
228709     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228710     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228711     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228712     Name = 'NumSingleImp';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumSingleImp';
228713     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228714     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228715     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228716     Name = 'UseDecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseDecision';
228717     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228718     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228719     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228720     Name = 'UsePriors';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UsePriors';
228721     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228722     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228723     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228724     Name = 'ClassColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassColorBy';
228725     Value = "%nrbquote(PERCENTCORRECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENTCORRECT";
228726     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228727     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228728     Name = 'IntColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntColorBy';
228729     Value = "%nrbquote(AVG)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AVG";
228730     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228731     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228732     Name = 'ShowNodeId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowNodeId';
228733     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228734     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228735     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228736     Name = 'ShowValid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowValid';
228737     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228738     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228739     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228740     Name = 'Pred';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Pred';
228741     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228742     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228743     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228744     Name = 'Target';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Target';
228745     Value = "%nrbquote(ALL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ALL";
228746     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228747     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228748     Name = 'Count';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Count';
228749     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228750     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228751     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228752     Name = 'ProfitLoss';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitLoss';
228753     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
228754     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228755     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228756     Name = 'PercentCorrect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PercentCorrect';
228757     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228758     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228759     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228760     Name = 'AVG';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AVG';
228761     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228762     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228763     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228764     Name = 'RASE';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RASE';
228765     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228766     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228767     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228768     Name = 'CreateSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateSample';
228769     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
228770     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228771     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228772     Name = 'SampleMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleMethod';
228773     Value = "%nrbquote(RANDOM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANDOM";
228774     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228775     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228776     Name = 'SampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSize';
228777     Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
228778     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228779     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228780     Name = 'SampleSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSeed';
228781     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
228782     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228783     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228784     Name = 'Criterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Criterion';
228785     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
228786     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228787     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228788     Name = 'Dummy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Dummy';
228789     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228790     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228791     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228792     Name = 'Predict';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Predict';
228793     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228794     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228795     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228796     Name = 'ImportedTreeData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportedTreeData';
228797     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
228798     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228799     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228800     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
228801     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
228802     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
228803     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
228804     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
228805     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228806     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228806   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
228807     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
228808     Value = "DecisionTree";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DecisionTree";
228809     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
228810     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
228811     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228812     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
228813     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 63 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.42 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D6 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 21 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 42 and _n_ le 63 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 63 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 21 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Tree_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS2.TREE_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
23 OUTPUT;
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D6 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Tree" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE_CMETA_TRAIN.
      WHERE UPCASE(creator)='Tree';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Tree_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Tree_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey33
MPRINT(EM_REPORT_NODE):   from EMWS2.Tree_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Tree_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 8 observations read from the data set EMWS2.TREE_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D6 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==13 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==14 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 18 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "NODETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 11 observations read from the data set EMWS2.TREE_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.12 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B2D6" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent =
"PARENT" nodetext = "NODETEXT" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth =
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.64 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==16 : Viewtype = ICICLE ICICLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2="PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3="NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var4="N";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 11 observations read from the data set EMWS2.TREE_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B2D6" title3="Treemap");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Icicle options( id = "NODE" parent = "PARENT"
nodecolor = "NODECOLOR" nodesize = "N" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.41 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==17 : Viewtype = AREABAR VARWIDTH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==18 : Viewtype = ITERATIONPLOT SUBTREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=RegTree B2D6";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Tree_OUTSEQ(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.TREE_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
9 18 6 15
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS2.Tree_OUTSEQ
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=RegTree B2D6";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_ASE_ / markerattrs=(size=0) display=all
name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VASE_ / markerattrs=(size=0) display=all
name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=6;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_MISC_ / markerattrs=(size=0) display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=6;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Tree_OUTSEQ out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _NW_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 62 observations read from the data set EMWS2.TREE_OUTSEQ.
NOTE: The data set WORK._TMPRPT_ITERDAT has 62 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 62 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.36 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==19 : Viewtype = RESPONSEBAR LEAFSTATS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==20 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==21 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Tree_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.TREE_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree B2D6";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.45 seconds
      cpu time            0.29 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.43 seconds
      cpu time            0.28 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.49 seconds
      cpu time            0.28 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==22 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree_emreport(where=(id eq 23));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE_EMREPORT.
      WHERE id=23;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree_emreport(where=(id eq 23)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==23 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Tree_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.TREE_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 2 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.40 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 2 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=RegTree B2D6";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.43 seconds
      cpu time            0.25 seconds
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.41 seconds
      cpu time            0.23 seconds
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 2 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D6 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Tree2")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='TREE2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
228814     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
228815     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
228815   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
228815   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
228816     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
228817     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
228818     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
228819     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
228820     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228821     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228822     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228823     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228824     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228825     output;
MPRINT(EM_GETTRAINPATH):   output;
228826     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
228827     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
228828     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
228829     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
228830     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
228831     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228832     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
228833     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228834     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228835     output;
MPRINT(EM_GETTRAINPATH):   output;
228836     nodelabel="Tree2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree2";
228837     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
228838     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
228839     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
228840     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
228841     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
228842     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
228843     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
228844     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
228845     output;
MPRINT(EM_GETTRAINPATH):   output;
228846     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Tree2"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=RegTree B2D4";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Tree2";
MPRINT(EM_REPORT_NODE):   put "Node label = RegTree B2D4";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree2";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree2\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
228847     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
228848     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
228849     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
228849   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
228849   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
228850     Name = 'ToolType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ToolType';
228851     Value = "%nrbquote(MODEL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MODEL";
228852     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228853     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228854     Name = 'TrainMode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainMode';
228855     Value = "%nrbquote(BATCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BATCH";
228856     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228857     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228858     Name = 'ImportModel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportModel';
228859     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228860     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228861     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228862     Name = 'Freeze';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Freeze';
228863     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228864     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228865     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228866     Name = 'UseMultipleTarget';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseMultipleTarget';
228867     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228868     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228869     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228870     Name = 'Precision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Precision';
228871     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
228872     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228873     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228874     Name = 'IntervalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalCriterion';
228875     Value = "%nrbquote(PROBF)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBF";
228876     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228877     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228878     Name = 'NominalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalCriterion';
228879     Value = "%nrbquote(PROBCHISQ)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBCHISQ";
228880     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228881     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228882     Name = 'OrdinalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalCriterion';
228883     Value = "%nrbquote(ENTROPY)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ENTROPY";
228884     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228885     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228886     Name = 'SigLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SigLevel';
228887     Value = "%nrbquote(0.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.2";
228888     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228889     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228890     Name = 'Splitsize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Splitsize';
228891     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
228892     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228893     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228894     Name = 'LeafSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LeafSize';
228895     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228896     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228897     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228898     Name = 'MinCatSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinCatSize';
228899     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228900     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228901     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228902     Name = 'Maxbranch';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxbranch';
228903     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
228904     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228905     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228906     Name = 'Maxdepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxdepth';
228907     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
228908     Default = "%nrbquote(6)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "6";
228909     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228910     Name = 'Nrules';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nrules';
228911     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
228912     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228913     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228914     Name = 'Nsurrs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nsurrs';
228915     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
228916     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228917     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228918     Name = 'MissingValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingValue';
228919     Value = "%nrbquote(USEINSEARCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "USEINSEARCH";
228920     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228921     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228922     Name = 'UseVarOnce';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseVarOnce';
228923     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228924     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228925     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228926     Name = 'SplitPrecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SplitPrecision';
228927     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
228928     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228929     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228930     Name = 'Subtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Subtree';
228931     Value = "%nrbquote(ASSESSMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ASSESSMENT";
228932     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228933     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228934     Name = 'NSubtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NSubtree';
228935     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228936     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228937     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228938     Name = 'AssessMeasure';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessMeasure';
228939     Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
228940     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228941     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228942     Name = 'AssessPercentage';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessPercentage';
228943     Value = "%nrbquote(0.25)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.25";
228944     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228945     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228946     Name = 'NodeSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeSample';
228947     Value = "%nrbquote(20000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20000";
228948     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228949     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228950     Name = 'Exhaustive';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Exhaustive';
228951     Value = "%nrbquote(5000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5000";
228952     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228953     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228954     Name = 'Kass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Kass';
228955     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228956     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228957     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228958     Name = 'KassApply';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'KassApply';
228959     Value = "%nrbquote(BEFORE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BEFORE";
228960     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228961     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228962     Name = 'Depth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Depth';
228963     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228964     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228965     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228966     Name = 'Inputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Inputs';
228967     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228968     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228969     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228970     Name = 'NumInputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumInputs';
228971     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
228972     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228973     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228974     Name = 'VarSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VarSelection';
228975     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228976     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228977     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228978     Name = 'Leafid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Leafid';
228979     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
228980     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228981     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228982     Name = 'NodeRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeRole';
228983     Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
228984     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228985     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228986     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
228987     Value = "%nrbquote(DISK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DISK";
228988     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228989     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228990     Name = 'CV';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CV';
228991     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
228992     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228993     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228994     Name = 'CVNIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVNIter';
228995     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
228996     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
228997     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
228998     Name = 'CVRepeat';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVRepeat';
228999     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229000     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229001     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229002     Name = 'CVSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVSeed';
229003     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
229004     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229005     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229006     Name = 'ObsImportance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ObsImportance';
229007     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229008     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229009     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229010     Name = 'NumSingleImp';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumSingleImp';
229011     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229012     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229013     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229014     Name = 'UseDecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseDecision';
229015     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229016     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229017     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229018     Name = 'UsePriors';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UsePriors';
229019     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229020     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229021     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229022     Name = 'ClassColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassColorBy';
229023     Value = "%nrbquote(PERCENTCORRECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENTCORRECT";
229024     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229025     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229026     Name = 'IntColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntColorBy';
229027     Value = "%nrbquote(AVG)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AVG";
229028     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229029     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229030     Name = 'ShowNodeId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowNodeId';
229031     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229032     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229033     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229034     Name = 'ShowValid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowValid';
229035     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229036     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229037     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229038     Name = 'Pred';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Pred';
229039     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229040     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229041     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229042     Name = 'Target';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Target';
229043     Value = "%nrbquote(ALL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ALL";
229044     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229045     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229046     Name = 'Count';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Count';
229047     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229048     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229049     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229050     Name = 'ProfitLoss';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitLoss';
229051     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
229052     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229053     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229054     Name = 'PercentCorrect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PercentCorrect';
229055     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229056     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229057     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229058     Name = 'AVG';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AVG';
229059     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229060     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229061     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229062     Name = 'RASE';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RASE';
229063     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229064     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229065     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229066     Name = 'CreateSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateSample';
229067     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229068     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229069     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229070     Name = 'SampleMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleMethod';
229071     Value = "%nrbquote(RANDOM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANDOM";
229072     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229073     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229074     Name = 'SampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSize';
229075     Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
229076     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229077     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229078     Name = 'SampleSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSeed';
229079     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
229080     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229081     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229082     Name = 'Criterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Criterion';
229083     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229084     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229085     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229086     Name = 'Dummy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Dummy';
229087     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229088     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229089     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229090     Name = 'Predict';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Predict';
229091     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229092     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229093     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229094     Name = 'ImportedTreeData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportedTreeData';
229095     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
229096     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229097     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229098     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
229099     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
229100     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
229101     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
229102     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
229103     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229104     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229104   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
229105     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
229106     Value = "DecisionTree";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DecisionTree";
229107     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
229108     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
229109     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229110     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
229111     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 63 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D4";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D4 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 21 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 42 and _n_ le 63 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 63 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 21 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Tree2_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree2_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS2.TREE2_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
23 OUTPUT;
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D4";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D4 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree2_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Tree2" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE2_CMETA_TRAIN.
      WHERE UPCASE(creator)='Tree2';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Tree2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Tree2_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey33
MPRINT(EM_REPORT_NODE):   from EMWS2.Tree2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Tree2_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 8 observations read from the data set EMWS2.TREE2_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D4";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D4 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
19 The SAS System
 
      cpu time            0.00 seconds
 
 
==13 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==14 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 18 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree2_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "NODETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 9 observations read from the data set EMWS2.TREE2_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B2D4" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent =
"PARENT" nodetext = "NODETEXT" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth =
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.40 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==16 : Viewtype = ICICLE ICICLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree2_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2="PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3="NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var4="N";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 9 observations read from the data set EMWS2.TREE2_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B2D4" title3="Treemap");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Icicle options( id = "NODE" parent = "PARENT"
nodecolor = "NODECOLOR" nodesize = "N" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.33 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = AREABAR VARWIDTH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==18 : Viewtype = ITERATIONPLOT SUBTREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=RegTree B2D4";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Tree2_OUTSEQ(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.TREE2_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
9 18 6 15
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS2.Tree2_OUTSEQ
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=RegTree B2D4";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_ASE_ / markerattrs=(size=0) display=all
name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VASE_ / markerattrs=(size=0) display=all
name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=5;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_MISC_ / markerattrs=(size=0) display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=5;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Tree2_OUTSEQ out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _NW_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 16 observations read from the data set EMWS2.TREE2_OUTSEQ.
NOTE: The data set WORK._TMPRPT_ITERDAT has 16 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.34 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==19 : Viewtype = RESPONSEBAR LEAFSTATS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==20 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree2_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==21 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Tree2_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.TREE2_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree B2D4";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.52 seconds
      cpu time            0.31 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.77 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.45 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree2_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==22 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree2_emreport(where=(id eq 23));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE2_EMREPORT.
      WHERE id=23;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree2_emreport(where=(id eq 23)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==23 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Tree2_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.TREE2_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 2 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 2 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.22 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=RegTree B2D4";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.58 seconds
      cpu time            0.28 seconds
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.37 seconds
      cpu time            0.21 seconds
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 2 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D4";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D4 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Tree3")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='TREE3';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
229112     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
229113     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
229113   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
229113   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
229114     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
229115     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
229116     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
229117     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
229118     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229119     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229120     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229121     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229122     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229123     output;
MPRINT(EM_GETTRAINPATH):   output;
229124     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
229125     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
229126     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
229127     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
229128     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229129     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229130     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
229131     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229132     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229133     output;
MPRINT(EM_GETTRAINPATH):   output;
229134     nodelabel="Tree3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree3";
229135     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
229136     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
229137     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
229138     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
229139     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229140     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229141     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229142     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229143     output;
MPRINT(EM_GETTRAINPATH):   output;
229144     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Tree3"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=RegTree B2D2";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Tree3";
MPRINT(EM_REPORT_NODE):   put "Node label = RegTree B2D2";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree3";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree3\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
229145     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229146     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229147     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229147   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
229147   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
229148     Name = 'ToolType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ToolType';
229149     Value = "%nrbquote(MODEL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MODEL";
229150     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229151     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229152     Name = 'TrainMode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainMode';
229153     Value = "%nrbquote(BATCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BATCH";
229154     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229155     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229156     Name = 'ImportModel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportModel';
229157     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229158     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229159     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229160     Name = 'Freeze';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Freeze';
229161     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229162     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229163     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229164     Name = 'UseMultipleTarget';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseMultipleTarget';
229165     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229166     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229167     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229168     Name = 'Precision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Precision';
229169     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
229170     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229171     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229172     Name = 'IntervalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalCriterion';
229173     Value = "%nrbquote(PROBF)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBF";
229174     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229175     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229176     Name = 'NominalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalCriterion';
229177     Value = "%nrbquote(PROBCHISQ)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBCHISQ";
229178     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229179     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229180     Name = 'OrdinalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalCriterion';
229181     Value = "%nrbquote(ENTROPY)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ENTROPY";
229182     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229183     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229184     Name = 'SigLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SigLevel';
229185     Value = "%nrbquote(0.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.2";
229186     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229187     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229188     Name = 'Splitsize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Splitsize';
229189     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
229190     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229191     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229192     Name = 'LeafSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LeafSize';
229193     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229194     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229195     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229196     Name = 'MinCatSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinCatSize';
229197     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229198     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229199     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229200     Name = 'Maxbranch';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxbranch';
229201     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
229202     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229203     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229204     Name = 'Maxdepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxdepth';
229205     Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
229206     Default = "%nrbquote(6)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "6";
229207     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229208     Name = 'Nrules';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nrules';
229209     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229210     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229211     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229212     Name = 'Nsurrs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nsurrs';
229213     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
229214     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229215     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229216     Name = 'MissingValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingValue';
229217     Value = "%nrbquote(USEINSEARCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "USEINSEARCH";
229218     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229219     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229220     Name = 'UseVarOnce';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseVarOnce';
229221     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229222     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229223     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229224     Name = 'SplitPrecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SplitPrecision';
229225     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
229226     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229227     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229228     Name = 'Subtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Subtree';
229229     Value = "%nrbquote(ASSESSMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ASSESSMENT";
229230     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229231     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229232     Name = 'NSubtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NSubtree';
229233     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229234     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229235     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229236     Name = 'AssessMeasure';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessMeasure';
229237     Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
229238     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229239     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229240     Name = 'AssessPercentage';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessPercentage';
229241     Value = "%nrbquote(0.25)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.25";
229242     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229243     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229244     Name = 'NodeSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeSample';
229245     Value = "%nrbquote(20000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20000";
229246     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229247     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229248     Name = 'Exhaustive';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Exhaustive';
229249     Value = "%nrbquote(5000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5000";
229250     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229251     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229252     Name = 'Kass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Kass';
229253     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229254     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229255     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229256     Name = 'KassApply';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'KassApply';
229257     Value = "%nrbquote(BEFORE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BEFORE";
229258     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229259     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229260     Name = 'Depth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Depth';
229261     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229262     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229263     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229264     Name = 'Inputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Inputs';
229265     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229266     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229267     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229268     Name = 'NumInputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumInputs';
229269     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229270     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229271     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229272     Name = 'VarSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VarSelection';
229273     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229274     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229275     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229276     Name = 'Leafid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Leafid';
229277     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229278     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229279     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229280     Name = 'NodeRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeRole';
229281     Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
229282     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229283     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229284     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
229285     Value = "%nrbquote(DISK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DISK";
229286     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229287     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229288     Name = 'CV';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CV';
229289     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229290     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229291     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229292     Name = 'CVNIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVNIter';
229293     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
229294     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229295     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229296     Name = 'CVRepeat';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVRepeat';
229297     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229298     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229299     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229300     Name = 'CVSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVSeed';
229301     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
229302     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229303     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229304     Name = 'ObsImportance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ObsImportance';
229305     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229306     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229307     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229308     Name = 'NumSingleImp';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumSingleImp';
229309     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229310     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229311     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229312     Name = 'UseDecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseDecision';
229313     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229314     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229315     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229316     Name = 'UsePriors';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UsePriors';
229317     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229318     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229319     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229320     Name = 'ClassColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassColorBy';
229321     Value = "%nrbquote(PERCENTCORRECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENTCORRECT";
229322     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229323     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229324     Name = 'IntColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntColorBy';
229325     Value = "%nrbquote(AVG)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AVG";
229326     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229327     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229328     Name = 'ShowNodeId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowNodeId';
229329     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229330     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229331     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229332     Name = 'ShowValid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowValid';
229333     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229334     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229335     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229336     Name = 'Pred';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Pred';
229337     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229338     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229339     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229340     Name = 'Target';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Target';
229341     Value = "%nrbquote(ALL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ALL";
229342     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229343     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229344     Name = 'Count';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Count';
229345     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229346     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229347     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229348     Name = 'ProfitLoss';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitLoss';
229349     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
229350     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229351     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229352     Name = 'PercentCorrect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PercentCorrect';
229353     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229354     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229355     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229356     Name = 'AVG';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AVG';
229357     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229358     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229359     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229360     Name = 'RASE';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RASE';
229361     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229362     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229363     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229364     Name = 'CreateSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateSample';
229365     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229366     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229367     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229368     Name = 'SampleMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleMethod';
229369     Value = "%nrbquote(RANDOM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANDOM";
229370     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229371     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229372     Name = 'SampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSize';
229373     Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
229374     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229375     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229376     Name = 'SampleSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSeed';
229377     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
229378     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229379     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229380     Name = 'Criterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Criterion';
229381     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229382     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229383     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229384     Name = 'Dummy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Dummy';
229385     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229386     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229387     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229388     Name = 'Predict';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Predict';
229389     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229390     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229391     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229392     Name = 'ImportedTreeData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportedTreeData';
229393     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
229394     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229395     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229396     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
229397     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
229398     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
229399     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
229400     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
229401     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229402     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229402   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
229403     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
229404     Value = "DecisionTree";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DecisionTree";
229405     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
229406     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
229407     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229408     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
229409     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 63 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.22 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D2";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D2 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.13 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 21 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 42 and _n_ le 63 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 63 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 21 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Tree3_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree3_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS2.TREE3_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
23 OUTPUT;
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D2";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D2 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree3_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Tree3" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE3_CMETA_TRAIN.
      WHERE UPCASE(creator)='Tree3';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Tree3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Tree3_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey33
MPRINT(EM_REPORT_NODE):   from EMWS2.Tree3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Tree3_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 8 observations read from the data set EMWS2.TREE3_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D2";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D2 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==14 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 18 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree3_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "NODETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 1 observations read from the data set EMWS2.TREE3_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B2D2" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent =
"PARENT" nodetext = "NODETEXT" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth =
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.39 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==16 : Viewtype = ICICLE ICICLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree3_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2="PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3="NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var4="N";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 1 observations read from the data set EMWS2.TREE3_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B2D2" title3="Treemap");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Icicle options( id = "NODE" parent = "PARENT"
nodecolor = "NODECOLOR" nodesize = "N" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.33 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==17 : Viewtype = AREABAR VARWIDTH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==18 : Viewtype = ITERATIONPLOT SUBTREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=RegTree B2D2";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Tree3_OUTSEQ(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.TREE3_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
9 18 6 15
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS2.Tree3_OUTSEQ
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=RegTree B2D2";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_ASE_ / markerattrs=(size=0) display=all
name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VASE_ / markerattrs=(size=0) display=all
name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=1;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_MISC_ / markerattrs=(size=0) display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=1;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Tree3_OUTSEQ out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _NW_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.TREE3_OUTSEQ.
NOTE: The data set WORK._TMPRPT_ITERDAT has 4 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.32 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==19 : Viewtype = RESPONSEBAR LEAFSTATS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==20 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree3_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==21 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Tree3_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.TREE3_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree B2D2";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.46 seconds
      cpu time            0.23 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.46 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.42 seconds
      cpu time            0.26 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree3_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==22 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree3_emreport(where=(id eq 23));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE3_EMREPORT.
      WHERE id=23;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree3_emreport(where=(id eq 23)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==23 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Tree3_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.TREE3_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 2 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.38 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 2 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=RegTree B2D2";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.37 seconds
      cpu time            0.23 seconds
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.39 seconds
      cpu time            0.25 seconds
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 2 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B2D2";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B2D2 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Tree4")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='TREE4';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
229410     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
229411     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
229411   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
229411   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
229412     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
229413     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
229414     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
229415     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
229416     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229417     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229418     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229419     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229420     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229421     output;
MPRINT(EM_GETTRAINPATH):   output;
229422     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
229423     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
229424     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
229425     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
229426     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229427     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229428     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
229429     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229430     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229431     output;
MPRINT(EM_GETTRAINPATH):   output;
229432     nodelabel="Tree4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree4";
229433     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
229434     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
229435     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
229436     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
229437     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229438     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229439     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229440     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229441     output;
MPRINT(EM_GETTRAINPATH):   output;
229442     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Tree4"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=RegTree B3D6";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Tree4";
MPRINT(EM_REPORT_NODE):   put "Node label = RegTree B3D6";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree4";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree4\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
229443     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229444     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229445     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229445   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
229445   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
229446     Name = 'ToolType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ToolType';
229447     Value = "%nrbquote(MODEL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MODEL";
229448     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229449     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229450     Name = 'TrainMode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainMode';
229451     Value = "%nrbquote(BATCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BATCH";
229452     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229453     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229454     Name = 'ImportModel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportModel';
229455     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229456     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229457     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229458     Name = 'Freeze';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Freeze';
229459     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229460     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229461     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229462     Name = 'UseMultipleTarget';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseMultipleTarget';
229463     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229464     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229465     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229466     Name = 'Precision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Precision';
229467     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
229468     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229469     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229470     Name = 'IntervalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalCriterion';
229471     Value = "%nrbquote(PROBF)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBF";
229472     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229473     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229474     Name = 'NominalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NominalCriterion';
229475     Value = "%nrbquote(PROBCHISQ)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROBCHISQ";
229476     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229477     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229478     Name = 'OrdinalCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OrdinalCriterion';
229479     Value = "%nrbquote(ENTROPY)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ENTROPY";
229480     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229481     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229482     Name = 'SigLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SigLevel';
229483     Value = "%nrbquote(0.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.2";
229484     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229485     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229486     Name = 'Splitsize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Splitsize';
229487     Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
229488     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229489     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229490     Name = 'LeafSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LeafSize';
229491     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229492     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229493     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229494     Name = 'MinCatSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinCatSize';
229495     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229496     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229497     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229498     Name = 'Maxbranch';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxbranch';
229499     Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
229500     Default = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "2";
229501     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229502     Name = 'Maxdepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxdepth';
229503     Value = "%nrbquote(6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "6";
229504     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229505     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229506     Name = 'Nrules';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nrules';
229507     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229508     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229509     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229510     Name = 'Nsurrs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nsurrs';
229511     Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
229512     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229513     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229514     Name = 'MissingValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingValue';
229515     Value = "%nrbquote(USEINSEARCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "USEINSEARCH";
229516     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229517     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229518     Name = 'UseVarOnce';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseVarOnce';
229519     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229520     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229521     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229522     Name = 'SplitPrecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SplitPrecision';
229523     Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
229524     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229525     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229526     Name = 'Subtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Subtree';
229527     Value = "%nrbquote(ASSESSMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ASSESSMENT";
229528     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229529     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229530     Name = 'NSubtree';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NSubtree';
229531     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229532     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229533     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229534     Name = 'AssessMeasure';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessMeasure';
229535     Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
229536     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229537     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229538     Name = 'AssessPercentage';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessPercentage';
229539     Value = "%nrbquote(0.25)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.25";
229540     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229541     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229542     Name = 'NodeSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeSample';
229543     Value = "%nrbquote(20000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20000";
229544     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229545     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229546     Name = 'Exhaustive';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Exhaustive';
229547     Value = "%nrbquote(5000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5000";
229548     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229549     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229550     Name = 'Kass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Kass';
229551     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229552     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229553     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229554     Name = 'KassApply';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'KassApply';
229555     Value = "%nrbquote(BEFORE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BEFORE";
229556     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229557     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229558     Name = 'Depth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Depth';
229559     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229560     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229561     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229562     Name = 'Inputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Inputs';
229563     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229564     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229565     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229566     Name = 'NumInputs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumInputs';
229567     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229568     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229569     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229570     Name = 'VarSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VarSelection';
229571     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229572     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229573     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229574     Name = 'Leafid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Leafid';
229575     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229576     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229577     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229578     Name = 'NodeRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NodeRole';
229579     Value = "%nrbquote(SEGMENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SEGMENT";
229580     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229581     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229582     Name = 'Performance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Performance';
229583     Value = "%nrbquote(DISK)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DISK";
229584     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229585     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229586     Name = 'CV';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CV';
229587     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229588     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229589     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229590     Name = 'CVNIter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVNIter';
229591     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
229592     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229593     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229594     Name = 'CVRepeat';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVRepeat';
229595     Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
229596     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229597     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229598     Name = 'CVSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CVSeed';
229599     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
229600     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229601     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229602     Name = 'ObsImportance';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ObsImportance';
229603     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229604     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229605     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229606     Name = 'NumSingleImp';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumSingleImp';
229607     Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
229608     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229609     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229610     Name = 'UseDecision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseDecision';
229611     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229612     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229613     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229614     Name = 'UsePriors';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UsePriors';
229615     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229616     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229617     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229618     Name = 'ClassColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassColorBy';
229619     Value = "%nrbquote(PERCENTCORRECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENTCORRECT";
229620     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229621     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229622     Name = 'IntColorBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntColorBy';
229623     Value = "%nrbquote(AVG)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "AVG";
229624     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229625     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229626     Name = 'ShowNodeId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowNodeId';
229627     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229628     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229629     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229630     Name = 'ShowValid';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ShowValid';
229631     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229632     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229633     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229634     Name = 'Pred';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Pred';
229635     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229636     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229637     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229638     Name = 'Target';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Target';
229639     Value = "%nrbquote(ALL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ALL";
229640     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229641     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229642     Name = 'Count';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Count';
229643     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229644     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229645     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229646     Name = 'ProfitLoss';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitLoss';
229647     Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
229648     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229649     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229650     Name = 'PercentCorrect';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PercentCorrect';
229651     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229652     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229653     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229654     Name = 'AVG';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AVG';
229655     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229656     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229657     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229658     Name = 'RASE';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RASE';
229659     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229660     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229661     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229662     Name = 'CreateSample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateSample';
229663     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229664     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229665     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229666     Name = 'SampleMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleMethod';
229667     Value = "%nrbquote(RANDOM)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RANDOM";
229668     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229669     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229670     Name = 'SampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSize';
229671     Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
229672     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229673     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229674     Name = 'SampleSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSeed';
229675     Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
229676     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229677     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229678     Name = 'Criterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Criterion';
229679     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229680     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229681     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229682     Name = 'Dummy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Dummy';
229683     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229684     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229685     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229686     Name = 'Predict';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Predict';
229687     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229688     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229689     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229690     Name = 'ImportedTreeData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportedTreeData';
229691     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
229692     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229693     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229694     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
229695     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
229696     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
229697     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 62 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
229698     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
229699     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229700     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229700   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
229701     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
229702     Value = "DecisionTree";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DecisionTree";
229703     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
229704     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
229705     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229706     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
229707     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 62 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 63 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.18 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B3D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B3D6 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.36 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 21 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 42 and _n_ le 63 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-21*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 63 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 21 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 21 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 21 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Tree4_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree4_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 23 observations read from the data set EMWS2.TREE4_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
16 OUTPUT;
18 OUTPUT;
23 OUTPUT;
NOTE: There were 23 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B3D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B3D6 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Tree4_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Tree4" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE4_CMETA_TRAIN.
      WHERE UPCASE(creator)='Tree4';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.43 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Tree4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Tree4_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey33
MPRINT(EM_REPORT_NODE):   from EMWS2.Tree4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS2.Tree4_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate"
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error"
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error"
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error"
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 8 observations read from the data set EMWS2.TREE4_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B3D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B3D6 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 8 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 8 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = TEXT ENGLISHRULES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==14 : Viewtype = DATA IMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 18 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree4_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1 = "NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2 = "PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3 = "NODETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var4 = "NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var5 = "ABOVETEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var6 = "BELOWTEXT";
MPRINT(EM_REPORT_SGSILK):   dynamic var7 = "LINKWIDTH";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 15 observations read from the data set EMWS2.TREE4_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B3D6" title3="Tree Diagram");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=DecisionTree options( id = "NODE" parent =
"PARENT" nodetext = "NODETEXT" abovetext = "ABOVETEXT" belowtext = "BELOWTEXT" linkwidth =
"LINKWIDTH" nodecolor = "NODECOLOR" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.46 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = ICICLE ICICLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGSILK):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl
file="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
data="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml" encoding="utf-8"
style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml
MPRINT(EM_REPORT_SGSILK):   proc sgrender data=EMWS2.Tree4_TREE_PLOT template=dataonly;
MPRINT(EM_REPORT_SGSILK):   dynamic var1="NODE";
MPRINT(EM_REPORT_SGSILK):   dynamic var2="PARENT";
MPRINT(EM_REPORT_SGSILK):   dynamic var3="NODECOLOR";
MPRINT(EM_REPORT_SGSILK):   dynamic var4="N";
MPRINT(EM_REPORT_SGSILK):   run;
 
WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 15 observations read from the data set EMWS2.TREE4_TREE_PLOT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(start) options(title="SAS
Enterprise Miner Report" title2="Node=RegTree B3D6" title3="Treemap");
BeginGraph
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=Icicle options( id = "NODE" parent = "PARENT"
nodecolor = "NODECOLOR" nodesize = "N" );
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_SGSILK):   ods tagsets.gtl close;
MPRINT(EM_REPORT_SGSILK):   ods PDF select ALL;
MPRINT(EM_REPORT_SGSILK):   proc sgsilk
viewxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\view.xml"
dataxml="\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\data.xml";
MPRINT(EM_REPORT_SGSILK):   run;
 
NOTE: PROCEDURE SGSILK used (Total process time):
      real time           0.36 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_REPORT_SGSILK):   title1;
MPRINT(EM_REPORT_SGSILK):   title2;
MPRINT(EM_REPORT_SGSILK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = AREABAR VARWIDTH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==18 : Viewtype = ITERATIONPLOT SUBTREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=RegTree B3D6";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS2.Tree4_OUTSEQ(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Numeric values have been converted to character values at the places given by:
      (Line):(Column).
      18:139   21:125   23:123   26:124
NOTE: There were 2 observations read from the data set EMWS2.TREE4_OUTSEQ.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
9 18 6 15
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS2.Tree4_OUTSEQ
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=RegTree B3D6";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_ASE_ / markerattrs=(size=0) display=all
name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VASE_ / markerattrs=(size=0) display=all
name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=9;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_MISC_ / markerattrs=(size=0) display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_NW_ y=_VMISC_ / markerattrs=(size=0)
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=9;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS2.Tree4_OUTSEQ out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _NW_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 118 observations read from the data set EMWS2.TREE4_OUTSEQ.
NOTE: The data set WORK._TMPRPT_ITERDAT has 118 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: There were 118 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.35 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;
 
NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==19 : Viewtype = RESPONSEBAR LEAFSTATS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==20 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree4_emreport(where=(id eq 21)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==21 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.Tree4_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set EMWS2.TREE4_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree B3D6";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.50 seconds
      cpu time            0.32 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.46 seconds
      cpu time            0.28 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.52 seconds
      cpu time            0.32 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 22));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=22;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree4_emreport(where=(id eq 22)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==22 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Tree4_emreport(where=(id eq 23));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.TREE4_EMREPORT.
      WHERE id=23;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.Tree4_emreport(where=(id eq 23)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==23 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS2.Tree4_EMSCOREDIST(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.TREE4_EMSCOREDIST.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_SCOREDIST has 4 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum',
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 4 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=RegTree B3D6";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.50 seconds
      cpu time            0.34 seconds
 
NOTE: There were 4 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents /
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents /
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.44 seconds
      cpu time            0.28 seconds
 
NOTE: There were 4 observations read from the data set WORK._TMPDAT.
 
MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 4 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree B3D6";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree B3D6 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("MdlComp2")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='MDLCOMP2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
229708     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
229709     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
229709   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
229709   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
229710     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
229711     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
229712     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
229713     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
229714     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229715     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229716     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229717     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229718     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229719     output;
MPRINT(EM_GETTRAINPATH):   output;
229720     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
229721     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
229722     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
229723     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
229724     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229725     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229726     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
229727     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229728     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229729     output;
MPRINT(EM_GETTRAINPATH):   output;
229730     nodelabel="Reg2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Reg2";
229731     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
229732     description="Regression";
MPRINT(EM_GETTRAINPATH):   description="Regression";
229733     component="Regression";
MPRINT(EM_GETTRAINPATH):   component="Regression";
229734     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
229735     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229736     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229737     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229738     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229739     output;
MPRINT(EM_GETTRAINPATH):   output;
229740     nodelabel="MdlComp2";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp2";
229741     parent="Reg2";
MPRINT(EM_GETTRAINPATH):   parent="Reg2";
229742     description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
229743     component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
229744     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
229745     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229746     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
229747     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229748     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229749     output;
MPRINT(EM_GETTRAINPATH):   output;
229750     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("MdlComp2"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=MLR ModelComparison";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = MdlComp2";
MPRINT(EM_REPORT_NODE):   put "Node label = MLR ModelComparison";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Reg2 => MdlComp2";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp2\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
229751     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229752     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229753     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229753   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
229753   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
229754     Name = 'NumberOfReportedLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberOfReportedLevels';
229755     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229756     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229757     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229758     Name = 'NormalizeReportingVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NormalizeReportingVariables';
229759     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229760     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229761     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229762     Name = 'DecileBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DecileBin';
229763     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
229764     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229765     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229766     Name = 'LiftEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LiftEpsilon';
229767     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229768     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229769     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229770     Name = 'ProfitEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitEpsilon';
229771     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229772     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229773     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229774     Name = 'RoiEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RoiEpsilon';
229775     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229776     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229777     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229778     Name = 'ScoreDistBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ScoreDistBin';
229779     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
229780     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229781     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229782     Name = 'RocChart';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocChart';
229783     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229784     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229785     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229786     Name = 'RocEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocEpsilon';
229787     Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
229788     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229789     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229790     Name = 'AssessAllTargetLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessAllTargetLevels';
229791     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229792     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229793     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229794     Name = 'SelectionData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionData';
229795     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229796     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229797     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229798     Name = 'HPCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HPCriteria';
229799     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229800     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229801     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229802     Name = 'intervalViyaCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'intervalViyaCriteria';
229803     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229804     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229805     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229806     Name = 'classViyaCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'classViyaCriteria';
229807     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229808     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229809     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229810     Name = 'SelectionTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionTable';
229811     Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
229812     Default = "%nrbquote(TABLE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TABLE";
229813     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229814     Name = 'SelectionCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriteria';
229815     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229816     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229817     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229818     Name = 'SelectionDepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDepth';
229819     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
229820     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229821     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229822     Name = 'NumberofBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberofBins';
229823     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
229824     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229825     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229826     Name = 'RecomputeAssess';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RecomputeAssess';
229827     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229828     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229829     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229830     Name = 'TargetName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetName';
229831     Value = "%nrbquote(Diabetes_Prediction)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Diabetes_Prediction";
229832     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229833     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229834     Name = 'ModelId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelId';
229835     Value = "%nrbquote(Reg2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Reg2";
229836     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229837     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229838     Name = 'ModelDescription';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDescription';
229839     Value = "%nrbquote(Forward Regression)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Forward Regression";
229840     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229841     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229842     Name = 'ModelCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelCriteria';
229843     Value = "%nrbquote(Valid: Misclassification Rate)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Valid: Misclassification Rate";
229844     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229845     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229846     Name = 'StatisticUsed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StatisticUsed';
229847     Value = "%nrbquote(_VMISC_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_VMISC_";
229848     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229849     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229850     Name = 'TargetLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetLabel';
229851     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
229852     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229853     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229854     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 25 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
229855     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
229856     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
229857     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 25 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 25 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
229858     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
229859     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229860     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229860   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
229861     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
229862     Value = "ModelCompare";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ModelCompare";
229863     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
229864     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
229865     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229866     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
229867     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 25 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=MLR ModelComparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=MLR ModelComparison Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 9 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 9 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 27 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 26 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 9 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 9 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.MdlComp2_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.MdlComp2_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP2_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=MLR ModelComparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=MLR ModelComparison Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.MdlComp2_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "MdlComp2" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP2_CMETA_TRAIN.
      WHERE UPCASE(creator)='MdlComp2';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.MdlComp2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from
EMWS2.MdlComp2_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey18
MPRINT(EM_REPORT_NODE):   from EMWS2.MdlComp2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA FITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data _null_ ;
MPRINT(EM_REPORT_DATA):   set EMWS2.MdlComp2_EMOUTFIT (obs=2) end=eof ;
MPRINT(EM_REPORT_DATA):   if eof then do ;
MPRINT(EM_REPORT_DATA):   call symput("_misc_" , strip(put(_misc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_vmisc_" , strip(put(_vmisc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_aur_" , strip(put(_aur_, best.)));
MPRINT(EM_REPORT_DATA):   call symput("_gini_" , strip(put(_gini_, best.)));
MPRINT(EM_REPORT_DATA):   end;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=MLR ModelComparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Fit Statistics Table";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=MLR ModelComparison Fit Statistics Table";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS2.MdlComp2_EMOUTFIT(obs=100) noobs label
contents='';
MPRINT(EM_REPORT_DATA):   id USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_ ;
MPRINT(EM_REPORT_DATA):   var _ASE_ _MISC_ KS _VASE_ _VMISC_ VKS ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.MDLCOMP2_EMOUTFIT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = DATA COMPAREFIT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==14 : Viewtype = LATTICE CLASSIFICATION
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct MODELDESCRIPTION) into :numx from
EMWS2.MdlComp2_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numy from
EMWS2.MdlComp2_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=MLR ModelComparison";
MPRINT(EM_REPORT_LATTICE):   title3 "Classification Chart";
MPRINT(EM_REPORT_LATTICE):   title4 "TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel
data=EMWS2.MdlComp2_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and
_TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   panelby DATAROLE MODELDESCRIPTION / columns=3 rows=3
uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar FROM / response=PERCENT group=CORRECTTEXT ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.91 seconds
      cpu time            0.43 seconds
 
NOTE: There were 48 observations read from the data set EMWS2.MDLCOMP2_EMCLASSIFICATION.
      WHERE (TARGET='Diabetes_Prediction') and (_TYPE_='PREDICTION');
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp2_emreport(where=(id eq 15)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = LATTICE ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.MdlComp2_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 240 observations read from the data set EMWS2.MDLCOMP2_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 240 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 38 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 38 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sql noprint;
MPRINT(EM_REPORT_EMRANK):   select count(distinct datarole) into :ndataroles from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   select distinct datarole into :drole1-:
MPRINT(LEFT):  drole3
MPRINT(EM_REPORT_EMRANK):   from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.32 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TEST")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TEST';
NOTE: The data set WORK._TMP_EMRP has 80 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=MLR ModelComparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TEST";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.45 seconds
      cpu time            0.20 seconds
 
NOTE: There were 80 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TRAIN")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TRAIN';
NOTE: The data set WORK._TMP_EMRP has 80 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=MLR ModelComparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TRAIN";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.41 seconds
      cpu time            0.21 seconds
 
NOTE: There were 80 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "VALIDATE"))
out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='VALIDATE';
NOTE: The data set WORK._TMP_EMRP has 80 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=MLR ModelComparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=VALIDATE";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.35 seconds
      cpu time            0.20 seconds
 
NOTE: There were 80 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp2_emreport(where=(id eq 16)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp2_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP2_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp2_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("MdlComp")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='MDLCOMP';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
229868     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
229869     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
229869   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
229869   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
229870     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
229871     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
229872     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
229873     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
229874     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229875     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229876     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229877     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229878     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229879     output;
MPRINT(EM_GETTRAINPATH):   output;
229880     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
229881     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
229882     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
229883     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
229884     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
229885     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229886     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
229887     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229888     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229889     output;
MPRINT(EM_GETTRAINPATH):   output;
229890     nodelabel="Tree4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree4";
229891     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
229892     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
229893     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
229894     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
229895     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229896     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
229897     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229898     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229899     output;
MPRINT(EM_GETTRAINPATH):   output;
229900     nodelabel="MdlComp";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp";
229901     parent="Tree4";
MPRINT(EM_GETTRAINPATH):   parent="Tree4";
229902     description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
229903     component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
229904     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
229905     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
229906     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
229907     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
229908     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
229909     output;
MPRINT(EM_GETTRAINPATH):   output;
229910     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("MdlComp"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=RegTree Model Comparison";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = MdlComp";
MPRINT(EM_REPORT_NODE):   put "Node label = RegTree Model Comparison";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree4 => MdlComp";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
229911     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
229912     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
229913     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
229913   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
229913   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
229914     Name = 'NumberOfReportedLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberOfReportedLevels';
229915     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229916     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229917     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229918     Name = 'NormalizeReportingVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NormalizeReportingVariables';
229919     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229920     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229921     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229922     Name = 'DecileBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DecileBin';
229923     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
229924     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229925     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229926     Name = 'LiftEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LiftEpsilon';
229927     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229928     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229929     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229930     Name = 'ProfitEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitEpsilon';
229931     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229932     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229933     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229934     Name = 'RoiEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RoiEpsilon';
229935     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
229936     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229937     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229938     Name = 'ScoreDistBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ScoreDistBin';
229939     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
229940     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229941     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229942     Name = 'RocChart';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocChart';
229943     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
229944     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229945     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229946     Name = 'RocEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocEpsilon';
229947     Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
229948     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229949     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229950     Name = 'AssessAllTargetLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessAllTargetLevels';
229951     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229952     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229953     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229954     Name = 'SelectionData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionData';
229955     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229956     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229957     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229958     Name = 'HPCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HPCriteria';
229959     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229960     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229961     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229962     Name = 'intervalViyaCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'intervalViyaCriteria';
229963     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229964     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229965     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229966     Name = 'classViyaCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'classViyaCriteria';
229967     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229968     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229969     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229970     Name = 'SelectionTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionTable';
229971     Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
229972     Default = "%nrbquote(TABLE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TABLE";
229973     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229974     Name = 'SelectionCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriteria';
229975     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
229976     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229977     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229978     Name = 'SelectionDepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDepth';
229979     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
229980     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229981     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229982     Name = 'NumberofBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberofBins';
229983     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
229984     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229985     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229986     Name = 'RecomputeAssess';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RecomputeAssess';
229987     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
229988     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229989     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229990     Name = 'TargetName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetName';
229991     Value = "%nrbquote(Diabetes_Prediction)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Diabetes_Prediction";
229992     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229993     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229994     Name = 'ModelId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelId';
229995     Value = "%nrbquote(Tree4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Tree4";
229996     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
229997     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
229998     Name = 'ModelDescription';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDescription';
229999     Value = "%nrbquote(RegTree B3D6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RegTree B3D6";
230000     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230001     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230002     Name = 'ModelCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelCriteria';
230003     Value = "%nrbquote(Valid: Misclassification Rate)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Valid: Misclassification Rate";
230004     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230005     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230006     Name = 'StatisticUsed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StatisticUsed';
230007     Value = "%nrbquote(_VMISC_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_VMISC_";
230008     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230009     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230010     Name = 'TargetLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetLabel';
230011     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230012     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230013     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230014     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 25 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.03 seconds
 
 
230015     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
230016     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
230017     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 25 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 25 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
230018     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
230019     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230020     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230020   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
230021     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
230022     Value = "ModelCompare";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ModelCompare";
230023     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
230024     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
230025     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230026     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
230027     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 25 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.37 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree Model Comparison Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 9 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 9 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 27 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 26 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 9 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 9 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.MdlComp_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.MdlComp_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree Model Comparison Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.MdlComp_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "MdlComp" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
      WHERE UPCASE(creator)='MdlComp';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
20 The SAS System
 
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.MdlComp_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from
EMWS2.MdlComp_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey18
MPRINT(EM_REPORT_NODE):   from EMWS2.MdlComp_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==12 : Viewtype = DATA FITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data _null_ ;
MPRINT(EM_REPORT_DATA):   set EMWS2.MdlComp_EMOUTFIT (obs=2) end=eof ;
MPRINT(EM_REPORT_DATA):   if eof then do ;
MPRINT(EM_REPORT_DATA):   call symput("_misc_" , strip(put(_misc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_vmisc_" , strip(put(_vmisc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_aur_" , strip(put(_aur_, best.)));
MPRINT(EM_REPORT_DATA):   call symput("_gini_" , strip(put(_gini_, best.)));
MPRINT(EM_REPORT_DATA):   end;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=RegTree Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Fit Statistics Table";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=RegTree Model Comparison Fit Statistics
Table";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS2.MdlComp_EMOUTFIT(obs=100) noobs label
contents='';
MPRINT(EM_REPORT_DATA):   id USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_ ;
MPRINT(EM_REPORT_DATA):   var _ASE_ _MISC_ KS _VASE_ _VMISC_ VKS ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==13 : Viewtype = DATA COMPAREFIT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==14 : Viewtype = LATTICE CLASSIFICATION
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct MODELDESCRIPTION) into :numx from
EMWS2.MdlComp_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numy from
EMWS2.MdlComp_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=RegTree Model Comparison";
MPRINT(EM_REPORT_LATTICE):   title3 "Classification Chart";
MPRINT(EM_REPORT_LATTICE):   title4 "TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel
data=EMWS2.MdlComp_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and
_TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   panelby DATAROLE MODELDESCRIPTION / columns=3 rows=3
uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar FROM / response=PERCENT group=CORRECTTEXT ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.80 seconds
      cpu time            0.46 seconds
 
NOTE: There were 42 observations read from the data set EMWS2.MDLCOMP_EMCLASSIFICATION.
      WHERE (TARGET='Diabetes_Prediction') and (_TYPE_='PREDICTION');
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp_emreport(where=(id eq 15)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = LATTICE ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.MdlComp_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 240 observations read from the data set EMWS2.MDLCOMP_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 240 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 38 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 38 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sql noprint;
MPRINT(EM_REPORT_EMRANK):   select count(distinct datarole) into :ndataroles from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   select distinct datarole into :drole1-:
MPRINT(LEFT):  drole3
MPRINT(EM_REPORT_EMRANK):   from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TEST")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TEST';
NOTE: The data set WORK._TMP_EMRP has 80 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TEST";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.58 seconds
      cpu time            0.23 seconds
 
NOTE: There were 80 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TRAIN")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TRAIN';
NOTE: The data set WORK._TMP_EMRP has 80 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TRAIN";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.40 seconds
      cpu time            0.23 seconds
 
NOTE: There were 80 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "VALIDATE"))
out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='VALIDATE';
NOTE: The data set WORK._TMP_EMRP has 80 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=RegTree Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=VALIDATE";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.37 seconds
      cpu time            0.20 seconds
 
NOTE: There were 80 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp_emreport(where=(id eq 16)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==16 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Ids4")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='IDS4';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
230028     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
230029     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
230029   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
230029   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
230030     nodelabel="Ids4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids4";
230031     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
230032     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
230033     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
230034     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
230035     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230036     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
230037     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230038     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230039     output;
MPRINT(EM_GETTRAINPATH):   output;
230040     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Ids4"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=SCOREDIABETES_TRAIN";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Ids4";
MPRINT(EM_REPORT_NODE):   put "Node label = SCOREDIABETES_TRAIN";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids4";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Ids4\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
230041     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230042     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230043     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230043   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
230043   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
230044     Name = 'DataSource';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSource';
230045     Value = "%nrbquote(scorediabetestrain)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "scorediabetestrain";
230046     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230047     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230048     Name = 'Scope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Scope';
230049     Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
230050     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230051     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230052     Name = 'Role';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Role';
230053     Value = "%nrbquote(RAW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RAW";
230054     Default = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TRAIN";
230055     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230056     Name = 'Library';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Library';
230057     Value = "%nrbquote(ZETADATA)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADATA";
230058     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230059     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230060     Name = 'Table';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Table';
230061     Value = "%nrbquote(SCOREDIABETES_TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SCOREDIABETES_TRAIN";
230062     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230063     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230064     Name = 'NCols';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NCols';
230065     Value = "%nrbquote(22)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "22";
230066     Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
230067     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230068     Name = 'NObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NObs';
230069     Value = "%nrbquote(50144)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50144";
230070     Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
230071     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230072     Name = 'NBytes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NBytes';
230073     Value = "%nrbquote(9307136)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "9307136";
230074     Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
230075     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230076     Name = 'Segment';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Segment';
230077     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230078     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230079     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230080     Name = 'DataSourceRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSourceRole';
230081     Value = "%nrbquote(RAW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RAW";
230082     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230083     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230084     Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
230085     Value = "%nrbquote(VIEW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VIEW";
230086     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230087     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230088     Name = 'ComputeStatistics';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ComputeStatistics';
230089     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230090     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230091     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230092     Name = 'DataSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSelection';
230093     Value = "%nrbquote(DATASOURCE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATASOURCE";
230094     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230095     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230096     Name = 'NewTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewTable';
230097     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230098     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230099     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230100     Name = 'MetaAdvisor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MetaAdvisor';
230101     Value = "%nrbquote(BASIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BASIC";
230102     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230103     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230104     Name = 'ApplyIntervalLevelLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyIntervalLevelLowerLimit';
230105     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230106     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230107     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230108     Name = 'IntervalLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalLowerLimit';
230109     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
230110     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230111     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230112     Name = 'ApplyMaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxPercentMissing';
230113     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230114     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230115     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230116     Name = 'MaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxPercentMissing';
230117     Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
230118     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230119     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230120     Name = 'ApplyMaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxClassLevels';
230121     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230122     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230123     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230124     Name = 'MaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxClassLevels';
230125     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
230126     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230127     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230128     Name = 'IdentifyEmptyColumns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IdentifyEmptyColumns';
230129     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230130     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230131     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230132     Name = 'VariableValidation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VariableValidation';
230133     Value = "%nrbquote(STRICT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STRICT";
230134     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230135     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230136     Name = 'NewVariableRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewVariableRole';
230137     Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
230138     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230139     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230140     Name = 'DropMapVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DropMapVariables';
230141     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230142     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230143     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230144     Name = 'DsId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsId';
230145     Value = "%nrbquote(scorediabetestrain)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "scorediabetestrain";
230146     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230147     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230148     Name = 'DsSampleName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleName';
230149     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230150     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230151     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230152     Name = 'DsSampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSizeType';
230153     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230154     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230155     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230156     Name = 'DsSampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSize';
230157     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230158     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230159     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230160     Name = 'DsCreatedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreatedBy';
230161     Value = "%nrbquote(shre2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "shre2";
230162     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230163     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230164     Name = 'DsCreateDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreateDate';
230165     Value = "%nrbquote(2025130005.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2025130005.1";
230166     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230167     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230168     Name = 'DsModifiedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifiedBy';
230169     Value = "%nrbquote(shre2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "shre2";
230170     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230171     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230172     Name = 'DsModifyDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifyDate';
230173     Value = "%nrbquote(2025130005.4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2025130005.4";
230174     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230175     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230176     Name = 'DsScope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsScope';
230177     Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
230178     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230179     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230180     Name = 'Sample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sample';
230181     Value = "%nrbquote(D)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "D";
230182     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230183     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230184     Name = 'SampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeType';
230185     Value = "%nrbquote(PERCENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENT";
230186     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230187     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230188     Name = 'SampleSizePercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizePercent';
230189     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
230190     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230191     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230192     Name = 'SampleSizeObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeObs';
230193     Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
230194     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230195     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230196     Name = 'DBPassThrough';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DBPassThrough';
230197     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230198     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230199     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230200     Name = 'Description';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Description';
230201     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230202     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230203     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230204     Name = 'Data';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Data';
230205     Value = "%nrbquote(ZETADATA.SCOREDIABETES_TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ZETADATA.SCOREDIABETES_TRAIN";
230206     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230207     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230208     Name = 'CMeta';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CMeta';
230209     Value = "%nrbquote(WORK.M0_AXJ7R)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "WORK.M0_AXJ7R";
230210     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230211     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230212     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
230213     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
230214     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
230215     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
230216     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
230217     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230218     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230218   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
230219     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
230220     Value = "DataSource";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DataSource";
230221     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
230222     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
230223     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230224     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
230225     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 43 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=SCOREDIABETES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=SCOREDIABETES_TRAIN Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 28 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 28 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 43 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 14 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 14 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc transpose data=EMWS2.Ids4_EMTMETADEFAULT out=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   var _all_;
MPRINT(EM_REPORT_DATASOURCE):   format crdate NLDATM24.0 modate NLDATM24.0;
MPRINT(EM_REPORT_DATASOURCE):   run;
 
NOTE: Numeric variables in the input data set will be converted to character in the output data
      set.
NOTE: There were 1 observations read from the data set EMWS2.IDS4_EMTMETADEFAULT.
NOTE: The data set WORK.TEMP_SOURCE has 15 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_DATASOURCE):   data temp_source;
MPRINT(EM_REPORT_DATASOURCE):   set temp_source;
MPRINT(EM_REPORT_DATASOURCE):   rename col1 = value;
MPRINT(EM_REPORT_DATASOURCE):   col1 = right(col1);
MPRINT(EM_REPORT_DATASOURCE):   format label $64.;
MPRINT(EM_REPORT_DATASOURCE):   label col1 = "Value" label = "Attribute" ;
MPRINT(EM_REPORT_DATASOURCE):   *** get the localized label column;
MPRINT(EM_REPORT_DATASOURCE):   _name_=upcase(_name_) ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMNAME" then label="Data Name" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMTYPE" then label="Data Type" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMLABEL" then label="Data Label" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "TYPEMEM" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ENGINE" then label="Engine" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "CRDATE" then label="Date Created" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MODATE" then label="Date Modified" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NOBS" then label="Number Rows" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NCOLS" then label="Number Columns" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NBYTES" then label="Data Size" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ROLE" then label="Role" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "USEEXTERNALDATA" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SAMPLINGRATE" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SEGMENT" then label="Segment" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "LIBNAME" then label="Data Library" ;
MPRINT(EM_REPORT_DATASOURCE):   run;
 
NOTE: There were 15 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK.TEMP_SOURCE has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=SCOREDIABETES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Data Attributes";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=SCOREDIABETES_TRAIN Data Attributes";
MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=temp_source
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "LABEL" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( LABEL=LABEL1 VALUE=VALUE1))
_tmpms_dat2(rename=( LABEL=LABEL2 VALUE=VALUE2)) _tmpms_dat3(rename=( LABEL=LABEL3
VALUE=VALUE3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set temp_source;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep LABEL VALUE numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 4 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 4 and _n_ le 8 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 8 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 12 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.30 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var LABEL1 VALUE1 LABEL2 VALUE2 LABEL3 VALUE3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 4 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc delete data=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   run;
 
NOTE: Deleting WORK.TEMP_SOURCE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_DATASOURCE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Ids4_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Ids4_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 22 observations read from the data set EMWS2.IDS4_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=EMWS2.Ids4_variableset out=_tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;
 
NOTE: There were 22 observations read from the data set EMWS2.IDS4_VARIABLESET.
NOTE: The data set WORK._TMPVL_VS has 22 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   update _tmpvl_pdv _tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   label type = "Type" format = "Format" creator = "Creator" family =
"Family" label = "Label" ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: There were 22 observations read from the data set WORK._TMPVL_VS.
NOTE: The data set WORK._TMPVL_PDV has 22 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=SCOREDIABETES_TRAIN";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variables List";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=SCOREDIABETES_TRAIN Variables List";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pdv noobs label contents='';
MPRINT(EM_REPORT_VARS):   var name label role level type length format creator;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 22 observations read from the data set WORK._TMPVL_PDV.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Ids4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Ids4_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey6
MPRINT(EM_REPORT_NODE):   from EMWS2.Ids4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Ids4_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS4_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype = DATA EMSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("MdlComp3")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='MDLCOMP3';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
230226     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
230227     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
230227   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
230227   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
230228     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
230229     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
230230     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
230231     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
230232     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
230233     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230234     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
230235     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230236     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230237     output;
MPRINT(EM_GETTRAINPATH):   output;
230238     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
230239     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
230240     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
230241     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
230242     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
230243     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230244     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
230245     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230246     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230247     output;
MPRINT(EM_GETTRAINPATH):   output;
230248     nodelabel="Tree4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree4";
230249     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
230250     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
230251     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
230252     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
230253     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230254     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
230255     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230256     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230257     output;
MPRINT(EM_GETTRAINPATH):   output;
230258     nodelabel="MdlComp";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp";
230259     parent="Tree4";
MPRINT(EM_GETTRAINPATH):   parent="Tree4";
230260     description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
230261     component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
230262     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
230263     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230264     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
230265     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230266     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230267     output;
MPRINT(EM_GETTRAINPATH):   output;
230268     nodelabel="MdlComp3";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp3";
230269     parent="MdlComp";
MPRINT(EM_GETTRAINPATH):   parent="MdlComp";
230270     description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
230271     component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
230272     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
230273     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230274     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
230275     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230276     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230277     output;
MPRINT(EM_GETTRAINPATH):   output;
230278     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 5 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("MdlComp3"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Predict Model Comparison";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = MdlComp3";
MPRINT(EM_REPORT_NODE):   put "Node label = Predict Model Comparison";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree4 => MdlComp => MdlComp3";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp3\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
230279     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230280     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230281     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230281   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
230281   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
230282     Name = 'NumberOfReportedLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberOfReportedLevels';
230283     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
230284     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230285     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230286     Name = 'NormalizeReportingVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NormalizeReportingVariables';
230287     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230288     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230289     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230290     Name = 'DecileBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DecileBin';
230291     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
230292     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230293     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230294     Name = 'LiftEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LiftEpsilon';
230295     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
230296     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230297     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230298     Name = 'ProfitEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitEpsilon';
230299     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
230300     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230301     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230302     Name = 'RoiEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RoiEpsilon';
230303     Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
230304     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230305     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230306     Name = 'ScoreDistBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ScoreDistBin';
230307     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
230308     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230309     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230310     Name = 'RocChart';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocChart';
230311     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230312     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230313     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230314     Name = 'RocEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocEpsilon';
230315     Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
230316     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230317     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230318     Name = 'AssessAllTargetLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessAllTargetLevels';
230319     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230320     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230321     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230322     Name = 'SelectionData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionData';
230323     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
230324     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230325     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230326     Name = 'HPCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HPCriteria';
230327     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
230328     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230329     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230330     Name = 'intervalViyaCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'intervalViyaCriteria';
230331     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
230332     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230333     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230334     Name = 'classViyaCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'classViyaCriteria';
230335     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
230336     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230337     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230338     Name = 'SelectionTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionTable';
230339     Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
230340     Default = "%nrbquote(TABLE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TABLE";
230341     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230342     Name = 'SelectionCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriteria';
230343     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
230344     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230345     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230346     Name = 'SelectionDepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDepth';
230347     Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
230348     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230349     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230350     Name = 'NumberofBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberofBins';
230351     Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
230352     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230353     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230354     Name = 'RecomputeAssess';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RecomputeAssess';
230355     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230356     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230357     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230358     Name = 'TargetName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetName';
230359     Value = "%nrbquote(Diabetes_Prediction)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Diabetes_Prediction";
230360     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230361     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230362     Name = 'ModelId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelId';
230363     Value = "%nrbquote(Tree4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Tree4";
230364     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230365     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230366     Name = 'ModelDescription';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDescription';
230367     Value = "%nrbquote(RegTree B3D6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "RegTree B3D6";
230368     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230369     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230370     Name = 'ModelCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelCriteria';
230371     Value = "%nrbquote(Valid: Misclassification Rate)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Valid: Misclassification Rate";
230372     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230373     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230374     Name = 'StatisticUsed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StatisticUsed';
230375     Value = "%nrbquote(_VMISC_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_VMISC_";
230376     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230377     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230378     Name = 'TargetLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetLabel';
230379     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230380     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230381     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230382     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 25 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
230383     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
230384     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
230385     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 25 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 25 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
230386     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
230387     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230388     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230388   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
230389     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
230390     Value = "ModelCompare";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ModelCompare";
230391     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
230392     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
230393     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230394     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
230395     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 25 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Predict Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Predict Model Comparison Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 9 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 9 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 18 and _n_ le 27 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-9*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 26 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 9 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 9 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 9 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 9 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.MdlComp3_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.MdlComp3_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP3_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Predict Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Predict Model Comparison Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 1 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.MdlComp3_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "MdlComp3" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP3_CMETA_TRAIN.
      WHERE UPCASE(creator)='MdlComp3';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
NOTE: Deleting WORK._TMPVL_VS (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.MdlComp3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from
EMWS2.MdlComp3_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey18
MPRINT(EM_REPORT_NODE):   from EMWS2.MdlComp3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==12 : Viewtype = DATA FITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data _null_ ;
MPRINT(EM_REPORT_DATA):   set EMWS2.MdlComp3_EMOUTFIT (obs=2) end=eof ;
MPRINT(EM_REPORT_DATA):   if eof then do ;
MPRINT(EM_REPORT_DATA):   call symput("_misc_" , strip(put(_misc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_vmisc_" , strip(put(_vmisc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_aur_" , strip(put(_aur_, best.)));
MPRINT(EM_REPORT_DATA):   call symput("_gini_" , strip(put(_gini_, best.)));
MPRINT(EM_REPORT_DATA):   end;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Predict Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Fit Statistics Table";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Predict Model Comparison Fit Statistics
Table";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS2.MdlComp3_EMOUTFIT(obs=100) noobs label
contents='';
MPRINT(EM_REPORT_DATA):   id USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_ ;
MPRINT(EM_REPORT_DATA):   var _ASE_ _MISC_ KS _VASE_ _VMISC_ VKS ;
MPRINT(EM_REPORT_DATA):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP3_EMOUTFIT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==13 : Viewtype = DATA COMPAREFIT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==14 : Viewtype = LATTICE CLASSIFICATION
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct MODELDESCRIPTION) into :numx from
EMWS2.MdlComp3_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numy from
EMWS2.MdlComp3_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Predict Model Comparison";
MPRINT(EM_REPORT_LATTICE):   title3 "Classification Chart";
MPRINT(EM_REPORT_LATTICE):   title4 "TARGET='Diabetes_Prediction' and _TYPE_='PREDICTION'";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel
data=EMWS2.MdlComp3_EMCLASSIFICATION(where=(TARGET='Diabetes_Prediction' and
_TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   panelby DATAROLE MODELDESCRIPTION / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar FROM / response=PERCENT group=CORRECTTEXT ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.73 seconds
      cpu time            0.43 seconds
 
NOTE: There were 24 observations read from the data set EMWS2.MDLCOMP3_EMCLASSIFICATION.
      WHERE (TARGET='Diabetes_Prediction') and (_TYPE_='PREDICTION');
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp3_emreport(where=(id eq 15)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==15 : Viewtype = LATTICE ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS2.MdlComp3_EMRANK(where=(TARGET='Diabetes_Prediction'));
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 120 observations read from the data set EMWS2.MDLCOMP3_EMRANK.
      WHERE TARGET='Diabetes_Prediction';
NOTE: The data set WORK._TMP_DAT has 120 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: The data set WORK._TMP_CONTENT has 38 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 38 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sql noprint;
MPRINT(EM_REPORT_EMRANK):   select count(distinct datarole) into :ndataroles from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   select distinct datarole into :drole1-:
MPRINT(LEFT):  drole3
MPRINT(EM_REPORT_EMRANK):   from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TEST")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TEST';
NOTE: The data set WORK._TMP_EMRP has 40 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Predict Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TEST";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.40 seconds
      cpu time            0.18 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TRAIN")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TRAIN';
NOTE: The data set WORK._TMP_EMRP has 40 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Predict Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TRAIN";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.37 seconds
      cpu time            0.21 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "VALIDATE"))
out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='VALIDATE';
NOTE: The data set WORK._TMP_EMRP has 40 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Predict Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=VALIDATE";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='Diabetes_Prediction'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=()
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;
 
NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.36 seconds
      cpu time            0.18 seconds
 
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.
 
MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 15 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp3_emreport(where=(id eq 16)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==16 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.MdlComp3_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 14 observations read from the data set EMWS2.MDLCOMP3_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from
EMWS2.MdlComp3_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==17 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS2.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Score")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='SCORE';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;
 
230396     data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
230397     length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
230397   ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
230397   ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
accumulatedScoreCode $1;
230398     nodelabel="Ids3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids3";
230399     parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
230400     description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
230401     component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
230402     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
230403     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230404     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
230405     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230406     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230407     output;
MPRINT(EM_GETTRAINPATH):   output;
230408     nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
230409     parent="Ids3";
MPRINT(EM_GETTRAINPATH):   parent="Ids3";
230410     description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
230411     component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
230412     tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
230413     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230414     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
230415     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230416     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230417     output;
MPRINT(EM_GETTRAINPATH):   output;
230418     nodelabel="Tree4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Tree4";
230419     parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
230420     description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
230421     component="DecisionTree";
MPRINT(EM_GETTRAINPATH):   component="DecisionTree";
230422     tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
230423     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230424     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
230425     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230426     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230427     output;
MPRINT(EM_GETTRAINPATH):   output;
230428     nodelabel="MdlComp";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp";
230429     parent="Tree4";
MPRINT(EM_GETTRAINPATH):   parent="Tree4";
230430     description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
230431     component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
230432     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
230433     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230434     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
230435     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230436     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230437     output;
MPRINT(EM_GETTRAINPATH):   output;
230438     nodelabel="MdlComp3";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp3";
230439     parent="MdlComp";
MPRINT(EM_GETTRAINPATH):   parent="MdlComp";
230440     description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
230441     component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
230442     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
230443     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230444     PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
230445     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230446     accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
230447     output;
MPRINT(EM_GETTRAINPATH):   output;
230448     nodelabel="Score";
MPRINT(EM_GETTRAINPATH):   nodelabel="Score";
230449     parent="MdlComp3";
MPRINT(EM_GETTRAINPATH):   parent="MdlComp3";
230450     description="Score Node";
MPRINT(EM_GETTRAINPATH):   description="Score Node";
230451     component="Score";
MPRINT(EM_GETTRAINPATH):   component="Score";
230452     tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
230453     FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
230454     PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
230455     PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
230456     accumulatedScoreCode= "Y";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "Y";
230457     output;
MPRINT(EM_GETTRAINPATH):   output;
230458     run;
MPRINT(EM_GETTRAINPATH):   run;
 
NOTE: The data set WORK._TMP_EMRNP has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_GETTRAINPATH):
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from
EMWS2.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Score"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Score";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Score";
MPRINT(EM_REPORT_NODE):   put "Node label = Score";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids3 => Part => Tree4 => MdlComp => MdlComp3 =>
Score";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
230459     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230460     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230461     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230461   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
230461   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
230462     Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
230463     Value = "%nrbquote(VIEW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VIEW";
230464     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230465     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230466     Name = 'FixedOutputNames';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FixedOutputNames';
230467     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230468     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230469     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230470     Name = 'HideVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariables';
230471     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230472     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230473     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230474     Name = 'HideInput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideInput';
230475     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230476     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230477     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230478     Name = 'HideTarget';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideTarget';
230479     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230480     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230481     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230482     Name = 'HideRejected';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideRejected';
230483     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230484     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230485     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230486     Name = 'HideAssess';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideAssess';
230487     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230488     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230489     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230490     Name = 'HidePredict';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HidePredict';
230491     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230492     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230493     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230494     Name = 'HideFreq';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideFreq';
230495     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230496     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230497     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230498     Name = 'HideClassification';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideClassification';
230499     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230500     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230501     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230502     Name = 'HideResidual';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideResidual';
230503     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230504     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230505     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230506     Name = 'HideOther';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideOther';
230507     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230508     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230509     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230510     Name = 'ScoreValidate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ScoreValidate';
230511     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230512     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230513     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230514     Name = 'ScoreTest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ScoreTest';
230515     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230516     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230517     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230518     Name = 'CScore';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CScore';
230519     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230520     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230521     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230522     Name = 'JScore';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'JScore';
230523     Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
230524     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230525     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230526     Name = 'PackageName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PackageName';
230527     Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
230528     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230529     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230530     Name = 'UserPackageName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UserPackageName';
230531     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230532     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230533     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230534     Name = 'PreferenceName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreferenceName';
230535     Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
230536     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230537     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230538     Name = 'OptimizedCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OptimizedCode';
230539     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230540     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230541     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230542     Name = 'GraphReports';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GraphReports';
230543     Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
230544     Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
230545     output;
MPRINT(EM_REPORT_PROPERTIES):   output;
230546     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
230547     proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
230548     by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
230549     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.15 seconds
      cpu time            0.03 seconds
 
 
230550     data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
230551     length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
230552     label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
230552   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
230553     Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
230554     Value = "Score";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Score";
230555     Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
230556     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
230557     data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
230558     set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
230559     run;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 22 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.28 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Score";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Score Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx('
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2))
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 7 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 7 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 22 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.16 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 7 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: There were 7 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;
 
NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;
 
NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS2.Score_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS2.Score_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Variable length is uninitialized.
NOTE: There were 3 observations read from the data set EMWS2.SCORE_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;
 
NOTE: There were 2 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
2 OUTPUT;
NOTE: There were 2 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Score";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Score Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 2 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS2.Score_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Score" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.SCORE_CMETA_TRAIN.
      WHERE UPCASE(creator)='Score';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names)
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level"
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;
 
NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;
 
NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS2.Score_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS2.Score_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey11
MPRINT(EM_REPORT_NODE):   from EMWS2.Score_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
==4 : Viewtype = DATA SCOREINPUTVARS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==5 : Viewtype = DATA SCOREOUTPUTVARS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Score";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Output Variables";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Score Output Variables";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS2.Score_EMOUTPUTVARS(obs=100) noobs label
contents='';
MPRINT(EM_REPORT_DATA):   run ;
 
NOTE: There were 17 observations read from the data set EMWS2.SCORE_EMOUTPUTVARS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==6 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==7 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==9 : Viewtype = LATTICE SCOREBARPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numx from EMWS2.Score_BAR;
MPRINT(EM_REPORT_LATTICE):   select count(distinct TYPE) into :numy from EMWS2.Score_BAR;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Score";
MPRINT(EM_REPORT_LATTICE):   title3 "Bar Chart";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS2.Score_BAR;
MPRINT(EM_REPORT_LATTICE):   panelby TYPE DATAROLE / columns=3 rows=2 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar X / response=PERCENT ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.62 seconds
      cpu time            0.37 seconds
 
NOTE: There were 33 observations read from the data set EMWS2.SCORE_BAR.
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==10 : Viewtype = LATTICE SCOREHISTPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numx from EMWS2.Score_HIST;
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numy from EMWS2.Score_HIST;
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Score";
MPRINT(EM_REPORT_LATTICE):   title3 "Histogram";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS2.Score_HIST;
MPRINT(EM_REPORT_LATTICE):   panelby DATAROLE VARIABLE / columns=3 rows=3 uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   histogram X / freq = VALUE;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;
 
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           1.09 seconds
      cpu time            0.61 seconds
 
NOTE: There were 81 observations read from the data set EMWS2.SCORE_HIST.
 
MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
==11 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS2.Score_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
==12 : Viewtype = TEXT OPTCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM'
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND'
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID'
'CROSSCCFMAP' 'CROSSCCFNORMMAP' 'CROSSCCOVMAP')) or (type in ('BAR') and desc in ('VIP'
'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in
('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE'
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   data _NULL_ ;
MPRINT(EM_REPORT_CREATE):   file print;
MPRINT(EM_REPORT_CREATE):   put "End of Report" ;
MPRINT(EM_REPORT_CREATE):   run;
 
NOTE: 1 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_REPORT_CREATE):   title1;
MPRINT(EM_REPORT_CREATE):   title2;
MPRINT(EM_REPORT_CREATE):   title3 ;
MPRINT(EM_REPORT_CREATE):   ods graphics / reset=height;
MPRINT(EM_REPORT_CREATE):   ods listing;
MPRINT(EM_REPORT_CREATE):   ods PDF close;
NOTE: ODS PDF printed 68 pages to \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM
      Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\REPORT.pdf.
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT_RESULTS):   data _null_ ;
MPRINT(EM_REPORT_RESULTS):   call symput('report_date', strip(put(date(), NLDATE.)));
MPRINT(EM_REPORT_RESULTS):   call symput('report_time', strip(put(datetime(), NLTIME.)));
MPRINT(EM_REPORT_RESULTS):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT_RESULTS):   data _null_;
MPRINT(EM_REPORT_RESULTS):   file print ;
MPRINT(EM_REPORT_RESULTS):   put "User       = shre2" ;
MPRINT(EM_REPORT_RESULTS):   put "Date       = 01:51:42  March 04" ;
MPRINT(EM_REPORT_RESULTS):   put "Project    = SV.PredictiveAnalysis " ;
MPRINT(EM_REPORT_RESULTS):   put "Diagram    = SV.Prediction" / ;
MPRINT(EM_REPORT_RESULTS):   put "Start Node = Report";
MPRINT(EM_REPORT_RESULTS):   put "Node label = Score" ;
MPRINT(EM_REPORT_RESULTS):   put "Nodes      = PATH" ;
MPRINT(EM_REPORT_RESULTS):   put "Showall    = N" / ;
MPRINT(EM_REPORT_RESULTS):   put "Format     = PDF" ;
MPRINT(EM_REPORT_RESULTS):   put "Graphics   = GIF" ;
MPRINT(EM_REPORT_RESULTS):   put "Style      = LISTING" / ;
MPRINT(EM_REPORT_RESULTS):   run ;
 
NOTE: 11 lines were written to file PRINT.
NOTE: The DATA step printed page 172.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_REPORT_RESULTS):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "REPORT";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "FILEVIEWER";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00581287173824;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_REPORT_RESULTS):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Report;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230560     *------------------------------------------------------------*;
230561     * End TRAIN: Report;
230562     *------------------------------------------------------------*;
230563
 
230564     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
230565     * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
230566     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230567     ;
MPRINT(EM_DIAGRAM):   ;
230568     ;
MPRINT(EM_DIAGRAM):   ;
230569     ;
MPRINT(EM_DIAGRAM):   ;
230570     ;
MPRINT(EM_DIAGRAM):   ;
230571     quit;
MPRINT(EM_DIAGRAM):   quit;
230572     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230573     * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
230574     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230575     /*; *"; *'; */
230576     ;
MPRINT(EM_DIAGRAM):   ;
230577     run;
MPRINT(EM_DIAGRAM):   run;
230578     quit;
MPRINT(EM_DIAGRAM):   quit;
230579     /* Reset EM Options */
230580     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
230581     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
230582     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
230583     proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
230584     by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
230585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:51:46" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 04, 2024
Time:                01:51:46
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1RCXBKS "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1RCXBKS new;
MPRINT(EM_DIAGRAM):   run;
230687     %let EMEXCEPTIONSTRING=;
230688     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
230689     * SCORE: Report;
MPRINT(EM_DIAGRAM):   * SCORE: Report;
230690     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230691     %let EM_ACTION = SCORE;
230692     %let syscc = 0;
230693     %macro main;
230694
230695       filename temp catalog 'sashelp.emutil.reporter_macros.source';
230696       %include temp;
230697       filename temp;
230698
230699       %setProperties;
230700
230701       %if %upcase(&EM_ACTION) = CREATE %then %do;
230702         filename temp catalog 'sashelp.emutil.reporter_create.source';
230703         %include temp;
230704         filename temp;
230705
230706         %create;
230707       %end;
230708
230709        %else
230710        %if %upcase(&EM_ACTION) = TRAIN %then %do;
230711
230712            filename temp catalog 'sashelp.emutil.reporter_train.source';
230713            %include temp;
230714            filename temp;
230715            %train;
230716        %end;
230717
230718        %doendm:
230719     %mend main;
230720
230721     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_MACROS.SOURCE.
230724    +%macro SetProperties;
230726    +     /* reporting options */
230727    +     %em_checkmacro(name=EM_PROPERTY_FORMAT,         value=PDF , global=Y);
230728    +     %em_checkmacro(name=EM_PROPERTY_NODES ,         value=PATH, global=Y);
230729    +     %em_checkmacro(name=EM_PROPERTY_STYLE ,         value=DEFAULT, global=Y);
230730    +     %em_checkmacro(name=EM_PROPERTY_SHOWALL,        value=N, global=Y);
230732    +     %em_checkmacro(name=EM_PROPERTY_SUMMARIZATION,  value=Y, global=Y);
230733    +     %em_checkmacro(name=EM_PROPERTY_VARRANKING,     value=Y, global=Y);
230734    +     %em_checkmacro(name=EM_PROPERTY_CLASSIFICATION, value=Y, global=Y);
230735    +     %em_checkmacro(name=EM_PROPERTY_CROSSTABS,      value=Y, global=Y);
230736    +     %em_checkmacro(name=EM_PROPERTY_LIFTCHART,      value=Y, global=Y);
230737    +     %em_checkmacro(name=EM_PROPERTY_FITSTAT,        value=Y, global=Y);
230738    +     %em_checkmacro(name=EM_PROPERTY_COMPAREMDL,     value=Y, global=Y);
230740    +     %em_checkmacro(name=EM_PROPERTY_BASICOUTPUT,    value=N, global=Y);
230742    +    %em_checkmacro(name=EM_PROPERTY_textfont,   value=Arial, global=Y);
230743    +    %em_checkmacro(name=EM_PROPERTY_headersize, value=8, global=Y);
230744    +    %em_checkmacro(name=EM_PROPERTY_textsize,   value=6, global=Y);
230745    +    %em_checkmacro(name=EM_PROPERTY_titlesize,  value=10, global=Y);
230747    +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Report;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230748     *------------------------------------------------------------*;
230749     * End SCORE: Report;
230750     *------------------------------------------------------------*;
230751
 
230752     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
230753     * Report: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Report: Scoring DATA data;
230754     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230755     data EMWS2.Report_TRAIN
230756     / view=EMWS2.Report_TRAIN
230757     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Report_TRAIN / view=EMWS2.Report_TRAIN ;
230758     set EMWS2.Score_TRAIN
230759     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Score_TRAIN ;
230760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.REPORT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.41 seconds
      cpu time            0.29 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.45 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
230761     quit;
 
230762     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
230763     * Report: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   * Report: Scoring VALIDATE data;
230764     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230765     data EMWS2.Report_VALIDATE
230766     / view=EMWS2.Report_VALIDATE
230767     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Report_VALIDATE / view=EMWS2.Report_VALIDATE ;
230768     set EMWS2.Score_VALIDATE
230769     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Score_VALIDATE ;
230770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.REPORT_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.SCORE_VALIDATE.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.29 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.43 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
230771     quit;
 
230772     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
230773     * Report: Scoring TEST data;
MPRINT(EM_DIAGRAM):   * Report: Scoring TEST data;
230774     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
230775     data EMWS2.Report_TEST
230776     / view=EMWS2.Report_TEST
230777     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Report_TEST / view=EMWS2.Report_TEST ;
230778     set EMWS2.Score_TEST
230779     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Score_TEST ;
230780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.REPORT_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.SCORE_TEST.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.28 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.42 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
230781     quit;
 
230783     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
230784     * Report: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Report: Computing metadata for TRAIN data;
230785     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.REPORT_TRAIN.VIEW used (Total process time):
      real time           0.33 seconds
      cpu time            0.32 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Report_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Report_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Report_TRAIN out=WORK.M345QY_J noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345QY_J;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M345QY_J(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345QY_J;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M345QY_J;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2DT9ARB NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OZLK53(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DT9ARB;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Score_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Report_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Report";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.REPORT_TRAIN.VIEW used (Total process time):
      real time           0.36 seconds
      cpu time            0.37 seconds
 
NOTE: View EMWS2.REPORT_VALIDATE.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.32 seconds
 
NOTE: View EMWS2.REPORT_TEST.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:51:51" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                March 04, 2024
Time:                01:51:51
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2UW1XV3 "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Report\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2UW1XV3 new;
MPRINT(EM_DIAGRAM):   run;
231146     %let EMEXCEPTIONSTRING=;
231147     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
231148     * REPORT: Report;
MPRINT(EM_DIAGRAM):   * REPORT: Report;
231149     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
231150     %let EM_ACTION = REPORT;
231151     %let syscc = 0;
231152     %macro main;
231153
231154       filename temp catalog 'sashelp.emutil.reporter_macros.source';
231155       %include temp;
231156       filename temp;
231157
231158       %setProperties;
231159
231160       %if %upcase(&EM_ACTION) = CREATE %then %do;
231161         filename temp catalog 'sashelp.emutil.reporter_create.source';
231162         %include temp;
231163         filename temp;
231164
231165         %create;
231166       %end;
231167
231168        %else
231169        %if %upcase(&EM_ACTION) = TRAIN %then %do;
231170
231171            filename temp catalog 'sashelp.emutil.reporter_train.source';
231172            %include temp;
231173            filename temp;
231174            %train;
231175        %end;
231176
231177        %doendm:
231178     %mend main;
231179
231180     %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_MACROS.SOURCE.
231183    +%macro SetProperties;
231185    +     /* reporting options */
231186    +     %em_checkmacro(name=EM_PROPERTY_FORMAT,         value=PDF , global=Y);
231187    +     %em_checkmacro(name=EM_PROPERTY_NODES ,         value=PATH, global=Y);
231188    +     %em_checkmacro(name=EM_PROPERTY_STYLE ,         value=DEFAULT, global=Y);
231189    +     %em_checkmacro(name=EM_PROPERTY_SHOWALL,        value=N, global=Y);
231191    +     %em_checkmacro(name=EM_PROPERTY_SUMMARIZATION,  value=Y, global=Y);
231192    +     %em_checkmacro(name=EM_PROPERTY_VARRANKING,     value=Y, global=Y);
231193    +     %em_checkmacro(name=EM_PROPERTY_CLASSIFICATION, value=Y, global=Y);
231194    +     %em_checkmacro(name=EM_PROPERTY_CROSSTABS,      value=Y, global=Y);
231195    +     %em_checkmacro(name=EM_PROPERTY_LIFTCHART,      value=Y, global=Y);
231196    +     %em_checkmacro(name=EM_PROPERTY_FITSTAT,        value=Y, global=Y);
231197    +     %em_checkmacro(name=EM_PROPERTY_COMPAREMDL,     value=Y, global=Y);
231199    +     %em_checkmacro(name=EM_PROPERTY_BASICOUTPUT,    value=N, global=Y);
231201    +    %em_checkmacro(name=EM_PROPERTY_textfont,   value=Arial, global=Y);
231202    +    %em_checkmacro(name=EM_PROPERTY_headersize, value=8, global=Y);
231203    +    %em_checkmacro(name=EM_PROPERTY_textsize,   value=6, global=Y);
231204    +    %em_checkmacro(name=EM_PROPERTY_titlesize,  value=10, global=Y);
231206    +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End REPORT: Report;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
231207     *------------------------------------------------------------*;
231208     * End REPORT: Report;
231209     *------------------------------------------------------------*;
231210
 
231211     /* Reset EM Options */
231212     options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):    options formchar="|----|+|---+=|-/\<>*";
231213     options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
231214     goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
