MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:49:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 04, 2024
Time:                01:49:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O25PRDSD "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O25PRDSD new;
MPRINT(EM_DIAGRAM):   run;
213534     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213535     *------------------------------------------------------------*;
213536     * Score: Scoring DATA data;
213537     *------------------------------------------------------------*;
213538     data EMWS2.Score_TRAIN
213539     / view=EMWS2.Score_TRAIN
213540     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score_TRAIN / view=EMWS2.Score_TRAIN ;
213541     set EMWS2.MdlComp3_TRAIN
213542     ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp3_TRAIN ;
213543     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas.
213544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213545    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
213546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213547    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
213548    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
213549    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
213550    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
213551    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
213552    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
213553    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
213554    +EM_PROBABILITY =
213555    +max(
213556    +P_Diabetes_Predictionprediabetes
213557    +,
213558    +P_Diabetes_Predictionno_diabetes
213559    +,
213560    +P_Diabetes_Predictiondiabetes
213561    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
213562    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
213562   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
213563    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
213564    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
213565    +LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
213566    +EM_CLASSTARGET = F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213567     run;

NOTE: DATA STEP view saved on file EMWS2.SCORE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP3_TRAIN.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.25 seconds
      

MPRINT(EM_DIAGRAM):   quit;
213568     quit;
213569     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
213570     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213571     *------------------------------------------------------------*;
213572     * Score: Scoring VALIDATE data;
213573     *------------------------------------------------------------*;
213574     data EMWS2.Score_VALIDATE
213575     / view=EMWS2.Score_VALIDATE
213576     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score_VALIDATE / view=EMWS2.Score_VALIDATE ;
213577     set EMWS2.MdlComp3_VALIDATE
213578     ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp3_VALIDATE ;
213579     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas.
213580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213581    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
213582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213583    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
213584    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
213585    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
213586    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
213587    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
213588    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
213589    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
213590    +EM_PROBABILITY =
213591    +max(
213592    +P_Diabetes_Predictionprediabetes
213593    +,
213594    +P_Diabetes_Predictionno_diabetes
213595    +,
213596    +P_Diabetes_Predictiondiabetes
213597    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
213598    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
213598   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
213599    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
213600    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
213601    +LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
213602    +EM_CLASSTARGET = F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213603     run;

NOTE: DATA STEP view saved on file EMWS2.SCORE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP3_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.29 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
213604     quit;
213605     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
213606     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213607     *------------------------------------------------------------*;
213608     * Score: Scoring TEST data;
213609     *------------------------------------------------------------*;
213610     data EMWS2.Score_TEST
213611     / view=EMWS2.Score_TEST
213612     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score_TEST / view=EMWS2.Score_TEST ;
213613     set EMWS2.MdlComp3_TEST
213614     ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp3_TEST ;
213615     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMFLOWSCORE.sas.
213616    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213617    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
213618    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213619    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
213620    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
213621    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
213622    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
213623    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
213624    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
213625    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
213626    +EM_PROBABILITY =
213627    +max(
213628    +P_Diabetes_Predictionprediabetes
213629    +,
213630    +P_Diabetes_Predictionno_diabetes
213631    +,
213632    +P_Diabetes_Predictiondiabetes
213633    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
213634    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
213634   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
213635    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
213636    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
213637    +LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
213638    +EM_CLASSTARGET = F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213639     run;

NOTE: DATA STEP view saved on file EMWS2.SCORE_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP3_TEST.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
213640     quit;
213641     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
213642     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
213643     * Score: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score: Creating Publish Score Variables Table;
213644     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213645     proc sort data=EMWS2.MdlComp3_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp3_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
213646     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213647     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS2.MDLCOMP3_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 41 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

213648     proc sort data=EMWS2.Ids3_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids3_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
213649     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS2.IDS3_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

213651     data EMWS2.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score_EMINPUTVARS;
213652     merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
213653     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213654     length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
213655     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
213656        "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
213657        "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
213658     if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
213659     if upcase(NAME) = "AGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE" then HIDE = "N";
213660     if upcase(NAME) = "ANYHEALTHCARE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ANYHEALTHCARE" then HIDE = "N";
213661     if upcase(NAME) = "BMI" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "BMI" then HIDE = "N";
213662     if upcase(NAME) = "CHOLCHECK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CHOLCHECK" then HIDE = "N";
213663     if upcase(NAME) = "DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DIABETES_PREDICTION" then HIDE = "N";
213664     if upcase(NAME) = "DIFFWALK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DIFFWALK" then HIDE = "N";
213665     if upcase(NAME) = "EDUCATION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "EDUCATION" then HIDE = "N";
213666     if upcase(NAME) = "F_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "F_DIABETES_PREDICTION" then HIDE = "N";
213667     if upcase(NAME) = "FRUITS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FRUITS" then HIDE = "N";
213668     if upcase(NAME) = "GENHLTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "GENHLTH" then HIDE = "N";
213669     if upcase(NAME) = "HEARTDISEASEORATTACK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HEARTDISEASEORATTACK" then HIDE = "N";
213670     if upcase(NAME) = "HIGHBP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HIGHBP" then HIDE = "N";
213671     if upcase(NAME) = "HIGHCHOL" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HIGHCHOL" then HIDE = "N";
213672     if upcase(NAME) = "HVYALCOHOLCONSUMP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HVYALCOHOLCONSUMP" then HIDE = "N";
213673     if upcase(NAME) = "I_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "I_DIABETES_PREDICTION" then HIDE = "N";
213674     if upcase(NAME) = "INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "INCOME" then HIDE = "N";
213675     if upcase(NAME) = "MENTHLTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MENTHLTH" then HIDE = "N";
213676     if upcase(NAME) = "NODOCBCCOST" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NODOCBCCOST" then HIDE = "N";
213677     if upcase(NAME) = "P_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
213678     if upcase(NAME) = "P_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
213679     if upcase(NAME) = "P_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
213680     if upcase(NAME) = "PHYSACTIVITY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PHYSACTIVITY" then HIDE = "N";
213681     if upcase(NAME) = "PHYSHLTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PHYSHLTH" then HIDE = "N";
213682     if upcase(NAME) = "Q_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
213683     if upcase(NAME) = "Q_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
213684     if upcase(NAME) = "Q_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
213685     if upcase(NAME) = "R_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
213686     if upcase(NAME) = "R_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
213687     if upcase(NAME) = "R_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
213688     if upcase(NAME) = "SEX" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SEX" then HIDE = "N";
213689     if upcase(NAME) = "SMOKER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SMOKER" then HIDE = "N";
213690     if upcase(NAME) = "STROKE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "STROKE" then HIDE = "N";
213691     if upcase(NAME) = "U_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "U_DIABETES_PREDICTION" then HIDE = "N";
213692     if upcase(NAME) = "V_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
213693     if upcase(NAME) = "V_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
213694     if upcase(NAME) = "V_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
213695     if upcase(NAME) = "VEGGIES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "VEGGIES" then HIDE = "N";
213696     if upcase(NAME) = "_NODE_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_NODE_" then HIDE = "N";
213697     if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
213698     if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
213699     if upcase(NAME) = "B_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_DIABETES_PREDICTION" then HIDE = "N";
213700     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 41 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS2.SCORE_EMINPUTVARS has 40 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

213701     proc sort data=EMWS2.Score_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score_EMINPUTVARS nodupkey;
213702     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213703     where CREATOR='' or (NAME="DIABETES_PREDICTION" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="DIABETES_PREDICTION" and CREATOR='');
213704     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS2.SCORE_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='DIABETES_PREDICTION') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.SCORE_EMINPUTVARS has 22 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.04 seconds
      

213705     %let em_rootkey=;
213706     %let em_keytype=;
213707     %let em_keylen=;
213708     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
213709     set EMWS2.Ids3_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids3_cmeta_data;
213710     where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
213711     call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
213712     call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
213713     call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
213714     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.IDS3_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

213715     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMPUBLISHSCORE.sas";
213716     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
213717     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213718     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\EMPUBLISHSCORE.sas.
213719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213720    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
213721    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213722    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
213723    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
213724    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
213725    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
213726    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
213727    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
213728    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
213729    +EM_PROBABILITY =
213730    +max(
213731    +P_Diabetes_Predictionprediabetes
213732    +,
213733    +P_Diabetes_Predictionno_diabetes
213734    +,
213735    +P_Diabetes_Predictiondiabetes
213736    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
213737    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
213737   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
213738    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
213739    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213740     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

213741     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
213742     quit;
213743     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213744     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213745     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213746     retain ID 1 Node "Score";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score";
213747     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213748     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

213749     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213751     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213752     proc sort data=EMWS2.MdlComp3_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp3_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
213753     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS2.MDLCOMP3_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213755     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213756     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213757     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213758     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213759     proc contents data=EMWS2.Score_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Score_train out=_meta(keep=NAME) noprint;
213760     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

213761     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213763     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213764     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213765     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213766     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213767     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213768     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213769     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 6 rows and 5 columns.

213770     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213771     proc append base=EMWS2.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score_FCMP data=_tempx;
213772     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS2.SCORE_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS2.SCORE_FCMP has 6 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

213773     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp3\EMFLOWSCORE.sas";
213774     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
213775     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213776     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp3\EMFLOWSCORE.sas.
213777    +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
213778    +if (P_Diabetes_Predictionprediabetes ge 0.0373457819273) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.0373457819273) then do;
213779    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
213780    +end;
MPRINT(EM_DIAGRAM):   end;
213781    +else
213782    +if (P_Diabetes_Predictionprediabetes ge 0.02791535344439) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02791535344439) then do;
213783    +b_Diabetes_Prediction = 2;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 2;
213784    +end;
MPRINT(EM_DIAGRAM):   end;
213785    +else
213786    +if (P_Diabetes_Predictionprediabetes ge 0.02725232446296) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02725232446296) then do;
213787    +b_Diabetes_Prediction = 3;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 3;
213788    +end;
MPRINT(EM_DIAGRAM):   end;
213789    +else
213790    +if (P_Diabetes_Predictionprediabetes ge 0.02345942775753) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02345942775753) then do;
213791    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
213792    +b_Diabetes_Prediction = floor(4 + 6*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(4 + 6*_temp_);
213793    +end;
MPRINT(EM_DIAGRAM):   end;
213794    +else
213795    +do;
MPRINT(EM_DIAGRAM):   else do;
213796    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
213797    +b_Diabetes_Prediction = floor(10 + 11*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(10 + 11*_temp_);
213798    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213799     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

213800     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
213801     quit;
213802     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213803     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213804     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213805     retain ID 2 Node "MdlComp3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp3";
213806     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213807     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213808     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213809     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213811     proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
213812     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213813     run;
MPRINT(EM_DIAGRAM):   run;
The SAS System


NOTE: There were 41 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

213814     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213815     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213816     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213817     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213818     proc contents data=EMWS2.MdlComp3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp3_train out=_meta(keep=NAME) noprint;
213819     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

213820     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213821     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213822     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

213823     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213824     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213825     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213826     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213827     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213828     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.

213829     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213830     proc append base=EMWS2.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score_FCMP data=_tempx;
213831     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS2.SCORE_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS2.SCORE_FCMP has 8 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

213832     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
213833     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
213834     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213835     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas.
213836    +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
213837    +if (P_Diabetes_Predictionprediabetes ge 0.0373457819273) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.0373457819273) then do;
213838    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
213839    +end;
MPRINT(EM_DIAGRAM):   end;
213840    +else
213841    +if (P_Diabetes_Predictionprediabetes ge 0.02791535344439) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02791535344439) then do;
213842    +b_Diabetes_Prediction = 2;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 2;
213843    +end;
MPRINT(EM_DIAGRAM):   end;
213844    +else
213845    +if (P_Diabetes_Predictionprediabetes ge 0.02725232446296) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02725232446296) then do;
213846    +b_Diabetes_Prediction = 3;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 3;
213847    +end;
MPRINT(EM_DIAGRAM):   end;
213848    +else
213849    +if (P_Diabetes_Predictionprediabetes ge 0.02345942775753) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02345942775753) then do;
213850    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
213851    +b_Diabetes_Prediction = floor(4 + 6*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(4 + 6*_temp_);
213852    +end;
MPRINT(EM_DIAGRAM):   end;
213853    +else
213854    +do;
MPRINT(EM_DIAGRAM):   else do;
213855    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
213856    +b_Diabetes_Prediction = floor(10 + 11*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(10 + 11*_temp_);
213857    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213858     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

213859     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
213860     quit;
213861     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213862     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213863     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213864     retain ID 3 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "MdlComp";
213865     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213866     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

213867     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213868     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213869     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213870     proc sort data=EMWS2.Tree4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Tree4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
213871     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213872     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS2.TREE4_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

213873     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213874     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213875     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213876     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

213877     proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
213878     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

213879     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213880     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213881     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213882     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213883     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213884     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213885     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213886     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213887     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.

213888     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

213889     proc append base=EMWS2.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score_FCMP data=_tempx;
213890     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS2.SCORE_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS2.SCORE_FCMP has 10 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

213891     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree4\EMPUBLISHSCORE.sas";
213892     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
213893     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213894     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Tree4\EMPUBLISHSCORE.sas.
213895    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
213896    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
213897    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
213898    +
213899    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
213900    +LENGTH I_Diabetes_Prediction  $   11;
MPRINT(EM_DIAGRAM):   LENGTH I_Diabetes_Prediction $ 11;
213901    +LENGTH U_Diabetes_Prediction  $   11;
MPRINT(EM_DIAGRAM):   LENGTH U_Diabetes_Prediction $ 11;
213902    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
213903    +
213904    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
213905    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
213906    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
213907    +label P_Diabetes_Predictionno_diabetes =
213908    +'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
213909    +label P_Diabetes_Predictiondiabetes =
213910    +'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
213911    +label P_Diabetes_Predictionprediabetes =
213912    +'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
213913    +label Q_Diabetes_Predictionno_diabetes =
213914    +'Unadjusted P: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionno_diabetes = 'Unadjusted P: Diabetes_Prediction=no diabetes' ;
213915    +label Q_Diabetes_Predictiondiabetes =
213916    +'Unadjusted P: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictiondiabetes = 'Unadjusted P: Diabetes_Prediction=diabetes' ;
213917    +label Q_Diabetes_Predictionprediabetes =
213918    +'Unadjusted P: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionprediabetes = 'Unadjusted P: Diabetes_Prediction=prediabetes' ;
213919    +label V_Diabetes_Predictionno_diabetes =
213920    +'Validated: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionno_diabetes = 'Validated: Diabetes_Prediction=no diabetes' ;
213921    +label V_Diabetes_Predictiondiabetes =
213922    +'Validated: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictiondiabetes = 'Validated: Diabetes_Prediction=diabetes' ;
213923    +label V_Diabetes_Predictionprediabetes =
213924    +'Validated: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionprediabetes = 'Validated: Diabetes_Prediction=prediabetes' ;
213925    +label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
213926    +label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
213927    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
213928    +
213929    +
213930    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
213931    +LENGTH _ARBFMT_11 $     11; DROP _ARBFMT_11;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_11 $ 11;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_11;
213932    +_ARBFMT_11 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_11 = ' ';
213933    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
213934    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
213935    +
213936    +
213937    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
213938    +_ARBFMT_12 = PUT( GenHlth , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST.);
213939    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
213940    +IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
213941    +  _NODE_  =                    3;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
213942    +  _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
213943    +  P_Diabetes_Predictionno_diabetes  =     0.79996648653177;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79996648653177;
213944    +  P_Diabetes_Predictiondiabetes  =     0.17657408571069;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17657408571069;
213945    +  P_Diabetes_Predictionprediabetes  =     0.02345942775753;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02345942775753;
213946    +  Q_Diabetes_Predictionno_diabetes  =     0.79996648653177;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79996648653177;
213947    +  Q_Diabetes_Predictiondiabetes  =     0.17657408571069;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17657408571069;
213948    +  Q_Diabetes_Predictionprediabetes  =     0.02345942775753;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02345942775753;
213949    +  V_Diabetes_Predictionno_diabetes  =     0.80150064393303;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.80150064393303;
213950    +  V_Diabetes_Predictiondiabetes  =     0.17526177277563;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17526177277563;
213951    +  V_Diabetes_Predictionprediabetes  =     0.02323758329133;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02323758329133;
213952    +  I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
213953    +  U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
213954    +  END;
MPRINT(EM_DIAGRAM):   END;
213955    +ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
213956    +  _ARBFMT_12 = PUT( HighBP , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighBP , BEST.);
213957    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
213958    +  IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
213959    +    _NODE_  =                   10;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
213960    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
213961    +    P_Diabetes_Predictionno_diabetes  =     0.79806393516434;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79806393516434;
213962    +    P_Diabetes_Predictiondiabetes  =     0.17402071139126;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17402071139126;
213963    +    P_Diabetes_Predictionprediabetes  =     0.02791535344439;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02791535344439;
213964    +    Q_Diabetes_Predictionno_diabetes  =     0.79806393516434;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79806393516434;
213965    +    Q_Diabetes_Predictiondiabetes  =     0.17402071139126;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17402071139126;
213966    +    Q_Diabetes_Predictionprediabetes  =     0.02791535344439;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02791535344439;
213967    +    V_Diabetes_Predictionno_diabetes  =     0.78993055555555;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.78993055555555;
213968    +    V_Diabetes_Predictiondiabetes  =               0.1875;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.1875;
213969    +    V_Diabetes_Predictionprediabetes  =     0.02256944444444;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02256944444444;
213970    +    I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
213971    +    U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
213972    +    END;
MPRINT(EM_DIAGRAM):   END;
213973    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
213974    +    IF  NOT MISSING(BMI ) AND
213975    +                      27.5 <= BMI  AND
213976    +      BMI  <                 33.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(BMI ) AND 27.5 <= BMI AND BMI < 33.5 THEN DO;
213977    +      _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
213978    +      _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
213979    +      P_Diabetes_Predictionno_diabetes  =     0.55485161720573;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.55485161720573;
213980    +      P_Diabetes_Predictiondiabetes  =     0.40780260086695;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.40780260086695;
213981    +      P_Diabetes_Predictionprediabetes  =      0.0373457819273;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.0373457819273;
213982    +      Q_Diabetes_Predictionno_diabetes  =     0.55485161720573;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.55485161720573;
213983    +      Q_Diabetes_Predictiondiabetes  =     0.40780260086695;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.40780260086695;
213984    +      Q_Diabetes_Predictionprediabetes  =      0.0373457819273;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.0373457819273;
213985    +      V_Diabetes_Predictionno_diabetes  =     0.55328798185941;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.55328798185941;
213986    +      V_Diabetes_Predictiondiabetes  =      0.4063492063492;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.4063492063492;
213987    +      V_Diabetes_Predictionprediabetes  =     0.04036281179138;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04036281179138;
213988    +      I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
213989    +      U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
213990    +      END;
MPRINT(EM_DIAGRAM):   END;
213991    +    ELSE IF  NOT MISSING(BMI ) AND
213992    +                      33.5 <= BMI  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(BMI ) AND 33.5 <= BMI THEN DO;
213993    +      _ARBFMT_12 = PUT( HighChol , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighChol , BEST.);
213994    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
213995    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
213996    +        _NODE_  =                   66;
MPRINT(EM_DIAGRAM):   _NODE_ = 66;
213997    +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
213998    +        P_Diabetes_Predictionno_diabetes  =     0.59363957597173;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.59363957597173;
213999    +        P_Diabetes_Predictiondiabetes  =     0.37691401648998;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.37691401648998;
214000    +        P_Diabetes_Predictionprediabetes  =     0.02944640753828;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02944640753828;
214001    +        Q_Diabetes_Predictionno_diabetes  =     0.59363957597173;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.59363957597173;
214002    +        Q_Diabetes_Predictiondiabetes  =     0.37691401648998;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.37691401648998;
214003    +        Q_Diabetes_Predictionprediabetes  =     0.02944640753828;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02944640753828;
214004    +        V_Diabetes_Predictionno_diabetes  =     0.53738317757009;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.53738317757009;
214005    +        V_Diabetes_Predictiondiabetes  =     0.41744548286604;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.41744548286604;
214006    +        V_Diabetes_Predictionprediabetes  =     0.04517133956386;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04517133956386;
214007    +        I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
214008    +        U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
214009    +        END;
MPRINT(EM_DIAGRAM):   END;
214010    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214011    +        _ARBFMT_12 = PUT( GenHlth , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST.);
214012    +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
214013    +        IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
214014    +          _NODE_  =                  133;
MPRINT(EM_DIAGRAM):   _NODE_ = 133;
214015    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
214016    +          P_Diabetes_Predictionno_diabetes  =     0.30464716006884;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.30464716006884;
214017    +          P_Diabetes_Predictiondiabetes  =      0.6643717728055;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.6643717728055;
214018    +          P_Diabetes_Predictionprediabetes  =     0.03098106712564;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03098106712564;
214019    +          Q_Diabetes_Predictionno_diabetes  =     0.30464716006884;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.30464716006884;
214020    +          Q_Diabetes_Predictiondiabetes  =      0.6643717728055;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.6643717728055;
214021    +          Q_Diabetes_Predictionprediabetes  =     0.03098106712564;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03098106712564;
214022    +          V_Diabetes_Predictionno_diabetes  =     0.35338345864661;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.35338345864661;
214023    +          V_Diabetes_Predictiondiabetes  =     0.60150375939849;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.60150375939849;
214024    +          V_Diabetes_Predictionprediabetes  =     0.04511278195488;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04511278195488;
214025    +          I_Diabetes_Prediction  = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
214026    +          U_Diabetes_Prediction  = 'diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
214027    +          END;
MPRINT(EM_DIAGRAM):   END;
214028    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214029    +          _ARBFMT_12 = PUT( HvyAlcoholConsump , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HvyAlcoholConsump , BEST.);
214030    +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
214031    +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
214032    +            _NODE_  =                  210;
MPRINT(EM_DIAGRAM):   _NODE_ = 210;
214033    +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
214034    +            P_Diabetes_Predictionno_diabetes  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.66666666666666;
214035    +            P_Diabetes_Predictiondiabetes  =     0.25641025641025;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.25641025641025;
214036    +            P_Diabetes_Predictionprediabetes  =     0.07692307692307;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.07692307692307;
214037    +            Q_Diabetes_Predictionno_diabetes  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.66666666666666;
214038    +            Q_Diabetes_Predictiondiabetes  =     0.25641025641025;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.25641025641025;
214039    +            Q_Diabetes_Predictionprediabetes  =     0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.07692307692307;
214040    +            V_Diabetes_Predictionno_diabetes  =                 0.56;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.56;
214041    +            V_Diabetes_Predictiondiabetes  =                 0.36;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.36;
214042    +            V_Diabetes_Predictionprediabetes  =                 0.08;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.08;
214043    +            I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
214044    +            U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
214045    +            END;
MPRINT(EM_DIAGRAM):   END;
214046    +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214047    +            _NODE_  =                  209;
MPRINT(EM_DIAGRAM):   _NODE_ = 209;
214048    +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
214049    +            P_Diabetes_Predictionno_diabetes  =     0.39806607574536;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.39806607574536;
214050    +            P_Diabetes_Predictiondiabetes  =     0.55600322320709;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.55600322320709;
214051    +            P_Diabetes_Predictionprediabetes  =     0.04593070104754;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.04593070104754;
214052    +            Q_Diabetes_Predictionno_diabetes  =     0.39806607574536;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.39806607574536;
214053    +            Q_Diabetes_Predictiondiabetes  =     0.55600322320709;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.55600322320709;
214054    +            Q_Diabetes_Predictionprediabetes  =     0.04593070104754;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.04593070104754;
214055    +            V_Diabetes_Predictionno_diabetes  =     0.39978331527627;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.39978331527627;
214056    +            V_Diabetes_Predictiondiabetes  =     0.56013001083423;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.56013001083423;
214057    +            V_Diabetes_Predictionprediabetes  =     0.04008667388949;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04008667388949;
214058    +            I_Diabetes_Prediction  = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
214059    +            U_Diabetes_Prediction  = 'diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
214060    +            END;
MPRINT(EM_DIAGRAM):   END;
214061    +          END;
MPRINT(EM_DIAGRAM):   END;
214062    +        END;
MPRINT(EM_DIAGRAM):   END;
214063    +      END;
MPRINT(EM_DIAGRAM):   END;
214064    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214065    +      _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
214066    +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
214067    +      P_Diabetes_Predictionno_diabetes  =     0.69124719461365;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.69124719461365;
214068    +      P_Diabetes_Predictiondiabetes  =     0.28150048092337;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.28150048092337;
214069    +      P_Diabetes_Predictionprediabetes  =     0.02725232446296;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02725232446296;
214070    +      Q_Diabetes_Predictionno_diabetes  =     0.69124719461365;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.69124719461365;
214071    +      Q_Diabetes_Predictiondiabetes  =     0.28150048092337;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.28150048092337;
214072    +      Q_Diabetes_Predictionprediabetes  =     0.02725232446296;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02725232446296;
214073    +      V_Diabetes_Predictionno_diabetes  =     0.69792108612643;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.69792108612643;
214074    +      V_Diabetes_Predictiondiabetes  =     0.27577428935086;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.27577428935086;
214075    +      V_Diabetes_Predictionprediabetes  =     0.02630462452269;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02630462452269;
214076    +      I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
214077    +      U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
214078    +      END;
MPRINT(EM_DIAGRAM):   END;
214079    +    END;
MPRINT(EM_DIAGRAM):   END;
214080    +  END;
MPRINT(EM_DIAGRAM):   END;
214081    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214082    +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
214083    +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
214084    +  P_Diabetes_Predictionno_diabetes  =     0.93206610035742;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.93206610035742;
214085    +  P_Diabetes_Predictiondiabetes  =     0.05672376177876;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.05672376177876;
214086    +  P_Diabetes_Predictionprediabetes  =      0.0112101378638;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.0112101378638;
214087    +  Q_Diabetes_Predictionno_diabetes  =     0.93206610035742;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.93206610035742;
214088    +  Q_Diabetes_Predictiondiabetes  =     0.05672376177876;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.05672376177876;
214089    +  Q_Diabetes_Predictionprediabetes  =      0.0112101378638;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.0112101378638;
214090    +  V_Diabetes_Predictionno_diabetes  =     0.93139956041234;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.93139956041234;
214091    +  V_Diabetes_Predictiondiabetes  =     0.05711543819459;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.05711543819459;
214092    +  V_Diabetes_Predictionprediabetes  =     0.01148500139305;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01148500139305;
214093    +  I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
214094    +  U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
214095    +  END;
MPRINT(EM_DIAGRAM):   END;
214096    +
214097    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
214098    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
214099    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
214100    +
214101    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
214102     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

214103     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
214104     quit;
214105     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
214106     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
214107     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
214108     retain ID 4 Node "Tree4";
MPRINT(EM_DIAGRAM):   retain ID 4 Node "Tree4";
214109     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
214110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 83 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

214111     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
214112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 83 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

214114     proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
214115     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214116     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

214117     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214118     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
214119     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
214120     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 23 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

214121     proc contents data=EMWS2.Tree4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Tree4_train out=_meta(keep=NAME) noprint;
214122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 40 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

214123     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
214124     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 40 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

214126     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214127     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
214128     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214129     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 40 observations read from the data set WORK._META.
NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

214130     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
214131     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 70 rows and 5 columns.

214132     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

214133     proc append base=EMWS2.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score_FCMP data=_tempx;
214134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS2.SCORE_FCMP.
NOTE: There were 70 observations read from the data set WORK._TEMPX.
NOTE: 70 observations added.
NOTE: The data set EMWS2.SCORE_FCMP has 80 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
      

214135     %macro varDept(fcmpdata=,id=);
214136     %global nobs&id scoreFlag&id;
214137     %let scoreFlag&id = 0;
214138     %if &id=1 or ^&fcmpStart %then %do;
214139     proc sort data=&fcmpdata out=_temp&id nodupkey;
214140     by NAME;
214141     %if EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY ne %then %do;
214142     where id=&id and (LHS in( %let j=1;
214143     %do %while(%scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j) ne );
214144     %let var = %scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j);
214145     "&var" %let j = %eval(&j+1);
214146     %end;
214147     ) or substr(LHS, 1, 3)='EM_');
214148     %end;
214149     %else %do;
214150     where id=&id and substr(LHS, 1, 3)='EM_';
214151     %end;
214152     run;
214153     %let dsid = %sysfunc(open(_temp&id));
214154     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214155     %let dsid = %sysfunc(close(&dsid));
214156     %if &&nobs&id %then %do;
214157     %let scoreFlag&id = 1;
214158     %let fcmpStart = 1;
214159     %end;
214160     %else %let fcmpStart = 0;
214161     %end;
214162     %else %do;
214163     proc sort data=&fcmpdata out=_tempid;
214164     where id=&id;
214165     by LHS;
214166     run;
214167     %let dsid = %sysfunc(open(_tempid));
214168     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214169     %let dsid = %sysfunc(close(&dsid));
214170     %if ^&&nobs&id %then %do;
214171     proc datasets lib=work nolist;
214172     delete _tempid;
214173     run;
214174     quit;
214175     %end;
214176     %else %do;
214177     data _tempAll;
214178     set %let j=%eval(&id-1);
214179     %do x=1 %to &j;
214180     %if &&nobs&x %then %do;
214181     _temp&x %end;
214182     %end;
214183     ;
214184     run;
214185     proc sql;
214186     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
214187     quit;
214188     data _temp&id;
214189     set _temp&id;
214190     where LHS ne '' and NAME ne '' and Node ne '';
214191     run;
214192     proc datasets lib=work nolist;
214193     delete _tempAll;
214194     run;
214195     %let dsid = %sysfunc(open(_temp&id));
214196     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214197     %let dsid = %sysfunc(close(&dsid));
214198     %if ^&&nobs&id %then %do;
214199     proc datasets lib=work nolist;
214200     delete _temp&id;
214201     run;
214202     quit;
214203     %end;
214204     %else %do;
214205     %let scoreFlag&id = 1;
214206     data _temp&id;
214207     set _temp&id;
214208     where LHS ne NAME and node ne '';
214209     run;
214210     %let dsid = %sysfunc(open(_temp&id));
214211     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214212     %let dsid = %sysfunc(close(&dsid));
214213     %if ^&&nobs&id %then %do;
214214     proc datasets lib=work nolist;
214215     delete _temp&id;
214216     run;
214217     quit;
214218     %end;
214219     %else %do;
214220     proc sort data=_temp&id nodupkey;
214221     by LHS NAME;
214222     run;
214223     %end;
214224     %end;
214225     %end;
214226     %end;
214227     %mend varDept;
214228     %macro optCode(outdata=);
214229     %global fcmpStart;
214230     %let fcmpStart = 0;
214231     %let outputVars = EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY;
214232     %let NumNodes=6;
214233     %do k=1 %to &NumNodes;
214234     %vardept(fcmpdata=&outdata, id=&k);
214235     %end;
214236     %mend optCode;
214237     %optcode(outData=EMWS2.Score_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS2.Score_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_CLASSIFICATION" "EM_PROBABILITY" "EM_EVENTPROBABILITY" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;

NOTE: There were 6 observations read from the data set EMWS2.SCORE_FCMP.
      WHERE (id=1) and (LHS in ('EM_CLASSIFICATION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set EMWS2.SCORE_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp2;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP2 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set EMWS2.SCORE_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp3;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP3 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 70 observations read from the data set EMWS2.SCORE_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 70 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp4 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP4 created, with 25 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP4 has 25 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP4 has 25 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp4 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP4.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP4 has 25 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 15.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M7P080520;
MPRINT(EM_DIAGRAM):   * Host: nutvdiwin104-14;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments;
MPRINT(EM_DIAGRAM):   * Project Name: SV.PredictiveAnalysis;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: SV.Prediction;
MPRINT(EM_DIAGRAM):   * Generated by: shre2;
MPRINT(EM_DIAGRAM):   * Date: 04MAR2024:01:49:43;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionno_diabetes = 'Unadjusted P: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictiondiabetes = 'Unadjusted P: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionprediabetes = 'Unadjusted P: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionno_diabetes = 'Validated: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictiondiabetes = 'Validated: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionprediabetes = 'Validated: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_11 $ 11;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_11;
MPRINT(EM_DIAGRAM):   _ARBFMT_11 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79996648653177;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17657408571069;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02345942775753;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79996648653177;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17657408571069;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02345942775753;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.80150064393303;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17526177277563;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02323758329133;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighBP , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79806393516434;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17402071139126;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02791535344439;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79806393516434;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17402071139126;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02791535344439;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.78993055555555;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.1875;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02256944444444;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(BMI ) AND 27.5 <= BMI AND BMI < 33.5 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.55485161720573;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.40780260086695;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.0373457819273;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.55485161720573;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.40780260086695;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.0373457819273;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.55328798185941;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.4063492063492;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04036281179138;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(BMI ) AND 33.5 <= BMI THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighChol , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 66;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.59363957597173;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.37691401648998;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02944640753828;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.59363957597173;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.37691401648998;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02944640753828;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.53738317757009;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.41744548286604;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04517133956386;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 133;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.30464716006884;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.6643717728055;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03098106712564;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.30464716006884;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.6643717728055;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03098106712564;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.35338345864661;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.60150375939849;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04511278195488;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HvyAlcoholConsump , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 210;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.25641025641025;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.25641025641025;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.07692307692307;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.56;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.36;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.08;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 209;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.39806607574536;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.55600322320709;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.04593070104754;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.39806607574536;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.55600322320709;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.04593070104754;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.39978331527627;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.56013001083423;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04008667388949;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.69124719461365;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.28150048092337;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02725232446296;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.69124719461365;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.28150048092337;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02725232446296;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.69792108612643;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.27577428935086;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02630462452269;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.93206610035742;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.05672376177876;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.0112101378638;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.93206610035742;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.05672376177876;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.0112101378638;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.93139956041234;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.05711543819459;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01148500139305;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
214529     %let validvarany = 0;
214530     data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
214531     set EMWS2.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Score_EMINPUTVARS;
214532     length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
214533     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
214534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS2.SCORE_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 22 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

214535     proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
214536     by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
214537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 22 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

214538     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214539     merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
214540     by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
214541     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
214542     length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
214543     label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
214544     SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
214545     if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
214546     else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
214547     if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
214548     if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
214549     call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
214550     end;
MPRINT(EM_DIAGRAM):   end;
214551     output;
MPRINT(EM_DIAGRAM):   output;
214552     end;
MPRINT(EM_DIAGRAM):   end;
214553     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 11 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

214554     proc sort data=_temp2 out=EMWS2.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS2.Score_EMINPUTVARS;
214555     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214556     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS2.SCORE_EMINPUTVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=ZETADATA.CLEANZETADIABETES_TRAIN noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\shre2\AppData\Local\Temp\SAS Temporary Files\_TD14244_NUTVDIWIN104-14_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\shre2\AppData\Local\Temp\SAS Temporary Files\_TD14244_NUTVDIWIN104-14_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('ZETADATA.CLEANZETADIABETES_TRAIN');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set ZETADATA.CLEANZETADIABETES_TRAIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 15.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M7P080520;
MPRINT(EM_DIAGRAM):   * Host: nutvdiwin104-14;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments;
MPRINT(EM_DIAGRAM):   * Project Name: SV.PredictiveAnalysis;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: SV.Prediction;
MPRINT(EM_DIAGRAM):   * Generated by: shre2;
MPRINT(EM_DIAGRAM):   * Date: 04MAR2024:01:49:43;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionno_diabetes = 'Unadjusted P: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictiondiabetes = 'Unadjusted P: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionprediabetes = 'Unadjusted P: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionno_diabetes = 'Validated: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictiondiabetes = 'Validated: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionprediabetes = 'Validated: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_11 $ 11;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_11;
MPRINT(EM_DIAGRAM):   _ARBFMT_11 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79996648653177;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17657408571069;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02345942775753;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79996648653177;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17657408571069;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02345942775753;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.80150064393303;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17526177277563;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02323758329133;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighBP , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79806393516434;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17402071139126;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02791535344439;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79806393516434;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17402071139126;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02791535344439;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.78993055555555;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.1875;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02256944444444;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(BMI ) AND 27.5 <= BMI AND BMI < 33.5 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.55485161720573;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.40780260086695;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.0373457819273;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.55485161720573;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.40780260086695;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.0373457819273;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.55328798185941;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.4063492063492;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04036281179138;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(BMI ) AND 33.5 <= BMI THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighChol , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 66;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.59363957597173;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.37691401648998;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02944640753828;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.59363957597173;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.37691401648998;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02944640753828;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.53738317757009;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.41744548286604;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04517133956386;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 133;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.30464716006884;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.6643717728055;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03098106712564;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.30464716006884;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.6643717728055;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03098106712564;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.35338345864661;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.60150375939849;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04511278195488;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HvyAlcoholConsump , BEST.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 210;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.66666666666666;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.25641025641025;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.07692307692307;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.66666666666666;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.25641025641025;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.07692307692307;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.56;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.36;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.08;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 209;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.39806607574536;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.55600322320709;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.04593070104754;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.39806607574536;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.55600322320709;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.04593070104754;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.39978331527627;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.56013001083423;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04008667388949;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.69124719461365;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.28150048092337;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02725232446296;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.69124719461365;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.28150048092337;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02725232446296;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.69792108612643;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.27577428935086;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02630462452269;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.93206610035742;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.05672376177876;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.0112101378638;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.93206610035742;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.05672376177876;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.0112101378638;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.93139956041234;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.05711543819459;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01148500139305;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   drop 'Age'n 'AnyHealthcare'n 'BMI'n 'CholCheck'n 'Diabetes_Prediction'n 'DiffWalk'n 'Education'n 'Fruits'n 'GenHlth'n 'HeartDiseaseorAttack'n 'HighBP'n 'HighChol'n 'HvyAlcoholConsump'n 'Income'n 'MentHlth'n 'NoDocbcCost'n 
'PhysActivity'n 'PhysHlth'n 'Sex'n 'Smoker'n 'Stroke'n 'Veggies'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS2.Score_EMOUTPUTVARS noprint out=EMWS2.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
214906     data EMWS2.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Score_EMOUTPUTVARS;
214907     set EMWS2.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS2.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
214908     length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
214909     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
214910     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
214911     drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
214912     if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
214913     else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
214914     else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
214915     else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
214916     else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
214917     ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
214918     else do;
MPRINT(EM_DIAGRAM):   else do;
214919     name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
214920     if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
214921     else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
214922     else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
214923     else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
214924     else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
214925     else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
214926     end;
MPRINT(EM_DIAGRAM):   end;
214927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS2.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE_EMOUTPUTVARS has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
      

214928     proc sort data=EMWS2.MdlComp3_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.MdlComp3_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
214929     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS2.MDLCOMP3_CMETA_TRAIN.
NOTE: The data set WORK.META has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

214931     proc sort data=EMWS2.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score_EMOUTPUTVARS;
214932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS2.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE_EMOUTPUTVARS has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
      

214934     data EMWS2.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score_EMOUTPUTVARS;
214935     merge WORK.META EMWS2.Score_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS2.Score_EMOUTPUTVARS(in=_a);
214936     label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
214937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214938     if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
214939     if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
214940     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK.META.
NOTE: There were 17 observations read from the data set EMWS2.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE_EMOUTPUTVARS has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
      

214941     %let _cn = %sysfunc(getoption(CENTER));
214942     %let _nb = %sysfunc(getoption(NUMBER));
214943     options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
214944     title;
MPRINT(EM_DIAGRAM):   title;
214945     proc print data=EMWS2.Score_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score_EMINPUTVARS noobs label;
214946     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
214947     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
214948     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
214949     run;

NOTE: There were 6 observations read from the data set EMWS2.SCORE_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 167.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

214950     title10;
MPRINT(EM_DIAGRAM):   title10;
214951     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
214952     %let _cn = %sysfunc(getoption(CENTER));
214953     %let _nb = %sysfunc(getoption(NUMBER));
214954     options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
214955     title;
MPRINT(EM_DIAGRAM):   title;
214956     proc print data=EMWS2.Score_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score_EMOUTPUTVARS noobs label;
214957     var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
214958     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
214959        "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
214960     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
214961     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
214962     run;

NOTE: There were 17 observations read from the data set EMWS2.SCORE_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 168.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

214963     title10;
MPRINT(EM_DIAGRAM):   title10;
214964     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
214965     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
214966     * Score: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for TRAIN data;
214967     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score_TRAIN out=WORK.M27IZX3H noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27IZX3H;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M27IZX3H(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27IZX3H;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M27IZX3H;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3CIO28G NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A4XEFX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CIO28G;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "I_Diabetes_Prediction" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_Diabetes_Predictiondiabetes" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_Diabetes_Predictionno_diabetes" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_Diabetes_Predictionprediabetes" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.28 seconds
      
NOTE: View EMWS2.SCORE_VALIDATE.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
      
NOTE: View EMWS2.SCORE_TEST.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
