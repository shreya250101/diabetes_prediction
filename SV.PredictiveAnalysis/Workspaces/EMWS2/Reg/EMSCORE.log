MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "01:43:06" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 04, 2024
Time:                01:43:06
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0G68NH4 "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0G68NH4 new;
MPRINT(EM_DIAGRAM):   run;
92632      filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
92633      *------------------------------------------------------------*;
92634      * Reg: Scoring DATA data;
92635      *------------------------------------------------------------*;
92636      data EMWS2.Reg_TRAIN
92637      / view=EMWS2.Reg_TRAIN
92638      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg_TRAIN / view=EMWS2.Reg_TRAIN ;
92639      set EMWS2.Part_TRAIN
92640      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN ;
92641      %inc emflow;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [3] $11 _temporary_ ('PREDIABETES' 'NO DIABETES' 'DIABETES' );
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   length U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   array REGDRU[3] $ 11 _temporary_ ('prediabetes' 'no diabetes' 'diabetes   ' );
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Diabetes_Prediction ;
MPRINT(EM_DIAGRAM):   drop _Y ;
MPRINT(EM_DIAGRAM):   label F_Diabetes_Prediction = 'From: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   length F_Diabetes_Prediction $ 11;
MPRINT(DMNORMCP):   F_Diabetes_Prediction=dmnorm(Diabetes_Prediction,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if missing( Diabetes_Prediction ) then do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if F_Diabetes_Prediction = 'NO DIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if F_Diabetes_Prediction = 'DIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if F_Diabetes_Prediction = 'PREDIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Check BMI for missing values ;
MPRINT(EM_DIAGRAM):   if missing( BMI ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AnyHealthcare ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
MPRINT(EM_DIAGRAM):   if missing( AnyHealthcare ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AnyHealthcare , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for CholCheck ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( CholCheck ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( CholCheck , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DiffWalk ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
MPRINT(EM_DIAGRAM):   if missing( DiffWalk ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( DiffWalk , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Education , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Fruits ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
MPRINT(EM_DIAGRAM):   if missing( Fruits ) then do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Fruits , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GenHlth ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 _6_2 _6_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_2 = 0;
MPRINT(EM_DIAGRAM):   _6_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( GenHlth ) then do;
MPRINT(EM_DIAGRAM):   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( GenHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _6_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _6_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_2 = -1;
MPRINT(EM_DIAGRAM):   _6_3 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   drop _7_0 ;
MPRINT(EM_DIAGRAM):   if missing( HeartDiseaseorAttack ) then do;
MPRINT(EM_DIAGRAM):   _7_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HeartDiseaseorAttack , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _7_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighBP ;
MPRINT(EM_DIAGRAM):   drop _8_0 ;
MPRINT(EM_DIAGRAM):   if missing( HighBP ) then do;
MPRINT(EM_DIAGRAM):   _8_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighBP , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _8_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighChol ;
MPRINT(EM_DIAGRAM):   drop _9_0 ;
MPRINT(EM_DIAGRAM):   if missing( HighChol ) then do;
MPRINT(EM_DIAGRAM):   _9_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighChol , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _9_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   drop _10_0 ;
MPRINT(EM_DIAGRAM):   if missing( HvyAlcoholConsump ) then do;
MPRINT(EM_DIAGRAM):   _10_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HvyAlcoholConsump , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _10_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Income ;
MPRINT(EM_DIAGRAM):   drop _11_0 _11_1 _11_2 _11_3 _11_4 _11_5 _11_6 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _11_0 = 0;
MPRINT(EM_DIAGRAM):   _11_1 = 0;
MPRINT(EM_DIAGRAM):   _11_2 = 0;
MPRINT(EM_DIAGRAM):   _11_3 = 0;
MPRINT(EM_DIAGRAM):   _11_4 = 0;
MPRINT(EM_DIAGRAM):   _11_5 = 0;
MPRINT(EM_DIAGRAM):   _11_6 = 0;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_5 = .;
MPRINT(EM_DIAGRAM):   _11_6 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Income , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _11_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _11_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _11_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _11_4 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _11_5 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _11_6 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
MPRINT(EM_DIAGRAM):   _11_1 = -1;
MPRINT(EM_DIAGRAM):   _11_2 = -1;
MPRINT(EM_DIAGRAM):   _11_3 = -1;
MPRINT(EM_DIAGRAM):   _11_4 = -1;
MPRINT(EM_DIAGRAM):   _11_5 = -1;
MPRINT(EM_DIAGRAM):   _11_6 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_5 = .;
MPRINT(EM_DIAGRAM):   _11_6 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for MentHlth ;
MPRINT(EM_DIAGRAM):   drop _12_0 _12_1 _12_2 _12_3 _12_4 _12_5 _12_6 _12_7 _12_8 _12_9 _12_10 _12_11 _12_12 _12_13 _12_14 _12_15 _12_16 _12_17 _12_18 _12_19 _12_20 _12_21 _12_22 _12_23 _12_24 _12_25 _12_26 _12_27 _12_28 _12_29 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _12_0 = 0;
MPRINT(EM_DIAGRAM):   _12_1 = 0;
MPRINT(EM_DIAGRAM):   _12_2 = 0;
MPRINT(EM_DIAGRAM):   _12_3 = 0;
MPRINT(EM_DIAGRAM):   _12_4 = 0;
MPRINT(EM_DIAGRAM):   _12_5 = 0;
MPRINT(EM_DIAGRAM):   _12_6 = 0;
MPRINT(EM_DIAGRAM):   _12_7 = 0;
MPRINT(EM_DIAGRAM):   _12_8 = 0;
MPRINT(EM_DIAGRAM):   _12_9 = 0;
MPRINT(EM_DIAGRAM):   _12_10 = 0;
MPRINT(EM_DIAGRAM):   _12_11 = 0;
MPRINT(EM_DIAGRAM):   _12_12 = 0;
MPRINT(EM_DIAGRAM):   _12_13 = 0;
MPRINT(EM_DIAGRAM):   _12_14 = 0;
MPRINT(EM_DIAGRAM):   _12_15 = 0;
MPRINT(EM_DIAGRAM):   _12_16 = 0;
MPRINT(EM_DIAGRAM):   _12_17 = 0;
MPRINT(EM_DIAGRAM):   _12_18 = 0;
MPRINT(EM_DIAGRAM):   _12_19 = 0;
MPRINT(EM_DIAGRAM):   _12_20 = 0;
MPRINT(EM_DIAGRAM):   _12_21 = 0;
MPRINT(EM_DIAGRAM):   _12_22 = 0;
MPRINT(EM_DIAGRAM):   _12_23 = 0;
MPRINT(EM_DIAGRAM):   _12_24 = 0;
MPRINT(EM_DIAGRAM):   _12_25 = 0;
MPRINT(EM_DIAGRAM):   _12_26 = 0;
MPRINT(EM_DIAGRAM):   _12_27 = 0;
MPRINT(EM_DIAGRAM):   _12_28 = 0;
MPRINT(EM_DIAGRAM):   _12_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( MentHlth ) then do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_1 = .;
MPRINT(EM_DIAGRAM):   _12_2 = .;
MPRINT(EM_DIAGRAM):   _12_3 = .;
MPRINT(EM_DIAGRAM):   _12_4 = .;
MPRINT(EM_DIAGRAM):   _12_5 = .;
MPRINT(EM_DIAGRAM):   _12_6 = .;
MPRINT(EM_DIAGRAM):   _12_7 = .;
MPRINT(EM_DIAGRAM):   _12_8 = .;
MPRINT(EM_DIAGRAM):   _12_9 = .;
MPRINT(EM_DIAGRAM):   _12_10 = .;
MPRINT(EM_DIAGRAM):   _12_11 = .;
MPRINT(EM_DIAGRAM):   _12_12 = .;
MPRINT(EM_DIAGRAM):   _12_13 = .;
MPRINT(EM_DIAGRAM):   _12_14 = .;
MPRINT(EM_DIAGRAM):   _12_15 = .;
MPRINT(EM_DIAGRAM):   _12_16 = .;
MPRINT(EM_DIAGRAM):   _12_17 = .;
MPRINT(EM_DIAGRAM):   _12_18 = .;
MPRINT(EM_DIAGRAM):   _12_19 = .;
MPRINT(EM_DIAGRAM):   _12_20 = .;
MPRINT(EM_DIAGRAM):   _12_21 = .;
MPRINT(EM_DIAGRAM):   _12_22 = .;
MPRINT(EM_DIAGRAM):   _12_23 = .;
MPRINT(EM_DIAGRAM):   _12_24 = .;
MPRINT(EM_DIAGRAM):   _12_25 = .;
MPRINT(EM_DIAGRAM):   _12_26 = .;
MPRINT(EM_DIAGRAM):   _12_27 = .;
MPRINT(EM_DIAGRAM):   _12_28 = .;
MPRINT(EM_DIAGRAM):   _12_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( MentHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _12_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _12_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   _12_0 = -1;
MPRINT(EM_DIAGRAM):   _12_1 = -1;
MPRINT(EM_DIAGRAM):   _12_2 = -1;
MPRINT(EM_DIAGRAM):   _12_3 = -1;
MPRINT(EM_DIAGRAM):   _12_4 = -1;
MPRINT(EM_DIAGRAM):   _12_5 = -1;
MPRINT(EM_DIAGRAM):   _12_6 = -1;
MPRINT(EM_DIAGRAM):   _12_7 = -1;
MPRINT(EM_DIAGRAM):   _12_8 = -1;
MPRINT(EM_DIAGRAM):   _12_9 = -1;
MPRINT(EM_DIAGRAM):   _12_10 = -1;
MPRINT(EM_DIAGRAM):   _12_11 = -1;
MPRINT(EM_DIAGRAM):   _12_12 = -1;
MPRINT(EM_DIAGRAM):   _12_13 = -1;
MPRINT(EM_DIAGRAM):   _12_14 = -1;
MPRINT(EM_DIAGRAM):   _12_15 = -1;
MPRINT(EM_DIAGRAM):   _12_16 = -1;
MPRINT(EM_DIAGRAM):   _12_17 = -1;
MPRINT(EM_DIAGRAM):   _12_18 = -1;
MPRINT(EM_DIAGRAM):   _12_19 = -1;
MPRINT(EM_DIAGRAM):   _12_20 = -1;
MPRINT(EM_DIAGRAM):   _12_21 = -1;
MPRINT(EM_DIAGRAM):   _12_22 = -1;
MPRINT(EM_DIAGRAM):   _12_23 = -1;
MPRINT(EM_DIAGRAM):   _12_24 = -1;
MPRINT(EM_DIAGRAM):   _12_25 = -1;
MPRINT(EM_DIAGRAM):   _12_26 = -1;
MPRINT(EM_DIAGRAM):   _12_27 = -1;
MPRINT(EM_DIAGRAM):   _12_28 = -1;
MPRINT(EM_DIAGRAM):   _12_29 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _12_5 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _12_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _12_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   _12_10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   _12_15 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _12_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   _12_20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _12_7 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   _12_25 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   _12_14 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _12_6 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _12_8 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   _12_28 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   _12_12 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   _12_21 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   _12_29 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   _12_9 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   _12_16 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   _12_18 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   _12_27 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   _12_22 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   _12_17 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   _12_26 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   _12_13 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   _12_11 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   _12_23 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   _12_24 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   _12_19 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_1 = .;
MPRINT(EM_DIAGRAM):   _12_2 = .;
MPRINT(EM_DIAGRAM):   _12_3 = .;
MPRINT(EM_DIAGRAM):   _12_4 = .;
MPRINT(EM_DIAGRAM):   _12_5 = .;
MPRINT(EM_DIAGRAM):   _12_6 = .;
MPRINT(EM_DIAGRAM):   _12_7 = .;
MPRINT(EM_DIAGRAM):   _12_8 = .;
MPRINT(EM_DIAGRAM):   _12_9 = .;
MPRINT(EM_DIAGRAM):   _12_10 = .;
MPRINT(EM_DIAGRAM):   _12_11 = .;
MPRINT(EM_DIAGRAM):   _12_12 = .;
MPRINT(EM_DIAGRAM):   _12_13 = .;
MPRINT(EM_DIAGRAM):   _12_14 = .;
MPRINT(EM_DIAGRAM):   _12_15 = .;
MPRINT(EM_DIAGRAM):   _12_16 = .;
MPRINT(EM_DIAGRAM):   _12_17 = .;
MPRINT(EM_DIAGRAM):   _12_18 = .;
MPRINT(EM_DIAGRAM):   _12_19 = .;
MPRINT(EM_DIAGRAM):   _12_20 = .;
MPRINT(EM_DIAGRAM):   _12_21 = .;
MPRINT(EM_DIAGRAM):   _12_22 = .;
MPRINT(EM_DIAGRAM):   _12_23 = .;
MPRINT(EM_DIAGRAM):   _12_24 = .;
MPRINT(EM_DIAGRAM):   _12_25 = .;
MPRINT(EM_DIAGRAM):   _12_26 = .;
MPRINT(EM_DIAGRAM):   _12_27 = .;
MPRINT(EM_DIAGRAM):   _12_28 = .;
MPRINT(EM_DIAGRAM):   _12_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for NoDocbcCost ;
MPRINT(EM_DIAGRAM):   drop _13_0 ;
MPRINT(EM_DIAGRAM):   if missing( NoDocbcCost ) then do;
MPRINT(EM_DIAGRAM):   _13_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( NoDocbcCost , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _13_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysActivity ;
MPRINT(EM_DIAGRAM):   drop _14_0 ;
MPRINT(EM_DIAGRAM):   if missing( PhysActivity ) then do;
MPRINT(EM_DIAGRAM):   _14_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysActivity , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _14_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysHlth ;
MPRINT(EM_DIAGRAM):   drop _15_0 _15_1 _15_2 _15_3 _15_4 _15_5 _15_6 _15_7 _15_8 _15_9 _15_10 _15_11 _15_12 _15_13 _15_14 _15_15 _15_16 _15_17 _15_18 _15_19 _15_20 _15_21 _15_22 _15_23 _15_24 _15_25 _15_26 _15_27 _15_28 _15_29 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _15_0 = 0;
MPRINT(EM_DIAGRAM):   _15_1 = 0;
MPRINT(EM_DIAGRAM):   _15_2 = 0;
MPRINT(EM_DIAGRAM):   _15_3 = 0;
MPRINT(EM_DIAGRAM):   _15_4 = 0;
MPRINT(EM_DIAGRAM):   _15_5 = 0;
MPRINT(EM_DIAGRAM):   _15_6 = 0;
MPRINT(EM_DIAGRAM):   _15_7 = 0;
MPRINT(EM_DIAGRAM):   _15_8 = 0;
MPRINT(EM_DIAGRAM):   _15_9 = 0;
MPRINT(EM_DIAGRAM):   _15_10 = 0;
MPRINT(EM_DIAGRAM):   _15_11 = 0;
MPRINT(EM_DIAGRAM):   _15_12 = 0;
MPRINT(EM_DIAGRAM):   _15_13 = 0;
MPRINT(EM_DIAGRAM):   _15_14 = 0;
MPRINT(EM_DIAGRAM):   _15_15 = 0;
MPRINT(EM_DIAGRAM):   _15_16 = 0;
MPRINT(EM_DIAGRAM):   _15_17 = 0;
MPRINT(EM_DIAGRAM):   _15_18 = 0;
MPRINT(EM_DIAGRAM):   _15_19 = 0;
MPRINT(EM_DIAGRAM):   _15_20 = 0;
MPRINT(EM_DIAGRAM):   _15_21 = 0;
MPRINT(EM_DIAGRAM):   _15_22 = 0;
MPRINT(EM_DIAGRAM):   _15_23 = 0;
MPRINT(EM_DIAGRAM):   _15_24 = 0;
MPRINT(EM_DIAGRAM):   _15_25 = 0;
MPRINT(EM_DIAGRAM):   _15_26 = 0;
MPRINT(EM_DIAGRAM):   _15_27 = 0;
MPRINT(EM_DIAGRAM):   _15_28 = 0;
MPRINT(EM_DIAGRAM):   _15_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   _15_0 = .;
MPRINT(EM_DIAGRAM):   _15_1 = .;
MPRINT(EM_DIAGRAM):   _15_2 = .;
MPRINT(EM_DIAGRAM):   _15_3 = .;
MPRINT(EM_DIAGRAM):   _15_4 = .;
MPRINT(EM_DIAGRAM):   _15_5 = .;
MPRINT(EM_DIAGRAM):   _15_6 = .;
MPRINT(EM_DIAGRAM):   _15_7 = .;
MPRINT(EM_DIAGRAM):   _15_8 = .;
MPRINT(EM_DIAGRAM):   _15_9 = .;
MPRINT(EM_DIAGRAM):   _15_10 = .;
MPRINT(EM_DIAGRAM):   _15_11 = .;
MPRINT(EM_DIAGRAM):   _15_12 = .;
MPRINT(EM_DIAGRAM):   _15_13 = .;
MPRINT(EM_DIAGRAM):   _15_14 = .;
MPRINT(EM_DIAGRAM):   _15_15 = .;
MPRINT(EM_DIAGRAM):   _15_16 = .;
MPRINT(EM_DIAGRAM):   _15_17 = .;
MPRINT(EM_DIAGRAM):   _15_18 = .;
MPRINT(EM_DIAGRAM):   _15_19 = .;
MPRINT(EM_DIAGRAM):   _15_20 = .;
MPRINT(EM_DIAGRAM):   _15_21 = .;
MPRINT(EM_DIAGRAM):   _15_22 = .;
MPRINT(EM_DIAGRAM):   _15_23 = .;
MPRINT(EM_DIAGRAM):   _15_24 = .;
MPRINT(EM_DIAGRAM):   _15_25 = .;
MPRINT(EM_DIAGRAM):   _15_26 = .;
MPRINT(EM_DIAGRAM):   _15_27 = .;
MPRINT(EM_DIAGRAM):   _15_28 = .;
MPRINT(EM_DIAGRAM):   _15_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _15_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   _15_0 = -1;
MPRINT(EM_DIAGRAM):   _15_1 = -1;
MPRINT(EM_DIAGRAM):   _15_2 = -1;
MPRINT(EM_DIAGRAM):   _15_3 = -1;
MPRINT(EM_DIAGRAM):   _15_4 = -1;
MPRINT(EM_DIAGRAM):   _15_5 = -1;
MPRINT(EM_DIAGRAM):   _15_6 = -1;
MPRINT(EM_DIAGRAM):   _15_7 = -1;
MPRINT(EM_DIAGRAM):   _15_8 = -1;
MPRINT(EM_DIAGRAM):   _15_9 = -1;
MPRINT(EM_DIAGRAM):   _15_10 = -1;
MPRINT(EM_DIAGRAM):   _15_11 = -1;
MPRINT(EM_DIAGRAM):   _15_12 = -1;
MPRINT(EM_DIAGRAM):   _15_13 = -1;
MPRINT(EM_DIAGRAM):   _15_14 = -1;
MPRINT(EM_DIAGRAM):   _15_15 = -1;
MPRINT(EM_DIAGRAM):   _15_16 = -1;
MPRINT(EM_DIAGRAM):   _15_17 = -1;
MPRINT(EM_DIAGRAM):   _15_18 = -1;
MPRINT(EM_DIAGRAM):   _15_19 = -1;
MPRINT(EM_DIAGRAM):   _15_20 = -1;
MPRINT(EM_DIAGRAM):   _15_21 = -1;
MPRINT(EM_DIAGRAM):   _15_22 = -1;
MPRINT(EM_DIAGRAM):   _15_23 = -1;
MPRINT(EM_DIAGRAM):   _15_24 = -1;
MPRINT(EM_DIAGRAM):   _15_25 = -1;
MPRINT(EM_DIAGRAM):   _15_26 = -1;
MPRINT(EM_DIAGRAM):   _15_27 = -1;
MPRINT(EM_DIAGRAM):   _15_28 = -1;
MPRINT(EM_DIAGRAM):   _15_29 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _15_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _15_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _15_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _15_5 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   _15_10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   _15_15 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _15_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _15_7 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   _15_20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   _15_14 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _15_6 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   _15_25 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _15_8 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   _15_21 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   _15_12 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   _15_28 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   _15_29 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   _15_9 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   _15_18 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   _15_16 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   _15_17 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   _15_27 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   _15_26 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   _15_24 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   _15_11 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   _15_13 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   _15_22 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   _15_23 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   _15_19 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _15_0 = .;
MPRINT(EM_DIAGRAM):   _15_1 = .;
MPRINT(EM_DIAGRAM):   _15_2 = .;
MPRINT(EM_DIAGRAM):   _15_3 = .;
MPRINT(EM_DIAGRAM):   _15_4 = .;
MPRINT(EM_DIAGRAM):   _15_5 = .;
MPRINT(EM_DIAGRAM):   _15_6 = .;
MPRINT(EM_DIAGRAM):   _15_7 = .;
MPRINT(EM_DIAGRAM):   _15_8 = .;
MPRINT(EM_DIAGRAM):   _15_9 = .;
MPRINT(EM_DIAGRAM):   _15_10 = .;
MPRINT(EM_DIAGRAM):   _15_11 = .;
MPRINT(EM_DIAGRAM):   _15_12 = .;
MPRINT(EM_DIAGRAM):   _15_13 = .;
MPRINT(EM_DIAGRAM):   _15_14 = .;
MPRINT(EM_DIAGRAM):   _15_15 = .;
MPRINT(EM_DIAGRAM):   _15_16 = .;
MPRINT(EM_DIAGRAM):   _15_17 = .;
MPRINT(EM_DIAGRAM):   _15_18 = .;
MPRINT(EM_DIAGRAM):   _15_19 = .;
MPRINT(EM_DIAGRAM):   _15_20 = .;
MPRINT(EM_DIAGRAM):   _15_21 = .;
MPRINT(EM_DIAGRAM):   _15_22 = .;
MPRINT(EM_DIAGRAM):   _15_23 = .;
MPRINT(EM_DIAGRAM):   _15_24 = .;
MPRINT(EM_DIAGRAM):   _15_25 = .;
MPRINT(EM_DIAGRAM):   _15_26 = .;
MPRINT(EM_DIAGRAM):   _15_27 = .;
MPRINT(EM_DIAGRAM):   _15_28 = .;
MPRINT(EM_DIAGRAM):   _15_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Sex ;
MPRINT(EM_DIAGRAM):   drop _16_0 ;
MPRINT(EM_DIAGRAM):   if missing( Sex ) then do;
MPRINT(EM_DIAGRAM):   _16_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Sex , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _16_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _16_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _16_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Smoker ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
MPRINT(EM_DIAGRAM):   if missing( Smoker ) then do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Smoker , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Stroke ;
MPRINT(EM_DIAGRAM):   drop _18_0 ;
MPRINT(EM_DIAGRAM):   if missing( Stroke ) then do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Stroke , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _18_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _18_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Veggies ;
MPRINT(EM_DIAGRAM):   drop _19_0 ;
MPRINT(EM_DIAGRAM):   if missing( Veggies ) then do;
MPRINT(EM_DIAGRAM):   _19_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Veggies , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _19_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _19_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _19_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.0182856146;
MPRINT(EM_DIAGRAM):   _P1 = 0.8453637803;
MPRINT(EM_DIAGRAM):   _P2 = 0.1363506052;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0 _LP1;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP1 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00414408060447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.13667778881006 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: AnyHealthcare ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04129829660428) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.01134240700953) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   *** Effect: BMI ;
MPRINT(EM_DIAGRAM):   _TEMP = BMI ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0200623141319 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.08506112237518 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: CholCheck ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17587106324267) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.55662872875129) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: DiffWalk ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06807944539291) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.05202966847364) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.60694703791874) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31516609483213) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.82684405280263) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01654127164125) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.84291708454748) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.04388954912298) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.59860435233338) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.10355460753732) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.65791585672254) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.0391054606201) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   *** Effect: Fruits ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00825788632312) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01592801277223) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   *** Effect: GenHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.45630003633515) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.15205407825125) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.24694986154977) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.46937748191537) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0209212485904) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17900029952603) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15603108215171) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.60710699757471) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   *** Effect: HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15963684339905) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.12861220614246) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   *** Effect: HighBP ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18828052724326) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.35743173485255) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   *** Effect: HighChol ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.02142564733405) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.29229370514654) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   *** Effect: HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.29433685527321) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.37659452228019) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.12434962949832) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.18856597637964) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01180272821841) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.11439362790813) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01705497839294) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09639520284216) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.16273811627458) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.05882989712437) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04489073871808) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.01011682655444) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16378586765171) * _TEMP * _11_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.10710055621972) * _TEMP * _11_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00937344173016) * _TEMP * _11_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.11482137296246) * _TEMP * _11_6;
MPRINT(EM_DIAGRAM):   *** Effect: MentHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04800942080717) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09001843225783) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.22590900027558) * _TEMP * _12_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.12737525667088) * _TEMP * _12_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.10106475746128) * _TEMP * _12_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.02132573547151) * _TEMP * _12_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.97608762045018) * _TEMP * _12_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.05954724291336) * _TEMP * _12_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.36921172040877) * _TEMP * _12_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00917182457836) * _TEMP * _12_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.4024070411314) * _TEMP * _12_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00028467971349) * _TEMP * _12_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.57286058448533) * _TEMP * _12_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.00303496928288) * _TEMP * _12_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.22406298298951) * _TEMP * _12_7;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.14141042252959) * _TEMP * _12_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.26089551363143) * _TEMP * _12_8;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.16984609450576) * _TEMP * _12_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.78331980851102) * _TEMP * _12_9;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.1866293691781) * _TEMP * _12_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.3420742122432) * _TEMP * _12_10;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02472082181025) * _TEMP * _12_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.53270611964659) * _TEMP * _12_11;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.46881777462575) * _TEMP * _12_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19289982028081) * _TEMP * _12_12;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.37014526072922) * _TEMP * _12_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.01395050063776) * _TEMP * _12_13;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.89154952382611) * _TEMP * _12_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.16232174446058) * _TEMP * _12_14;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.10572920348172) * _TEMP * _12_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.50371736370442) * _TEMP * _12_15;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.13967193430089) * _TEMP * _12_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.98387749194182) * _TEMP * _12_16;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.47921746060105) * _TEMP * _12_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.99086451305) * _TEMP * _12_17;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.023092747883) * _TEMP * _12_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.28142994579901) * _TEMP * _12_18;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.89772782364261) * _TEMP * _12_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.94345646177794) * _TEMP * _12_19;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -1.09031201100748) * _TEMP * _12_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.97809107781656) * _TEMP * _12_20;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02237950541983) * _TEMP * _12_20;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.50095292613488) * _TEMP * _12_21;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.61042702666207) * _TEMP * _12_21;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.2358636579636) * _TEMP * _12_22;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.5524942029042) * _TEMP * _12_22;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.97436105907883) * _TEMP * _12_23;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.83058093396395) * _TEMP * _12_23;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.08616155188671) * _TEMP * _12_24;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.55101121901185) * _TEMP * _12_24;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.63435259026731) * _TEMP * _12_25;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09583605477333) * _TEMP * _12_25;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.75944421342236) * _TEMP * _12_26;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.29195079721774) * _TEMP * _12_26;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.89917056628234) * _TEMP * _12_27;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.34751286616378) * _TEMP * _12_27;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.83707368950426) * _TEMP * _12_28;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.15686423463904) * _TEMP * _12_28;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.86069646817922) * _TEMP * _12_29;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17231839808172) * _TEMP * _12_29;
MPRINT(EM_DIAGRAM):   *** Effect: NoDocbcCost ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21747567652734) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02254687053978) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   *** Effect: PhysActivity ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.07210365596365) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01244841943964) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   *** Effect: PhysHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36138060527011) * _TEMP * _15_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17374522621538) * _TEMP * _15_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.4552745250487) * _TEMP * _15_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31212557191848) * _TEMP * _15_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45210754388406) * _TEMP * _15_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.28312681020051) * _TEMP * _15_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27470252831399) * _TEMP * _15_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.0910407354241) * _TEMP * _15_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40704621270345) * _TEMP * _15_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.26714677181421) * _TEMP * _15_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.26802299887237) * _TEMP * _15_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.14212354331234) * _TEMP * _15_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36873379683245) * _TEMP * _15_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.35979265520491) * _TEMP * _15_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.472909760972) * _TEMP * _15_7;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.14453420017303) * _TEMP * _15_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00470930079283) * _TEMP * _15_8;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31156700645887) * _TEMP * _15_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.100605976329) * _TEMP * _15_9;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.47319873636302) * _TEMP * _15_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14897089808618) * _TEMP * _15_10;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.21649730575151) * _TEMP * _15_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.37161851587237) * _TEMP * _15_11;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 4.10215853477496) * _TEMP * _15_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.4813008065127) * _TEMP * _15_12;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.12766437859842) * _TEMP * _15_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02321777568077) * _TEMP * _15_13;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.7581909524469) * _TEMP * _15_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.67576609678817) * _TEMP * _15_14;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09842381735271) * _TEMP * _15_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23708709525644) * _TEMP * _15_15;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17539778485889) * _TEMP * _15_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.559304119879) * _TEMP * _15_16;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.38094168561267) * _TEMP * _15_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.677572441654) * _TEMP * _15_17;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.66874857849847) * _TEMP * _15_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66233639702328) * _TEMP * _15_18;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02661272303472) * _TEMP * _15_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.2773101756959) * _TEMP * _15_19;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.9198933613483) * _TEMP * _15_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8779246532807) * _TEMP * _15_20;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.22221154394122) * _TEMP * _15_20;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14532612258424) * _TEMP * _15_21;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09184823321173) * _TEMP * _15_21;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39424527999194) * _TEMP * _15_22;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.36201370672091) * _TEMP * _15_22;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.7694506017102) * _TEMP * _15_23;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.46979004263545) * _TEMP * _15_23;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04927218119768) * _TEMP * _15_24;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.22090819666088) * _TEMP * _15_24;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71101204509658) * _TEMP * _15_25;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.15937382520162) * _TEMP * _15_25;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17219250104969) * _TEMP * _15_26;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -1.18135511316386) * _TEMP * _15_26;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06506666055701) * _TEMP * _15_27;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.40066130465414) * _TEMP * _15_27;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04168627331738) * _TEMP * _15_28;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.08103664415612) * _TEMP * _15_28;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40114707530503) * _TEMP * _15_29;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.26274616812588) * _TEMP * _15_29;
MPRINT(EM_DIAGRAM):   *** Effect: Sex ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06889454676877) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.11473053909985) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   *** Effect: Smoker ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01682413014641) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00023043867139) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   *** Effect: Stroke ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19674442740887) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.06693452991956) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   *** Effect: Veggies ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02944512919683) * _TEMP * _19_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.02037458880704) * _TEMP * _19_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1 _P2;
MPRINT(EM_DIAGRAM):   drop _LPMAX;
MPRINT(EM_DIAGRAM):   _LPMAX= 0;
MPRINT(EM_DIAGRAM):   _LP0 = -2.35691380760196 + _LP0;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP0 then _LPMAX = _LP0;
MPRINT(EM_DIAGRAM):   _LP1 = 6.30166339755406 + _LP1;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP1 then _LPMAX = _LP1;
MPRINT(EM_DIAGRAM):   _LP0 = exp(_LP0 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LP1 = exp(_LP1 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LPMAX = exp(-_LPMAX);
MPRINT(EM_DIAGRAM):   _P2 = 1 / (_LPMAX + _LP0 + _LP1);
MPRINT(EM_DIAGRAM):   _P0 = _LP0 * _P2;
MPRINT(EM_DIAGRAM):   _P1 = _LP1 * _P2;
MPRINT(EM_DIAGRAM):   _P2 = _LPMAX * _P2;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionprediabetes = .;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionno_diabetes = .;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictiondiabetes = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictionprediabetes = 'Residual: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictionno_diabetes = 'Residual: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictiondiabetes = 'Residual: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionprediabetes = - _P0;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionno_diabetes = - _P1;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictiondiabetes = - _P2;
MPRINT(EM_DIAGRAM):   select( _Y );
MPRINT(EM_DIAGRAM):   when (0) R_Diabetes_Predictionprediabetes = R_Diabetes_Predictionprediabetes + 1;
MPRINT(EM_DIAGRAM):   when (1) R_Diabetes_Predictionno_diabetes = R_Diabetes_Predictionno_diabetes + 1;
MPRINT(EM_DIAGRAM):   when (2) R_Diabetes_Predictiondiabetes = R_Diabetes_Predictiondiabetes + 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = _P2;
MPRINT(EM_DIAGRAM):   if (_P2 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P2;
MPRINT(EM_DIAGRAM):   _IY = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
94065      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS2.REG_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
94066      quit;
94067      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
94068      filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94069      *------------------------------------------------------------*;
94070      * Reg: Scoring VALIDATE data;
94071      *------------------------------------------------------------*;
94072      data EMWS2.Reg_VALIDATE
94073      / view=EMWS2.Reg_VALIDATE
94074      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg_VALIDATE / view=EMWS2.Reg_VALIDATE ;
94075      set EMWS2.Part_VALIDATE
94076      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_VALIDATE ;
94077      %inc emflow;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [3] $11 _temporary_ ('PREDIABETES' 'NO DIABETES' 'DIABETES' );
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   length U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   array REGDRU[3] $ 11 _temporary_ ('prediabetes' 'no diabetes' 'diabetes   ' );
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Diabetes_Prediction ;
MPRINT(EM_DIAGRAM):   drop _Y ;
MPRINT(EM_DIAGRAM):   label F_Diabetes_Prediction = 'From: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   length F_Diabetes_Prediction $ 11;
MPRINT(DMNORMCP):   F_Diabetes_Prediction=dmnorm(Diabetes_Prediction,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if missing( Diabetes_Prediction ) then do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if F_Diabetes_Prediction = 'NO DIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if F_Diabetes_Prediction = 'DIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if F_Diabetes_Prediction = 'PREDIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Check BMI for missing values ;
MPRINT(EM_DIAGRAM):   if missing( BMI ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AnyHealthcare ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
MPRINT(EM_DIAGRAM):   if missing( AnyHealthcare ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AnyHealthcare , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for CholCheck ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( CholCheck ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( CholCheck , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DiffWalk ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
MPRINT(EM_DIAGRAM):   if missing( DiffWalk ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( DiffWalk , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Education , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Fruits ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
MPRINT(EM_DIAGRAM):   if missing( Fruits ) then do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Fruits , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GenHlth ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 _6_2 _6_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_2 = 0;
MPRINT(EM_DIAGRAM):   _6_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( GenHlth ) then do;
MPRINT(EM_DIAGRAM):   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( GenHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _6_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _6_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_2 = -1;
MPRINT(EM_DIAGRAM):   _6_3 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   drop _7_0 ;
MPRINT(EM_DIAGRAM):   if missing( HeartDiseaseorAttack ) then do;
MPRINT(EM_DIAGRAM):   _7_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HeartDiseaseorAttack , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _7_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighBP ;
MPRINT(EM_DIAGRAM):   drop _8_0 ;
MPRINT(EM_DIAGRAM):   if missing( HighBP ) then do;
MPRINT(EM_DIAGRAM):   _8_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighBP , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _8_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighChol ;
MPRINT(EM_DIAGRAM):   drop _9_0 ;
MPRINT(EM_DIAGRAM):   if missing( HighChol ) then do;
MPRINT(EM_DIAGRAM):   _9_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighChol , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _9_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   drop _10_0 ;
MPRINT(EM_DIAGRAM):   if missing( HvyAlcoholConsump ) then do;
MPRINT(EM_DIAGRAM):   _10_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HvyAlcoholConsump , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _10_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Income ;
MPRINT(EM_DIAGRAM):   drop _11_0 _11_1 _11_2 _11_3 _11_4 _11_5 _11_6 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _11_0 = 0;
MPRINT(EM_DIAGRAM):   _11_1 = 0;
MPRINT(EM_DIAGRAM):   _11_2 = 0;
MPRINT(EM_DIAGRAM):   _11_3 = 0;
MPRINT(EM_DIAGRAM):   _11_4 = 0;
MPRINT(EM_DIAGRAM):   _11_5 = 0;
MPRINT(EM_DIAGRAM):   _11_6 = 0;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_5 = .;
MPRINT(EM_DIAGRAM):   _11_6 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Income , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _11_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _11_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _11_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _11_4 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _11_5 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _11_6 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
MPRINT(EM_DIAGRAM):   _11_1 = -1;
MPRINT(EM_DIAGRAM):   _11_2 = -1;
MPRINT(EM_DIAGRAM):   _11_3 = -1;
MPRINT(EM_DIAGRAM):   _11_4 = -1;
MPRINT(EM_DIAGRAM):   _11_5 = -1;
MPRINT(EM_DIAGRAM):   _11_6 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_5 = .;
MPRINT(EM_DIAGRAM):   _11_6 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for MentHlth ;
MPRINT(EM_DIAGRAM):   drop _12_0 _12_1 _12_2 _12_3 _12_4 _12_5 _12_6 _12_7 _12_8 _12_9 _12_10 _12_11 _12_12 _12_13 _12_14 _12_15 _12_16 _12_17 _12_18 _12_19 _12_20 _12_21 _12_22 _12_23 _12_24 _12_25 _12_26 _12_27 _12_28 _12_29 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _12_0 = 0;
MPRINT(EM_DIAGRAM):   _12_1 = 0;
MPRINT(EM_DIAGRAM):   _12_2 = 0;
MPRINT(EM_DIAGRAM):   _12_3 = 0;
MPRINT(EM_DIAGRAM):   _12_4 = 0;
MPRINT(EM_DIAGRAM):   _12_5 = 0;
MPRINT(EM_DIAGRAM):   _12_6 = 0;
MPRINT(EM_DIAGRAM):   _12_7 = 0;
MPRINT(EM_DIAGRAM):   _12_8 = 0;
MPRINT(EM_DIAGRAM):   _12_9 = 0;
MPRINT(EM_DIAGRAM):   _12_10 = 0;
MPRINT(EM_DIAGRAM):   _12_11 = 0;
MPRINT(EM_DIAGRAM):   _12_12 = 0;
MPRINT(EM_DIAGRAM):   _12_13 = 0;
MPRINT(EM_DIAGRAM):   _12_14 = 0;
MPRINT(EM_DIAGRAM):   _12_15 = 0;
MPRINT(EM_DIAGRAM):   _12_16 = 0;
MPRINT(EM_DIAGRAM):   _12_17 = 0;
MPRINT(EM_DIAGRAM):   _12_18 = 0;
MPRINT(EM_DIAGRAM):   _12_19 = 0;
MPRINT(EM_DIAGRAM):   _12_20 = 0;
MPRINT(EM_DIAGRAM):   _12_21 = 0;
MPRINT(EM_DIAGRAM):   _12_22 = 0;
MPRINT(EM_DIAGRAM):   _12_23 = 0;
MPRINT(EM_DIAGRAM):   _12_24 = 0;
MPRINT(EM_DIAGRAM):   _12_25 = 0;
MPRINT(EM_DIAGRAM):   _12_26 = 0;
MPRINT(EM_DIAGRAM):   _12_27 = 0;
MPRINT(EM_DIAGRAM):   _12_28 = 0;
MPRINT(EM_DIAGRAM):   _12_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( MentHlth ) then do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_1 = .;
MPRINT(EM_DIAGRAM):   _12_2 = .;
MPRINT(EM_DIAGRAM):   _12_3 = .;
MPRINT(EM_DIAGRAM):   _12_4 = .;
MPRINT(EM_DIAGRAM):   _12_5 = .;
MPRINT(EM_DIAGRAM):   _12_6 = .;
MPRINT(EM_DIAGRAM):   _12_7 = .;
MPRINT(EM_DIAGRAM):   _12_8 = .;
MPRINT(EM_DIAGRAM):   _12_9 = .;
MPRINT(EM_DIAGRAM):   _12_10 = .;
MPRINT(EM_DIAGRAM):   _12_11 = .;
MPRINT(EM_DIAGRAM):   _12_12 = .;
MPRINT(EM_DIAGRAM):   _12_13 = .;
MPRINT(EM_DIAGRAM):   _12_14 = .;
MPRINT(EM_DIAGRAM):   _12_15 = .;
MPRINT(EM_DIAGRAM):   _12_16 = .;
MPRINT(EM_DIAGRAM):   _12_17 = .;
MPRINT(EM_DIAGRAM):   _12_18 = .;
MPRINT(EM_DIAGRAM):   _12_19 = .;
MPRINT(EM_DIAGRAM):   _12_20 = .;
MPRINT(EM_DIAGRAM):   _12_21 = .;
MPRINT(EM_DIAGRAM):   _12_22 = .;
MPRINT(EM_DIAGRAM):   _12_23 = .;
MPRINT(EM_DIAGRAM):   _12_24 = .;
MPRINT(EM_DIAGRAM):   _12_25 = .;
MPRINT(EM_DIAGRAM):   _12_26 = .;
MPRINT(EM_DIAGRAM):   _12_27 = .;
MPRINT(EM_DIAGRAM):   _12_28 = .;
MPRINT(EM_DIAGRAM):   _12_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( MentHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _12_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _12_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   _12_0 = -1;
MPRINT(EM_DIAGRAM):   _12_1 = -1;
MPRINT(EM_DIAGRAM):   _12_2 = -1;
MPRINT(EM_DIAGRAM):   _12_3 = -1;
MPRINT(EM_DIAGRAM):   _12_4 = -1;
MPRINT(EM_DIAGRAM):   _12_5 = -1;
MPRINT(EM_DIAGRAM):   _12_6 = -1;
MPRINT(EM_DIAGRAM):   _12_7 = -1;
MPRINT(EM_DIAGRAM):   _12_8 = -1;
MPRINT(EM_DIAGRAM):   _12_9 = -1;
MPRINT(EM_DIAGRAM):   _12_10 = -1;
MPRINT(EM_DIAGRAM):   _12_11 = -1;
MPRINT(EM_DIAGRAM):   _12_12 = -1;
MPRINT(EM_DIAGRAM):   _12_13 = -1;
MPRINT(EM_DIAGRAM):   _12_14 = -1;
MPRINT(EM_DIAGRAM):   _12_15 = -1;
MPRINT(EM_DIAGRAM):   _12_16 = -1;
MPRINT(EM_DIAGRAM):   _12_17 = -1;
MPRINT(EM_DIAGRAM):   _12_18 = -1;
MPRINT(EM_DIAGRAM):   _12_19 = -1;
MPRINT(EM_DIAGRAM):   _12_20 = -1;
MPRINT(EM_DIAGRAM):   _12_21 = -1;
MPRINT(EM_DIAGRAM):   _12_22 = -1;
MPRINT(EM_DIAGRAM):   _12_23 = -1;
MPRINT(EM_DIAGRAM):   _12_24 = -1;
MPRINT(EM_DIAGRAM):   _12_25 = -1;
MPRINT(EM_DIAGRAM):   _12_26 = -1;
MPRINT(EM_DIAGRAM):   _12_27 = -1;
MPRINT(EM_DIAGRAM):   _12_28 = -1;
MPRINT(EM_DIAGRAM):   _12_29 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _12_5 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _12_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _12_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   _12_10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   _12_15 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _12_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   _12_20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _12_7 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   _12_25 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   _12_14 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _12_6 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _12_8 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   _12_28 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   _12_12 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   _12_21 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   _12_29 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   _12_9 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   _12_16 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   _12_18 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   _12_27 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   _12_22 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   _12_17 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   _12_26 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   _12_13 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   _12_11 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   _12_23 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   _12_24 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   _12_19 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_1 = .;
MPRINT(EM_DIAGRAM):   _12_2 = .;
MPRINT(EM_DIAGRAM):   _12_3 = .;
MPRINT(EM_DIAGRAM):   _12_4 = .;
MPRINT(EM_DIAGRAM):   _12_5 = .;
MPRINT(EM_DIAGRAM):   _12_6 = .;
MPRINT(EM_DIAGRAM):   _12_7 = .;
MPRINT(EM_DIAGRAM):   _12_8 = .;
MPRINT(EM_DIAGRAM):   _12_9 = .;
MPRINT(EM_DIAGRAM):   _12_10 = .;
MPRINT(EM_DIAGRAM):   _12_11 = .;
MPRINT(EM_DIAGRAM):   _12_12 = .;
MPRINT(EM_DIAGRAM):   _12_13 = .;
MPRINT(EM_DIAGRAM):   _12_14 = .;
MPRINT(EM_DIAGRAM):   _12_15 = .;
MPRINT(EM_DIAGRAM):   _12_16 = .;
MPRINT(EM_DIAGRAM):   _12_17 = .;
MPRINT(EM_DIAGRAM):   _12_18 = .;
MPRINT(EM_DIAGRAM):   _12_19 = .;
MPRINT(EM_DIAGRAM):   _12_20 = .;
MPRINT(EM_DIAGRAM):   _12_21 = .;
MPRINT(EM_DIAGRAM):   _12_22 = .;
MPRINT(EM_DIAGRAM):   _12_23 = .;
MPRINT(EM_DIAGRAM):   _12_24 = .;
MPRINT(EM_DIAGRAM):   _12_25 = .;
MPRINT(EM_DIAGRAM):   _12_26 = .;
MPRINT(EM_DIAGRAM):   _12_27 = .;
MPRINT(EM_DIAGRAM):   _12_28 = .;
MPRINT(EM_DIAGRAM):   _12_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for NoDocbcCost ;
MPRINT(EM_DIAGRAM):   drop _13_0 ;
MPRINT(EM_DIAGRAM):   if missing( NoDocbcCost ) then do;
MPRINT(EM_DIAGRAM):   _13_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( NoDocbcCost , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _13_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysActivity ;
MPRINT(EM_DIAGRAM):   drop _14_0 ;
MPRINT(EM_DIAGRAM):   if missing( PhysActivity ) then do;
MPRINT(EM_DIAGRAM):   _14_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysActivity , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _14_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysHlth ;
MPRINT(EM_DIAGRAM):   drop _15_0 _15_1 _15_2 _15_3 _15_4 _15_5 _15_6 _15_7 _15_8 _15_9 _15_10 _15_11 _15_12 _15_13 _15_14 _15_15 _15_16 _15_17 _15_18 _15_19 _15_20 _15_21 _15_22 _15_23 _15_24 _15_25 _15_26 _15_27 _15_28 _15_29 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _15_0 = 0;
MPRINT(EM_DIAGRAM):   _15_1 = 0;
MPRINT(EM_DIAGRAM):   _15_2 = 0;
MPRINT(EM_DIAGRAM):   _15_3 = 0;
MPRINT(EM_DIAGRAM):   _15_4 = 0;
MPRINT(EM_DIAGRAM):   _15_5 = 0;
MPRINT(EM_DIAGRAM):   _15_6 = 0;
MPRINT(EM_DIAGRAM):   _15_7 = 0;
MPRINT(EM_DIAGRAM):   _15_8 = 0;
MPRINT(EM_DIAGRAM):   _15_9 = 0;
MPRINT(EM_DIAGRAM):   _15_10 = 0;
MPRINT(EM_DIAGRAM):   _15_11 = 0;
MPRINT(EM_DIAGRAM):   _15_12 = 0;
MPRINT(EM_DIAGRAM):   _15_13 = 0;
MPRINT(EM_DIAGRAM):   _15_14 = 0;
MPRINT(EM_DIAGRAM):   _15_15 = 0;
MPRINT(EM_DIAGRAM):   _15_16 = 0;
MPRINT(EM_DIAGRAM):   _15_17 = 0;
MPRINT(EM_DIAGRAM):   _15_18 = 0;
MPRINT(EM_DIAGRAM):   _15_19 = 0;
MPRINT(EM_DIAGRAM):   _15_20 = 0;
MPRINT(EM_DIAGRAM):   _15_21 = 0;
MPRINT(EM_DIAGRAM):   _15_22 = 0;
MPRINT(EM_DIAGRAM):   _15_23 = 0;
MPRINT(EM_DIAGRAM):   _15_24 = 0;
MPRINT(EM_DIAGRAM):   _15_25 = 0;
MPRINT(EM_DIAGRAM):   _15_26 = 0;
MPRINT(EM_DIAGRAM):   _15_27 = 0;
MPRINT(EM_DIAGRAM):   _15_28 = 0;
MPRINT(EM_DIAGRAM):   _15_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   _15_0 = .;
MPRINT(EM_DIAGRAM):   _15_1 = .;
MPRINT(EM_DIAGRAM):   _15_2 = .;
MPRINT(EM_DIAGRAM):   _15_3 = .;
MPRINT(EM_DIAGRAM):   _15_4 = .;
MPRINT(EM_DIAGRAM):   _15_5 = .;
MPRINT(EM_DIAGRAM):   _15_6 = .;
MPRINT(EM_DIAGRAM):   _15_7 = .;
MPRINT(EM_DIAGRAM):   _15_8 = .;
MPRINT(EM_DIAGRAM):   _15_9 = .;
MPRINT(EM_DIAGRAM):   _15_10 = .;
MPRINT(EM_DIAGRAM):   _15_11 = .;
MPRINT(EM_DIAGRAM):   _15_12 = .;
MPRINT(EM_DIAGRAM):   _15_13 = .;
MPRINT(EM_DIAGRAM):   _15_14 = .;
MPRINT(EM_DIAGRAM):   _15_15 = .;
MPRINT(EM_DIAGRAM):   _15_16 = .;
MPRINT(EM_DIAGRAM):   _15_17 = .;
MPRINT(EM_DIAGRAM):   _15_18 = .;
MPRINT(EM_DIAGRAM):   _15_19 = .;
MPRINT(EM_DIAGRAM):   _15_20 = .;
MPRINT(EM_DIAGRAM):   _15_21 = .;
MPRINT(EM_DIAGRAM):   _15_22 = .;
MPRINT(EM_DIAGRAM):   _15_23 = .;
MPRINT(EM_DIAGRAM):   _15_24 = .;
MPRINT(EM_DIAGRAM):   _15_25 = .;
MPRINT(EM_DIAGRAM):   _15_26 = .;
MPRINT(EM_DIAGRAM):   _15_27 = .;
MPRINT(EM_DIAGRAM):   _15_28 = .;
MPRINT(EM_DIAGRAM):   _15_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _15_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   _15_0 = -1;
MPRINT(EM_DIAGRAM):   _15_1 = -1;
MPRINT(EM_DIAGRAM):   _15_2 = -1;
MPRINT(EM_DIAGRAM):   _15_3 = -1;
MPRINT(EM_DIAGRAM):   _15_4 = -1;
MPRINT(EM_DIAGRAM):   _15_5 = -1;
MPRINT(EM_DIAGRAM):   _15_6 = -1;
MPRINT(EM_DIAGRAM):   _15_7 = -1;
MPRINT(EM_DIAGRAM):   _15_8 = -1;
MPRINT(EM_DIAGRAM):   _15_9 = -1;
MPRINT(EM_DIAGRAM):   _15_10 = -1;
MPRINT(EM_DIAGRAM):   _15_11 = -1;
MPRINT(EM_DIAGRAM):   _15_12 = -1;
MPRINT(EM_DIAGRAM):   _15_13 = -1;
MPRINT(EM_DIAGRAM):   _15_14 = -1;
MPRINT(EM_DIAGRAM):   _15_15 = -1;
MPRINT(EM_DIAGRAM):   _15_16 = -1;
MPRINT(EM_DIAGRAM):   _15_17 = -1;
MPRINT(EM_DIAGRAM):   _15_18 = -1;
MPRINT(EM_DIAGRAM):   _15_19 = -1;
MPRINT(EM_DIAGRAM):   _15_20 = -1;
MPRINT(EM_DIAGRAM):   _15_21 = -1;
MPRINT(EM_DIAGRAM):   _15_22 = -1;
MPRINT(EM_DIAGRAM):   _15_23 = -1;
MPRINT(EM_DIAGRAM):   _15_24 = -1;
MPRINT(EM_DIAGRAM):   _15_25 = -1;
MPRINT(EM_DIAGRAM):   _15_26 = -1;
MPRINT(EM_DIAGRAM):   _15_27 = -1;
MPRINT(EM_DIAGRAM):   _15_28 = -1;
MPRINT(EM_DIAGRAM):   _15_29 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _15_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _15_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _15_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _15_5 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   _15_10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   _15_15 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _15_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _15_7 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   _15_20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   _15_14 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _15_6 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   _15_25 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _15_8 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   _15_21 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   _15_12 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   _15_28 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   _15_29 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   _15_9 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   _15_18 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   _15_16 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   _15_17 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   _15_27 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   _15_26 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   _15_24 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   _15_11 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   _15_13 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   _15_22 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   _15_23 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   _15_19 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _15_0 = .;
MPRINT(EM_DIAGRAM):   _15_1 = .;
MPRINT(EM_DIAGRAM):   _15_2 = .;
MPRINT(EM_DIAGRAM):   _15_3 = .;
MPRINT(EM_DIAGRAM):   _15_4 = .;
MPRINT(EM_DIAGRAM):   _15_5 = .;
MPRINT(EM_DIAGRAM):   _15_6 = .;
MPRINT(EM_DIAGRAM):   _15_7 = .;
MPRINT(EM_DIAGRAM):   _15_8 = .;
MPRINT(EM_DIAGRAM):   _15_9 = .;
MPRINT(EM_DIAGRAM):   _15_10 = .;
MPRINT(EM_DIAGRAM):   _15_11 = .;
MPRINT(EM_DIAGRAM):   _15_12 = .;
MPRINT(EM_DIAGRAM):   _15_13 = .;
MPRINT(EM_DIAGRAM):   _15_14 = .;
MPRINT(EM_DIAGRAM):   _15_15 = .;
MPRINT(EM_DIAGRAM):   _15_16 = .;
MPRINT(EM_DIAGRAM):   _15_17 = .;
MPRINT(EM_DIAGRAM):   _15_18 = .;
MPRINT(EM_DIAGRAM):   _15_19 = .;
MPRINT(EM_DIAGRAM):   _15_20 = .;
MPRINT(EM_DIAGRAM):   _15_21 = .;
MPRINT(EM_DIAGRAM):   _15_22 = .;
MPRINT(EM_DIAGRAM):   _15_23 = .;
MPRINT(EM_DIAGRAM):   _15_24 = .;
MPRINT(EM_DIAGRAM):   _15_25 = .;
MPRINT(EM_DIAGRAM):   _15_26 = .;
MPRINT(EM_DIAGRAM):   _15_27 = .;
MPRINT(EM_DIAGRAM):   _15_28 = .;
MPRINT(EM_DIAGRAM):   _15_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Sex ;
MPRINT(EM_DIAGRAM):   drop _16_0 ;
MPRINT(EM_DIAGRAM):   if missing( Sex ) then do;
MPRINT(EM_DIAGRAM):   _16_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Sex , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _16_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _16_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _16_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Smoker ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
MPRINT(EM_DIAGRAM):   if missing( Smoker ) then do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Smoker , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Stroke ;
MPRINT(EM_DIAGRAM):   drop _18_0 ;
MPRINT(EM_DIAGRAM):   if missing( Stroke ) then do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Stroke , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _18_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _18_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Veggies ;
MPRINT(EM_DIAGRAM):   drop _19_0 ;
MPRINT(EM_DIAGRAM):   if missing( Veggies ) then do;
MPRINT(EM_DIAGRAM):   _19_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Veggies , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _19_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _19_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _19_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.0182856146;
MPRINT(EM_DIAGRAM):   _P1 = 0.8453637803;
MPRINT(EM_DIAGRAM):   _P2 = 0.1363506052;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0 _LP1;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP1 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00414408060447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.13667778881006 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: AnyHealthcare ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04129829660428) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.01134240700953) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   *** Effect: BMI ;
MPRINT(EM_DIAGRAM):   _TEMP = BMI ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0200623141319 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.08506112237518 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: CholCheck ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17587106324267) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.55662872875129) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: DiffWalk ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06807944539291) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.05202966847364) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.60694703791874) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31516609483213) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.82684405280263) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01654127164125) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.84291708454748) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.04388954912298) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.59860435233338) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.10355460753732) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.65791585672254) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.0391054606201) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   *** Effect: Fruits ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00825788632312) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01592801277223) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   *** Effect: GenHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.45630003633515) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.15205407825125) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.24694986154977) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.46937748191537) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0209212485904) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17900029952603) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15603108215171) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.60710699757471) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   *** Effect: HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15963684339905) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.12861220614246) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   *** Effect: HighBP ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18828052724326) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.35743173485255) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   *** Effect: HighChol ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.02142564733405) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.29229370514654) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   *** Effect: HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.29433685527321) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.37659452228019) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.12434962949832) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.18856597637964) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01180272821841) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.11439362790813) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01705497839294) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09639520284216) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.16273811627458) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.05882989712437) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04489073871808) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.01011682655444) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16378586765171) * _TEMP * _11_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.10710055621972) * _TEMP * _11_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00937344173016) * _TEMP * _11_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.11482137296246) * _TEMP * _11_6;
MPRINT(EM_DIAGRAM):   *** Effect: MentHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04800942080717) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09001843225783) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.22590900027558) * _TEMP * _12_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.12737525667088) * _TEMP * _12_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.10106475746128) * _TEMP * _12_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.02132573547151) * _TEMP * _12_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.97608762045018) * _TEMP * _12_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.05954724291336) * _TEMP * _12_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.36921172040877) * _TEMP * _12_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00917182457836) * _TEMP * _12_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.4024070411314) * _TEMP * _12_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00028467971349) * _TEMP * _12_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.57286058448533) * _TEMP * _12_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.00303496928288) * _TEMP * _12_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.22406298298951) * _TEMP * _12_7;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.14141042252959) * _TEMP * _12_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.26089551363143) * _TEMP * _12_8;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.16984609450576) * _TEMP * _12_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.78331980851102) * _TEMP * _12_9;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.1866293691781) * _TEMP * _12_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.3420742122432) * _TEMP * _12_10;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02472082181025) * _TEMP * _12_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.53270611964659) * _TEMP * _12_11;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.46881777462575) * _TEMP * _12_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19289982028081) * _TEMP * _12_12;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.37014526072922) * _TEMP * _12_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.01395050063776) * _TEMP * _12_13;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.89154952382611) * _TEMP * _12_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.16232174446058) * _TEMP * _12_14;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.10572920348172) * _TEMP * _12_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.50371736370442) * _TEMP * _12_15;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.13967193430089) * _TEMP * _12_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.98387749194182) * _TEMP * _12_16;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.47921746060105) * _TEMP * _12_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.99086451305) * _TEMP * _12_17;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.023092747883) * _TEMP * _12_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.28142994579901) * _TEMP * _12_18;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.89772782364261) * _TEMP * _12_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.94345646177794) * _TEMP * _12_19;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -1.09031201100748) * _TEMP * _12_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.97809107781656) * _TEMP * _12_20;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02237950541983) * _TEMP * _12_20;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.50095292613488) * _TEMP * _12_21;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.61042702666207) * _TEMP * _12_21;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.2358636579636) * _TEMP * _12_22;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.5524942029042) * _TEMP * _12_22;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.97436105907883) * _TEMP * _12_23;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.83058093396395) * _TEMP * _12_23;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.08616155188671) * _TEMP * _12_24;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.55101121901185) * _TEMP * _12_24;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.63435259026731) * _TEMP * _12_25;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09583605477333) * _TEMP * _12_25;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.75944421342236) * _TEMP * _12_26;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.29195079721774) * _TEMP * _12_26;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.89917056628234) * _TEMP * _12_27;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.34751286616378) * _TEMP * _12_27;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.83707368950426) * _TEMP * _12_28;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.15686423463904) * _TEMP * _12_28;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.86069646817922) * _TEMP * _12_29;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17231839808172) * _TEMP * _12_29;
MPRINT(EM_DIAGRAM):   *** Effect: NoDocbcCost ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21747567652734) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02254687053978) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   *** Effect: PhysActivity ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.07210365596365) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01244841943964) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   *** Effect: PhysHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36138060527011) * _TEMP * _15_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17374522621538) * _TEMP * _15_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.4552745250487) * _TEMP * _15_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31212557191848) * _TEMP * _15_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45210754388406) * _TEMP * _15_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.28312681020051) * _TEMP * _15_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27470252831399) * _TEMP * _15_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.0910407354241) * _TEMP * _15_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40704621270345) * _TEMP * _15_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.26714677181421) * _TEMP * _15_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.26802299887237) * _TEMP * _15_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.14212354331234) * _TEMP * _15_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36873379683245) * _TEMP * _15_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.35979265520491) * _TEMP * _15_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.472909760972) * _TEMP * _15_7;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.14453420017303) * _TEMP * _15_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00470930079283) * _TEMP * _15_8;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31156700645887) * _TEMP * _15_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.100605976329) * _TEMP * _15_9;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.47319873636302) * _TEMP * _15_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14897089808618) * _TEMP * _15_10;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.21649730575151) * _TEMP * _15_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.37161851587237) * _TEMP * _15_11;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 4.10215853477496) * _TEMP * _15_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.4813008065127) * _TEMP * _15_12;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.12766437859842) * _TEMP * _15_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02321777568077) * _TEMP * _15_13;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.7581909524469) * _TEMP * _15_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.67576609678817) * _TEMP * _15_14;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09842381735271) * _TEMP * _15_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23708709525644) * _TEMP * _15_15;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17539778485889) * _TEMP * _15_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.559304119879) * _TEMP * _15_16;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.38094168561267) * _TEMP * _15_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.677572441654) * _TEMP * _15_17;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.66874857849847) * _TEMP * _15_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66233639702328) * _TEMP * _15_18;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02661272303472) * _TEMP * _15_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.2773101756959) * _TEMP * _15_19;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.9198933613483) * _TEMP * _15_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8779246532807) * _TEMP * _15_20;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.22221154394122) * _TEMP * _15_20;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14532612258424) * _TEMP * _15_21;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09184823321173) * _TEMP * _15_21;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39424527999194) * _TEMP * _15_22;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.36201370672091) * _TEMP * _15_22;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.7694506017102) * _TEMP * _15_23;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.46979004263545) * _TEMP * _15_23;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04927218119768) * _TEMP * _15_24;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.22090819666088) * _TEMP * _15_24;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71101204509658) * _TEMP * _15_25;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.15937382520162) * _TEMP * _15_25;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17219250104969) * _TEMP * _15_26;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -1.18135511316386) * _TEMP * _15_26;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06506666055701) * _TEMP * _15_27;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.40066130465414) * _TEMP * _15_27;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04168627331738) * _TEMP * _15_28;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.08103664415612) * _TEMP * _15_28;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40114707530503) * _TEMP * _15_29;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.26274616812588) * _TEMP * _15_29;
MPRINT(EM_DIAGRAM):   *** Effect: Sex ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06889454676877) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.11473053909985) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   *** Effect: Smoker ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01682413014641) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00023043867139) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   *** Effect: Stroke ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19674442740887) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.06693452991956) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   *** Effect: Veggies ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02944512919683) * _TEMP * _19_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.02037458880704) * _TEMP * _19_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1 _P2;
MPRINT(EM_DIAGRAM):   drop _LPMAX;
MPRINT(EM_DIAGRAM):   _LPMAX= 0;
MPRINT(EM_DIAGRAM):   _LP0 = -2.35691380760196 + _LP0;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP0 then _LPMAX = _LP0;
MPRINT(EM_DIAGRAM):   _LP1 = 6.30166339755406 + _LP1;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP1 then _LPMAX = _LP1;
MPRINT(EM_DIAGRAM):   _LP0 = exp(_LP0 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LP1 = exp(_LP1 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LPMAX = exp(-_LPMAX);
MPRINT(EM_DIAGRAM):   _P2 = 1 / (_LPMAX + _LP0 + _LP1);
MPRINT(EM_DIAGRAM):   _P0 = _LP0 * _P2;
MPRINT(EM_DIAGRAM):   _P1 = _LP1 * _P2;
MPRINT(EM_DIAGRAM):   _P2 = _LPMAX * _P2;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionprediabetes = .;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionno_diabetes = .;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictiondiabetes = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictionprediabetes = 'Residual: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictionno_diabetes = 'Residual: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictiondiabetes = 'Residual: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionprediabetes = - _P0;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionno_diabetes = - _P1;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictiondiabetes = - _P2;
MPRINT(EM_DIAGRAM):   select( _Y );
MPRINT(EM_DIAGRAM):   when (0) R_Diabetes_Predictionprediabetes = R_Diabetes_Predictionprediabetes + 1;
MPRINT(EM_DIAGRAM):   when (1) R_Diabetes_Predictionno_diabetes = R_Diabetes_Predictionno_diabetes + 1;
MPRINT(EM_DIAGRAM):   when (2) R_Diabetes_Predictiondiabetes = R_Diabetes_Predictiondiabetes + 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = _P2;
MPRINT(EM_DIAGRAM):   if (_P2 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P2;
MPRINT(EM_DIAGRAM):   _IY = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
95501      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS2.REG_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
95502      quit;
95503      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
95504      filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95505      *------------------------------------------------------------*;
95506      * Reg: Scoring TEST data;
95507      *------------------------------------------------------------*;
95508      data EMWS2.Reg_TEST
95509      / view=EMWS2.Reg_TEST
95510      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg_TEST / view=EMWS2.Reg_TEST ;
95511      set EMWS2.Part_TEST
95512      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TEST ;
95513      %inc emflow;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   length I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   *** Target Values;
MPRINT(EM_DIAGRAM):   array REGDRF [3] $11 _temporary_ ('PREDIABETES' 'NO DIABETES' 'DIABETES' );
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   length U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
MPRINT(EM_DIAGRAM):   array REGDRU[3] $ 11 _temporary_ ('prediabetes' 'no diabetes' 'diabetes   ' );
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Diabetes_Prediction ;
MPRINT(EM_DIAGRAM):   drop _Y ;
MPRINT(EM_DIAGRAM):   label F_Diabetes_Prediction = 'From: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   length F_Diabetes_Prediction $ 11;
MPRINT(DMNORMCP):   F_Diabetes_Prediction=dmnorm(Diabetes_Prediction,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if missing( Diabetes_Prediction ) then do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if F_Diabetes_Prediction = 'NO DIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if F_Diabetes_Prediction = 'DIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if F_Diabetes_Prediction = 'PREDIABETES' then do;
MPRINT(EM_DIAGRAM):   _Y = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _Y = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Check BMI for missing values ;
MPRINT(EM_DIAGRAM):   if missing( BMI ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AnyHealthcare ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
MPRINT(EM_DIAGRAM):   if missing( AnyHealthcare ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AnyHealthcare , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for CholCheck ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( CholCheck ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( CholCheck , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DiffWalk ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
MPRINT(EM_DIAGRAM):   if missing( DiffWalk ) then do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( DiffWalk , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _3_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Education , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Fruits ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
MPRINT(EM_DIAGRAM):   if missing( Fruits ) then do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Fruits , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _5_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GenHlth ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 _6_2 _6_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_2 = 0;
MPRINT(EM_DIAGRAM):   _6_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( GenHlth ) then do;
MPRINT(EM_DIAGRAM):   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( GenHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _6_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _6_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_2 = -1;
MPRINT(EM_DIAGRAM):   _6_3 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   drop _7_0 ;
MPRINT(EM_DIAGRAM):   if missing( HeartDiseaseorAttack ) then do;
MPRINT(EM_DIAGRAM):   _7_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HeartDiseaseorAttack , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _7_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighBP ;
MPRINT(EM_DIAGRAM):   drop _8_0 ;
MPRINT(EM_DIAGRAM):   if missing( HighBP ) then do;
MPRINT(EM_DIAGRAM):   _8_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighBP , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _8_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HighChol ;
MPRINT(EM_DIAGRAM):   drop _9_0 ;
MPRINT(EM_DIAGRAM):   if missing( HighChol ) then do;
MPRINT(EM_DIAGRAM):   _9_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HighChol , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _9_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   drop _10_0 ;
MPRINT(EM_DIAGRAM):   if missing( HvyAlcoholConsump ) then do;
MPRINT(EM_DIAGRAM):   _10_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HvyAlcoholConsump , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _10_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Income ;
MPRINT(EM_DIAGRAM):   drop _11_0 _11_1 _11_2 _11_3 _11_4 _11_5 _11_6 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _11_0 = 0;
MPRINT(EM_DIAGRAM):   _11_1 = 0;
MPRINT(EM_DIAGRAM):   _11_2 = 0;
MPRINT(EM_DIAGRAM):   _11_3 = 0;
MPRINT(EM_DIAGRAM):   _11_4 = 0;
MPRINT(EM_DIAGRAM):   _11_5 = 0;
MPRINT(EM_DIAGRAM):   _11_6 = 0;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_5 = .;
MPRINT(EM_DIAGRAM):   _11_6 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Income , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _11_1 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _11_2 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _11_3 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _11_4 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _11_5 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _11_6 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
MPRINT(EM_DIAGRAM):   _11_1 = -1;
MPRINT(EM_DIAGRAM):   _11_2 = -1;
MPRINT(EM_DIAGRAM):   _11_3 = -1;
MPRINT(EM_DIAGRAM):   _11_4 = -1;
MPRINT(EM_DIAGRAM):   _11_5 = -1;
MPRINT(EM_DIAGRAM):   _11_6 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_5 = .;
MPRINT(EM_DIAGRAM):   _11_6 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for MentHlth ;
MPRINT(EM_DIAGRAM):   drop _12_0 _12_1 _12_2 _12_3 _12_4 _12_5 _12_6 _12_7 _12_8 _12_9 _12_10 _12_11 _12_12 _12_13 _12_14 _12_15 _12_16 _12_17 _12_18 _12_19 _12_20 _12_21 _12_22 _12_23 _12_24 _12_25 _12_26 _12_27 _12_28 _12_29 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _12_0 = 0;
MPRINT(EM_DIAGRAM):   _12_1 = 0;
MPRINT(EM_DIAGRAM):   _12_2 = 0;
MPRINT(EM_DIAGRAM):   _12_3 = 0;
MPRINT(EM_DIAGRAM):   _12_4 = 0;
MPRINT(EM_DIAGRAM):   _12_5 = 0;
MPRINT(EM_DIAGRAM):   _12_6 = 0;
MPRINT(EM_DIAGRAM):   _12_7 = 0;
MPRINT(EM_DIAGRAM):   _12_8 = 0;
MPRINT(EM_DIAGRAM):   _12_9 = 0;
MPRINT(EM_DIAGRAM):   _12_10 = 0;
MPRINT(EM_DIAGRAM):   _12_11 = 0;
MPRINT(EM_DIAGRAM):   _12_12 = 0;
MPRINT(EM_DIAGRAM):   _12_13 = 0;
MPRINT(EM_DIAGRAM):   _12_14 = 0;
MPRINT(EM_DIAGRAM):   _12_15 = 0;
MPRINT(EM_DIAGRAM):   _12_16 = 0;
MPRINT(EM_DIAGRAM):   _12_17 = 0;
MPRINT(EM_DIAGRAM):   _12_18 = 0;
MPRINT(EM_DIAGRAM):   _12_19 = 0;
MPRINT(EM_DIAGRAM):   _12_20 = 0;
MPRINT(EM_DIAGRAM):   _12_21 = 0;
MPRINT(EM_DIAGRAM):   _12_22 = 0;
MPRINT(EM_DIAGRAM):   _12_23 = 0;
MPRINT(EM_DIAGRAM):   _12_24 = 0;
MPRINT(EM_DIAGRAM):   _12_25 = 0;
MPRINT(EM_DIAGRAM):   _12_26 = 0;
MPRINT(EM_DIAGRAM):   _12_27 = 0;
MPRINT(EM_DIAGRAM):   _12_28 = 0;
MPRINT(EM_DIAGRAM):   _12_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( MentHlth ) then do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_1 = .;
MPRINT(EM_DIAGRAM):   _12_2 = .;
MPRINT(EM_DIAGRAM):   _12_3 = .;
MPRINT(EM_DIAGRAM):   _12_4 = .;
MPRINT(EM_DIAGRAM):   _12_5 = .;
MPRINT(EM_DIAGRAM):   _12_6 = .;
MPRINT(EM_DIAGRAM):   _12_7 = .;
MPRINT(EM_DIAGRAM):   _12_8 = .;
MPRINT(EM_DIAGRAM):   _12_9 = .;
MPRINT(EM_DIAGRAM):   _12_10 = .;
MPRINT(EM_DIAGRAM):   _12_11 = .;
MPRINT(EM_DIAGRAM):   _12_12 = .;
MPRINT(EM_DIAGRAM):   _12_13 = .;
MPRINT(EM_DIAGRAM):   _12_14 = .;
MPRINT(EM_DIAGRAM):   _12_15 = .;
MPRINT(EM_DIAGRAM):   _12_16 = .;
MPRINT(EM_DIAGRAM):   _12_17 = .;
MPRINT(EM_DIAGRAM):   _12_18 = .;
MPRINT(EM_DIAGRAM):   _12_19 = .;
MPRINT(EM_DIAGRAM):   _12_20 = .;
MPRINT(EM_DIAGRAM):   _12_21 = .;
MPRINT(EM_DIAGRAM):   _12_22 = .;
MPRINT(EM_DIAGRAM):   _12_23 = .;
MPRINT(EM_DIAGRAM):   _12_24 = .;
MPRINT(EM_DIAGRAM):   _12_25 = .;
MPRINT(EM_DIAGRAM):   _12_26 = .;
MPRINT(EM_DIAGRAM):   _12_27 = .;
MPRINT(EM_DIAGRAM):   _12_28 = .;
MPRINT(EM_DIAGRAM):   _12_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( MentHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _12_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _12_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   _12_0 = -1;
MPRINT(EM_DIAGRAM):   _12_1 = -1;
MPRINT(EM_DIAGRAM):   _12_2 = -1;
MPRINT(EM_DIAGRAM):   _12_3 = -1;
MPRINT(EM_DIAGRAM):   _12_4 = -1;
MPRINT(EM_DIAGRAM):   _12_5 = -1;
MPRINT(EM_DIAGRAM):   _12_6 = -1;
MPRINT(EM_DIAGRAM):   _12_7 = -1;
MPRINT(EM_DIAGRAM):   _12_8 = -1;
MPRINT(EM_DIAGRAM):   _12_9 = -1;
MPRINT(EM_DIAGRAM):   _12_10 = -1;
MPRINT(EM_DIAGRAM):   _12_11 = -1;
MPRINT(EM_DIAGRAM):   _12_12 = -1;
MPRINT(EM_DIAGRAM):   _12_13 = -1;
MPRINT(EM_DIAGRAM):   _12_14 = -1;
MPRINT(EM_DIAGRAM):   _12_15 = -1;
MPRINT(EM_DIAGRAM):   _12_16 = -1;
MPRINT(EM_DIAGRAM):   _12_17 = -1;
MPRINT(EM_DIAGRAM):   _12_18 = -1;
MPRINT(EM_DIAGRAM):   _12_19 = -1;
MPRINT(EM_DIAGRAM):   _12_20 = -1;
MPRINT(EM_DIAGRAM):   _12_21 = -1;
MPRINT(EM_DIAGRAM):   _12_22 = -1;
MPRINT(EM_DIAGRAM):   _12_23 = -1;
MPRINT(EM_DIAGRAM):   _12_24 = -1;
MPRINT(EM_DIAGRAM):   _12_25 = -1;
MPRINT(EM_DIAGRAM):   _12_26 = -1;
MPRINT(EM_DIAGRAM):   _12_27 = -1;
MPRINT(EM_DIAGRAM):   _12_28 = -1;
MPRINT(EM_DIAGRAM):   _12_29 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _12_5 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _12_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _12_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   _12_10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   _12_15 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _12_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   _12_20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _12_7 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   _12_25 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   _12_14 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _12_6 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _12_8 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   _12_28 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   _12_12 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   _12_21 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   _12_29 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   _12_9 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   _12_16 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   _12_18 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   _12_27 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   _12_22 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   _12_17 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   _12_26 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   _12_13 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   _12_11 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   _12_23 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   _12_24 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   _12_19 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _12_0 = .;
MPRINT(EM_DIAGRAM):   _12_1 = .;
MPRINT(EM_DIAGRAM):   _12_2 = .;
MPRINT(EM_DIAGRAM):   _12_3 = .;
MPRINT(EM_DIAGRAM):   _12_4 = .;
MPRINT(EM_DIAGRAM):   _12_5 = .;
MPRINT(EM_DIAGRAM):   _12_6 = .;
MPRINT(EM_DIAGRAM):   _12_7 = .;
MPRINT(EM_DIAGRAM):   _12_8 = .;
MPRINT(EM_DIAGRAM):   _12_9 = .;
MPRINT(EM_DIAGRAM):   _12_10 = .;
MPRINT(EM_DIAGRAM):   _12_11 = .;
MPRINT(EM_DIAGRAM):   _12_12 = .;
MPRINT(EM_DIAGRAM):   _12_13 = .;
MPRINT(EM_DIAGRAM):   _12_14 = .;
MPRINT(EM_DIAGRAM):   _12_15 = .;
MPRINT(EM_DIAGRAM):   _12_16 = .;
MPRINT(EM_DIAGRAM):   _12_17 = .;
MPRINT(EM_DIAGRAM):   _12_18 = .;
MPRINT(EM_DIAGRAM):   _12_19 = .;
MPRINT(EM_DIAGRAM):   _12_20 = .;
MPRINT(EM_DIAGRAM):   _12_21 = .;
MPRINT(EM_DIAGRAM):   _12_22 = .;
MPRINT(EM_DIAGRAM):   _12_23 = .;
MPRINT(EM_DIAGRAM):   _12_24 = .;
MPRINT(EM_DIAGRAM):   _12_25 = .;
MPRINT(EM_DIAGRAM):   _12_26 = .;
MPRINT(EM_DIAGRAM):   _12_27 = .;
MPRINT(EM_DIAGRAM):   _12_28 = .;
MPRINT(EM_DIAGRAM):   _12_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for NoDocbcCost ;
MPRINT(EM_DIAGRAM):   drop _13_0 ;
MPRINT(EM_DIAGRAM):   if missing( NoDocbcCost ) then do;
MPRINT(EM_DIAGRAM):   _13_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( NoDocbcCost , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _13_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysActivity ;
MPRINT(EM_DIAGRAM):   drop _14_0 ;
MPRINT(EM_DIAGRAM):   if missing( PhysActivity ) then do;
MPRINT(EM_DIAGRAM):   _14_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysActivity , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _14_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for PhysHlth ;
MPRINT(EM_DIAGRAM):   drop _15_0 _15_1 _15_2 _15_3 _15_4 _15_5 _15_6 _15_7 _15_8 _15_9 _15_10 _15_11 _15_12 _15_13 _15_14 _15_15 _15_16 _15_17 _15_18 _15_19 _15_20 _15_21 _15_22 _15_23 _15_24 _15_25 _15_26 _15_27 _15_28 _15_29 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _15_0 = 0;
MPRINT(EM_DIAGRAM):   _15_1 = 0;
MPRINT(EM_DIAGRAM):   _15_2 = 0;
MPRINT(EM_DIAGRAM):   _15_3 = 0;
MPRINT(EM_DIAGRAM):   _15_4 = 0;
MPRINT(EM_DIAGRAM):   _15_5 = 0;
MPRINT(EM_DIAGRAM):   _15_6 = 0;
MPRINT(EM_DIAGRAM):   _15_7 = 0;
MPRINT(EM_DIAGRAM):   _15_8 = 0;
MPRINT(EM_DIAGRAM):   _15_9 = 0;
MPRINT(EM_DIAGRAM):   _15_10 = 0;
MPRINT(EM_DIAGRAM):   _15_11 = 0;
MPRINT(EM_DIAGRAM):   _15_12 = 0;
MPRINT(EM_DIAGRAM):   _15_13 = 0;
MPRINT(EM_DIAGRAM):   _15_14 = 0;
MPRINT(EM_DIAGRAM):   _15_15 = 0;
MPRINT(EM_DIAGRAM):   _15_16 = 0;
MPRINT(EM_DIAGRAM):   _15_17 = 0;
MPRINT(EM_DIAGRAM):   _15_18 = 0;
MPRINT(EM_DIAGRAM):   _15_19 = 0;
MPRINT(EM_DIAGRAM):   _15_20 = 0;
MPRINT(EM_DIAGRAM):   _15_21 = 0;
MPRINT(EM_DIAGRAM):   _15_22 = 0;
MPRINT(EM_DIAGRAM):   _15_23 = 0;
MPRINT(EM_DIAGRAM):   _15_24 = 0;
MPRINT(EM_DIAGRAM):   _15_25 = 0;
MPRINT(EM_DIAGRAM):   _15_26 = 0;
MPRINT(EM_DIAGRAM):   _15_27 = 0;
MPRINT(EM_DIAGRAM):   _15_28 = 0;
MPRINT(EM_DIAGRAM):   _15_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( PhysHlth ) then do;
MPRINT(EM_DIAGRAM):   _15_0 = .;
MPRINT(EM_DIAGRAM):   _15_1 = .;
MPRINT(EM_DIAGRAM):   _15_2 = .;
MPRINT(EM_DIAGRAM):   _15_3 = .;
MPRINT(EM_DIAGRAM):   _15_4 = .;
MPRINT(EM_DIAGRAM):   _15_5 = .;
MPRINT(EM_DIAGRAM):   _15_6 = .;
MPRINT(EM_DIAGRAM):   _15_7 = .;
MPRINT(EM_DIAGRAM):   _15_8 = .;
MPRINT(EM_DIAGRAM):   _15_9 = .;
MPRINT(EM_DIAGRAM):   _15_10 = .;
MPRINT(EM_DIAGRAM):   _15_11 = .;
MPRINT(EM_DIAGRAM):   _15_12 = .;
MPRINT(EM_DIAGRAM):   _15_13 = .;
MPRINT(EM_DIAGRAM):   _15_14 = .;
MPRINT(EM_DIAGRAM):   _15_15 = .;
MPRINT(EM_DIAGRAM):   _15_16 = .;
MPRINT(EM_DIAGRAM):   _15_17 = .;
MPRINT(EM_DIAGRAM):   _15_18 = .;
MPRINT(EM_DIAGRAM):   _15_19 = .;
MPRINT(EM_DIAGRAM):   _15_20 = .;
MPRINT(EM_DIAGRAM):   _15_21 = .;
MPRINT(EM_DIAGRAM):   _15_22 = .;
MPRINT(EM_DIAGRAM):   _15_23 = .;
MPRINT(EM_DIAGRAM):   _15_24 = .;
MPRINT(EM_DIAGRAM):   _15_25 = .;
MPRINT(EM_DIAGRAM):   _15_26 = .;
MPRINT(EM_DIAGRAM):   _15_27 = .;
MPRINT(EM_DIAGRAM):   _15_28 = .;
MPRINT(EM_DIAGRAM):   _15_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( PhysHlth , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _15_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '30' then do;
MPRINT(EM_DIAGRAM):   _15_0 = -1;
MPRINT(EM_DIAGRAM):   _15_1 = -1;
MPRINT(EM_DIAGRAM):   _15_2 = -1;
MPRINT(EM_DIAGRAM):   _15_3 = -1;
MPRINT(EM_DIAGRAM):   _15_4 = -1;
MPRINT(EM_DIAGRAM):   _15_5 = -1;
MPRINT(EM_DIAGRAM):   _15_6 = -1;
MPRINT(EM_DIAGRAM):   _15_7 = -1;
MPRINT(EM_DIAGRAM):   _15_8 = -1;
MPRINT(EM_DIAGRAM):   _15_9 = -1;
MPRINT(EM_DIAGRAM):   _15_10 = -1;
MPRINT(EM_DIAGRAM):   _15_11 = -1;
MPRINT(EM_DIAGRAM):   _15_12 = -1;
MPRINT(EM_DIAGRAM):   _15_13 = -1;
MPRINT(EM_DIAGRAM):   _15_14 = -1;
MPRINT(EM_DIAGRAM):   _15_15 = -1;
MPRINT(EM_DIAGRAM):   _15_16 = -1;
MPRINT(EM_DIAGRAM):   _15_17 = -1;
MPRINT(EM_DIAGRAM):   _15_18 = -1;
MPRINT(EM_DIAGRAM):   _15_19 = -1;
MPRINT(EM_DIAGRAM):   _15_20 = -1;
MPRINT(EM_DIAGRAM):   _15_21 = -1;
MPRINT(EM_DIAGRAM):   _15_22 = -1;
MPRINT(EM_DIAGRAM):   _15_23 = -1;
MPRINT(EM_DIAGRAM):   _15_24 = -1;
MPRINT(EM_DIAGRAM):   _15_25 = -1;
MPRINT(EM_DIAGRAM):   _15_26 = -1;
MPRINT(EM_DIAGRAM):   _15_27 = -1;
MPRINT(EM_DIAGRAM):   _15_28 = -1;
MPRINT(EM_DIAGRAM):   _15_29 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   _15_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _15_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   _15_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   _15_5 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '10' then do;
MPRINT(EM_DIAGRAM):   _15_10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '15' then do;
MPRINT(EM_DIAGRAM):   _15_15 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   _15_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '7' then do;
MPRINT(EM_DIAGRAM):   _15_7 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '20' then do;
MPRINT(EM_DIAGRAM):   _15_20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '14' then do;
MPRINT(EM_DIAGRAM):   _15_14 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '6' then do;
MPRINT(EM_DIAGRAM):   _15_6 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '25' then do;
MPRINT(EM_DIAGRAM):   _15_25 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '8' then do;
MPRINT(EM_DIAGRAM):   _15_8 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '21' then do;
MPRINT(EM_DIAGRAM):   _15_21 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '12' then do;
MPRINT(EM_DIAGRAM):   _15_12 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '28' then do;
MPRINT(EM_DIAGRAM):   _15_28 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '29' then do;
MPRINT(EM_DIAGRAM):   _15_29 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '9' then do;
MPRINT(EM_DIAGRAM):   _15_9 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '18' then do;
MPRINT(EM_DIAGRAM):   _15_18 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '16' then do;
MPRINT(EM_DIAGRAM):   _15_16 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '17' then do;
MPRINT(EM_DIAGRAM):   _15_17 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '27' then do;
MPRINT(EM_DIAGRAM):   _15_27 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '26' then do;
MPRINT(EM_DIAGRAM):   _15_26 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '24' then do;
MPRINT(EM_DIAGRAM):   _15_24 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '11' then do;
MPRINT(EM_DIAGRAM):   _15_11 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '13' then do;
MPRINT(EM_DIAGRAM):   _15_13 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '22' then do;
MPRINT(EM_DIAGRAM):   _15_22 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '23' then do;
MPRINT(EM_DIAGRAM):   _15_23 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '19' then do;
MPRINT(EM_DIAGRAM):   _15_19 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _15_0 = .;
MPRINT(EM_DIAGRAM):   _15_1 = .;
MPRINT(EM_DIAGRAM):   _15_2 = .;
MPRINT(EM_DIAGRAM):   _15_3 = .;
MPRINT(EM_DIAGRAM):   _15_4 = .;
MPRINT(EM_DIAGRAM):   _15_5 = .;
MPRINT(EM_DIAGRAM):   _15_6 = .;
MPRINT(EM_DIAGRAM):   _15_7 = .;
MPRINT(EM_DIAGRAM):   _15_8 = .;
MPRINT(EM_DIAGRAM):   _15_9 = .;
MPRINT(EM_DIAGRAM):   _15_10 = .;
MPRINT(EM_DIAGRAM):   _15_11 = .;
MPRINT(EM_DIAGRAM):   _15_12 = .;
MPRINT(EM_DIAGRAM):   _15_13 = .;
MPRINT(EM_DIAGRAM):   _15_14 = .;
MPRINT(EM_DIAGRAM):   _15_15 = .;
MPRINT(EM_DIAGRAM):   _15_16 = .;
MPRINT(EM_DIAGRAM):   _15_17 = .;
MPRINT(EM_DIAGRAM):   _15_18 = .;
MPRINT(EM_DIAGRAM):   _15_19 = .;
MPRINT(EM_DIAGRAM):   _15_20 = .;
MPRINT(EM_DIAGRAM):   _15_21 = .;
MPRINT(EM_DIAGRAM):   _15_22 = .;
MPRINT(EM_DIAGRAM):   _15_23 = .;
MPRINT(EM_DIAGRAM):   _15_24 = .;
MPRINT(EM_DIAGRAM):   _15_25 = .;
MPRINT(EM_DIAGRAM):   _15_26 = .;
MPRINT(EM_DIAGRAM):   _15_27 = .;
MPRINT(EM_DIAGRAM):   _15_28 = .;
MPRINT(EM_DIAGRAM):   _15_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Sex ;
MPRINT(EM_DIAGRAM):   drop _16_0 ;
MPRINT(EM_DIAGRAM):   if missing( Sex ) then do;
MPRINT(EM_DIAGRAM):   _16_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Sex , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _16_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _16_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _16_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Smoker ;
MPRINT(EM_DIAGRAM):   drop _17_0 ;
MPRINT(EM_DIAGRAM):   if missing( Smoker ) then do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Smoker , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _17_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Stroke ;
MPRINT(EM_DIAGRAM):   drop _18_0 ;
MPRINT(EM_DIAGRAM):   if missing( Stroke ) then do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Stroke , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _18_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _18_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _18_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Veggies ;
MPRINT(EM_DIAGRAM):   drop _19_0 ;
MPRINT(EM_DIAGRAM):   if missing( Veggies ) then do;
MPRINT(EM_DIAGRAM):   _19_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Veggies , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   _19_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   _19_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _19_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _P0 = 0.0182856146;
MPRINT(EM_DIAGRAM):   _P1 = 0.8453637803;
MPRINT(EM_DIAGRAM):   _P2 = 0.1363506052;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0 _LP1;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP1 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00414408060447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.13667778881006 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: AnyHealthcare ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04129829660428) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.01134240700953) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   *** Effect: BMI ;
MPRINT(EM_DIAGRAM):   _TEMP = BMI ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0200623141319 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.08506112237518 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: CholCheck ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17587106324267) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.55662872875129) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: DiffWalk ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06807944539291) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.05202966847364) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   *** Effect: Education ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.60694703791874) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31516609483213) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.82684405280263) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01654127164125) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.84291708454748) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.04388954912298) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.59860435233338) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.10355460753732) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.65791585672254) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.0391054606201) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   *** Effect: Fruits ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00825788632312) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01592801277223) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   *** Effect: GenHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.45630003633515) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.15205407825125) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.24694986154977) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.46937748191537) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0209212485904) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17900029952603) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15603108215171) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.60710699757471) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   *** Effect: HeartDiseaseorAttack ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15963684339905) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.12861220614246) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   *** Effect: HighBP ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18828052724326) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.35743173485255) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   *** Effect: HighChol ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.02142564733405) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.29229370514654) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   *** Effect: HvyAlcoholConsump ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.29433685527321) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.37659452228019) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.12434962949832) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.18856597637964) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01180272821841) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.11439362790813) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01705497839294) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09639520284216) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.16273811627458) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.05882989712437) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04489073871808) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.01011682655444) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16378586765171) * _TEMP * _11_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.10710055621972) * _TEMP * _11_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00937344173016) * _TEMP * _11_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.11482137296246) * _TEMP * _11_6;
MPRINT(EM_DIAGRAM):   *** Effect: MentHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04800942080717) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09001843225783) * _TEMP * _12_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.22590900027558) * _TEMP * _12_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.12737525667088) * _TEMP * _12_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.10106475746128) * _TEMP * _12_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.02132573547151) * _TEMP * _12_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.97608762045018) * _TEMP * _12_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.05954724291336) * _TEMP * _12_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.36921172040877) * _TEMP * _12_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00917182457836) * _TEMP * _12_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.4024070411314) * _TEMP * _12_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00028467971349) * _TEMP * _12_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.57286058448533) * _TEMP * _12_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.00303496928288) * _TEMP * _12_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.22406298298951) * _TEMP * _12_7;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.14141042252959) * _TEMP * _12_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.26089551363143) * _TEMP * _12_8;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.16984609450576) * _TEMP * _12_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.78331980851102) * _TEMP * _12_9;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.1866293691781) * _TEMP * _12_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.3420742122432) * _TEMP * _12_10;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02472082181025) * _TEMP * _12_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.53270611964659) * _TEMP * _12_11;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.46881777462575) * _TEMP * _12_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19289982028081) * _TEMP * _12_12;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.37014526072922) * _TEMP * _12_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.01395050063776) * _TEMP * _12_13;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.89154952382611) * _TEMP * _12_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.16232174446058) * _TEMP * _12_14;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.10572920348172) * _TEMP * _12_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.50371736370442) * _TEMP * _12_15;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.13967193430089) * _TEMP * _12_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.98387749194182) * _TEMP * _12_16;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.47921746060105) * _TEMP * _12_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.99086451305) * _TEMP * _12_17;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.023092747883) * _TEMP * _12_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.28142994579901) * _TEMP * _12_18;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.89772782364261) * _TEMP * _12_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.94345646177794) * _TEMP * _12_19;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -1.09031201100748) * _TEMP * _12_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.97809107781656) * _TEMP * _12_20;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02237950541983) * _TEMP * _12_20;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.50095292613488) * _TEMP * _12_21;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.61042702666207) * _TEMP * _12_21;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.2358636579636) * _TEMP * _12_22;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.5524942029042) * _TEMP * _12_22;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.97436105907883) * _TEMP * _12_23;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.83058093396395) * _TEMP * _12_23;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.08616155188671) * _TEMP * _12_24;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.55101121901185) * _TEMP * _12_24;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.63435259026731) * _TEMP * _12_25;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09583605477333) * _TEMP * _12_25;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.75944421342236) * _TEMP * _12_26;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.29195079721774) * _TEMP * _12_26;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.89917056628234) * _TEMP * _12_27;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.34751286616378) * _TEMP * _12_27;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.83707368950426) * _TEMP * _12_28;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.15686423463904) * _TEMP * _12_28;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.86069646817922) * _TEMP * _12_29;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17231839808172) * _TEMP * _12_29;
MPRINT(EM_DIAGRAM):   *** Effect: NoDocbcCost ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21747567652734) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02254687053978) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   *** Effect: PhysActivity ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.07210365596365) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.01244841943964) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   *** Effect: PhysHlth ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36138060527011) * _TEMP * _15_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17374522621538) * _TEMP * _15_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.4552745250487) * _TEMP * _15_1;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31212557191848) * _TEMP * _15_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.45210754388406) * _TEMP * _15_2;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.28312681020051) * _TEMP * _15_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27470252831399) * _TEMP * _15_3;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.0910407354241) * _TEMP * _15_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40704621270345) * _TEMP * _15_4;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.26714677181421) * _TEMP * _15_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.26802299887237) * _TEMP * _15_5;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.14212354331234) * _TEMP * _15_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36873379683245) * _TEMP * _15_6;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.35979265520491) * _TEMP * _15_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.472909760972) * _TEMP * _15_7;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.14453420017303) * _TEMP * _15_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00470930079283) * _TEMP * _15_8;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.31156700645887) * _TEMP * _15_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.100605976329) * _TEMP * _15_9;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.47319873636302) * _TEMP * _15_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14897089808618) * _TEMP * _15_10;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.21649730575151) * _TEMP * _15_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.37161851587237) * _TEMP * _15_11;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 4.10215853477496) * _TEMP * _15_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.4813008065127) * _TEMP * _15_12;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.12766437859842) * _TEMP * _15_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02321777568077) * _TEMP * _15_13;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.7581909524469) * _TEMP * _15_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.67576609678817) * _TEMP * _15_14;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09842381735271) * _TEMP * _15_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23708709525644) * _TEMP * _15_15;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.17539778485889) * _TEMP * _15_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.559304119879) * _TEMP * _15_16;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.38094168561267) * _TEMP * _15_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.677572441654) * _TEMP * _15_17;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.66874857849847) * _TEMP * _15_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66233639702328) * _TEMP * _15_18;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.02661272303472) * _TEMP * _15_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.2773101756959) * _TEMP * _15_19;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.9198933613483) * _TEMP * _15_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8779246532807) * _TEMP * _15_20;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.22221154394122) * _TEMP * _15_20;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14532612258424) * _TEMP * _15_21;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.09184823321173) * _TEMP * _15_21;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39424527999194) * _TEMP * _15_22;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.36201370672091) * _TEMP * _15_22;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.7694506017102) * _TEMP * _15_23;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 1.46979004263545) * _TEMP * _15_23;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.04927218119768) * _TEMP * _15_24;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.22090819666088) * _TEMP * _15_24;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71101204509658) * _TEMP * _15_25;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.15937382520162) * _TEMP * _15_25;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17219250104969) * _TEMP * _15_26;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -1.18135511316386) * _TEMP * _15_26;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06506666055701) * _TEMP * _15_27;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.40066130465414) * _TEMP * _15_27;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.04168627331738) * _TEMP * _15_28;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.08103664415612) * _TEMP * _15_28;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40114707530503) * _TEMP * _15_29;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.26274616812588) * _TEMP * _15_29;
MPRINT(EM_DIAGRAM):   *** Effect: Sex ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06889454676877) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.11473053909985) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   *** Effect: Smoker ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01682413014641) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.00023043867139) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   *** Effect: Stroke ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19674442740887) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( 0.06693452991956) * _TEMP * _18_0;
MPRINT(EM_DIAGRAM):   *** Effect: Veggies ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02944512919683) * _TEMP * _19_0;
MPRINT(EM_DIAGRAM):   _LP1 = _LP1 + ( -0.02037458880704) * _TEMP * _19_0;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1 _P2;
MPRINT(EM_DIAGRAM):   drop _LPMAX;
MPRINT(EM_DIAGRAM):   _LPMAX= 0;
MPRINT(EM_DIAGRAM):   _LP0 = -2.35691380760196 + _LP0;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP0 then _LPMAX = _LP0;
MPRINT(EM_DIAGRAM):   _LP1 = 6.30166339755406 + _LP1;
MPRINT(EM_DIAGRAM):   if _LPMAX < _LP1 then _LPMAX = _LP1;
MPRINT(EM_DIAGRAM):   _LP0 = exp(_LP0 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LP1 = exp(_LP1 - _LPMAX);
MPRINT(EM_DIAGRAM):   _LPMAX = exp(-_LPMAX);
MPRINT(EM_DIAGRAM):   _P2 = 1 / (_LPMAX + _LP0 + _LP1);
MPRINT(EM_DIAGRAM):   _P0 = _LP0 * _P2;
MPRINT(EM_DIAGRAM):   _P1 = _LP1 * _P2;
MPRINT(EM_DIAGRAM):   _P2 = _LPMAX * _P2;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionprediabetes = .;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionno_diabetes = .;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictiondiabetes = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictionprediabetes = 'Residual: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictionno_diabetes = 'Residual: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label R_Diabetes_Predictiondiabetes = 'Residual: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionprediabetes = - _P0;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictionno_diabetes = - _P1;
MPRINT(EM_DIAGRAM):   R_Diabetes_Predictiondiabetes = - _P2;
MPRINT(EM_DIAGRAM):   select( _Y );
MPRINT(EM_DIAGRAM):   when (0) R_Diabetes_Predictionprediabetes = R_Diabetes_Predictionprediabetes + 1;
MPRINT(EM_DIAGRAM):   when (1) R_Diabetes_Predictionno_diabetes = R_Diabetes_Predictionno_diabetes + 1;
MPRINT(EM_DIAGRAM):   when (2) R_Diabetes_Predictiondiabetes = R_Diabetes_Predictiondiabetes + 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
MPRINT(EM_DIAGRAM):   _IY = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = _P1;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _IY = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = _P2;
MPRINT(EM_DIAGRAM):   if (_P2 > _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   _MAXP = _P2;
MPRINT(EM_DIAGRAM):   _IY = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
96937      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS2.REG_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.50 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
96938      quit;
96939      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
96940      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
96941      * Reg: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg: Computing metadata for TRAIN data;
96942      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.REG_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS2\Reg\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Reg_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Reg_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Reg_TRAIN out=WORK.M00O6MA2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00O6MA2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M00O6MA2(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00O6MA2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M00O6MA2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2V9538Z NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1UWOD5I(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V9538Z;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg";
MPRINT(EM_DIAGRAM):   when("DIABETES_PREDICTION") model = "Reg";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
97288      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
97289      set EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMINFO;
97290      where DATA='Reg' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
97291      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.REG_EMINFO.
      WHERE (DATA='Reg') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

97292      data EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg_EMINFO;
97293      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
97294      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
97295      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS2.REG_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
97299      run;
97300      data EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg_EMINFO;
97301      set EMWS2.Reg_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMINFO WORK.MODELTEMP_INFO;
97302      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.REG_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.REG_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
      

97303      proc sort data = EMWS2.Reg_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Reg_EMINFO NOTHREADS;
97304      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
97305      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.REG_EMINFO.
NOTE: The data set EMWS2.REG_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
      

97306      proc sort data = EMWS2.Ids3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
97307      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
97308      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.IDS3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

97309      proc sort data = EMWS2.Reg_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Reg_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
97310      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
97311      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.REG_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

97312      data EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg_EMINFO;
97313      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
97314      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
97315      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.REG_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.10 seconds
      

97316      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
97317      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
97318      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
97319      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS2.REG_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS2.REG_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS2.REG_TEST.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
