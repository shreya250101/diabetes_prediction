MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "March 04, 2024" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12:37:02" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                March 04, 2024
Time:                12:37:02
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1EE6NJB "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1EE6NJB new;
MPRINT(EM_DIAGRAM):   run;
323062     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323063     *------------------------------------------------------------*;
323064     * Score: Scoring DATA data;
323065     *------------------------------------------------------------*;
323066     data EMWS1.Score_TRAIN
323067     / view=EMWS1.Score_TRAIN
323068     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_TRAIN / view=EMWS1.Score_TRAIN ;
323069     set EMWS1.MdlComp3_TRAIN
323070     ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp3_TRAIN ;
323071     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
323072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323073    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
323074    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323075    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
323076    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
323077    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
323078    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
323079    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
323080    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
323081    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
323082    +EM_PROBABILITY =
323083    +max(
323084    +P_Diabetes_Predictionprediabetes
323085    +,
323086    +P_Diabetes_Predictionno_diabetes
323087    +,
323088    +P_Diabetes_Predictiondiabetes
323089    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
323090    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
323090   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
323091    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
323092    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
323093    +LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
323094    +EM_CLASSTARGET = F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323095     run;

NOTE: DATA STEP view saved on file EMWS1.SCORE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP3_TRAIN.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.20 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.26 seconds
      

MPRINT(EM_DIAGRAM):   quit;
323096     quit;
323097     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
323098     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323099     *------------------------------------------------------------*;
323100     * Score: Scoring VALIDATE data;
323101     *------------------------------------------------------------*;
323102     data EMWS1.Score_VALIDATE
323103     / view=EMWS1.Score_VALIDATE
323104     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_VALIDATE / view=EMWS1.Score_VALIDATE ;
323105     set EMWS1.MdlComp3_VALIDATE
323106     ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp3_VALIDATE ;
323107     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
323108    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323109    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
323110    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323111    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
323112    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
323113    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
323114    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
323115    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
323116    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
323117    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
323118    +EM_PROBABILITY =
323119    +max(
323120    +P_Diabetes_Predictionprediabetes
323121    +,
323122    +P_Diabetes_Predictionno_diabetes
323123    +,
323124    +P_Diabetes_Predictiondiabetes
323125    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
323126    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
323126   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
323127    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
323128    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
323129    +LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
323130    +EM_CLASSTARGET = F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323131     run;

NOTE: DATA STEP view saved on file EMWS1.SCORE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP3_VALIDATE.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.26 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.32 seconds
      

MPRINT(EM_DIAGRAM):   quit;
323132     quit;
323133     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
323134     filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323135     *------------------------------------------------------------*;
323136     * Score: Scoring TEST data;
323137     *------------------------------------------------------------*;
323138     data EMWS1.Score_TEST
323139     / view=EMWS1.Score_TEST
323140     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_TEST / view=EMWS1.Score_TEST ;
323141     set EMWS1.MdlComp3_TEST
323142     ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp3_TEST ;
323143     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMFLOWSCORE.sas.
323144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323145    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
323146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323147    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
323148    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
323149    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
323150    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
323151    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
323152    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
323153    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
323154    +EM_PROBABILITY =
323155    +max(
323156    +P_Diabetes_Predictionprediabetes
323157    +,
323158    +P_Diabetes_Predictionno_diabetes
323159    +,
323160    +P_Diabetes_Predictiondiabetes
323161    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
323162    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
323162   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
323163    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
323164    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
323165    +LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: Diabetes_Prediction';
323166    +EM_CLASSTARGET = F_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323167     run;

NOTE: DATA STEP view saved on file EMWS1.SCORE_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP3_TEST.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.26 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.29 seconds
      

MPRINT(EM_DIAGRAM):   quit;
323168     quit;
323169     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
323170     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
323171     * Score: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score: Creating Publish Score Variables Table;
323172     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323173     proc sort data=EMWS1.MdlComp3_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp3_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
323174     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323175     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS1.MDLCOMP3_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 41 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

323176     proc sort data=EMWS1.Ids5_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids5_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
323177     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.IDS5_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

323179     data EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_EMINPUTVARS;
323180     merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
323181     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323182     length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
323183     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
323184        "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
323185        "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
323186     if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
323187     if upcase(NAME) = "AGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE" then HIDE = "N";
323188     if upcase(NAME) = "ANYHEALTHCARE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ANYHEALTHCARE" then HIDE = "N";
323189     if upcase(NAME) = "BMI" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "BMI" then HIDE = "N";
323190     if upcase(NAME) = "CHOLCHECK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CHOLCHECK" then HIDE = "N";
323191     if upcase(NAME) = "DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DIABETES_PREDICTION" then HIDE = "N";
323192     if upcase(NAME) = "DIFFWALK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DIFFWALK" then HIDE = "N";
323193     if upcase(NAME) = "EDUCATION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "EDUCATION" then HIDE = "N";
323194     if upcase(NAME) = "F_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "F_DIABETES_PREDICTION" then HIDE = "N";
323195     if upcase(NAME) = "FRUITS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FRUITS" then HIDE = "N";
323196     if upcase(NAME) = "GENHLTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "GENHLTH" then HIDE = "N";
323197     if upcase(NAME) = "HEARTDISEASEORATTACK" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HEARTDISEASEORATTACK" then HIDE = "N";
323198     if upcase(NAME) = "HIGHBP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HIGHBP" then HIDE = "N";
323199     if upcase(NAME) = "HIGHCHOL" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HIGHCHOL" then HIDE = "N";
323200     if upcase(NAME) = "HVYALCOHOLCONSUMP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HVYALCOHOLCONSUMP" then HIDE = "N";
323201     if upcase(NAME) = "I_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "I_DIABETES_PREDICTION" then HIDE = "N";
323202     if upcase(NAME) = "INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "INCOME" then HIDE = "N";
323203     if upcase(NAME) = "MENTHLTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MENTHLTH" then HIDE = "N";
323204     if upcase(NAME) = "NODOCBCCOST" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NODOCBCCOST" then HIDE = "N";
323205     if upcase(NAME) = "P_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
323206     if upcase(NAME) = "P_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
323207     if upcase(NAME) = "P_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
323208     if upcase(NAME) = "PHYSACTIVITY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PHYSACTIVITY" then HIDE = "N";
323209     if upcase(NAME) = "PHYSHLTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "PHYSHLTH" then HIDE = "N";
323210     if upcase(NAME) = "Q_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
323211     if upcase(NAME) = "Q_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
323212     if upcase(NAME) = "Q_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
323213     if upcase(NAME) = "R_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
323214     if upcase(NAME) = "R_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
323215     if upcase(NAME) = "R_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
323216     if upcase(NAME) = "SEX" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SEX" then HIDE = "N";
323217     if upcase(NAME) = "SMOKER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SMOKER" then HIDE = "N";
323218     if upcase(NAME) = "STROKE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "STROKE" then HIDE = "N";
323219     if upcase(NAME) = "U_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "U_DIABETES_PREDICTION" then HIDE = "N";
323220     if upcase(NAME) = "V_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_DIABETES_PREDICTIONDIABETES" then HIDE = "N";
323221     if upcase(NAME) = "V_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_DIABETES_PREDICTIONNO_DIABETES" then HIDE = "N";
323222     if upcase(NAME) = "V_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_DIABETES_PREDICTIONPREDIABETES" then HIDE = "N";
323223     if upcase(NAME) = "VEGGIES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "VEGGIES" then HIDE = "N";
323224     if upcase(NAME) = "_NODE_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_NODE_" then HIDE = "N";
323225     if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
323226     if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
323227     if upcase(NAME) = "B_DIABETES_PREDICTION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_DIABETES_PREDICTION" then HIDE = "N";
323228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 41 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 40 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

323229     proc sort data=EMWS1.Score_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score_EMINPUTVARS nodupkey;
323230     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323231     where CREATOR='' or (NAME="DIABETES_PREDICTION" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="DIABETES_PREDICTION" and CREATOR='');
323232     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='DIABETES_PREDICTION') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 22 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
      

323233     %let em_rootkey=;
323234     %let em_keytype=;
323235     %let em_keylen=;
323236     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
323237     set EMWS1.Ids5_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids5_cmeta_data;
323238     where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
323239     call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
323240     call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
323241     call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
323242     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS5_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323243     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas";
323244     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
323245     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
323246     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\EMPUBLISHSCORE.sas.
323247    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323248    +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
323249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
323250    +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
323251    +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
323252    +LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
323253    +LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
323254    +EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
323255    +LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
323256    +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
323257    +EM_PROBABILITY =
323258    +max(
323259    +P_Diabetes_Predictionprediabetes
323260    +,
323261    +P_Diabetes_Predictionno_diabetes
323262    +,
323263    +P_Diabetes_Predictiondiabetes
323264    +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
323265    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
323265   !+       EM_CLASSIFICATION $%dmnorlen;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
323266    +LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
323267    +EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323268     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.28 seconds
      cpu time            0.00 seconds
      

323269     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
323270     quit;
323271     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
323272     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
323273     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
323274     retain ID 1 Node "Score";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score";
323275     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
323276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323277     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
323278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323280     proc sort data=EMWS1.MdlComp3_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp3_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
323281     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS1.MDLCOMP3_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

323283     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323284     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
323285     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
323286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323287     proc contents data=EMWS1.Score_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Score_train out=_meta(keep=NAME) noprint;
323288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      

323289     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
323290     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323291     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

323292     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323293     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
323294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323295     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323296     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
323297     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 6 rows and 5 columns.

323298     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323299     proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
323300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS1.SCORE_FCMP has 6 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

323301     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\MdlComp3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\MdlComp3\EMFLOWSCORE.sas";
323302     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
323303     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
323304     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\MdlComp3\EMFLOWSCORE.sas.
323305    +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
323306    +if (P_Diabetes_Predictionprediabetes ge 0.03548046462513) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.03548046462513) then do;
323307    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
323308    +end;
MPRINT(EM_DIAGRAM):   end;
323309    +else
323310    +if (P_Diabetes_Predictionprediabetes ge 0.02655255650647) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02655255650647) then do;
323311    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
323312    +b_Diabetes_Prediction = floor(2 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(2 + 2*_temp_);
323313    +end;
MPRINT(EM_DIAGRAM):   end;
323314    +else
323315    +if (P_Diabetes_Predictionprediabetes ge 0.02276436372766) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02276436372766) then do;
323316    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
323317    +b_Diabetes_Prediction = floor(4 + 6*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(4 + 6*_temp_);
323318    +end;
MPRINT(EM_DIAGRAM):   end;
323319    +else
323320    +do;
MPRINT(EM_DIAGRAM):   else do;
323321    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
323322    +b_Diabetes_Prediction = floor(10 + 11*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(10 + 11*_temp_);
323323    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323324     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

323325     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
323326     quit;
323327     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
323328     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
323329     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
323330     retain ID 2 Node "MdlComp3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp3";
323331     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
323332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323333     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
323334     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323335     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323336     proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
323337     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323338     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

323339     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323340     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
323341     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
323342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323343     proc contents data=EMWS1.MdlComp3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp3_train out=_meta(keep=NAME) noprint;
323344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

323345     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
323346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323348     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323349     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
323350     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323351     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 41 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

323352     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
323353     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.

323354     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323355     proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
323356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 8 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

323357     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
323358     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
323359     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
323360     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
323361    +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
323362    +if (P_Diabetes_Predictionprediabetes ge 0.03548046462513) then do;
MPRINT(EM_DIAGRAM):   if (P_Diabetes_Predictionprediabetes ge 0.03548046462513) then do;
323363    +b_Diabetes_Prediction = 1;
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = 1;
323364    +end;
MPRINT(EM_DIAGRAM):   end;
323365    +else
323366    +if (P_Diabetes_Predictionprediabetes ge 0.02655255650647) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02655255650647) then do;
323367    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
323368    +b_Diabetes_Prediction = floor(2 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(2 + 2*_temp_);
323369    +end;
MPRINT(EM_DIAGRAM):   end;
323370    +else
323371    +if (P_Diabetes_Predictionprediabetes ge 0.02276436372766) then do;
MPRINT(EM_DIAGRAM):   else if (P_Diabetes_Predictionprediabetes ge 0.02276436372766) then do;
323372    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
323373    +b_Diabetes_Prediction = floor(4 + 6*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(4 + 6*_temp_);
323374    +end;
MPRINT(EM_DIAGRAM):   end;
323375    +else
323376    +do;
MPRINT(EM_DIAGRAM):   else do;
323377    +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
323378    +b_Diabetes_Prediction = floor(10 + 11*_temp_);
MPRINT(EM_DIAGRAM):   b_Diabetes_Prediction = floor(10 + 11*_temp_);
323379    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323380     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

323381     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
323382     quit;
323383     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
323384     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
323385     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
323386     retain ID 3 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "MdlComp";
323387     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
323388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323389     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
323390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323392     proc sort data=EMWS1.Tree4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
323393     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323394     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.TREE4_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

323395     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323396     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
323397     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
323398     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323399     proc contents data=EMWS1.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp_train out=_meta(keep=NAME) noprint;
323400     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

323401     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
323402     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323403     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

323404     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323405     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
323406     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323407     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323408     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
323409     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.

323410     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

323411     proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
323412     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 10 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

323413     filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Tree4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Tree4\EMPUBLISHSCORE.sas";
323414     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
323415     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
323416     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Tree4\EMPUBLISHSCORE.sas.
323417    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
323418    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
323419    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
323420    +
323421    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
323422    +LENGTH I_Diabetes_Prediction  $   11;
MPRINT(EM_DIAGRAM):   LENGTH I_Diabetes_Prediction $ 11;
323423    +LENGTH U_Diabetes_Prediction  $   11;
MPRINT(EM_DIAGRAM):   LENGTH U_Diabetes_Prediction $ 11;
323424    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
323425    +
323426    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
323427    +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
323428    +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
323429    +label P_Diabetes_Predictionno_diabetes =
323430    +'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
323431    +label P_Diabetes_Predictiondiabetes =
323432    +'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
323433    +label P_Diabetes_Predictionprediabetes =
323434    +'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
323435    +label Q_Diabetes_Predictionno_diabetes =
323436    +'Unadjusted P: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionno_diabetes = 'Unadjusted P: Diabetes_Prediction=no diabetes' ;
323437    +label Q_Diabetes_Predictiondiabetes =
323438    +'Unadjusted P: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictiondiabetes = 'Unadjusted P: Diabetes_Prediction=diabetes' ;
323439    +label Q_Diabetes_Predictionprediabetes =
323440    +'Unadjusted P: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionprediabetes = 'Unadjusted P: Diabetes_Prediction=prediabetes' ;
323441    +label V_Diabetes_Predictionno_diabetes =
323442    +'Validated: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionno_diabetes = 'Validated: Diabetes_Prediction=no diabetes' ;
323443    +label V_Diabetes_Predictiondiabetes =
323444    +'Validated: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictiondiabetes = 'Validated: Diabetes_Prediction=diabetes' ;
323445    +label V_Diabetes_Predictionprediabetes =
323446    +'Validated: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionprediabetes = 'Validated: Diabetes_Prediction=prediabetes' ;
323447    +label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
323448    +label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
323449    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
323450    +
323451    +
323452    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
323453    +LENGTH _ARBFMT_11 $     11; DROP _ARBFMT_11;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_11 $ 11;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_11;
323454    +_ARBFMT_11 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_11 = ' ';
323455    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
323456    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
323457    +
323458    +
323459    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
323460    +_ARBFMT_12 = PUT( GenHlth , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST12.);
323461    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
323462    +IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
323463    +  _NODE_  =                    3;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
323464    +  _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
323465    +  P_Diabetes_Predictionno_diabetes  =     0.80035150855755;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.80035150855755;
323466    +  P_Diabetes_Predictiondiabetes  =     0.17688412771477;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17688412771477;
323467    +  P_Diabetes_Predictionprediabetes  =     0.02276436372766;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02276436372766;
323468    +  Q_Diabetes_Predictionno_diabetes  =     0.80035150855755;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.80035150855755;
323469    +  Q_Diabetes_Predictiondiabetes  =     0.17688412771477;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17688412771477;
323470    +  Q_Diabetes_Predictionprediabetes  =     0.02276436372766;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02276436372766;
323471    +  V_Diabetes_Predictionno_diabetes  =     0.80127097385584;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.80127097385584;
323472    +  V_Diabetes_Predictiondiabetes  =     0.17704442834048;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17704442834048;
323473    +  V_Diabetes_Predictionprediabetes  =     0.02168459780366;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02168459780366;
323474    +  I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
323475    +  U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
323476    +  END;
MPRINT(EM_DIAGRAM):   END;
323477    +ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
323478    +  _ARBFMT_12 = PUT( HighBP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighBP , BEST12.);
323479    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
323480    +  IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
323481    +    _NODE_  =                   10;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
323482    +    _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
323483    +    P_Diabetes_Predictionno_diabetes  =     0.79789335088874;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79789335088874;
323484    +    P_Diabetes_Predictiondiabetes  =     0.17555409260478;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17555409260478;
323485    +    P_Diabetes_Predictionprediabetes  =     0.02655255650647;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02655255650647;
323486    +    Q_Diabetes_Predictionno_diabetes  =     0.79789335088874;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79789335088874;
323487    +    Q_Diabetes_Predictiondiabetes  =     0.17555409260478;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17555409260478;
323488    +    Q_Diabetes_Predictionprediabetes  =     0.02655255650647;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02655255650647;
323489    +    V_Diabetes_Predictionno_diabetes  =     0.79485697775209;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.79485697775209;
323490    +    V_Diabetes_Predictiondiabetes  =     0.17885004334007;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17885004334007;
323491    +    V_Diabetes_Predictionprediabetes  =     0.02629297890783;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02629297890783;
323492    +    I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
323493    +    U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
323494    +    END;
MPRINT(EM_DIAGRAM):   END;
323495    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
323496    +    IF  NOT MISSING(BMI ) AND
323497    +      BMI  <                 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(BMI ) AND BMI < 23.5 THEN DO;
323498    +      _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
323499    +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
323500    +      P_Diabetes_Predictionno_diabetes  =      0.7676935886761;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.7676935886761;
323501    +      P_Diabetes_Predictiondiabetes  =     0.21315570358034;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.21315570358034;
323502    +      P_Diabetes_Predictionprediabetes  =     0.01915070774354;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.01915070774354;
323503    +      Q_Diabetes_Predictionno_diabetes  =      0.7676935886761;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.7676935886761;
323504    +      Q_Diabetes_Predictiondiabetes  =     0.21315570358034;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.21315570358034;
323505    +      Q_Diabetes_Predictionprediabetes  =     0.01915070774354;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.01915070774354;
323506    +      V_Diabetes_Predictionno_diabetes  =     0.79161676646706;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.79161676646706;
323507    +      V_Diabetes_Predictiondiabetes  =     0.19281437125748;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.19281437125748;
323508    +      V_Diabetes_Predictionprediabetes  =     0.01556886227544;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01556886227544;
323509    +      I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
323510    +      U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
323511    +      END;
MPRINT(EM_DIAGRAM):   END;
323512    +    ELSE IF  NOT MISSING(BMI ) AND
323513    +                      32.5 <= BMI  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(BMI ) AND 32.5 <= BMI THEN DO;
323514    +      _ARBFMT_12 = PUT( HighChol , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighChol , BEST12.);
323515    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
323516    +      IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
323517    +        _NODE_  =                   65;
MPRINT(EM_DIAGRAM):   _NODE_ = 65;
323518    +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
323519    +        P_Diabetes_Predictionno_diabetes  =     0.58539094650205;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.58539094650205;
323520    +        P_Diabetes_Predictiondiabetes  =     0.36419753086419;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.36419753086419;
323521    +        P_Diabetes_Predictionprediabetes  =     0.05041152263374;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.05041152263374;
323522    +        Q_Diabetes_Predictionno_diabetes  =     0.58539094650205;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.58539094650205;
323523    +        Q_Diabetes_Predictiondiabetes  =     0.36419753086419;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.36419753086419;
323524    +        Q_Diabetes_Predictionprediabetes  =     0.05041152263374;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.05041152263374;
323525    +        V_Diabetes_Predictionno_diabetes  =     0.57202216066482;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.57202216066482;
323526    +        V_Diabetes_Predictiondiabetes  =     0.39473684210526;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.39473684210526;
323527    +        V_Diabetes_Predictionprediabetes  =     0.03324099722991;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.03324099722991;
323528    +        I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
323529    +        U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
323530    +        END;
MPRINT(EM_DIAGRAM):   END;
323531    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
323532    +        _NODE_  =                   64;
MPRINT(EM_DIAGRAM):   _NODE_ = 64;
323533    +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
323534    +        P_Diabetes_Predictionno_diabetes  =     0.39981273408239;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.39981273408239;
323535    +        P_Diabetes_Predictiondiabetes  =     0.56039325842696;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.56039325842696;
323536    +        P_Diabetes_Predictionprediabetes  =     0.03979400749063;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03979400749063;
323537    +        Q_Diabetes_Predictionno_diabetes  =     0.39981273408239;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.39981273408239;
323538    +        Q_Diabetes_Predictiondiabetes  =     0.56039325842696;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.56039325842696;
323539    +        Q_Diabetes_Predictionprediabetes  =     0.03979400749063;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03979400749063;
323540    +        V_Diabetes_Predictionno_diabetes  =     0.37317073170731;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.37317073170731;
323541    +        V_Diabetes_Predictiondiabetes  =     0.57865853658536;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.57865853658536;
323542    +        V_Diabetes_Predictionprediabetes  =     0.04817073170731;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04817073170731;
323543    +        I_Diabetes_Prediction  = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
323544    +        U_Diabetes_Prediction  = 'diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
323545    +        END;
MPRINT(EM_DIAGRAM):   END;
323546    +      END;
MPRINT(EM_DIAGRAM):   END;
323547    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
323548    +      _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
323549    +      _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
323550    +      P_Diabetes_Predictionno_diabetes  =     0.59767687434002;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.59767687434002;
323551    +      P_Diabetes_Predictiondiabetes  =     0.36684266103484;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.36684266103484;
323552    +      P_Diabetes_Predictionprediabetes  =     0.03548046462513;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03548046462513;
323553    +      Q_Diabetes_Predictionno_diabetes  =     0.59767687434002;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.59767687434002;
323554    +      Q_Diabetes_Predictiondiabetes  =     0.36684266103484;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.36684266103484;
323555    +      Q_Diabetes_Predictionprediabetes  =     0.03548046462513;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03548046462513;
323556    +      V_Diabetes_Predictionno_diabetes  =     0.59850445786597;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.59850445786597;
323557    +      V_Diabetes_Predictiondiabetes  =     0.36439459303997;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.36439459303997;
323558    +      V_Diabetes_Predictionprediabetes  =     0.03710094909404;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.03710094909404;
323559    +      I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
323560    +      U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
323561    +      END;
MPRINT(EM_DIAGRAM):   END;
323562    +    END;
MPRINT(EM_DIAGRAM):   END;
323563    +  END;
MPRINT(EM_DIAGRAM):   END;
323564    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
323565    +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
323566    +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
323567    +  P_Diabetes_Predictionno_diabetes  =     0.93325532412824;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.93325532412824;
323568    +  P_Diabetes_Predictiondiabetes  =      0.0558389890007;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.0558389890007;
323569    +  P_Diabetes_Predictionprediabetes  =     0.01090568687105;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.01090568687105;
323570    +  Q_Diabetes_Predictionno_diabetes  =     0.93325532412824;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.93325532412824;
323571    +  Q_Diabetes_Predictiondiabetes  =      0.0558389890007;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.0558389890007;
323572    +  Q_Diabetes_Predictionprediabetes  =     0.01090568687105;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.01090568687105;
323573    +  V_Diabetes_Predictionno_diabetes  =      0.9337279950148;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.9337279950148;
323574    +  V_Diabetes_Predictiondiabetes  =     0.05486835955756;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.05486835955756;
323575    +  V_Diabetes_Predictionprediabetes  =     0.01140364542763;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01140364542763;
323576    +  I_Diabetes_Prediction  = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
323577    +  U_Diabetes_Prediction  = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
323578    +  END;
MPRINT(EM_DIAGRAM):   END;
323579    +
323580    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
323581    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
323582    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
323583    +
323584    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
323585     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

323586     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
323587     quit;
323588     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
323589     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
323590     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
323591     retain ID 4 Node "Tree4";
MPRINT(EM_DIAGRAM):   retain ID 4 Node "Tree4";
323592     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
323593     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 69 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323594     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
323595     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 69 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323597     proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
323598     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set EMWS1.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

323600     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323601     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
323602     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
323603     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 23 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323604     proc contents data=EMWS1.Tree4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree4_train out=_meta(keep=NAME) noprint;
323605     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 40 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

323606     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
323607     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323608     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 40 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

323609     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323610     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
323611     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
323612     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 40 observations read from the data set WORK._META.
NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

323613     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
323614     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 56 rows and 5 columns.

323615     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

323616     proc append base=EMWS1.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score_FCMP data=_tempx;
323617     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS1.SCORE_FCMP.
NOTE: There were 56 observations read from the data set WORK._TEMPX.
NOTE: 56 observations added.
NOTE: The data set EMWS1.SCORE_FCMP has 66 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

323618     %macro varDept(fcmpdata=,id=);
323619     %global nobs&id scoreFlag&id;
323620     %let scoreFlag&id = 0;
323621     %if &id=1 or ^&fcmpStart %then %do;
323622     proc sort data=&fcmpdata out=_temp&id nodupkey;
323623     by NAME;
323624     %if EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY ne %then %do;
323625     where id=&id and (LHS in( %let j=1;
323626     %do %while(%scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j) ne );
323627     %let var = %scan(EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j);
323628     "&var" %let j = %eval(&j+1);
323629     %end;
323630     ) or substr(LHS, 1, 3)='EM_');
323631     %end;
323632     %else %do;
323633     where id=&id and substr(LHS, 1, 3)='EM_';
323634     %end;
323635     run;
323636     %let dsid = %sysfunc(open(_temp&id));
323637     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
323638     %let dsid = %sysfunc(close(&dsid));
323639     %if &&nobs&id %then %do;
323640     %let scoreFlag&id = 1;
323641     %let fcmpStart = 1;
323642     %end;
323643     %else %let fcmpStart = 0;
323644     %end;
323645     %else %do;
323646     proc sort data=&fcmpdata out=_tempid;
323647     where id=&id;
323648     by LHS;
323649     run;
323650     %let dsid = %sysfunc(open(_tempid));
323651     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
323652     %let dsid = %sysfunc(close(&dsid));
323653     %if ^&&nobs&id %then %do;
323654     proc datasets lib=work nolist;
323655     delete _tempid;
323656     run;
323657     quit;
323658     %end;
323659     %else %do;
323660     data _tempAll;
323661     set %let j=%eval(&id-1);
323662     %do x=1 %to &j;
323663     %if &&nobs&x %then %do;
323664     _temp&x %end;
323665     %end;
323666     ;
323667     run;
323668     proc sql;
323669     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
323670     quit;
323671     data _temp&id;
323672     set _temp&id;
323673     where LHS ne '' and NAME ne '' and Node ne '';
323674     run;
323675     proc datasets lib=work nolist;
323676     delete _tempAll;
323677     run;
323678     %let dsid = %sysfunc(open(_temp&id));
323679     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
323680     %let dsid = %sysfunc(close(&dsid));
323681     %if ^&&nobs&id %then %do;
323682     proc datasets lib=work nolist;
323683     delete _temp&id;
323684     run;
323685     quit;
323686     %end;
323687     %else %do;
323688     %let scoreFlag&id = 1;
323689     data _temp&id;
323690     set _temp&id;
323691     where LHS ne NAME and node ne '';
323692     run;
323693     %let dsid = %sysfunc(open(_temp&id));
323694     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
323695     %let dsid = %sysfunc(close(&dsid));
323696     %if ^&&nobs&id %then %do;
323697     proc datasets lib=work nolist;
323698     delete _temp&id;
323699     run;
323700     quit;
323701     %end;
323702     %else %do;
323703     proc sort data=_temp&id nodupkey;
323704     by LHS NAME;
323705     run;
323706     %end;
323707     %end;
323708     %end;
323709     %end;
323710     %mend varDept;
323711     %macro optCode(outdata=);
323712     %global fcmpStart;
323713     %let fcmpStart = 0;
323714     %let outputVars = EM_SEGMENT EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY;
323715     %let NumNodes=6;
323716     %do k=1 %to &NumNodes;
323717     %vardept(fcmpdata=&outdata, id=&k);
323718     %end;
323719     %mend optCode;
323720     %optcode(outData=EMWS1.Score_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_CLASSIFICATION" "EM_PROBABILITY" "EM_EVENTPROBABILITY" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;

NOTE: There were 6 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE (id=1) and (LHS in ('EM_CLASSIFICATION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp2;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP2 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp3;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP3 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 56 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.16 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp4 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP4 created, with 20 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP4 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp4;
MPRINT(VARDEPT):   set _temp4;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP4.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP4 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp4 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP4.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP4 has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 15.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M7P080520;
MPRINT(EM_DIAGRAM):   * Host: nutvdiwin104-02;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments;
MPRINT(EM_DIAGRAM):   * Project Name: SV.PredictiveAnalysis;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Zeta.Predective;
MPRINT(EM_DIAGRAM):   * Generated by: shre2;
MPRINT(EM_DIAGRAM):   * Date: 04MAR2024:12:37:07;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionno_diabetes = 'Unadjusted P: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictiondiabetes = 'Unadjusted P: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionprediabetes = 'Unadjusted P: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionno_diabetes = 'Validated: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictiondiabetes = 'Validated: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionprediabetes = 'Validated: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_11 $ 11;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_11;
MPRINT(EM_DIAGRAM):   _ARBFMT_11 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.80035150855755;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17688412771477;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02276436372766;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.80035150855755;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17688412771477;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02276436372766;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.80127097385584;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17704442834048;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02168459780366;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighBP , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79789335088874;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17555409260478;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02655255650647;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79789335088874;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17555409260478;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02655255650647;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.79485697775209;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17885004334007;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02629297890783;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(BMI ) AND BMI < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.7676935886761;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.21315570358034;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.01915070774354;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.7676935886761;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.21315570358034;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.01915070774354;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.79161676646706;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.19281437125748;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01556886227544;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(BMI ) AND 32.5 <= BMI THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighChol , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 65;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.58539094650205;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.36419753086419;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.05041152263374;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.58539094650205;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.36419753086419;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.05041152263374;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.57202216066482;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.39473684210526;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.03324099722991;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 64;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.39981273408239;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.56039325842696;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03979400749063;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.39981273408239;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.56039325842696;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03979400749063;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.37317073170731;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.57865853658536;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04817073170731;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.59767687434002;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.36684266103484;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03548046462513;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.59767687434002;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.36684266103484;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03548046462513;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.59850445786597;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.36439459303997;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.03710094909404;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.93325532412824;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.0558389890007;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.01090568687105;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.93325532412824;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.0558389890007;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.01090568687105;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.9337279950148;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.05486835955756;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01140364542763;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
323973     %let validvarany = 0;
323974     data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
323975     set EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS1.Score_EMINPUTVARS;
323976     length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
323977     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
323978     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 22 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

323979     proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
323980     by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
323981     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 22 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

323982     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
323983     merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
323984     by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
323985     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
323986     length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
323987     label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
323988     SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
323989     if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
323990     else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
323991     if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
323992     if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
323993     call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
323994     end;
MPRINT(EM_DIAGRAM):   end;
323995     output;
MPRINT(EM_DIAGRAM):   output;
323996     end;
MPRINT(EM_DIAGRAM):   end;
323997     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

323998     proc sort data=_temp2 out=EMWS1.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS1.Score_EMINPUTVARS;
323999     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
324000     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS1.SCORE_EMINPUTVARS has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=ZETADATA.ZETADIABETES_TRAIN noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\shre2\AppData\Local\Temp\SAS Temporary Files\_TD12860_NUTVDIWIN104-02_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\shre2\AppData\Local\Temp\SAS Temporary Files\_TD12860_NUTVDIWIN104-02_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('ZETADATA.ZETADIABETES_TRAIN');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set ZETADATA.ZETADIABETES_TRAIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 15.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M7P080520;
MPRINT(EM_DIAGRAM):   * Host: nutvdiwin104-02;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: \\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments;
MPRINT(EM_DIAGRAM):   * Project Name: SV.PredictiveAnalysis;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Zeta.Predective;
MPRINT(EM_DIAGRAM):   * Generated by: shre2;
MPRINT(EM_DIAGRAM):   * Date: 04MAR2024:12:37:07;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH I_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH U_Diabetes_Prediction $ 11;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionno_diabetes = 'Predicted: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictiondiabetes = 'Predicted: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label P_Diabetes_Predictionprediabetes = 'Predicted: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionno_diabetes = 'Unadjusted P: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictiondiabetes = 'Unadjusted P: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label Q_Diabetes_Predictionprediabetes = 'Unadjusted P: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionno_diabetes = 'Validated: Diabetes_Prediction=no diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictiondiabetes = 'Validated: Diabetes_Prediction=diabetes' ;
MPRINT(EM_DIAGRAM):   label V_Diabetes_Predictionprediabetes = 'Validated: Diabetes_Prediction=prediabetes' ;
MPRINT(EM_DIAGRAM):   label I_Diabetes_Prediction = 'Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label U_Diabetes_Prediction = 'Unnormalized Into: Diabetes_Prediction' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_11 $ 11;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_11;
MPRINT(EM_DIAGRAM):   _ARBFMT_11 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GenHlth , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.80035150855755;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17688412771477;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02276436372766;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.80035150855755;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17688412771477;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02276436372766;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.80127097385584;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17704442834048;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02168459780366;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_12 IN ('4' ,'5' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighBP , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.79789335088874;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.17555409260478;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.02655255650647;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.79789335088874;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.17555409260478;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.02655255650647;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.79485697775209;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.17885004334007;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.02629297890783;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(BMI ) AND BMI < 23.5 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.7676935886761;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.21315570358034;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.01915070774354;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.7676935886761;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.21315570358034;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.01915070774354;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.79161676646706;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.19281437125748;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01556886227544;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(BMI ) AND 32.5 <= BMI THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HighChol , BEST12.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 65;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.58539094650205;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.36419753086419;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.05041152263374;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.58539094650205;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.36419753086419;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.05041152263374;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.57202216066482;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.39473684210526;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.03324099722991;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 64;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.39981273408239;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.56039325842696;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03979400749063;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.39981273408239;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.56039325842696;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03979400749063;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.37317073170731;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.57865853658536;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.04817073170731;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.59767687434002;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.36684266103484;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.03548046462513;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.59767687434002;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.36684266103484;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.03548046462513;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.59850445786597;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.36439459303997;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.03710094909404;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionno_diabetes = 0.93325532412824;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictiondiabetes = 0.0558389890007;
MPRINT(EM_DIAGRAM):   P_Diabetes_Predictionprediabetes = 0.01090568687105;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionno_diabetes = 0.93325532412824;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictiondiabetes = 0.0558389890007;
MPRINT(EM_DIAGRAM):   Q_Diabetes_Predictionprediabetes = 0.01090568687105;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionno_diabetes = 0.9337279950148;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictiondiabetes = 0.05486835955756;
MPRINT(EM_DIAGRAM):   V_Diabetes_Predictionprediabetes = 0.01140364542763;
MPRINT(EM_DIAGRAM):   I_Diabetes_Prediction = 'NO DIABETES' ;
MPRINT(EM_DIAGRAM):   U_Diabetes_Prediction = 'no diabetes' ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   LENGTH EM_EVENTPROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level PREDIABETES of Diabetes_Prediction';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_Diabetes_Predictionprediabetes;
MPRINT(EM_DIAGRAM):   LENGTH EM_PROBABILITY 8;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_Diabetes_Predictionprediabetes , P_Diabetes_Predictionno_diabetes , P_Diabetes_Predictiondiabetes );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for Diabetes_Prediction";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_Diabetes_Prediction;
MPRINT(EM_DIAGRAM):   drop 'Age'n 'AnyHealthcare'n 'BMI'n 'CholCheck'n 'Diabetes_Prediction'n 'DiffWalk'n 'Education'n 'Fruits'n 'GenHlth'n 'HeartDiseaseorAttack'n 'HighBP'n 'HighChol'n 'HvyAlcoholConsump'n 'Income'n 'MentHlth'n 'NoDocbcCost'n 
'PhysActivity'n 'PhysHlth'n 'Sex'n 'Smoker'n 'Stroke'n 'Veggies'n '_dataobs_'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS1.Score_EMOUTPUTVARS noprint out=EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
324312     data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS1.Score_EMOUTPUTVARS;
324313     set EMWS1.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS1.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
324314     length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
324315     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
324316     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
324317     drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
324318     if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
324319     else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
324320     else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
324321     else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
324322     else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
324323     ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
324324     else do;
MPRINT(EM_DIAGRAM):   else do;
324325     name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
324326     if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
324327     else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
324328     else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
324329     else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
324330     else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
324331     else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
324332     end;
MPRINT(EM_DIAGRAM):   end;
324333     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

324334     proc sort data=EMWS1.MdlComp3_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.MdlComp3_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
324335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
324336     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set EMWS1.MDLCOMP3_CMETA_TRAIN.
NOTE: The data set WORK.META has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

324337     proc sort data=EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score_EMOUTPUTVARS;
324338     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
324339     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 17 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

324340     data EMWS1.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_EMOUTPUTVARS;
324341     merge WORK.META EMWS1.Score_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS1.Score_EMOUTPUTVARS(in=_a);
324342     label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
324343     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
324344     if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
324345     if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
324346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK.META.
NOTE: There were 17 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE_EMOUTPUTVARS has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

324347     %let _cn = %sysfunc(getoption(CENTER));
324348     %let _nb = %sysfunc(getoption(NUMBER));
324349     options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
324350     title;
MPRINT(EM_DIAGRAM):   title;
324351     proc print data=EMWS1.Score_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score_EMINPUTVARS noobs label;
324352     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
324353     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
324354     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
324355     run;

NOTE: There were 5 observations read from the data set EMWS1.SCORE_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 229.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

324356     title10;
MPRINT(EM_DIAGRAM):   title10;
324357     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
324358     %let _cn = %sysfunc(getoption(CENTER));
324359     %let _nb = %sysfunc(getoption(NUMBER));
324360     options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
324361     title;
MPRINT(EM_DIAGRAM):   title;
324362     proc print data=EMWS1.Score_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score_EMOUTPUTVARS noobs label;
324363     var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
324364     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
324365        "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
324366     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
324367     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
324368     run;

NOTE: There were 17 observations read from the data set EMWS1.SCORE_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 230.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

324369     title10;
MPRINT(EM_DIAGRAM):   title10;
324370     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
324371     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
324372     * Score: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for TRAIN data;
324373     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "\\uisnutvdiprof1a\redirected$\shre2\Documents\SV.SAS EM Assignments\SV.PredictiveAnalysis\Workspaces\EMWS1\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Score_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Score_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Score_TRAIN out=WORK.M28RC_B_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28RC_B_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M28RC_B_(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28RC_B_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M28RC_B_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3FM5CMG NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_FFCPA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   set WORK.M3FM5CMG;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Score_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "I_Diabetes_Prediction" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_Diabetes_Predictiondiabetes" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_Diabetes_Predictionno_diabetes" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_Diabetes_Predictionprediabetes" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
      
NOTE: View EMWS1.SCORE_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      
NOTE: View EMWS1.SCORE_TEST.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.23 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
